(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],{

/***/ 1:
/*!************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.createApp = createApp;exports.createComponent = createComponent;exports.createPage = createPage;exports.createPlugin = createPlugin;exports.createSubpackageApp = createSubpackageApp;exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 2));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _iterableToArrayLimit(arr, i) {if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}

function b64DecodeUnicode(str) {
  return decodeURIComponent(atob(str).split('').map(function (c) {
    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
  }).join(''));
}

function getCurrentUserInfo() {
  var token = wx.getStorageSync('uni_id_token') || '';
  var tokenArr = token.split('.');
  if (!token || tokenArr.length !== 3) {
    return {
      uid: null,
      role: [],
      permission: [],
      tokenExpired: 0 };

  }
  var userInfo;
  try {
    userInfo = JSON.parse(b64DecodeUnicode(tokenArr[1]));
  } catch (error) {
    throw new Error('获取当前用户信息出错，详细错误信息为：' + error.message);
  }
  userInfo.tokenExpired = userInfo.exp * 1000;
  delete userInfo.exp;
  delete userInfo.iat;
  return userInfo;
}

function uniIdMixin(Vue) {
  Vue.prototype.uniIDHasRole = function (roleId) {var _getCurrentUserInfo =


    getCurrentUserInfo(),role = _getCurrentUserInfo.role;
    return role.indexOf(roleId) > -1;
  };
  Vue.prototype.uniIDHasPermission = function (permissionId) {var _getCurrentUserInfo2 =


    getCurrentUserInfo(),permission = _getCurrentUserInfo2.permission;
    return this.uniIDHasRole('admin') || permission.indexOf(permissionId) > -1;
  };
  Vue.prototype.uniIDTokenValid = function () {var _getCurrentUserInfo3 =


    getCurrentUserInfo(),tokenExpired = _getCurrentUserInfo3.tokenExpired;
    return tokenExpired > Date.now();
  };
}

var _toString = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;

function isFn(fn) {
  return typeof fn === 'function';
}

function isStr(str) {
  return typeof str === 'string';
}

function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}

function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}

function noop() {}

/**
                    * Create a cached version of a pure function.
                    */
function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

/**
   * Camelize a hyphen-delimited string.
   */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {return c ? c.toUpperCase() : '';});
});

var HOOKS = [
'invoke',
'success',
'fail',
'complete',
'returnValue'];


var globalInterceptors = {};
var scopedInterceptors = {};

function mergeHook(parentVal, childVal) {
  var res = childVal ?
  parentVal ?
  parentVal.concat(childVal) :
  Array.isArray(childVal) ?
  childVal : [childVal] :
  parentVal;
  return res ?
  dedupeHooks(res) :
  res;
}

function dedupeHooks(hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res;
}

function removeHook(hooks, hook) {
  var index = hooks.indexOf(hook);
  if (index !== -1) {
    hooks.splice(index, 1);
  }
}

function mergeInterceptorHook(interceptor, option) {
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);
    }
  });
}

function removeInterceptorHook(interceptor, option) {
  if (!interceptor || !option) {
    return;
  }
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      removeHook(interceptor[hook], option[hook]);
    }
  });
}

function addInterceptor(method, option) {
  if (typeof method === 'string' && isPlainObject(option)) {
    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);
  } else if (isPlainObject(method)) {
    mergeInterceptorHook(globalInterceptors, method);
  }
}

function removeInterceptor(method, option) {
  if (typeof method === 'string') {
    if (isPlainObject(option)) {
      removeInterceptorHook(scopedInterceptors[method], option);
    } else {
      delete scopedInterceptors[method];
    }
  } else if (isPlainObject(method)) {
    removeInterceptorHook(globalInterceptors, method);
  }
}

function wrapperHook(hook) {
  return function (data) {
    return hook(data) || data;
  };
}

function isPromise(obj) {
  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}

function queue(hooks, data) {
  var promise = false;
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    if (promise) {
      promise = Promise.resolve(wrapperHook(hook));
    } else {
      var res = hook(data);
      if (isPromise(res)) {
        promise = Promise.resolve(res);
      }
      if (res === false) {
        return {
          then: function then() {} };

      }
    }
  }
  return promise || {
    then: function then(callback) {
      return callback(data);
    } };

}

function wrapperOptions(interceptor) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  ['success', 'fail', 'complete'].forEach(function (name) {
    if (Array.isArray(interceptor[name])) {
      var oldCallback = options[name];
      options[name] = function callbackInterceptor(res) {
        queue(interceptor[name], res).then(function (res) {
          /* eslint-disable no-mixed-operators */
          return isFn(oldCallback) && oldCallback(res) || res;
        });
      };
    }
  });
  return options;
}

function wrapperReturnValue(method, returnValue) {
  var returnValueHooks = [];
  if (Array.isArray(globalInterceptors.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(globalInterceptors.returnValue));
  }
  var interceptor = scopedInterceptors[method];
  if (interceptor && Array.isArray(interceptor.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(interceptor.returnValue));
  }
  returnValueHooks.forEach(function (hook) {
    returnValue = hook(returnValue) || returnValue;
  });
  return returnValue;
}

function getApiInterceptorHooks(method) {
  var interceptor = Object.create(null);
  Object.keys(globalInterceptors).forEach(function (hook) {
    if (hook !== 'returnValue') {
      interceptor[hook] = globalInterceptors[hook].slice();
    }
  });
  var scopedInterceptor = scopedInterceptors[method];
  if (scopedInterceptor) {
    Object.keys(scopedInterceptor).forEach(function (hook) {
      if (hook !== 'returnValue') {
        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);
      }
    });
  }
  return interceptor;
}

function invokeApi(method, api, options) {for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {params[_key - 3] = arguments[_key];}
  var interceptor = getApiInterceptorHooks(method);
  if (interceptor && Object.keys(interceptor).length) {
    if (Array.isArray(interceptor.invoke)) {
      var res = queue(interceptor.invoke, options);
      return res.then(function (options) {
        return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
      });
    } else {
      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
    }
  }
  return api.apply(void 0, [options].concat(params));
}

var promiseInterceptor = {
  returnValue: function returnValue(res) {
    if (!isPromise(res)) {
      return res;
    }
    return res.then(function (res) {
      return res[1];
    }).catch(function (res) {
      return res[0];
    });
  } };


var SYNC_API_RE =
/^\$|Window$|WindowStyle$|sendNativeEvent|restoreGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64/;

var CONTEXT_API_RE = /^create|Manager$/;

// Context例外情况
var CONTEXT_API_RE_EXC = ['createBLEConnection'];

// 同步例外情况
var ASYNC_API = ['createBLEConnection'];

var CALLBACK_API_RE = /^on|^off/;

function isContextApi(name) {
  return CONTEXT_API_RE.test(name) && CONTEXT_API_RE_EXC.indexOf(name) === -1;
}
function isSyncApi(name) {
  return SYNC_API_RE.test(name) && ASYNC_API.indexOf(name) === -1;
}

function isCallbackApi(name) {
  return CALLBACK_API_RE.test(name) && name !== 'onPush';
}

function handlePromise(promise) {
  return promise.then(function (data) {
    return [null, data];
  }).
  catch(function (err) {return [err];});
}

function shouldPromise(name) {
  if (
  isContextApi(name) ||
  isSyncApi(name) ||
  isCallbackApi(name))
  {
    return false;
  }
  return true;
}

/* eslint-disable no-extend-native */
if (!Promise.prototype.finally) {
  Promise.prototype.finally = function (callback) {
    var promise = this.constructor;
    return this.then(
    function (value) {return promise.resolve(callback()).then(function () {return value;});},
    function (reason) {return promise.resolve(callback()).then(function () {
        throw reason;
      });});

  };
}

function promisify(name, api) {
  if (!shouldPromise(name)) {
    return api;
  }
  return function promiseApi() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {params[_key2 - 1] = arguments[_key2];}
    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {
      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));
    }
    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {
      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {
        success: resolve,
        fail: reject })].concat(
      params));
    })));
  };
}

var EPS = 1e-4;
var BASE_DEVICE_WIDTH = 750;
var isIOS = false;
var deviceWidth = 0;
var deviceDPR = 0;

function checkDeviceWidth() {var _wx$getSystemInfoSync =




  wx.getSystemInfoSync(),platform = _wx$getSystemInfoSync.platform,pixelRatio = _wx$getSystemInfoSync.pixelRatio,windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni

  deviceWidth = windowWidth;
  deviceDPR = pixelRatio;
  isIOS = platform === 'ios';
}

function upx2px(number, newDeviceWidth) {
  if (deviceWidth === 0) {
    checkDeviceWidth();
  }

  number = Number(number);
  if (number === 0) {
    return 0;
  }
  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);
  if (result < 0) {
    result = -result;
  }
  result = Math.floor(result + EPS);
  if (result === 0) {
    if (deviceDPR === 1 || !isIOS) {
      result = 1;
    } else {
      result = 0.5;
    }
  }
  return number < 0 ? -result : result;
}

var interceptors = {
  promiseInterceptor: promiseInterceptor };


var baseApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  upx2px: upx2px,
  addInterceptor: addInterceptor,
  removeInterceptor: removeInterceptor,
  interceptors: interceptors });


function findExistsPageIndex(url) {
  var pages = getCurrentPages();
  var len = pages.length;
  while (len--) {
    var page = pages[len];
    if (page.$page && page.$page.fullPath === url) {
      return len;
    }
  }
  return -1;
}

var redirectTo = {
  name: function name(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.delta) {
      return 'navigateBack';
    }
    return 'redirectTo';
  },
  args: function args(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.url) {
      var existsPageIndex = findExistsPageIndex(fromArgs.url);
      if (existsPageIndex !== -1) {
        var delta = getCurrentPages().length - 1 - existsPageIndex;
        if (delta > 0) {
          fromArgs.delta = delta;
        }
      }
    }
  } };


var previewImage = {
  args: function args(fromArgs) {
    var currentIndex = parseInt(fromArgs.current);
    if (isNaN(currentIndex)) {
      return;
    }
    var urls = fromArgs.urls;
    if (!Array.isArray(urls)) {
      return;
    }
    var len = urls.length;
    if (!len) {
      return;
    }
    if (currentIndex < 0) {
      currentIndex = 0;
    } else if (currentIndex >= len) {
      currentIndex = len - 1;
    }
    if (currentIndex > 0) {
      fromArgs.current = urls[currentIndex];
      fromArgs.urls = urls.filter(
      function (item, index) {return index < currentIndex ? item !== urls[currentIndex] : true;});

    } else {
      fromArgs.current = urls[0];
    }
    return {
      indicator: false,
      loop: false };

  } };


var UUID_KEY = '__DC_STAT_UUID';
var deviceId;
function addUuid(result) {
  deviceId = deviceId || wx.getStorageSync(UUID_KEY);
  if (!deviceId) {
    deviceId = Date.now() + '' + Math.floor(Math.random() * 1e7);
    wx.setStorage({
      key: UUID_KEY,
      data: deviceId });

  }
  result.deviceId = deviceId;
}

function addSafeAreaInsets(result) {
  if (result.safeArea) {
    var safeArea = result.safeArea;
    result.safeAreaInsets = {
      top: safeArea.top,
      left: safeArea.left,
      right: result.windowWidth - safeArea.right,
      bottom: result.windowHeight - safeArea.bottom };

  }
}

var getSystemInfo = {
  returnValue: function returnValue(result) {
    addUuid(result);
    addSafeAreaInsets(result);
  } };


// import navigateTo from 'uni-helpers/navigate-to'

var protocols = {
  redirectTo: redirectTo,
  // navigateTo,  // 由于在微信开发者工具的页面参数，会显示__id__参数，因此暂时关闭mp-weixin对于navigateTo的AOP
  previewImage: previewImage,
  getSystemInfo: getSystemInfo,
  getSystemInfoSync: getSystemInfo };

var todos = [
'vibrate',
'preloadPage',
'unPreloadPage',
'loadSubPackage'];

var canIUses = [];

var CALLBACKS = ['success', 'fail', 'cancel', 'complete'];

function processCallback(methodName, method, returnValue) {
  return function (res) {
    return method(processReturnValue(methodName, res, returnValue));
  };
}

function processArgs(methodName, fromArgs) {var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  if (isPlainObject(fromArgs)) {// 一般 api 的参数解析
    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值
    if (isFn(argsOption)) {
      argsOption = argsOption(fromArgs, toArgs) || {};
    }
    for (var key in fromArgs) {
      if (hasOwn(argsOption, key)) {
        var keyOption = argsOption[key];
        if (isFn(keyOption)) {
          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);
        }
        if (!keyOption) {// 不支持的参数
          console.warn("The '".concat(methodName, "' method of platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support option '").concat(key, "'"));
        } else if (isStr(keyOption)) {// 重写参数 key
          toArgs[keyOption] = fromArgs[key];
        } else if (isPlainObject(keyOption)) {// {name:newName,value:value}可重新指定参数 key:value
          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;
        }
      } else if (CALLBACKS.indexOf(key) !== -1) {
        if (isFn(fromArgs[key])) {
          toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);
        }
      } else {
        if (!keepFromArgs) {
          toArgs[key] = fromArgs[key];
        }
      }
    }
    return toArgs;
  } else if (isFn(fromArgs)) {
    fromArgs = processCallback(methodName, fromArgs, returnValue);
  }
  return fromArgs;
}

function processReturnValue(methodName, res, returnValue) {var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  if (isFn(protocols.returnValue)) {// 处理通用 returnValue
    res = protocols.returnValue(methodName, res);
  }
  return processArgs(methodName, res, returnValue, {}, keepReturnValue);
}

function wrapper(methodName, method) {
  if (hasOwn(protocols, methodName)) {
    var protocol = protocols[methodName];
    if (!protocol) {// 暂不支持的 api
      return function () {
        console.error("Platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support '".concat(methodName, "'."));
      };
    }
    return function (arg1, arg2) {// 目前 api 最多两个参数
      var options = protocol;
      if (isFn(protocol)) {
        options = protocol(arg1);
      }

      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);

      var args = [arg1];
      if (typeof arg2 !== 'undefined') {
        args.push(arg2);
      }
      if (isFn(options.name)) {
        methodName = options.name(arg1);
      } else if (isStr(options.name)) {
        methodName = options.name;
      }
      var returnValue = wx[methodName].apply(wx, args);
      if (isSyncApi(methodName)) {// 同步 api
        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));
      }
      return returnValue;
    };
  }
  return method;
}

var todoApis = Object.create(null);

var TODOS = [
'onTabBarMidButtonTap',
'subscribePush',
'unsubscribePush',
'onPush',
'offPush',
'share'];


function createTodoApi(name) {
  return function todoApi(_ref)


  {var fail = _ref.fail,complete = _ref.complete;
    var res = {
      errMsg: "".concat(name, ":fail method '").concat(name, "' not supported") };

    isFn(fail) && fail(res);
    isFn(complete) && complete(res);
  };
}

TODOS.forEach(function (name) {
  todoApis[name] = createTodoApi(name);
});

var providers = {
  oauth: ['weixin'],
  share: ['weixin'],
  payment: ['wxpay'],
  push: ['weixin'] };


function getProvider(_ref2)




{var service = _ref2.service,success = _ref2.success,fail = _ref2.fail,complete = _ref2.complete;
  var res = false;
  if (providers[service]) {
    res = {
      errMsg: 'getProvider:ok',
      service: service,
      provider: providers[service] };

    isFn(success) && success(res);
  } else {
    res = {
      errMsg: 'getProvider:fail service not found' };

    isFn(fail) && fail(res);
  }
  isFn(complete) && complete(res);
}

var extraApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  getProvider: getProvider });


var getEmitter = function () {
  var Emitter;
  return function getUniEmitter() {
    if (!Emitter) {
      Emitter = new _vue.default();
    }
    return Emitter;
  };
}();

function apply(ctx, method, args) {
  return ctx[method].apply(ctx, args);
}

function $on() {
  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));
}
function $off() {
  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));
}
function $once() {
  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));
}
function $emit() {
  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));
}

var eventApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  $on: $on,
  $off: $off,
  $once: $once,
  $emit: $emit });


var api = /*#__PURE__*/Object.freeze({
  __proto__: null });


var MPPage = Page;
var MPComponent = Component;

var customizeRE = /:/g;

var customize = cached(function (str) {
  return camelize(str.replace(customizeRE, '-'));
});

function initTriggerEvent(mpInstance) {
  {
    if (!wx.canIUse || !wx.canIUse('nextTick')) {
      return;
    }
  }
  var oldTriggerEvent = mpInstance.triggerEvent;
  mpInstance.triggerEvent = function (event) {for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {args[_key3 - 1] = arguments[_key3];}
    return oldTriggerEvent.apply(mpInstance, [customize(event)].concat(args));
  };
}

function initHook(name, options) {
  var oldHook = options[name];
  if (!oldHook) {
    options[name] = function () {
      initTriggerEvent(this);
    };
  } else {
    options[name] = function () {
      initTriggerEvent(this);for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {args[_key4] = arguments[_key4];}
      return oldHook.apply(this, args);
    };
  }
}
if (!MPPage.__$wrappered) {
  MPPage.__$wrappered = true;
  Page = function Page() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('onLoad', options);
    return MPPage(options);
  };
  Page.after = MPPage.after;

  Component = function Component() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('created', options);
    return MPComponent(options);
  };
}

var PAGE_EVENT_HOOKS = [
'onPullDownRefresh',
'onReachBottom',
'onAddToFavorites',
'onShareTimeline',
'onShareAppMessage',
'onPageScroll',
'onResize',
'onTabItemTap'];


function initMocks(vm, mocks) {
  var mpInstance = vm.$mp[vm.mpType];
  mocks.forEach(function (mock) {
    if (hasOwn(mpInstance, mock)) {
      vm[mock] = mpInstance[mock];
    }
  });
}

function hasHook(hook, vueOptions) {
  if (!vueOptions) {
    return true;
  }

  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {
    return true;
  }

  vueOptions = vueOptions.default || vueOptions;

  if (isFn(vueOptions)) {
    if (isFn(vueOptions.extendOptions[hook])) {
      return true;
    }
    if (vueOptions.super &&
    vueOptions.super.options &&
    Array.isArray(vueOptions.super.options[hook])) {
      return true;
    }
    return false;
  }

  if (isFn(vueOptions[hook])) {
    return true;
  }
  var mixins = vueOptions.mixins;
  if (Array.isArray(mixins)) {
    return !!mixins.find(function (mixin) {return hasHook(hook, mixin);});
  }
}

function initHooks(mpOptions, hooks, vueOptions) {
  hooks.forEach(function (hook) {
    if (hasHook(hook, vueOptions)) {
      mpOptions[hook] = function (args) {
        return this.$vm && this.$vm.__call_hook(hook, args);
      };
    }
  });
}

function initVueComponent(Vue, vueOptions) {
  vueOptions = vueOptions.default || vueOptions;
  var VueComponent;
  if (isFn(vueOptions)) {
    VueComponent = vueOptions;
  } else {
    VueComponent = Vue.extend(vueOptions);
  }
  vueOptions = VueComponent.options;
  return [VueComponent, vueOptions];
}

function initSlots(vm, vueSlots) {
  if (Array.isArray(vueSlots) && vueSlots.length) {
    var $slots = Object.create(null);
    vueSlots.forEach(function (slotName) {
      $slots[slotName] = true;
    });
    vm.$scopedSlots = vm.$slots = $slots;
  }
}

function initVueIds(vueIds, mpInstance) {
  vueIds = (vueIds || '').split(',');
  var len = vueIds.length;

  if (len === 1) {
    mpInstance._$vueId = vueIds[0];
  } else if (len === 2) {
    mpInstance._$vueId = vueIds[0];
    mpInstance._$vuePid = vueIds[1];
  }
}

function initData(vueOptions, context) {
  var data = vueOptions.data || {};
  var methods = vueOptions.methods || {};

  if (typeof data === 'function') {
    try {
      data = data.call(context); // 支持 Vue.prototype 上挂的数据
    } catch (e) {
      if (Object({"NODE_ENV":"development","VUE_APP_NAME":"baoma-work","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);
      }
    }
  } else {
    try {
      // 对 data 格式化
      data = JSON.parse(JSON.stringify(data));
    } catch (e) {}
  }

  if (!isPlainObject(data)) {
    data = {};
  }

  Object.keys(methods).forEach(function (methodName) {
    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {
      data[methodName] = methods[methodName];
    }
  });

  return data;
}

var PROP_TYPES = [String, Number, Boolean, Object, Array, null];

function createObserver(name) {
  return function observer(newVal, oldVal) {
    if (this.$vm) {
      this.$vm[name] = newVal; // 为了触发其他非 render watcher
    }
  };
}

function initBehaviors(vueOptions, initBehavior) {
  var vueBehaviors = vueOptions.behaviors;
  var vueExtends = vueOptions.extends;
  var vueMixins = vueOptions.mixins;

  var vueProps = vueOptions.props;

  if (!vueProps) {
    vueOptions.props = vueProps = [];
  }

  var behaviors = [];
  if (Array.isArray(vueBehaviors)) {
    vueBehaviors.forEach(function (behavior) {
      behaviors.push(behavior.replace('uni://', "wx".concat("://")));
      if (behavior === 'uni://form-field') {
        if (Array.isArray(vueProps)) {
          vueProps.push('name');
          vueProps.push('value');
        } else {
          vueProps.name = {
            type: String,
            default: '' };

          vueProps.value = {
            type: [String, Number, Boolean, Array, Object, Date],
            default: '' };

        }
      }
    });
  }
  if (isPlainObject(vueExtends) && vueExtends.props) {
    behaviors.push(
    initBehavior({
      properties: initProperties(vueExtends.props, true) }));


  }
  if (Array.isArray(vueMixins)) {
    vueMixins.forEach(function (vueMixin) {
      if (isPlainObject(vueMixin) && vueMixin.props) {
        behaviors.push(
        initBehavior({
          properties: initProperties(vueMixin.props, true) }));


      }
    });
  }
  return behaviors;
}

function parsePropType(key, type, defaultValue, file) {
  // [String]=>String
  if (Array.isArray(type) && type.length === 1) {
    return type[0];
  }
  return type;
}

function initProperties(props) {var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var properties = {};
  if (!isBehavior) {
    properties.vueId = {
      type: String,
      value: '' };

    // 用于字节跳动小程序模拟抽象节点
    properties.generic = {
      type: Object,
      value: null };

    // scopedSlotsCompiler auto
    properties.scopedSlotsCompiler = {
      type: String,
      value: '' };

    properties.vueSlots = { // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots
      type: null,
      value: [],
      observer: function observer(newVal, oldVal) {
        var $slots = Object.create(null);
        newVal.forEach(function (slotName) {
          $slots[slotName] = true;
        });
        this.setData({
          $slots: $slots });

      } };

  }
  if (Array.isArray(props)) {// ['title']
    props.forEach(function (key) {
      properties[key] = {
        type: null,
        observer: createObserver(key) };

    });
  } else if (isPlainObject(props)) {// {title:{type:String,default:''},content:String}
    Object.keys(props).forEach(function (key) {
      var opts = props[key];
      if (isPlainObject(opts)) {// title:{type:String,default:''}
        var value = opts.default;
        if (isFn(value)) {
          value = value();
        }

        opts.type = parsePropType(key, opts.type);

        properties[key] = {
          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,
          value: value,
          observer: createObserver(key) };

      } else {// content:String
        var type = parsePropType(key, opts);
        properties[key] = {
          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,
          observer: createObserver(key) };

      }
    });
  }
  return properties;
}

function wrapper$1(event) {
  // TODO 又得兼容 mpvue 的 mp 对象
  try {
    event.mp = JSON.parse(JSON.stringify(event));
  } catch (e) {}

  event.stopPropagation = noop;
  event.preventDefault = noop;

  event.target = event.target || {};

  if (!hasOwn(event, 'detail')) {
    event.detail = {};
  }

  if (hasOwn(event, 'markerId')) {
    event.detail = typeof event.detail === 'object' ? event.detail : {};
    event.detail.markerId = event.markerId;
  }

  if (isPlainObject(event.detail)) {
    event.target = Object.assign({}, event.target, event.detail);
  }

  return event;
}

function getExtraValue(vm, dataPathsArray) {
  var context = vm;
  dataPathsArray.forEach(function (dataPathArray) {
    var dataPath = dataPathArray[0];
    var value = dataPathArray[2];
    if (dataPath || typeof value !== 'undefined') {// ['','',index,'disable']
      var propPath = dataPathArray[1];
      var valuePath = dataPathArray[3];

      var vFor;
      if (Number.isInteger(dataPath)) {
        vFor = dataPath;
      } else if (!dataPath) {
        vFor = context;
      } else if (typeof dataPath === 'string' && dataPath) {
        if (dataPath.indexOf('#s#') === 0) {
          vFor = dataPath.substr(3);
        } else {
          vFor = vm.__get_value(dataPath, context);
        }
      }

      if (Number.isInteger(vFor)) {
        context = value;
      } else if (!propPath) {
        context = vFor[value];
      } else {
        if (Array.isArray(vFor)) {
          context = vFor.find(function (vForItem) {
            return vm.__get_value(propPath, vForItem) === value;
          });
        } else if (isPlainObject(vFor)) {
          context = Object.keys(vFor).find(function (vForKey) {
            return vm.__get_value(propPath, vFor[vForKey]) === value;
          });
        } else {
          console.error('v-for 暂不支持循环数据：', vFor);
        }
      }

      if (valuePath) {
        context = vm.__get_value(valuePath, context);
      }
    }
  });
  return context;
}

function processEventExtra(vm, extra, event) {
  var extraObj = {};

  if (Array.isArray(extra) && extra.length) {
    /**
                                              *[
                                              *    ['data.items', 'data.id', item.data.id],
                                              *    ['metas', 'id', meta.id]
                                              *],
                                              *[
                                              *    ['data.items', 'data.id', item.data.id],
                                              *    ['metas', 'id', meta.id]
                                              *],
                                              *'test'
                                              */
    extra.forEach(function (dataPath, index) {
      if (typeof dataPath === 'string') {
        if (!dataPath) {// model,prop.sync
          extraObj['$' + index] = vm;
        } else {
          if (dataPath === '$event') {// $event
            extraObj['$' + index] = event;
          } else if (dataPath === 'arguments') {
            if (event.detail && event.detail.__args__) {
              extraObj['$' + index] = event.detail.__args__;
            } else {
              extraObj['$' + index] = [event];
            }
          } else if (dataPath.indexOf('$event.') === 0) {// $event.target.value
            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);
          } else {
            extraObj['$' + index] = vm.__get_value(dataPath);
          }
        }
      } else {
        extraObj['$' + index] = getExtraValue(vm, dataPath);
      }
    });
  }

  return extraObj;
}

function getObjByArray(arr) {
  var obj = {};
  for (var i = 1; i < arr.length; i++) {
    var element = arr[i];
    obj[element[0]] = element[1];
  }
  return obj;
}

function processEventArgs(vm, event) {var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];var isCustom = arguments.length > 4 ? arguments[4] : undefined;var methodName = arguments.length > 5 ? arguments[5] : undefined;
  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象
  if (isCustom) {// 自定义事件
    isCustomMPEvent = event.currentTarget &&
    event.currentTarget.dataset &&
    event.currentTarget.dataset.comType === 'wx';
    if (!args.length) {// 无参数，直接传入 event 或 detail 数组
      if (isCustomMPEvent) {
        return [event];
      }
      return event.detail.__args__ || event.detail;
    }
  }

  var extraObj = processEventExtra(vm, extra, event);

  var ret = [];
  args.forEach(function (arg) {
    if (arg === '$event') {
      if (methodName === '__set_model' && !isCustom) {// input v-model value
        ret.push(event.target.value);
      } else {
        if (isCustom && !isCustomMPEvent) {
          ret.push(event.detail.__args__[0]);
        } else {// wxcomponent 组件或内置组件
          ret.push(event);
        }
      }
    } else {
      if (Array.isArray(arg) && arg[0] === 'o') {
        ret.push(getObjByArray(arg));
      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {
        ret.push(extraObj[arg]);
      } else {
        ret.push(arg);
      }
    }
  });

  return ret;
}

var ONCE = '~';
var CUSTOM = '^';

function isMatchEventType(eventType, optType) {
  return eventType === optType ||

  optType === 'regionchange' && (

  eventType === 'begin' ||
  eventType === 'end');


}

function getContextVm(vm) {
  var $parent = vm.$parent;
  // 父组件是 scoped slots 或者其他自定义组件时继续查找
  while ($parent && $parent.$parent && ($parent.$options.generic || $parent.$parent.$options.generic || $parent.$scope._$vuePid)) {
    $parent = $parent.$parent;
  }
  return $parent && $parent.$parent;
}

function handleEvent(event) {var _this = this;
  event = wrapper$1(event);

  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]
  var dataset = (event.currentTarget || event.target).dataset;
  if (!dataset) {
    return console.warn('事件信息不存在');
  }
  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰
  if (!eventOpts) {
    return console.warn('事件信息不存在');
  }

  // [['handle',[1,2,a]],['handle1',[1,2,a]]]
  var eventType = event.type;

  var ret = [];

  eventOpts.forEach(function (eventOpt) {
    var type = eventOpt[0];
    var eventsArray = eventOpt[1];

    var isCustom = type.charAt(0) === CUSTOM;
    type = isCustom ? type.slice(1) : type;
    var isOnce = type.charAt(0) === ONCE;
    type = isOnce ? type.slice(1) : type;

    if (eventsArray && isMatchEventType(eventType, type)) {
      eventsArray.forEach(function (eventArray) {
        var methodName = eventArray[0];
        if (methodName) {
          var handlerCtx = _this.$vm;
          if (handlerCtx.$options.generic) {// mp-weixin,mp-toutiao 抽象节点模拟 scoped slots
            handlerCtx = getContextVm(handlerCtx) || handlerCtx;
          }
          if (methodName === '$emit') {
            handlerCtx.$emit.apply(handlerCtx,
            processEventArgs(
            _this.$vm,
            event,
            eventArray[1],
            eventArray[2],
            isCustom,
            methodName));

            return;
          }
          var handler = handlerCtx[methodName];
          if (!isFn(handler)) {
            throw new Error(" _vm.".concat(methodName, " is not a function"));
          }
          if (isOnce) {
            if (handler.once) {
              return;
            }
            handler.once = true;
          }
          var params = processEventArgs(
          _this.$vm,
          event,
          eventArray[1],
          eventArray[2],
          isCustom,
          methodName);

          params = Array.isArray(params) ? params : [];
          // 参数尾部增加原始事件对象用于复杂表达式内获取额外数据
          if (/=\s*\S+\.eventParams\s*\|\|\s*\S+\[['"]event-params['"]\]/.test(handler.toString())) {
            // eslint-disable-next-line no-sparse-arrays
            params = params.concat([,,,,,,,,,, event]);
          }
          ret.push(handler.apply(handlerCtx, params));
        }
      });
    }
  });

  if (
  eventType === 'input' &&
  ret.length === 1 &&
  typeof ret[0] !== 'undefined')
  {
    return ret[0];
  }
}

var eventChannels = {};

var eventChannelStack = [];

function getEventChannel(id) {
  if (id) {
    var eventChannel = eventChannels[id];
    delete eventChannels[id];
    return eventChannel;
  }
  return eventChannelStack.shift();
}

var hooks = [
'onShow',
'onHide',
'onError',
'onPageNotFound',
'onThemeChange',
'onUnhandledRejection'];


function initEventChannel() {
  _vue.default.prototype.getOpenerEventChannel = function () {
    // 微信小程序使用自身getOpenerEventChannel
    {
      return this.$scope.getOpenerEventChannel();
    }
  };
  var callHook = _vue.default.prototype.__call_hook;
  _vue.default.prototype.__call_hook = function (hook, args) {
    if (hook === 'onLoad' && args && args.__id__) {
      this.__eventChannel__ = getEventChannel(args.__id__);
      delete args.__id__;
    }
    return callHook.call(this, hook, args);
  };
}

function initScopedSlotsParams() {
  var center = {};
  var parents = {};

  _vue.default.prototype.$hasScopedSlotsParams = function (vueId) {
    var has = center[vueId];
    if (!has) {
      parents[vueId] = this;
      this.$on('hook:destory', function () {
        delete parents[vueId];
      });
    }
    return has;
  };

  _vue.default.prototype.$getScopedSlotsParams = function (vueId, name, key) {
    var data = center[vueId];
    if (data) {
      var object = data[name] || {};
      return key ? object[key] : object;
    } else {
      parents[vueId] = this;
      this.$on('hook:destory', function () {
        delete parents[vueId];
      });
    }
  };

  _vue.default.prototype.$setScopedSlotsParams = function (name, value) {
    var vueIds = this.$options.propsData.vueId;
    if (vueIds) {
      var vueId = vueIds.split(',')[0];
      var object = center[vueId] = center[vueId] || {};
      object[name] = value;
      if (parents[vueId]) {
        parents[vueId].$forceUpdate();
      }
    }
  };

  _vue.default.mixin({
    destroyed: function destroyed() {
      var propsData = this.$options.propsData;
      var vueId = propsData && propsData.vueId;
      if (vueId) {
        delete center[vueId];
        delete parents[vueId];
      }
    } });

}

function parseBaseApp(vm, _ref3)


{var mocks = _ref3.mocks,initRefs = _ref3.initRefs;
  initEventChannel();
  {
    initScopedSlotsParams();
  }
  if (vm.$options.store) {
    _vue.default.prototype.$store = vm.$options.store;
  }
  uniIdMixin(_vue.default);

  _vue.default.prototype.mpHost = "mp-weixin";

  _vue.default.mixin({
    beforeCreate: function beforeCreate() {
      if (!this.$options.mpType) {
        return;
      }

      this.mpType = this.$options.mpType;

      this.$mp = _defineProperty({
        data: {} },
      this.mpType, this.$options.mpInstance);


      this.$scope = this.$options.mpInstance;

      delete this.$options.mpType;
      delete this.$options.mpInstance;
      if (this.mpType === 'page' && typeof getApp === 'function') {// hack vue-i18n
        var app = getApp();
        if (app.$vm && app.$vm.$i18n) {
          this._i18n = app.$vm.$i18n;
        }
      }
      if (this.mpType !== 'app') {
        initRefs(this);
        initMocks(this, mocks);
      }
    } });


  var appOptions = {
    onLaunch: function onLaunch(args) {
      if (this.$vm) {// 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前
        return;
      }
      {
        if (wx.canIUse && !wx.canIUse('nextTick')) {// 事实 上2.2.3 即可，简单使用 2.3.0 的 nextTick 判断
          console.error('当前微信基础库版本过低，请将 微信开发者工具-详情-项目设置-调试基础库版本 更换为`2.3.0`以上');
        }
      }

      this.$vm = vm;

      this.$vm.$mp = {
        app: this };


      this.$vm.$scope = this;
      // vm 上也挂载 globalData
      this.$vm.globalData = this.globalData;

      this.$vm._isMounted = true;
      this.$vm.__call_hook('mounted', args);

      this.$vm.__call_hook('onLaunch', args);
    } };


  // 兼容旧版本 globalData
  appOptions.globalData = vm.$options.globalData || {};
  // 将 methods 中的方法挂在 getApp() 中
  var methods = vm.$options.methods;
  if (methods) {
    Object.keys(methods).forEach(function (name) {
      appOptions[name] = methods[name];
    });
  }

  initHooks(appOptions, hooks);

  return appOptions;
}

var mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];

function findVmByVueId(vm, vuePid) {
  var $children = vm.$children;
  // 优先查找直属(反向查找:https://github.com/dcloudio/uni-app/issues/1200)
  for (var i = $children.length - 1; i >= 0; i--) {
    var childVm = $children[i];
    if (childVm.$scope._$vueId === vuePid) {
      return childVm;
    }
  }
  // 反向递归查找
  var parentVm;
  for (var _i = $children.length - 1; _i >= 0; _i--) {
    parentVm = findVmByVueId($children[_i], vuePid);
    if (parentVm) {
      return parentVm;
    }
  }
}

function initBehavior(options) {
  return Behavior(options);
}

function isPage() {
  return !!this.route;
}

function initRelation(detail) {
  this.triggerEvent('__l', detail);
}

function selectAllComponents(mpInstance, selector, $refs) {
  var components = mpInstance.selectAllComponents(selector);
  components.forEach(function (component) {
    var ref = component.dataset.ref;
    $refs[ref] = component.$vm || component;
    {
      if (component.dataset.vueGeneric === 'scoped') {
        component.selectAllComponents('.scoped-ref').forEach(function (scopedComponent) {
          selectAllComponents(scopedComponent, selector, $refs);
        });
      }
    }
  });
}

function initRefs(vm) {
  var mpInstance = vm.$scope;
  Object.defineProperty(vm, '$refs', {
    get: function get() {
      var $refs = {};
      selectAllComponents(mpInstance, '.vue-ref', $refs);
      // TODO 暂不考虑 for 中的 scoped
      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for');
      forComponents.forEach(function (component) {
        var ref = component.dataset.ref;
        if (!$refs[ref]) {
          $refs[ref] = [];
        }
        $refs[ref].push(component.$vm || component);
      });
      return $refs;
    } });

}

function handleLink(event) {var _ref4 =



  event.detail || event.value,vuePid = _ref4.vuePid,vueOptions = _ref4.vueOptions; // detail 是微信,value 是百度(dipatch)

  var parentVm;

  if (vuePid) {
    parentVm = findVmByVueId(this.$vm, vuePid);
  }

  if (!parentVm) {
    parentVm = this.$vm;
  }

  vueOptions.parent = parentVm;
}

function parseApp(vm) {
  return parseBaseApp(vm, {
    mocks: mocks,
    initRefs: initRefs });

}

function createApp(vm) {
  App(parseApp(vm));
  return vm;
}

var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function encodeReserveReplacer(c) {return '%' + c.charCodeAt(0).toString(16);};
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode = function encode(str) {return encodeURIComponent(str).
  replace(encodeReserveRE, encodeReserveReplacer).
  replace(commaRE, ',');};

function stringifyQuery(obj) {var encodeStr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : encode;
  var res = obj ? Object.keys(obj).map(function (key) {
    var val = obj[key];

    if (val === undefined) {
      return '';
    }

    if (val === null) {
      return encodeStr(key);
    }

    if (Array.isArray(val)) {
      var result = [];
      val.forEach(function (val2) {
        if (val2 === undefined) {
          return;
        }
        if (val2 === null) {
          result.push(encodeStr(key));
        } else {
          result.push(encodeStr(key) + '=' + encodeStr(val2));
        }
      });
      return result.join('&');
    }

    return encodeStr(key) + '=' + encodeStr(val);
  }).filter(function (x) {return x.length > 0;}).join('&') : null;
  return res ? "?".concat(res) : '';
}

function parseBaseComponent(vueComponentOptions)


{var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},isPage = _ref5.isPage,initRelation = _ref5.initRelation;var _initVueComponent =
  initVueComponent(_vue.default, vueComponentOptions),_initVueComponent2 = _slicedToArray(_initVueComponent, 2),VueComponent = _initVueComponent2[0],vueOptions = _initVueComponent2[1];

  var options = _objectSpread({
    multipleSlots: true,
    addGlobalClass: true },
  vueOptions.options || {});


  {
    // 微信 multipleSlots 部分情况有 bug，导致内容顺序错乱 如 u-list，提供覆盖选项
    if (vueOptions['mp-weixin'] && vueOptions['mp-weixin'].options) {
      Object.assign(options, vueOptions['mp-weixin'].options);
    }
  }

  var componentOptions = {
    options: options,
    data: initData(vueOptions, _vue.default.prototype),
    behaviors: initBehaviors(vueOptions, initBehavior),
    properties: initProperties(vueOptions.props, false, vueOptions.__file),
    lifetimes: {
      attached: function attached() {
        var properties = this.properties;

        var options = {
          mpType: isPage.call(this) ? 'page' : 'component',
          mpInstance: this,
          propsData: properties };


        initVueIds(properties.vueId, this);

        // 处理父子关系
        initRelation.call(this, {
          vuePid: this._$vuePid,
          vueOptions: options });


        // 初始化 vue 实例
        this.$vm = new VueComponent(options);

        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）
        initSlots(this.$vm, properties.vueSlots);

        // 触发首次 setData
        this.$vm.$mount();
      },
      ready: function ready() {
        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发
        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800
        if (this.$vm) {
          this.$vm._isMounted = true;
          this.$vm.__call_hook('mounted');
          this.$vm.__call_hook('onReady');
        }
      },
      detached: function detached() {
        this.$vm && this.$vm.$destroy();
      } },

    pageLifetimes: {
      show: function show(args) {
        this.$vm && this.$vm.__call_hook('onPageShow', args);
      },
      hide: function hide() {
        this.$vm && this.$vm.__call_hook('onPageHide');
      },
      resize: function resize(size) {
        this.$vm && this.$vm.__call_hook('onPageResize', size);
      } },

    methods: {
      __l: handleLink,
      __e: handleEvent } };


  // externalClasses
  if (vueOptions.externalClasses) {
    componentOptions.externalClasses = vueOptions.externalClasses;
  }

  if (Array.isArray(vueOptions.wxsCallMethods)) {
    vueOptions.wxsCallMethods.forEach(function (callMethod) {
      componentOptions.methods[callMethod] = function (args) {
        return this.$vm[callMethod](args);
      };
    });
  }

  if (isPage) {
    return componentOptions;
  }
  return [componentOptions, VueComponent];
}

function parseComponent(vueComponentOptions) {
  return parseBaseComponent(vueComponentOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

var hooks$1 = [
'onShow',
'onHide',
'onUnload'];


hooks$1.push.apply(hooks$1, PAGE_EVENT_HOOKS);

function parseBasePage(vuePageOptions, _ref6)


{var isPage = _ref6.isPage,initRelation = _ref6.initRelation;
  var pageOptions = parseComponent(vuePageOptions);

  initHooks(pageOptions.methods, hooks$1, vuePageOptions);

  pageOptions.methods.onLoad = function (query) {
    this.options = query;
    var copyQuery = Object.assign({}, query);
    delete copyQuery.__id__;
    this.$page = {
      fullPath: '/' + (this.route || this.is) + stringifyQuery(copyQuery) };

    this.$vm.$mp.query = query; // 兼容 mpvue
    this.$vm.__call_hook('onLoad', query);
  };

  return pageOptions;
}

function parsePage(vuePageOptions) {
  return parseBasePage(vuePageOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

function createPage(vuePageOptions) {
  {
    return Component(parsePage(vuePageOptions));
  }
}

function createComponent(vueOptions) {
  {
    return Component(parseComponent(vueOptions));
  }
}

function createSubpackageApp(vm) {
  var appOptions = parseApp(vm);
  var app = getApp({
    allowDefault: true });

  vm.$scope = app;
  var globalData = app.globalData;
  if (globalData) {
    Object.keys(appOptions.globalData).forEach(function (name) {
      if (!hasOwn(globalData, name)) {
        globalData[name] = appOptions.globalData[name];
      }
    });
  }
  Object.keys(appOptions).forEach(function (name) {
    if (!hasOwn(app, name)) {
      app[name] = appOptions[name];
    }
  });
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {args[_key5] = arguments[_key5];}
      vm.__call_hook('onShow', args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {args[_key6] = arguments[_key6];}
      vm.__call_hook('onHide', args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    vm.__call_hook('onLaunch', args);
  }
  return vm;
}

function createPlugin(vm) {
  var appOptions = parseApp(vm);
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {args[_key7] = arguments[_key7];}
      appOptions.onShow.apply(vm, args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {args[_key8] = arguments[_key8];}
      appOptions.onHide.apply(vm, args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    appOptions.onLaunch.call(vm, args);
  }
  return vm;
}

todos.forEach(function (todoApi) {
  protocols[todoApi] = false;
});

canIUses.forEach(function (canIUseApi) {
  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name :
  canIUseApi;
  if (!wx.canIUse(apiName)) {
    protocols[canIUseApi] = false;
  }
});

var uni = {};

if (typeof Proxy !== 'undefined' && "mp-weixin" !== 'app-plus') {
  uni = new Proxy({}, {
    get: function get(target, name) {
      if (hasOwn(target, name)) {
        return target[name];
      }
      if (baseApi[name]) {
        return baseApi[name];
      }
      if (api[name]) {
        return promisify(name, api[name]);
      }
      {
        if (extraApi[name]) {
          return promisify(name, extraApi[name]);
        }
        if (todoApis[name]) {
          return promisify(name, todoApis[name]);
        }
      }
      if (eventApi[name]) {
        return eventApi[name];
      }
      if (!hasOwn(wx, name) && !hasOwn(protocols, name)) {
        return;
      }
      return promisify(name, wrapper(name, wx[name]));
    },
    set: function set(target, name, value) {
      target[name] = value;
      return true;
    } });

} else {
  Object.keys(baseApi).forEach(function (name) {
    uni[name] = baseApi[name];
  });

  {
    Object.keys(todoApis).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
    Object.keys(extraApi).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
  }

  Object.keys(eventApi).forEach(function (name) {
    uni[name] = eventApi[name];
  });

  Object.keys(api).forEach(function (name) {
    uni[name] = promisify(name, api[name]);
  });

  Object.keys(wx).forEach(function (name) {
    if (hasOwn(wx, name) || hasOwn(protocols, name)) {
      uni[name] = promisify(name, wrapper(name, wx[name]));
    }
  });
}

wx.createApp = createApp;
wx.createPage = createPage;
wx.createComponent = createComponent;
wx.createSubpackageApp = createSubpackageApp;
wx.createPlugin = createPlugin;

var uni$1 = uni;var _default =

uni$1;exports.default = _default;

/***/ }),

/***/ 10:
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode, /* vue-cli only */
  components, // fixed by xxxxxx auto components
  renderjs // fixed by xxxxxx renderjs
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // fixed by xxxxxx auto components
  if (components) {
    if (!options.components) {
      options.components = {}
    }
    var hasOwn = Object.prototype.hasOwnProperty
    for (var name in components) {
      if (hasOwn.call(components, name) && !hasOwn.call(options.components, name)) {
        options.components[name] = components[name]
      }
    }
  }
  // fixed by xxxxxx renderjs
  if (renderjs) {
    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {
      this[renderjs.__module] = this
    });
    (options.mixins || (options.mixins = [])).push(renderjs)
  }

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ 11:
/*!********************************************!*\
  !*** D:/桌面/XLCM/baoma-work/store/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 2));
var _vuex = _interopRequireDefault(__webpack_require__(/*! vuex */ 12));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}
_vue.default.use(_vuex.default);
var store = new _vuex.default.Store({
  state: {
    city: '' //当前城市
  },
  mutations: {
    setCity: function setCity(state, city) {
      state.city = city;
      // console.log(state.city)
    } },

  actions: {} });var _default =

store;exports.default = _default;

/***/ }),

/***/ 12:
/*!********************************************!*\
  !*** ./node_modules/vuex/dist/vuex.esm.js ***!
  \********************************************/
/*! exports provided: default, Store, createNamespacedHelpers, install, mapActions, mapGetters, mapMutations, mapState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Store", function() { return Store; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNamespacedHelpers", function() { return createNamespacedHelpers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "install", function() { return install; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapActions", function() { return mapActions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapGetters", function() { return mapGetters; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapMutations", function() { return mapMutations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapState", function() { return mapState; });
/*!
 * vuex v3.4.0
 * (c) 2020 Evan You
 * @license MIT
 */
function applyMixin (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    Vue.mixin({ beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = typeof options.store === 'function'
        ? options.store()
        : options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
}

var target = typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
    ? global
    : {};
var devtoolHook = target.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  }, { prepend: true });

  store.subscribeAction(function (action, state) {
    devtoolHook.emit('vuex:action', action, state);
  }, { prepend: true });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */

/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

function partial (fn, arg) {
  return function () {
    return fn(arg)
  }
}

// Base data struct for store's module, package with some attribute and method
var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  // Store some children item
  this._children = Object.create(null);
  // Store the origin module object which passed by programmer
  this._rawModule = rawModule;
  var rawState = rawModule.state;

  // Store the origin module's state
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors = { namespaced: { configurable: true } };

prototypeAccessors.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.hasChild = function hasChild (key) {
  return key in this._children
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  // register root module (Vuex.Store options)
  this.register([], rawRootModule, false);
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update([], this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  if ((true)) {
    assertRawModule(path, rawModule);
  }

  var newModule = new Module(rawModule, runtime);
  if (path.length === 0) {
    this.root = newModule;
  } else {
    var parent = this.get(path.slice(0, -1));
    parent.addChild(path[path.length - 1], newModule);
  }

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  if (!parent.getChild(key).runtime) { return }

  parent.removeChild(key);
};

ModuleCollection.prototype.isRegistered = function isRegistered (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];

  return parent.hasChild(key)
};

function update (path, targetModule, newModule) {
  if ((true)) {
    assertRawModule(path, newModule);
  }

  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        if ((true)) {
          console.warn(
            "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
            'manual reload is needed'
          );
        }
        return
      }
      update(
        path.concat(key),
        targetModule.getChild(key),
        newModule.modules[key]
      );
    }
  }
}

var functionAssert = {
  assert: function (value) { return typeof value === 'function'; },
  expected: 'function'
};

var objectAssert = {
  assert: function (value) { return typeof value === 'function' ||
    (typeof value === 'object' && typeof value.handler === 'function'); },
  expected: 'function or object with "handler" function'
};

var assertTypes = {
  getters: functionAssert,
  mutations: functionAssert,
  actions: objectAssert
};

function assertRawModule (path, rawModule) {
  Object.keys(assertTypes).forEach(function (key) {
    if (!rawModule[key]) { return }

    var assertOptions = assertTypes[key];

    forEachValue(rawModule[key], function (value, type) {
      assert(
        assertOptions.assert(value),
        makeAssertionMessage(path, key, type, value, assertOptions.expected)
      );
    });
  });
}

function makeAssertionMessage (path, key, type, value, expected) {
  var buf = key + " should be " + expected + " but \"" + key + "." + type + "\"";
  if (path.length > 0) {
    buf += " in module \"" + (path.join('.')) + "\"";
  }
  buf += " is " + (JSON.stringify(value)) + ".";
  return buf
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #731
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  if ((true)) {
    assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
    assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");
    assert(this instanceof Store, "store must be called with the new operator.");
  }

  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._actionSubscribers = [];
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();
  this._makeLocalGettersCache = Object.create(null);

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  var state = this._modules.root.state;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.forEach(function (plugin) { return plugin(this$1); });

  var useDevtools = options.devtools !== undefined ? options.devtools : Vue.config.devtools;
  if (useDevtools) {
    devtoolPlugin(this);
  }
};

var prototypeAccessors$1 = { state: { configurable: true } };

prototypeAccessors$1.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors$1.state.set = function (v) {
  if ((true)) {
    assert(false, "use store.replaceState() to explicit replace store state.");
  }
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown mutation type: " + type));
    }
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });

  this._subscribers
    .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
    .forEach(function (sub) { return sub(mutation, this$1.state); });

  if (
    ( true) &&
    options && options.silent
  ) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. " +
      'Use the filter functionality in the vue-devtools'
    );
  }
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
    var this$1 = this;

  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var action = { type: type, payload: payload };
  var entry = this._actions[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown action type: " + type));
    }
    return
  }

  try {
    this._actionSubscribers
      .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
      .filter(function (sub) { return sub.before; })
      .forEach(function (sub) { return sub.before(action, this$1.state); });
  } catch (e) {
    if ((true)) {
      console.warn("[vuex] error in before action subscribers: ");
      console.error(e);
    }
  }

  var result = entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload);

  return new Promise(function (resolve, reject) {
    result.then(function (res) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.after; })
          .forEach(function (sub) { return sub.after(action, this$1.state); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in after action subscribers: ");
          console.error(e);
        }
      }
      resolve(res);
    }, function (error) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.error; })
          .forEach(function (sub) { return sub.error(action, this$1.state, error); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in error action subscribers: ");
          console.error(e);
        }
      }
      reject(error);
    });
  })
};

Store.prototype.subscribe = function subscribe (fn, options) {
  return genericSubscribe(fn, this._subscribers, options)
};

Store.prototype.subscribeAction = function subscribeAction (fn, options) {
  var subs = typeof fn === 'function' ? { before: fn } : fn;
  return genericSubscribe(subs, this._actionSubscribers, options)
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  if ((true)) {
    assert(typeof getter === 'function', "store.watch only accepts a function.");
  }
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule, options) {
    if ( options === void 0 ) options = {};

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
    assert(path.length > 0, 'cannot register the root module by using registerModule.');
  }

  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path), options.preserveState);
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hasModule = function hasModule (path) {
  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  return this._modules.isRegistered(path)
};

Store.prototype.hotUpdate = function hotUpdate (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors$1 );

function genericSubscribe (fn, subs, options) {
  if (subs.indexOf(fn) < 0) {
    options && options.prepend
      ? subs.unshift(fn)
      : subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
}

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  // reset local getters cache
  store._makeLocalGettersCache = Object.create(null);
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    // direct inline function use will lead to closure preserving oldVm.
    // using partial to return function with only arguments preserved in closure environment.
    computed[key] = partial(fn, store);
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    if (store._modulesNamespaceMap[namespace] && ("development" !== 'production')) {
      console.error(("[vuex] duplicate namespace " + namespace + " for the namespaced module " + (path.join('/'))));
    }
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      if ((true)) {
        if (moduleName in parentState) {
          console.warn(
            ("[vuex] state field \"" + moduleName + "\" was overridden by a module with the same name at \"" + (path.join('.')) + "\"")
          );
        }
      }
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var type = action.root ? key : namespace + key;
    var handler = action.handler || action;
    registerAction(store, type, handler, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._actions[type]) {
          console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._mutations[type]) {
          console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  if (!store._makeLocalGettersCache[namespace]) {
    var gettersProxy = {};
    var splitPos = namespace.length;
    Object.keys(store.getters).forEach(function (type) {
      // skip if the target getter is not match this namespace
      if (type.slice(0, splitPos) !== namespace) { return }

      // extract local getter type
      var localType = type.slice(splitPos);

      // Add a port to the getters proxy.
      // Define as getter property because
      // we do not want to evaluate the getters in this time.
      Object.defineProperty(gettersProxy, localType, {
        get: function () { return store.getters[type]; },
        enumerable: true
      });
    });
    store._makeLocalGettersCache[namespace] = gettersProxy;
  }

  return store._makeLocalGettersCache[namespace]
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler.call(store, local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload) {
    var res = handler.call(store, {
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    if ((true)) {
      console.error(("[vuex] duplicate getter key: " + type));
    }
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    if ((true)) {
      assert(store._committing, "do not mutate vuex store state outside mutation handlers.");
    }
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.reduce(function (state, key) { return state[key]; }, state)
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  if ((true)) {
    assert(typeof type === 'string', ("expects string as the type, but found " + (typeof type) + "."));
  }

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue && _Vue === Vue) {
    if ((true)) {
      console.error(
        '[vuex] already installed. Vue.use(Vuex) should be called only once.'
      );
    }
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

/**
 * Reduce the code which written in Vue.js for getting the state.
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} states # Object's item can be a function which accept state and getters for param, you can do something for state and getters in it.
 * @param {Object}
 */
var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  if (( true) && !isValidMap(states)) {
    console.error('[vuex] mapState: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for committing the mutation
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} mutations # Object's item can be a function which accept `commit` function as the first param, it can accept anthor params. You can commit mutation and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  if (( true) && !isValidMap(mutations)) {
    console.error('[vuex] mapMutations: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // Get the commit method from store
      var commit = this.$store.commit;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);
        if (!module) {
          return
        }
        commit = module.context.commit;
      }
      return typeof val === 'function'
        ? val.apply(this, [commit].concat(args))
        : commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for getting the getters
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} getters
 * @return {Object}
 */
var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  if (( true) && !isValidMap(getters)) {
    console.error('[vuex] mapGetters: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    // The namespace has been mutated by normalizeNamespace
    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if (( true) && !(val in this.$store.getters)) {
        console.error(("[vuex] unknown getter: " + val));
        return
      }
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for dispatch the action
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} actions # Object's item can be a function which accept `dispatch` function as the first param, it can accept anthor params. You can dispatch action and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  if (( true) && !isValidMap(actions)) {
    console.error('[vuex] mapActions: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // get dispatch function from store
      var dispatch = this.$store.dispatch;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);
        if (!module) {
          return
        }
        dispatch = module.context.dispatch;
      }
      return typeof val === 'function'
        ? val.apply(this, [dispatch].concat(args))
        : dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Rebinding namespace param for mapXXX function in special scoped, and return them by simple object
 * @param {String} namespace
 * @return {Object}
 */
var createNamespacedHelpers = function (namespace) { return ({
  mapState: mapState.bind(null, namespace),
  mapGetters: mapGetters.bind(null, namespace),
  mapMutations: mapMutations.bind(null, namespace),
  mapActions: mapActions.bind(null, namespace)
}); };

/**
 * Normalize the map
 * normalizeMap([1, 2, 3]) => [ { key: 1, val: 1 }, { key: 2, val: 2 }, { key: 3, val: 3 } ]
 * normalizeMap({a: 1, b: 2, c: 3}) => [ { key: 'a', val: 1 }, { key: 'b', val: 2 }, { key: 'c', val: 3 } ]
 * @param {Array|Object} map
 * @return {Object}
 */
function normalizeMap (map) {
  if (!isValidMap(map)) {
    return []
  }
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

/**
 * Validate whether given map is valid or not
 * @param {*} map
 * @return {Boolean}
 */
function isValidMap (map) {
  return Array.isArray(map) || isObject(map)
}

/**
 * Return a function expect two param contains namespace and map. it will normalize the namespace and then the param's function will handle the new namespace and the map.
 * @param {Function} fn
 * @return {Function}
 */
function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

/**
 * Search a special module from store by namespace. if module not exist, print error message.
 * @param {Object} store
 * @param {String} helper
 * @param {String} namespace
 * @return {Object}
 */
function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if (( true) && !module) {
    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
  }
  return module
}

var index = {
  Store: Store,
  install: install,
  version: '3.4.0',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions,
  createNamespacedHelpers: createNamespacedHelpers
};

/* harmony default export */ __webpack_exports__["default"] = (index);


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ 3)))

/***/ }),

/***/ 131:
/*!****************************************************!*\
  !*** D:/桌面/XLCM/baoma-work/common/graceChecker.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
数据验证（表单验证）
来自 grace.hcoder.net 
作者 hcoder 深海
*/
module.exports = {
  error: '',
  check: function check(data, rule) {
    for (var i = 0; i < rule.length; i++) {
      if (!rule[i].checkType) {return true;}
      if (!rule[i].name) {return true;}
      if (!rule[i].errorMsg) {return true;}
      if (!data[rule[i].name]) {this.error = rule[i].errorMsg;return false;}
      switch (rule[i].checkType) {
        case 'string':
          var reg = new RegExp('^.{' + rule[i].checkRule + '}$');
          if (!reg.test(data[rule[i].name])) {this.error = rule[i].errorMsg;return false;}
          break;
        case 'int':
          var reg = new RegExp('^(-[1-9]|[1-9])[0-9]{' + rule[i].checkRule + '}$');
          if (!reg.test(data[rule[i].name])) {this.error = rule[i].errorMsg;return false;}
          break;
          break;
        case 'between':
          if (!this.isNumber(data[rule[i].name])) {
            this.error = rule[i].errorMsg;
            return false;
          }
          var minMax = rule[i].checkRule.split(',');
          minMax[0] = Number(minMax[0]);
          minMax[1] = Number(minMax[1]);
          if (data[rule[i].name] > minMax[1] || data[rule[i].name] < minMax[0]) {
            this.error = rule[i].errorMsg;
            return false;
          }
          break;
        case 'betweenD':
          var reg = /^-?[1-9][0-9]?$/;
          if (!reg.test(data[rule[i].name])) {this.error = rule[i].errorMsg;return false;}
          var minMax = rule[i].checkRule.split(',');
          minMax[0] = Number(minMax[0]);
          minMax[1] = Number(minMax[1]);
          if (data[rule[i].name] > minMax[1] || data[rule[i].name] < minMax[0]) {
            this.error = rule[i].errorMsg;
            return false;
          }
          break;
        case 'betweenF':
          var reg = /^-?[0-9][0-9]?.+[0-9]+$/;
          if (!reg.test(data[rule[i].name])) {this.error = rule[i].errorMsg;return false;}
          var minMax = rule[i].checkRule.split(',');
          minMax[0] = Number(minMax[0]);
          minMax[1] = Number(minMax[1]);
          if (data[rule[i].name] > minMax[1] || data[rule[i].name] < minMax[0]) {
            this.error = rule[i].errorMsg;
            return false;
          }
          break;
        case 'same':
          if (data[rule[i].name] != rule[i].checkRule) {this.error = rule[i].errorMsg;return false;}
          break;
        case 'notsame':
          if (data[rule[i].name] == rule[i].checkRule) {this.error = rule[i].errorMsg;return false;}
          break;
        case 'email':
          var reg = /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
          if (!reg.test(data[rule[i].name])) {this.error = rule[i].errorMsg;return false;}
          break;
        case 'phoneno':
          var reg = /^1[0-9]{10,10}$/;
          if (!reg.test(data[rule[i].name])) {this.error = rule[i].errorMsg;return false;}
          break;
        case 'zipcode':
          var reg = /^[0-9]{6}$/;
          if (!reg.test(data[rule[i].name])) {this.error = rule[i].errorMsg;return false;}
          break;
        case 'reg':
          var reg = new RegExp(rule[i].checkRule);
          if (!reg.test(data[rule[i].name])) {this.error = rule[i].errorMsg;return false;}
          break;
        case 'in':
          if (rule[i].checkRule.indexOf(data[rule[i].name]) == -1) {
            this.error = rule[i].errorMsg;return false;
          }
          break;
        case 'notnull':
          if (data[rule[i].name] == null || data[rule[i].name].length < 1) {this.error = rule[i].errorMsg;return false;}
          break;}

    }
    return true;
  },
  isNumber: function isNumber(checkVal) {
    var reg = /^-?[1-9][0-9]?.?[0-9]*$/;
    return reg.test(checkVal);
  } };

/***/ }),

/***/ 170:
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ 171);

/***/ }),

/***/ 171:
/*!************************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime-module.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g = (function() {
  return this || (typeof self === "object" && self);
})() || Function("return this")();

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = __webpack_require__(/*! ./runtime */ 172);

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}


/***/ }),

/***/ 172:
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() {
    return this || (typeof self === "object" && self);
  })() || Function("return this")()
);


/***/ }),

/***/ 2:
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.6.11
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      if (vm.$options && vm.$options.__file) { // fixed by xxxxxx
        return ('') + vm.$options.__file
      }
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm && vm.$options.name !== 'PageBody') {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        !vm.$options.isReserved && tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.SharedObject.target) {
    Dep.SharedObject.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if ( true && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) { return a.id - b.id; });
  }
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
// fixed by xxxxxx (nvue shared vuex)
/* eslint-disable no-undef */
Dep.SharedObject = {};
Dep.SharedObject.target = null;
Dep.SharedObject.targetStack = [];

function pushTarget (target) {
  Dep.SharedObject.targetStack.push(target);
  Dep.SharedObject.target = target;
  Dep.target = target;
}

function popTarget () {
  Dep.SharedObject.targetStack.pop();
  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];
  Dep.target = Dep.SharedObject.target;
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑
        if(value.push !== value.__proto__.push){
          copyAugment(value, arrayMethods, arrayKeys);
        } else {
          protoAugment(value, arrayMethods);
        }
      }
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.SharedObject.target) { // fixed by xxxxxx
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ( true && customSetter) {
        customSetter();
      }
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
       true && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
     true && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ( true && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ( true && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType);
  // check if we need to specify expected value
  if (expectedTypes.length === 1 &&
      isExplicable(expectedType) &&
      !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

function isExplicable (value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Technically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var warnReservedPrefix = function (target, key) {
    warn(
      "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
      'prevent conflicts with Vue internals. ' +
      'See: https://vuejs.org/v2/api/#data',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) ||
        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
      if (!has && !isAllowed) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      // perf.clearMeasures(name)
    };
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
       true && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

/*  */

// fixed by xxxxxx (mp properties)
function extractPropertiesFromVNodeData(data, Ctor, res, context) {
  var propOptions = Ctor.options.mpOptions && Ctor.options.mpOptions.properties;
  if (isUndef(propOptions)) {
    return res
  }
  var externalClasses = Ctor.options.mpOptions.externalClasses || [];
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      var result = checkProp(res, props, key, altKey, true) ||
          checkProp(res, attrs, key, altKey, false);
      // externalClass
      if (
        result &&
        res[key] &&
        externalClasses.indexOf(altKey) !== -1 &&
        context[camelize(res[key])]
      ) {
        // 赋值 externalClass 真正的值(模板里 externalClass 的值可能是字符串)
        res[key] = context[camelize(res[key])];
      }
    }
  }
  return res
}

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag,
  context// fixed by xxxxxx
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    // fixed by xxxxxx
    return extractPropertiesFromVNodeData(data, Ctor, {}, context)
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  // fixed by xxxxxx
  return extractPropertiesFromVNodeData(data, Ctor, res, context)
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {}
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page
      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){
        (slots['page'] || (slots['page'] = [])).push(child);
      }else{
        (slots.default || (slots.default = [])).push(child);
      }
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    return res && (
      res.length === 0 ||
      (res.length === 1 && res[0].isComment) // #9658
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i, i, i); // fixed by xxxxxx
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i, i, i); // fixed by xxxxxx
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length, i, i++)); // fixed by xxxxxx
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i, i); // fixed by xxxxxx
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if ( true && !isObject(bindObject)) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    // fixed by xxxxxx app-plus scopedSlot
    nodes = scopedSlotFn(props, this, props._i) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
       true && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
       true && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ( true && key !== '' && key !== null) {
      // null is a special value for explicitly removing a binding
      warn(
        ("Invalid value for dynamic directive argument (expected string or null): " + key),
        this
      );
    }
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (true) {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      callHook(componentInstance, 'onServiceCreated');
      callHook(componentInstance, 'onServiceAttached');
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag, context); // fixed by xxxxxx

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
     true && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ( true &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      if ( true && isDef(data) && isDef(data.nativeOn)) {
        warn(
          ("The .native modifier for v-on is only valid on components but it was used on <" + tag + ">."),
          context
        );
      }
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {}
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack because all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if ( true && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ( true && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
       true && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : undefined
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }
  
  // fixed by xxxxxx update properties(mp runtime)
  vm._$updateProperties && vm._$updateProperties(vm);
  
  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ( true && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if ( true && !config.async) {
        flushSchedulerQueue();
        return
      }
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : undefined;
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
       true && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          {
            if(vm.mpHost === 'mp-baidu'){//百度 observer 在 setData callback 之后触发，直接忽略该 warn
                return
            }
            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警
            if(
                key === 'value' && 
                Array.isArray(vm.$options.behaviors) &&
                vm.$options.behaviors.indexOf('uni://form-field') !== -1
              ){
              return
            }
            if(vm._getFormData){
              return
            }
            var $parent = vm.$parent;
            while($parent){
              if($parent.__next_tick_pending){
                return  
              }
              $parent = $parent.$parent;
            }
          }
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {}
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
     true && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
       true && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ( true && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if ( true &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.SharedObject.target) {// fixed by xxxxxx
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (typeof methods[key] !== 'function') {
        warn(
          "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function () {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
      }
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {}
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    !vm._$fallback && initInjections(vm); // resolve injections before data/props  
    initState(vm);
    !vm._$fallback && initProvide(vm); // resolve provide after data/props
    !vm._$fallback && callHook(vm, 'created');      

    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if ( true &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ( true && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ( true && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */



function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.11';

/**
 * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js
 */
var ARRAYTYPE = '[object Array]';
var OBJECTTYPE = '[object Object]';
// const FUNCTIONTYPE = '[object Function]'

function diff(current, pre) {
    var result = {};
    syncKeys(current, pre);
    _diff(current, pre, '', result);
    return result
}

function syncKeys(current, pre) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {
        if(Object.keys(current).length >= Object.keys(pre).length){
            for (var key in pre) {
                var currentValue = current[key];
                if (currentValue === undefined) {
                    current[key] = null;
                } else {
                    syncKeys(currentValue, pre[key]);
                }
            }
        }
    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {
        if (current.length >= pre.length) {
            pre.forEach(function (item, index) {
                syncKeys(current[index], item);
            });
        }
    }
}

function _diff(current, pre, path, result) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE) {
        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {
            setResult(result, path, current);
        } else {
            var loop = function ( key ) {
                var currentValue = current[key];
                var preValue = pre[key];
                var currentType = type(currentValue);
                var preType = type(preValue);
                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {
                    // NOTE 此处将 != 修改为 !==。涉及地方太多恐怕测试不到，如果出现数据对比问题，将其修改回来。
                    if (currentValue !== pre[key]) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    }
                } else if (currentType == ARRAYTYPE) {
                    if (preType != ARRAYTYPE) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        if (currentValue.length < preValue.length) {
                            setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                        } else {
                            currentValue.forEach(function (item, index) {
                                _diff(item, preValue[index], (path == '' ? '' : path + ".") + key + '[' + index + ']', result);
                            });
                        }
                    }
                } else if (currentType == OBJECTTYPE) {
                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        for (var subKey in currentValue) {
                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + ".") + key + '.' + subKey, result);
                        }
                    }
                }
            };

            for (var key in current) loop( key );
        }
    } else if (rootCurrentType == ARRAYTYPE) {
        if (rootPreType != ARRAYTYPE) {
            setResult(result, path, current);
        } else {
            if (current.length < pre.length) {
                setResult(result, path, current);
            } else {
                current.forEach(function (item, index) {
                    _diff(item, pre[index], path + '[' + index + ']', result);
                });
            }
        }
    } else {
        setResult(result, path, current);
    }
}

function setResult(result, k, v) {
    // if (type(v) != FUNCTIONTYPE) {
        result[k] = v;
    // }
}

function type(obj) {
    return Object.prototype.toString.call(obj)
}

/*  */

function flushCallbacks$1(vm) {
    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {
        if (Object({"NODE_ENV":"development","VUE_APP_NAME":"baoma-work","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');
        }
        var copies = vm.__next_tick_callbacks.slice(0);
        vm.__next_tick_callbacks.length = 0;
        for (var i = 0; i < copies.length; i++) {
            copies[i]();
        }
    }
}

function hasRenderWatcher(vm) {
    return queue.find(function (watcher) { return vm._watcher === watcher; })
}

function nextTick$1(vm, cb) {
    //1.nextTick 之前 已 setData 且 setData 还未回调完成
    //2.nextTick 之前存在 render watcher
    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {
        if(Object({"NODE_ENV":"development","VUE_APP_NAME":"baoma-work","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:nextVueTick');
        }
        return nextTick(cb, vm)
    }else{
        if(Object({"NODE_ENV":"development","VUE_APP_NAME":"baoma-work","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance$1 = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +
                ']:nextMPTick');
        }
    }
    var _resolve;
    if (!vm.__next_tick_callbacks) {
        vm.__next_tick_callbacks = [];
    }
    vm.__next_tick_callbacks.push(function () {
        if (cb) {
            try {
                cb.call(vm);
            } catch (e) {
                handleError(e, vm, 'nextTick');
            }
        } else if (_resolve) {
            _resolve(vm);
        }
    });
    // $flow-disable-line
    if (!cb && typeof Promise !== 'undefined') {
        return new Promise(function (resolve) {
            _resolve = resolve;
        })
    }
}

/*  */

function cloneWithData(vm) {
  // 确保当前 vm 所有数据被同步
  var ret = Object.create(null);
  var dataKeys = [].concat(
    Object.keys(vm._data || {}),
    Object.keys(vm._computedWatchers || {}));

  dataKeys.reduce(function(ret, key) {
    ret[key] = vm[key];
    return ret
  }, ret);

  // vue-composition-api
  var compositionApiState = vm.__composition_api_state__ || vm.__secret_vfa_state__;
  var rawBindings = compositionApiState && compositionApiState.rawBindings;
  if (rawBindings) {
    Object.keys(rawBindings).forEach(function (key) {
      ret[key] = vm[key];
    });
  }

  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据
  Object.assign(ret, vm.$mp.data || {});
  if (
    Array.isArray(vm.$options.behaviors) &&
    vm.$options.behaviors.indexOf('uni://form-field') !== -1
  ) { //form-field
    ret['name'] = vm.name;
    ret['value'] = vm.value;
  }

  return JSON.parse(JSON.stringify(ret))
}

var patch = function(oldVnode, vnode) {
  var this$1 = this;

  if (vnode === null) { //destroy
    return
  }
  if (this.mpType === 'page' || this.mpType === 'component') {
    var mpInstance = this.$scope;
    var data = Object.create(null);
    try {
      data = cloneWithData(this);
    } catch (err) {
      console.error(err);
    }
    data.__webviewId__ = mpInstance.data.__webviewId__;
    var mpData = Object.create(null);
    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据
      mpData[key] = mpInstance.data[key];
    });
    var diffData = this.$shouldDiffData === false ? data : diff(data, mpData);
    if (Object.keys(diffData).length) {
      if (Object({"NODE_ENV":"development","VUE_APP_NAME":"baoma-work","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +
          ']差量更新',
          JSON.stringify(diffData));
      }
      this.__next_tick_pending = true;
      mpInstance.setData(diffData, function () {
        this$1.__next_tick_pending = false;
        flushCallbacks$1(this$1);
      });
    } else {
      flushCallbacks$1(this);
    }
  }
};

/*  */

function createEmptyRender() {

}

function mountComponent$1(
  vm,
  el,
  hydrating
) {
  if (!vm.mpType) {//main.js 中的 new Vue
    return vm
  }
  if (vm.mpType === 'app') {
    vm.$options.render = createEmptyRender;
  }
  if (!vm.$options.render) {
    vm.$options.render = createEmptyRender;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  
  !vm._$fallback && callHook(vm, 'beforeMount');

  var updateComponent = function () {
    vm._update(vm._render(), hydrating);
  };

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before() {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;
  return vm
}

/*  */

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/*  */

var MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];

function getTarget(obj, path) {
  var parts = path.split('.');
  var key = parts[0];
  if (key.indexOf('__$n') === 0) { //number index
    key = parseInt(key.replace('__$n', ''));
  }
  if (parts.length === 1) {
    return obj[key]
  }
  return getTarget(obj[key], parts.slice(1).join('.'))
}

function internalMixin(Vue) {

  Vue.config.errorHandler = function(err, vm, info) {
    Vue.util.warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    console.error(err);
    /* eslint-disable no-undef */
    var app = typeof getApp === 'function' && getApp();
    if (app && app.onError) {
      app.onError(err);
    }
  };

  var oldEmit = Vue.prototype.$emit;

  Vue.prototype.$emit = function(event) {
    if (this.$scope && event) {
      this.$scope['triggerEvent'](event, {
        __args__: toArray(arguments, 1)
      });
    }
    return oldEmit.apply(this, arguments)
  };

  Vue.prototype.$nextTick = function(fn) {
    return nextTick$1(this, fn)
  };

  MP_METHODS.forEach(function (method) {
    Vue.prototype[method] = function(args) {
      if (this.$scope && this.$scope[method]) {
        return this.$scope[method](args)
      }
      // mp-alipay
      if (typeof my === 'undefined') {
        return
      }
      if (method === 'createSelectorQuery') {
        /* eslint-disable no-undef */
        return my.createSelectorQuery(args)
      } else if (method === 'createIntersectionObserver') {
        /* eslint-disable no-undef */
        return my.createIntersectionObserver(args)
      }
      // TODO mp-alipay 暂不支持 selectAllComponents,selectComponent
    };
  });

  Vue.prototype.__init_provide = initProvide;

  Vue.prototype.__init_injections = initInjections;

  Vue.prototype.__call_hook = function(hook, args) {
    var vm = this;
    // #7573 disable dep collection when invoking lifecycle hooks
    pushTarget();
    var handlers = vm.$options[hook];
    var info = hook + " hook";
    var ret;
    if (handlers) {
      for (var i = 0, j = handlers.length; i < j; i++) {
        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);
      }
    }
    if (vm._hasHookEvent) {
      vm.$emit('hook:' + hook, args);
    }
    popTarget();
    return ret
  };

  Vue.prototype.__set_model = function(target, key, value, modifiers) {
    if (Array.isArray(modifiers)) {
      if (modifiers.indexOf('trim') !== -1) {
        value = value.trim();
      }
      if (modifiers.indexOf('number') !== -1) {
        value = this._n(value);
      }
    }
    if (!target) {
      target = this;
    }
    target[key] = value;
  };

  Vue.prototype.__set_sync = function(target, key, value) {
    if (!target) {
      target = this;
    }
    target[key] = value;
  };

  Vue.prototype.__get_orig = function(item) {
    if (isPlainObject(item)) {
      return item['$orig'] || item
    }
    return item
  };

  Vue.prototype.__get_value = function(dataPath, target) {
    return getTarget(target || this, dataPath)
  };


  Vue.prototype.__get_class = function(dynamicClass, staticClass) {
    return renderClass(staticClass, dynamicClass)
  };

  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {
    if (!dynamicStyle && !staticStyle) {
      return ''
    }
    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);
    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;
    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + ":" + (styleObj[name])); }).join(';')
  };

  Vue.prototype.__map = function(val, iteratee) {
    //TODO 暂不考虑 string
    var ret, i, l, keys, key;
    if (Array.isArray(val)) {
      ret = new Array(val.length);
      for (i = 0, l = val.length; i < l; i++) {
        ret[i] = iteratee(val[i], i);
      }
      return ret
    } else if (isObject(val)) {
      keys = Object.keys(val);
      ret = Object.create(null);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[key] = iteratee(val[key], key, i);
      }
      return ret
    } else if (typeof val === 'number') {
      ret = new Array(val);
      for (i = 0, l = val; i < l; i++) {
        // 第一个参数暂时仍和小程序一致
        ret[i] = iteratee(i, i);
      }
      return ret
    }
    return []
  };

}

/*  */

var LIFECYCLE_HOOKS$1 = [
    //App
    'onLaunch',
    'onShow',
    'onHide',
    'onUniNViewMessage',
    'onPageNotFound',
    'onThemeChange',
    'onError',
    'onUnhandledRejection',
    //Page
    'onInit',
    'onLoad',
    // 'onShow',
    'onReady',
    // 'onHide',
    'onUnload',
    'onPullDownRefresh',
    'onReachBottom',
    'onTabItemTap',
    'onAddToFavorites',
    'onShareTimeline',
    'onShareAppMessage',
    'onResize',
    'onPageScroll',
    'onNavigationBarButtonTap',
    'onBackPress',
    'onNavigationBarSearchInputChanged',
    'onNavigationBarSearchInputConfirmed',
    'onNavigationBarSearchInputClicked',
    //Component
    // 'onReady', // 兼容旧版本，应该移除该事件
    'onPageShow',
    'onPageHide',
    'onPageResize'
];
function lifecycleMixin$1(Vue) {

    //fixed vue-class-component
    var oldExtend = Vue.extend;
    Vue.extend = function(extendOptions) {
        extendOptions = extendOptions || {};

        var methods = extendOptions.methods;
        if (methods) {
            Object.keys(methods).forEach(function (methodName) {
                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {
                    extendOptions[methodName] = methods[methodName];
                    delete methods[methodName];
                }
            });
        }

        return oldExtend.call(this, extendOptions)
    };

    var strategies = Vue.config.optionMergeStrategies;
    var mergeHook = strategies.created;
    LIFECYCLE_HOOKS$1.forEach(function (hook) {
        strategies[hook] = mergeHook;
    });

    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;
}

/*  */

// install platform patch function
Vue.prototype.__patch__ = patch;

// public mount method
Vue.prototype.$mount = function(
    el ,
    hydrating 
) {
    return mountComponent$1(this, el, hydrating)
};

lifecycleMixin$1(Vue);
internalMixin(Vue);

/*  */

/* harmony default export */ __webpack_exports__["default"] = (Vue);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 3)))

/***/ }),

/***/ 267:
/*!**************************************************!*\
  !*** D:/桌面/XLCM/baoma-work/common/permission.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {/// null = 未请求，1 = 已允许，0 = 拒绝|受限, 2 = 系统未开启

var isIOS;

function album() {
  var result = 0;
  var PHPhotoLibrary = plus.ios.import("PHPhotoLibrary");
  var authStatus = PHPhotoLibrary.authorizationStatus();
  if (authStatus === 0) {
    result = null;
  } else if (authStatus == 3) {
    result = 1;
  } else {
    result = 0;
  }
  plus.ios.deleteObject(PHPhotoLibrary);
  return result;
}

function camera() {
  var result = 0;
  var AVCaptureDevice = plus.ios.import("AVCaptureDevice");
  var authStatus = AVCaptureDevice.authorizationStatusForMediaType('vide');
  if (authStatus === 0) {
    result = null;
  } else if (authStatus == 3) {
    result = 1;
  } else {
    result = 0;
  }
  plus.ios.deleteObject(AVCaptureDevice);
  return result;
}

function location() {
  var result = 0;
  var cllocationManger = plus.ios.import("CLLocationManager");
  var enable = cllocationManger.locationServicesEnabled();
  var status = cllocationManger.authorizationStatus();
  if (!enable) {
    result = 2;
  } else if (status === 0) {
    result = null;
  } else if (status === 3 || status === 4) {
    result = 1;
  } else {
    result = 0;
  }
  plus.ios.deleteObject(cllocationManger);
  return result;
}

function push() {
  var result = 0;
  var UIApplication = plus.ios.import("UIApplication");
  var app = UIApplication.sharedApplication();
  var enabledTypes = 0;
  if (app.currentUserNotificationSettings) {
    var settings = app.currentUserNotificationSettings();
    enabledTypes = settings.plusGetAttribute("types");
    if (enabledTypes == 0) {
      result = 0;
      console.log("推送权限没有开启");
    } else {
      result = 1;
      console.log("已经开启推送功能!");
    }
    plus.ios.deleteObject(settings);
  } else {
    enabledTypes = app.enabledRemoteNotificationTypes();
    if (enabledTypes == 0) {
      result = 3;
      console.log("推送权限没有开启!");
    } else {
      result = 4;
      console.log("已经开启推送功能!");
    }
  }
  plus.ios.deleteObject(app);
  plus.ios.deleteObject(UIApplication);
  return result;
}

function contact() {
  var result = 0;
  var CNContactStore = plus.ios.import("CNContactStore");
  var cnAuthStatus = CNContactStore.authorizationStatusForEntityType(0);
  if (authStatus === 0) {
    result = null;
  } else if (authStatus == 3) {
    result = 1;
  } else {
    result = 0;
  }
  plus.ios.deleteObject(CNContactStore);
  return result;
}

function record() {
  var result = null;
  var avaudiosession = plus.ios.import("AVAudioSession");
  var avaudio = avaudiosession.sharedInstance();
  var status = avaudio.recordPermission();
  console.log("permissionStatus:" + status);
  if (status === 1970168948) {
    result = null;
  } else if (status === 1735552628) {
    result = 1;
  } else {
    result = 0;
  }
  plus.ios.deleteObject(avaudiosession);
  return result;
}

function calendar() {
  var result = null;
  var EKEventStore = plus.ios.import("EKEventStore");
  var ekAuthStatus = EKEventStore.authorizationStatusForEntityType(0);
  if (ekAuthStatus == 3) {
    result = 1;
    console.log("日历权限已经开启");
  } else {
    console.log("日历权限没有开启");
  }
  plus.ios.deleteObject(EKEventStore);
  return result;
}

function memo() {
  var result = null;
  var EKEventStore = plus.ios.import("EKEventStore");
  var ekAuthStatus = EKEventStore.authorizationStatusForEntityType(1);
  if (ekAuthStatus == 3) {
    result = 1;
    console.log("备忘录权限已经开启");
  } else {
    console.log("备忘录权限没有开启");
  }
  plus.ios.deleteObject(EKEventStore);
  return result;
}


function requestIOS(permissionID) {
  return new Promise(function (resolve, reject) {
    switch (permissionID) {
      case "push":
        resolve(push());
        break;
      case "location":
        resolve(location());
        break;
      case "record":
        resolve(record());
        break;
      case "camera":
        resolve(camera());
        break;
      case "album":
        resolve(album());
        break;
      case "contact":
        resolve(contact());
        break;
      case "calendar":
        resolve(calendar());
        break;
      case "memo":
        resolve(memo());
        break;
      default:
        resolve(0);
        break;}

  });
}

function requestAndroid(permissionID) {
  return new Promise(function (resolve, reject) {
    plus.android.requestPermissions(
    [permissionID],
    function (resultObj) {
      var result = 0;
      for (var i = 0; i < resultObj.granted.length; i++) {
        var grantedPermission = resultObj.granted[i];
        console.log('已获取的权限：' + grantedPermission);
        result = 1;
      }
      for (var i = 0; i < resultObj.deniedPresent.length; i++) {
        var deniedPresentPermission = resultObj.deniedPresent[i];
        console.log('拒绝本次申请的权限：' + deniedPresentPermission);
        result = 0;
      }
      for (var i = 0; i < resultObj.deniedAlways.length; i++) {
        var deniedAlwaysPermission = resultObj.deniedAlways[i];
        console.log('永久拒绝申请的权限：' + deniedAlwaysPermission);
        result = -1;
      }
      resolve(result);
    },
    function (error) {
      console.log('result error: ' + error.message);
      resolve({
        code: error.code,
        message: error.message });

    });

  });
}

function gotoAppPermissionSetting() {
  if (permission.isIOS) {
    var UIApplication = plus.ios.import("UIApplication");
    var application2 = UIApplication.sharedApplication();
    var NSURL2 = plus.ios.import("NSURL");
    var setting2 = NSURL2.URLWithString("app-settings:");
    application2.openURL(setting2);
    plus.ios.deleteObject(setting2);
    plus.ios.deleteObject(NSURL2);
    plus.ios.deleteObject(application2);
  } else {
    var Intent = plus.android.importClass("android.content.Intent");
    var Settings = plus.android.importClass("android.provider.Settings");
    var Uri = plus.android.importClass("android.net.Uri");
    var mainActivity = plus.android.runtimeMainActivity();
    var intent = new Intent();
    intent.setAction(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);
    var uri = Uri.fromParts("package", mainActivity.getPackageName(), null);
    intent.setData(uri);
    mainActivity.startActivity(intent);
  }
}

function gotoiOSPermissionSetting() {
  var UIApplication = plus.ios.import("UIApplication");
  var application2 = UIApplication.sharedApplication();
  var NSURL2 = plus.ios.import("NSURL");
  var setting2 = NSURL2.URLWithString("App-prefs:root=General");
  application2.openURL(setting2);

  plus.ios.deleteObject(setting2);
  plus.ios.deleteObject(NSURL2);
  plus.ios.deleteObject(application2);
}

var permission = {
  get isIOS() {
    return typeof isIOS === 'boolean' ? isIOS : isIOS = uni.getSystemInfoSync().platform === 'ios';
  },
  requestIOS: requestIOS,
  requestAndroid: requestAndroid,
  gotoAppSetting: gotoAppPermissionSetting,
  gotoiOSSetting: gotoiOSPermissionSetting };


module.exports = permission;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 282:
/*!******************************************************************!*\
  !*** D:/桌面/XLCM/baoma-work/components/pick-regions/regions.json ***!
  \******************************************************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, default */
/***/ (function(module) {

module.exports = JSON.parse("[{\"code\":\"11\",\"name\":\"北京市\",\"childs\":[{\"code\":\"1101\",\"name\":\"市辖区\",\"childs\":[{\"code\":\"110101\",\"name\":\"东城区\"},{\"code\":\"110102\",\"name\":\"西城区\"},{\"code\":\"110105\",\"name\":\"朝阳区\"},{\"code\":\"110106\",\"name\":\"丰台区\"},{\"code\":\"110107\",\"name\":\"石景山区\"},{\"code\":\"110108\",\"name\":\"海淀区\"},{\"code\":\"110109\",\"name\":\"门头沟区\"},{\"code\":\"110111\",\"name\":\"房山区\"},{\"code\":\"110112\",\"name\":\"通州区\"},{\"code\":\"110113\",\"name\":\"顺义区\"},{\"code\":\"110114\",\"name\":\"昌平区\"},{\"code\":\"110115\",\"name\":\"大兴区\"},{\"code\":\"110116\",\"name\":\"怀柔区\"},{\"code\":\"110117\",\"name\":\"平谷区\"},{\"code\":\"110118\",\"name\":\"密云区\"},{\"code\":\"110119\",\"name\":\"延庆区\"}]}]},{\"code\":\"12\",\"name\":\"天津市\",\"childs\":[{\"code\":\"1201\",\"name\":\"市辖区\",\"childs\":[{\"code\":\"120101\",\"name\":\"和平区\"},{\"code\":\"120102\",\"name\":\"河东区\"},{\"code\":\"120103\",\"name\":\"河西区\"},{\"code\":\"120104\",\"name\":\"南开区\"},{\"code\":\"120105\",\"name\":\"河北区\"},{\"code\":\"120106\",\"name\":\"红桥区\"},{\"code\":\"120110\",\"name\":\"东丽区\"},{\"code\":\"120111\",\"name\":\"西青区\"},{\"code\":\"120112\",\"name\":\"津南区\"},{\"code\":\"120113\",\"name\":\"北辰区\"},{\"code\":\"120114\",\"name\":\"武清区\"},{\"code\":\"120115\",\"name\":\"宝坻区\"},{\"code\":\"120116\",\"name\":\"滨海新区\"},{\"code\":\"120117\",\"name\":\"宁河区\"},{\"code\":\"120118\",\"name\":\"静海区\"},{\"code\":\"120119\",\"name\":\"蓟州区\"}]}]},{\"code\":\"13\",\"name\":\"河北省\",\"childs\":[{\"code\":\"1301\",\"name\":\"石家庄市\",\"childs\":[{\"code\":\"130102\",\"name\":\"长安区\"},{\"code\":\"130104\",\"name\":\"桥西区\"},{\"code\":\"130105\",\"name\":\"新华区\"},{\"code\":\"130107\",\"name\":\"井陉矿区\"},{\"code\":\"130108\",\"name\":\"裕华区\"},{\"code\":\"130109\",\"name\":\"藁城区\"},{\"code\":\"130110\",\"name\":\"鹿泉区\"},{\"code\":\"130111\",\"name\":\"栾城区\"},{\"code\":\"130121\",\"name\":\"井陉县\"},{\"code\":\"130123\",\"name\":\"正定县\"},{\"code\":\"130125\",\"name\":\"行唐县\"},{\"code\":\"130126\",\"name\":\"灵寿县\"},{\"code\":\"130127\",\"name\":\"高邑县\"},{\"code\":\"130128\",\"name\":\"深泽县\"},{\"code\":\"130129\",\"name\":\"赞皇县\"},{\"code\":\"130130\",\"name\":\"无极县\"},{\"code\":\"130131\",\"name\":\"平山县\"},{\"code\":\"130132\",\"name\":\"元氏县\"},{\"code\":\"130133\",\"name\":\"赵县\"},{\"code\":\"130183\",\"name\":\"晋州市\"},{\"code\":\"130184\",\"name\":\"新乐市\"}]},{\"code\":\"1302\",\"name\":\"唐山市\",\"childs\":[{\"code\":\"130202\",\"name\":\"路南区\"},{\"code\":\"130203\",\"name\":\"路北区\"},{\"code\":\"130204\",\"name\":\"古冶区\"},{\"code\":\"130205\",\"name\":\"开平区\"},{\"code\":\"130207\",\"name\":\"丰南区\"},{\"code\":\"130208\",\"name\":\"丰润区\"},{\"code\":\"130209\",\"name\":\"曹妃甸区\"},{\"code\":\"130223\",\"name\":\"滦县\"},{\"code\":\"130224\",\"name\":\"滦南县\"},{\"code\":\"130225\",\"name\":\"乐亭县\"},{\"code\":\"130227\",\"name\":\"迁西县\"},{\"code\":\"130229\",\"name\":\"玉田县\"},{\"code\":\"130281\",\"name\":\"遵化市\"},{\"code\":\"130283\",\"name\":\"迁安市\"}]},{\"code\":\"1303\",\"name\":\"秦皇岛市\",\"childs\":[{\"code\":\"130302\",\"name\":\"海港区\"},{\"code\":\"130303\",\"name\":\"山海关区\"},{\"code\":\"130304\",\"name\":\"北戴河区\"},{\"code\":\"130306\",\"name\":\"抚宁区\"},{\"code\":\"130321\",\"name\":\"青龙满族自治县\"},{\"code\":\"130322\",\"name\":\"昌黎县\"},{\"code\":\"130324\",\"name\":\"卢龙县\"}]},{\"code\":\"1304\",\"name\":\"邯郸市\",\"childs\":[{\"code\":\"130402\",\"name\":\"邯山区\"},{\"code\":\"130403\",\"name\":\"丛台区\"},{\"code\":\"130404\",\"name\":\"复兴区\"},{\"code\":\"130406\",\"name\":\"峰峰矿区\"},{\"code\":\"130421\",\"name\":\"邯郸县\"},{\"code\":\"130423\",\"name\":\"临漳县\"},{\"code\":\"130424\",\"name\":\"成安县\"},{\"code\":\"130425\",\"name\":\"大名县\"},{\"code\":\"130426\",\"name\":\"涉县\"},{\"code\":\"130427\",\"name\":\"磁县\"},{\"code\":\"130428\",\"name\":\"肥乡县\"},{\"code\":\"130429\",\"name\":\"永年县\"},{\"code\":\"130430\",\"name\":\"邱县\"},{\"code\":\"130431\",\"name\":\"鸡泽县\"},{\"code\":\"130432\",\"name\":\"广平县\"},{\"code\":\"130433\",\"name\":\"馆陶县\"},{\"code\":\"130434\",\"name\":\"魏县\"},{\"code\":\"130435\",\"name\":\"曲周县\"},{\"code\":\"130481\",\"name\":\"武安市\"}]},{\"code\":\"1305\",\"name\":\"邢台市\",\"childs\":[{\"code\":\"130502\",\"name\":\"桥东区\"},{\"code\":\"130503\",\"name\":\"桥西区\"},{\"code\":\"130521\",\"name\":\"邢台县\"},{\"code\":\"130522\",\"name\":\"临城县\"},{\"code\":\"130523\",\"name\":\"内丘县\"},{\"code\":\"130524\",\"name\":\"柏乡县\"},{\"code\":\"130525\",\"name\":\"隆尧县\"},{\"code\":\"130526\",\"name\":\"任县\"},{\"code\":\"130527\",\"name\":\"南和县\"},{\"code\":\"130528\",\"name\":\"宁晋县\"},{\"code\":\"130529\",\"name\":\"巨鹿县\"},{\"code\":\"130530\",\"name\":\"新河县\"},{\"code\":\"130531\",\"name\":\"广宗县\"},{\"code\":\"130532\",\"name\":\"平乡县\"},{\"code\":\"130533\",\"name\":\"威县\"},{\"code\":\"130534\",\"name\":\"清河县\"},{\"code\":\"130535\",\"name\":\"临西县\"},{\"code\":\"130581\",\"name\":\"南宫市\"},{\"code\":\"130582\",\"name\":\"沙河市\"}]},{\"code\":\"1306\",\"name\":\"保定市\",\"childs\":[{\"code\":\"130602\",\"name\":\"竞秀区\"},{\"code\":\"130606\",\"name\":\"莲池区\"},{\"code\":\"130607\",\"name\":\"满城区\"},{\"code\":\"130608\",\"name\":\"清苑区\"},{\"code\":\"130609\",\"name\":\"徐水区\"},{\"code\":\"130623\",\"name\":\"涞水县\"},{\"code\":\"130624\",\"name\":\"阜平县\"},{\"code\":\"130626\",\"name\":\"定兴县\"},{\"code\":\"130627\",\"name\":\"唐县\"},{\"code\":\"130628\",\"name\":\"高阳县\"},{\"code\":\"130629\",\"name\":\"容城县\"},{\"code\":\"130630\",\"name\":\"涞源县\"},{\"code\":\"130631\",\"name\":\"望都县\"},{\"code\":\"130632\",\"name\":\"安新县\"},{\"code\":\"130633\",\"name\":\"易县\"},{\"code\":\"130634\",\"name\":\"曲阳县\"},{\"code\":\"130635\",\"name\":\"蠡县\"},{\"code\":\"130636\",\"name\":\"顺平县\"},{\"code\":\"130637\",\"name\":\"博野县\"},{\"code\":\"130638\",\"name\":\"雄县\"},{\"code\":\"130681\",\"name\":\"涿州市\"},{\"code\":\"130683\",\"name\":\"安国市\"},{\"code\":\"130684\",\"name\":\"高碑店市\"}]},{\"code\":\"1307\",\"name\":\"张家口市\",\"childs\":[{\"code\":\"130702\",\"name\":\"桥东区\"},{\"code\":\"130703\",\"name\":\"桥西区\"},{\"code\":\"130705\",\"name\":\"宣化区\"},{\"code\":\"130706\",\"name\":\"下花园区\"},{\"code\":\"130708\",\"name\":\"万全区\"},{\"code\":\"130709\",\"name\":\"崇礼区\"},{\"code\":\"130722\",\"name\":\"张北县\"},{\"code\":\"130723\",\"name\":\"康保县\"},{\"code\":\"130724\",\"name\":\"沽源县\"},{\"code\":\"130725\",\"name\":\"尚义县\"},{\"code\":\"130726\",\"name\":\"蔚县\"},{\"code\":\"130727\",\"name\":\"阳原县\"},{\"code\":\"130728\",\"name\":\"怀安县\"},{\"code\":\"130730\",\"name\":\"怀来县\"},{\"code\":\"130731\",\"name\":\"涿鹿县\"},{\"code\":\"130732\",\"name\":\"赤城县\"}]},{\"code\":\"1308\",\"name\":\"承德市\",\"childs\":[{\"code\":\"130802\",\"name\":\"双桥区\"},{\"code\":\"130803\",\"name\":\"双滦区\"},{\"code\":\"130804\",\"name\":\"鹰手营子矿区\"},{\"code\":\"130821\",\"name\":\"承德县\"},{\"code\":\"130822\",\"name\":\"兴隆县\"},{\"code\":\"130823\",\"name\":\"平泉县\"},{\"code\":\"130824\",\"name\":\"滦平县\"},{\"code\":\"130825\",\"name\":\"隆化县\"},{\"code\":\"130826\",\"name\":\"丰宁满族自治县\"},{\"code\":\"130827\",\"name\":\"宽城满族自治县\"},{\"code\":\"130828\",\"name\":\"围场满族蒙古族自治县\"}]},{\"code\":\"1309\",\"name\":\"沧州市\",\"childs\":[{\"code\":\"130902\",\"name\":\"新华区\"},{\"code\":\"130903\",\"name\":\"运河区\"},{\"code\":\"130921\",\"name\":\"沧县\"},{\"code\":\"130922\",\"name\":\"青县\"},{\"code\":\"130923\",\"name\":\"东光县\"},{\"code\":\"130924\",\"name\":\"海兴县\"},{\"code\":\"130925\",\"name\":\"盐山县\"},{\"code\":\"130926\",\"name\":\"肃宁县\"},{\"code\":\"130927\",\"name\":\"南皮县\"},{\"code\":\"130928\",\"name\":\"吴桥县\"},{\"code\":\"130929\",\"name\":\"献县\"},{\"code\":\"130930\",\"name\":\"孟村回族自治县\"},{\"code\":\"130981\",\"name\":\"泊头市\"},{\"code\":\"130982\",\"name\":\"任丘市\"},{\"code\":\"130983\",\"name\":\"黄骅市\"},{\"code\":\"130984\",\"name\":\"河间市\"}]},{\"code\":\"1310\",\"name\":\"廊坊市\",\"childs\":[{\"code\":\"131002\",\"name\":\"安次区\"},{\"code\":\"131003\",\"name\":\"广阳区\"},{\"code\":\"131022\",\"name\":\"固安县\"},{\"code\":\"131023\",\"name\":\"永清县\"},{\"code\":\"131024\",\"name\":\"香河县\"},{\"code\":\"131025\",\"name\":\"大城县\"},{\"code\":\"131026\",\"name\":\"文安县\"},{\"code\":\"131028\",\"name\":\"大厂回族自治县\"},{\"code\":\"131081\",\"name\":\"霸州市\"},{\"code\":\"131082\",\"name\":\"三河市\"}]},{\"code\":\"1311\",\"name\":\"衡水市\",\"childs\":[{\"code\":\"131102\",\"name\":\"桃城区\"},{\"code\":\"131103\",\"name\":\"冀州区\"},{\"code\":\"131121\",\"name\":\"枣强县\"},{\"code\":\"131122\",\"name\":\"武邑县\"},{\"code\":\"131123\",\"name\":\"武强县\"},{\"code\":\"131124\",\"name\":\"饶阳县\"},{\"code\":\"131125\",\"name\":\"安平县\"},{\"code\":\"131126\",\"name\":\"故城县\"},{\"code\":\"131127\",\"name\":\"景县\"},{\"code\":\"131128\",\"name\":\"阜城县\"},{\"code\":\"131182\",\"name\":\"深州市\"}]},{\"code\":\"1390\",\"name\":\"省直辖县级行政区划\",\"childs\":[{\"code\":\"139001\",\"name\":\"定州市\"},{\"code\":\"139002\",\"name\":\"辛集市\"}]}]},{\"code\":\"14\",\"name\":\"山西省\",\"childs\":[{\"code\":\"1401\",\"name\":\"太原市\",\"childs\":[{\"code\":\"140105\",\"name\":\"小店区\"},{\"code\":\"140106\",\"name\":\"迎泽区\"},{\"code\":\"140107\",\"name\":\"杏花岭区\"},{\"code\":\"140108\",\"name\":\"尖草坪区\"},{\"code\":\"140109\",\"name\":\"万柏林区\"},{\"code\":\"140110\",\"name\":\"晋源区\"},{\"code\":\"140121\",\"name\":\"清徐县\"},{\"code\":\"140122\",\"name\":\"阳曲县\"},{\"code\":\"140123\",\"name\":\"娄烦县\"},{\"code\":\"140181\",\"name\":\"古交市\"}]},{\"code\":\"1402\",\"name\":\"大同市\",\"childs\":[{\"code\":\"140202\",\"name\":\"城区\"},{\"code\":\"140203\",\"name\":\"矿区\"},{\"code\":\"140211\",\"name\":\"南郊区\"},{\"code\":\"140212\",\"name\":\"新荣区\"},{\"code\":\"140221\",\"name\":\"阳高县\"},{\"code\":\"140222\",\"name\":\"天镇县\"},{\"code\":\"140223\",\"name\":\"广灵县\"},{\"code\":\"140224\",\"name\":\"灵丘县\"},{\"code\":\"140225\",\"name\":\"浑源县\"},{\"code\":\"140226\",\"name\":\"左云县\"},{\"code\":\"140227\",\"name\":\"大同县\"}]},{\"code\":\"1403\",\"name\":\"阳泉市\",\"childs\":[{\"code\":\"140302\",\"name\":\"城区\"},{\"code\":\"140303\",\"name\":\"矿区\"},{\"code\":\"140311\",\"name\":\"郊区\"},{\"code\":\"140321\",\"name\":\"平定县\"},{\"code\":\"140322\",\"name\":\"盂县\"}]},{\"code\":\"1404\",\"name\":\"长治市\",\"childs\":[{\"code\":\"140402\",\"name\":\"城区\"},{\"code\":\"140411\",\"name\":\"郊区\"},{\"code\":\"140421\",\"name\":\"长治县\"},{\"code\":\"140423\",\"name\":\"襄垣县\"},{\"code\":\"140424\",\"name\":\"屯留县\"},{\"code\":\"140425\",\"name\":\"平顺县\"},{\"code\":\"140426\",\"name\":\"黎城县\"},{\"code\":\"140427\",\"name\":\"壶关县\"},{\"code\":\"140428\",\"name\":\"长子县\"},{\"code\":\"140429\",\"name\":\"武乡县\"},{\"code\":\"140430\",\"name\":\"沁县\"},{\"code\":\"140431\",\"name\":\"沁源县\"},{\"code\":\"140481\",\"name\":\"潞城市\"}]},{\"code\":\"1405\",\"name\":\"晋城市\",\"childs\":[{\"code\":\"140502\",\"name\":\"城区\"},{\"code\":\"140521\",\"name\":\"沁水县\"},{\"code\":\"140522\",\"name\":\"阳城县\"},{\"code\":\"140524\",\"name\":\"陵川县\"},{\"code\":\"140525\",\"name\":\"泽州县\"},{\"code\":\"140581\",\"name\":\"高平市\"}]},{\"code\":\"1406\",\"name\":\"朔州市\",\"childs\":[{\"code\":\"140602\",\"name\":\"朔城区\"},{\"code\":\"140603\",\"name\":\"平鲁区\"},{\"code\":\"140621\",\"name\":\"山阴县\"},{\"code\":\"140622\",\"name\":\"应县\"},{\"code\":\"140623\",\"name\":\"右玉县\"},{\"code\":\"140624\",\"name\":\"怀仁县\"}]},{\"code\":\"1407\",\"name\":\"晋中市\",\"childs\":[{\"code\":\"140702\",\"name\":\"榆次区\"},{\"code\":\"140721\",\"name\":\"榆社县\"},{\"code\":\"140722\",\"name\":\"左权县\"},{\"code\":\"140723\",\"name\":\"和顺县\"},{\"code\":\"140724\",\"name\":\"昔阳县\"},{\"code\":\"140725\",\"name\":\"寿阳县\"},{\"code\":\"140726\",\"name\":\"太谷县\"},{\"code\":\"140727\",\"name\":\"祁县\"},{\"code\":\"140728\",\"name\":\"平遥县\"},{\"code\":\"140729\",\"name\":\"灵石县\"},{\"code\":\"140781\",\"name\":\"介休市\"}]},{\"code\":\"1408\",\"name\":\"运城市\",\"childs\":[{\"code\":\"140802\",\"name\":\"盐湖区\"},{\"code\":\"140821\",\"name\":\"临猗县\"},{\"code\":\"140822\",\"name\":\"万荣县\"},{\"code\":\"140823\",\"name\":\"闻喜县\"},{\"code\":\"140824\",\"name\":\"稷山县\"},{\"code\":\"140825\",\"name\":\"新绛县\"},{\"code\":\"140826\",\"name\":\"绛县\"},{\"code\":\"140827\",\"name\":\"垣曲县\"},{\"code\":\"140828\",\"name\":\"夏县\"},{\"code\":\"140829\",\"name\":\"平陆县\"},{\"code\":\"140830\",\"name\":\"芮城县\"},{\"code\":\"140881\",\"name\":\"永济市\"},{\"code\":\"140882\",\"name\":\"河津市\"}]},{\"code\":\"1409\",\"name\":\"忻州市\",\"childs\":[{\"code\":\"140902\",\"name\":\"忻府区\"},{\"code\":\"140921\",\"name\":\"定襄县\"},{\"code\":\"140922\",\"name\":\"五台县\"},{\"code\":\"140923\",\"name\":\"代县\"},{\"code\":\"140924\",\"name\":\"繁峙县\"},{\"code\":\"140925\",\"name\":\"宁武县\"},{\"code\":\"140926\",\"name\":\"静乐县\"},{\"code\":\"140927\",\"name\":\"神池县\"},{\"code\":\"140928\",\"name\":\"五寨县\"},{\"code\":\"140929\",\"name\":\"岢岚县\"},{\"code\":\"140930\",\"name\":\"河曲县\"},{\"code\":\"140931\",\"name\":\"保德县\"},{\"code\":\"140932\",\"name\":\"偏关县\"},{\"code\":\"140981\",\"name\":\"原平市\"}]},{\"code\":\"1410\",\"name\":\"临汾市\",\"childs\":[{\"code\":\"141002\",\"name\":\"尧都区\"},{\"code\":\"141021\",\"name\":\"曲沃县\"},{\"code\":\"141022\",\"name\":\"翼城县\"},{\"code\":\"141023\",\"name\":\"襄汾县\"},{\"code\":\"141024\",\"name\":\"洪洞县\"},{\"code\":\"141025\",\"name\":\"古县\"},{\"code\":\"141026\",\"name\":\"安泽县\"},{\"code\":\"141027\",\"name\":\"浮山县\"},{\"code\":\"141028\",\"name\":\"吉县\"},{\"code\":\"141029\",\"name\":\"乡宁县\"},{\"code\":\"141030\",\"name\":\"大宁县\"},{\"code\":\"141031\",\"name\":\"隰县\"},{\"code\":\"141032\",\"name\":\"永和县\"},{\"code\":\"141033\",\"name\":\"蒲县\"},{\"code\":\"141034\",\"name\":\"汾西县\"},{\"code\":\"141081\",\"name\":\"侯马市\"},{\"code\":\"141082\",\"name\":\"霍州市\"}]},{\"code\":\"1411\",\"name\":\"吕梁市\",\"childs\":[{\"code\":\"141102\",\"name\":\"离石区\"},{\"code\":\"141121\",\"name\":\"文水县\"},{\"code\":\"141122\",\"name\":\"交城县\"},{\"code\":\"141123\",\"name\":\"兴县\"},{\"code\":\"141124\",\"name\":\"临县\"},{\"code\":\"141125\",\"name\":\"柳林县\"},{\"code\":\"141126\",\"name\":\"石楼县\"},{\"code\":\"141127\",\"name\":\"岚县\"},{\"code\":\"141128\",\"name\":\"方山县\"},{\"code\":\"141129\",\"name\":\"中阳县\"},{\"code\":\"141130\",\"name\":\"交口县\"},{\"code\":\"141181\",\"name\":\"孝义市\"},{\"code\":\"141182\",\"name\":\"汾阳市\"}]}]},{\"code\":\"15\",\"name\":\"内蒙古自治区\",\"childs\":[{\"code\":\"1501\",\"name\":\"呼和浩特市\",\"childs\":[{\"code\":\"150102\",\"name\":\"新城区\"},{\"code\":\"150103\",\"name\":\"回民区\"},{\"code\":\"150104\",\"name\":\"玉泉区\"},{\"code\":\"150105\",\"name\":\"赛罕区\"},{\"code\":\"150121\",\"name\":\"土默特左旗\"},{\"code\":\"150122\",\"name\":\"托克托县\"},{\"code\":\"150123\",\"name\":\"和林格尔县\"},{\"code\":\"150124\",\"name\":\"清水河县\"},{\"code\":\"150125\",\"name\":\"武川县\"}]},{\"code\":\"1502\",\"name\":\"包头市\",\"childs\":[{\"code\":\"150202\",\"name\":\"东河区\"},{\"code\":\"150203\",\"name\":\"昆都仑区\"},{\"code\":\"150204\",\"name\":\"青山区\"},{\"code\":\"150205\",\"name\":\"石拐区\"},{\"code\":\"150206\",\"name\":\"白云鄂博矿区\"},{\"code\":\"150207\",\"name\":\"九原区\"},{\"code\":\"150221\",\"name\":\"土默特右旗\"},{\"code\":\"150222\",\"name\":\"固阳县\"},{\"code\":\"150223\",\"name\":\"达尔罕茂明安联合旗\"}]},{\"code\":\"1503\",\"name\":\"乌海市\",\"childs\":[{\"code\":\"150302\",\"name\":\"海勃湾区\"},{\"code\":\"150303\",\"name\":\"海南区\"},{\"code\":\"150304\",\"name\":\"乌达区\"}]},{\"code\":\"1504\",\"name\":\"赤峰市\",\"childs\":[{\"code\":\"150402\",\"name\":\"红山区\"},{\"code\":\"150403\",\"name\":\"元宝山区\"},{\"code\":\"150404\",\"name\":\"松山区\"},{\"code\":\"150421\",\"name\":\"阿鲁科尔沁旗\"},{\"code\":\"150422\",\"name\":\"巴林左旗\"},{\"code\":\"150423\",\"name\":\"巴林右旗\"},{\"code\":\"150424\",\"name\":\"林西县\"},{\"code\":\"150425\",\"name\":\"克什克腾旗\"},{\"code\":\"150426\",\"name\":\"翁牛特旗\"},{\"code\":\"150428\",\"name\":\"喀喇沁旗\"},{\"code\":\"150429\",\"name\":\"宁城县\"},{\"code\":\"150430\",\"name\":\"敖汉旗\"}]},{\"code\":\"1505\",\"name\":\"通辽市\",\"childs\":[{\"code\":\"150502\",\"name\":\"科尔沁区\"},{\"code\":\"150521\",\"name\":\"科尔沁左翼中旗\"},{\"code\":\"150522\",\"name\":\"科尔沁左翼后旗\"},{\"code\":\"150523\",\"name\":\"开鲁县\"},{\"code\":\"150524\",\"name\":\"库伦旗\"},{\"code\":\"150525\",\"name\":\"奈曼旗\"},{\"code\":\"150526\",\"name\":\"扎鲁特旗\"},{\"code\":\"150581\",\"name\":\"霍林郭勒市\"}]},{\"code\":\"1506\",\"name\":\"鄂尔多斯市\",\"childs\":[{\"code\":\"150602\",\"name\":\"东胜区\"},{\"code\":\"150603\",\"name\":\"康巴什区\"},{\"code\":\"150621\",\"name\":\"达拉特旗\"},{\"code\":\"150622\",\"name\":\"准格尔旗\"},{\"code\":\"150623\",\"name\":\"鄂托克前旗\"},{\"code\":\"150624\",\"name\":\"鄂托克旗\"},{\"code\":\"150625\",\"name\":\"杭锦旗\"},{\"code\":\"150626\",\"name\":\"乌审旗\"},{\"code\":\"150627\",\"name\":\"伊金霍洛旗\"}]},{\"code\":\"1507\",\"name\":\"呼伦贝尔市\",\"childs\":[{\"code\":\"150702\",\"name\":\"海拉尔区\"},{\"code\":\"150703\",\"name\":\"扎赉诺尔区\"},{\"code\":\"150721\",\"name\":\"阿荣旗\"},{\"code\":\"150722\",\"name\":\"莫力达瓦达斡尔族自治旗\"},{\"code\":\"150723\",\"name\":\"鄂伦春自治旗\"},{\"code\":\"150724\",\"name\":\"鄂温克族自治旗\"},{\"code\":\"150725\",\"name\":\"陈巴尔虎旗\"},{\"code\":\"150726\",\"name\":\"新巴尔虎左旗\"},{\"code\":\"150727\",\"name\":\"新巴尔虎右旗\"},{\"code\":\"150781\",\"name\":\"满洲里市\"},{\"code\":\"150782\",\"name\":\"牙克石市\"},{\"code\":\"150783\",\"name\":\"扎兰屯市\"},{\"code\":\"150784\",\"name\":\"额尔古纳市\"},{\"code\":\"150785\",\"name\":\"根河市\"}]},{\"code\":\"1508\",\"name\":\"巴彦淖尔市\",\"childs\":[{\"code\":\"150802\",\"name\":\"临河区\"},{\"code\":\"150821\",\"name\":\"五原县\"},{\"code\":\"150822\",\"name\":\"磴口县\"},{\"code\":\"150823\",\"name\":\"乌拉特前旗\"},{\"code\":\"150824\",\"name\":\"乌拉特中旗\"},{\"code\":\"150825\",\"name\":\"乌拉特后旗\"},{\"code\":\"150826\",\"name\":\"杭锦后旗\"}]},{\"code\":\"1509\",\"name\":\"乌兰察布市\",\"childs\":[{\"code\":\"150902\",\"name\":\"集宁区\"},{\"code\":\"150921\",\"name\":\"卓资县\"},{\"code\":\"150922\",\"name\":\"化德县\"},{\"code\":\"150923\",\"name\":\"商都县\"},{\"code\":\"150924\",\"name\":\"兴和县\"},{\"code\":\"150925\",\"name\":\"凉城县\"},{\"code\":\"150926\",\"name\":\"察哈尔右翼前旗\"},{\"code\":\"150927\",\"name\":\"察哈尔右翼中旗\"},{\"code\":\"150928\",\"name\":\"察哈尔右翼后旗\"},{\"code\":\"150929\",\"name\":\"四子王旗\"},{\"code\":\"150981\",\"name\":\"丰镇市\"}]},{\"code\":\"1522\",\"name\":\"兴安盟\",\"childs\":[{\"code\":\"152201\",\"name\":\"乌兰浩特市\"},{\"code\":\"152202\",\"name\":\"阿尔山市\"},{\"code\":\"152221\",\"name\":\"科尔沁右翼前旗\"},{\"code\":\"152222\",\"name\":\"科尔沁右翼中旗\"},{\"code\":\"152223\",\"name\":\"扎赉特旗\"},{\"code\":\"152224\",\"name\":\"突泉县\"}]},{\"code\":\"1525\",\"name\":\"锡林郭勒盟\",\"childs\":[{\"code\":\"152501\",\"name\":\"二连浩特市\"},{\"code\":\"152502\",\"name\":\"锡林浩特市\"},{\"code\":\"152522\",\"name\":\"阿巴嘎旗\"},{\"code\":\"152523\",\"name\":\"苏尼特左旗\"},{\"code\":\"152524\",\"name\":\"苏尼特右旗\"},{\"code\":\"152525\",\"name\":\"东乌珠穆沁旗\"},{\"code\":\"152526\",\"name\":\"西乌珠穆沁旗\"},{\"code\":\"152527\",\"name\":\"太仆寺旗\"},{\"code\":\"152528\",\"name\":\"镶黄旗\"},{\"code\":\"152529\",\"name\":\"正镶白旗\"},{\"code\":\"152530\",\"name\":\"正蓝旗\"},{\"code\":\"152531\",\"name\":\"多伦县\"}]},{\"code\":\"1529\",\"name\":\"阿拉善盟\",\"childs\":[{\"code\":\"152921\",\"name\":\"阿拉善左旗\"},{\"code\":\"152922\",\"name\":\"阿拉善右旗\"},{\"code\":\"152923\",\"name\":\"额济纳旗\"}]}]},{\"code\":\"21\",\"name\":\"辽宁省\",\"childs\":[{\"code\":\"2101\",\"name\":\"沈阳市\",\"childs\":[{\"code\":\"210102\",\"name\":\"和平区\"},{\"code\":\"210103\",\"name\":\"沈河区\"},{\"code\":\"210104\",\"name\":\"大东区\"},{\"code\":\"210105\",\"name\":\"皇姑区\"},{\"code\":\"210106\",\"name\":\"铁西区\"},{\"code\":\"210111\",\"name\":\"苏家屯区\"},{\"code\":\"210112\",\"name\":\"浑南区\"},{\"code\":\"210113\",\"name\":\"沈北新区\"},{\"code\":\"210114\",\"name\":\"于洪区\"},{\"code\":\"210115\",\"name\":\"辽中区\"},{\"code\":\"210123\",\"name\":\"康平县\"},{\"code\":\"210124\",\"name\":\"法库县\"},{\"code\":\"210181\",\"name\":\"新民市\"}]},{\"code\":\"2102\",\"name\":\"大连市\",\"childs\":[{\"code\":\"210202\",\"name\":\"中山区\"},{\"code\":\"210203\",\"name\":\"西岗区\"},{\"code\":\"210204\",\"name\":\"沙河口区\"},{\"code\":\"210211\",\"name\":\"甘井子区\"},{\"code\":\"210212\",\"name\":\"旅顺口区\"},{\"code\":\"210213\",\"name\":\"金州区\"},{\"code\":\"210214\",\"name\":\"普兰店区\"},{\"code\":\"210224\",\"name\":\"长海县\"},{\"code\":\"210281\",\"name\":\"瓦房店市\"},{\"code\":\"210283\",\"name\":\"庄河市\"}]},{\"code\":\"2103\",\"name\":\"鞍山市\",\"childs\":[{\"code\":\"210302\",\"name\":\"铁东区\"},{\"code\":\"210303\",\"name\":\"铁西区\"},{\"code\":\"210304\",\"name\":\"立山区\"},{\"code\":\"210311\",\"name\":\"千山区\"},{\"code\":\"210321\",\"name\":\"台安县\"},{\"code\":\"210323\",\"name\":\"岫岩满族自治县\"},{\"code\":\"210381\",\"name\":\"海城市\"}]},{\"code\":\"2104\",\"name\":\"抚顺市\",\"childs\":[{\"code\":\"210402\",\"name\":\"新抚区\"},{\"code\":\"210403\",\"name\":\"东洲区\"},{\"code\":\"210404\",\"name\":\"望花区\"},{\"code\":\"210411\",\"name\":\"顺城区\"},{\"code\":\"210421\",\"name\":\"抚顺县\"},{\"code\":\"210422\",\"name\":\"新宾满族自治县\"},{\"code\":\"210423\",\"name\":\"清原满族自治县\"}]},{\"code\":\"2105\",\"name\":\"本溪市\",\"childs\":[{\"code\":\"210502\",\"name\":\"平山区\"},{\"code\":\"210503\",\"name\":\"溪湖区\"},{\"code\":\"210504\",\"name\":\"明山区\"},{\"code\":\"210505\",\"name\":\"南芬区\"},{\"code\":\"210521\",\"name\":\"本溪满族自治县\"},{\"code\":\"210522\",\"name\":\"桓仁满族自治县\"}]},{\"code\":\"2106\",\"name\":\"丹东市\",\"childs\":[{\"code\":\"210602\",\"name\":\"元宝区\"},{\"code\":\"210603\",\"name\":\"振兴区\"},{\"code\":\"210604\",\"name\":\"振安区\"},{\"code\":\"210624\",\"name\":\"宽甸满族自治县\"},{\"code\":\"210681\",\"name\":\"东港市\"},{\"code\":\"210682\",\"name\":\"凤城市\"}]},{\"code\":\"2107\",\"name\":\"锦州市\",\"childs\":[{\"code\":\"210702\",\"name\":\"古塔区\"},{\"code\":\"210703\",\"name\":\"凌河区\"},{\"code\":\"210711\",\"name\":\"太和区\"},{\"code\":\"210726\",\"name\":\"黑山县\"},{\"code\":\"210727\",\"name\":\"义县\"},{\"code\":\"210781\",\"name\":\"凌海市\"},{\"code\":\"210782\",\"name\":\"北镇市\"}]},{\"code\":\"2108\",\"name\":\"营口市\",\"childs\":[{\"code\":\"210802\",\"name\":\"站前区\"},{\"code\":\"210803\",\"name\":\"西市区\"},{\"code\":\"210804\",\"name\":\"鲅鱼圈区\"},{\"code\":\"210811\",\"name\":\"老边区\"},{\"code\":\"210881\",\"name\":\"盖州市\"},{\"code\":\"210882\",\"name\":\"大石桥市\"}]},{\"code\":\"2109\",\"name\":\"阜新市\",\"childs\":[{\"code\":\"210902\",\"name\":\"海州区\"},{\"code\":\"210903\",\"name\":\"新邱区\"},{\"code\":\"210904\",\"name\":\"太平区\"},{\"code\":\"210905\",\"name\":\"清河门区\"},{\"code\":\"210911\",\"name\":\"细河区\"},{\"code\":\"210921\",\"name\":\"阜新蒙古族自治县\"},{\"code\":\"210922\",\"name\":\"彰武县\"}]},{\"code\":\"2110\",\"name\":\"辽阳市\",\"childs\":[{\"code\":\"211002\",\"name\":\"白塔区\"},{\"code\":\"211003\",\"name\":\"文圣区\"},{\"code\":\"211004\",\"name\":\"宏伟区\"},{\"code\":\"211005\",\"name\":\"弓长岭区\"},{\"code\":\"211011\",\"name\":\"太子河区\"},{\"code\":\"211021\",\"name\":\"辽阳县\"},{\"code\":\"211081\",\"name\":\"灯塔市\"}]},{\"code\":\"2111\",\"name\":\"盘锦市\",\"childs\":[{\"code\":\"211102\",\"name\":\"双台子区\"},{\"code\":\"211103\",\"name\":\"兴隆台区\"},{\"code\":\"211104\",\"name\":\"大洼区\"},{\"code\":\"211122\",\"name\":\"盘山县\"}]},{\"code\":\"2112\",\"name\":\"铁岭市\",\"childs\":[{\"code\":\"211202\",\"name\":\"银州区\"},{\"code\":\"211204\",\"name\":\"清河区\"},{\"code\":\"211221\",\"name\":\"铁岭县\"},{\"code\":\"211223\",\"name\":\"西丰县\"},{\"code\":\"211224\",\"name\":\"昌图县\"},{\"code\":\"211281\",\"name\":\"调兵山市\"},{\"code\":\"211282\",\"name\":\"开原市\"}]},{\"code\":\"2113\",\"name\":\"朝阳市\",\"childs\":[{\"code\":\"211302\",\"name\":\"双塔区\"},{\"code\":\"211303\",\"name\":\"龙城区\"},{\"code\":\"211321\",\"name\":\"朝阳县\"},{\"code\":\"211322\",\"name\":\"建平县\"},{\"code\":\"211324\",\"name\":\"喀喇沁左翼蒙古族自治县\"},{\"code\":\"211381\",\"name\":\"北票市\"},{\"code\":\"211382\",\"name\":\"凌源市\"}]},{\"code\":\"2114\",\"name\":\"葫芦岛市\",\"childs\":[{\"code\":\"211402\",\"name\":\"连山区\"},{\"code\":\"211403\",\"name\":\"龙港区\"},{\"code\":\"211404\",\"name\":\"南票区\"},{\"code\":\"211421\",\"name\":\"绥中县\"},{\"code\":\"211422\",\"name\":\"建昌县\"},{\"code\":\"211481\",\"name\":\"兴城市\"}]}]},{\"code\":\"22\",\"name\":\"吉林省\",\"childs\":[{\"code\":\"2201\",\"name\":\"长春市\",\"childs\":[{\"code\":\"220102\",\"name\":\"南关区\"},{\"code\":\"220103\",\"name\":\"宽城区\"},{\"code\":\"220104\",\"name\":\"朝阳区\"},{\"code\":\"220105\",\"name\":\"二道区\"},{\"code\":\"220106\",\"name\":\"绿园区\"},{\"code\":\"220112\",\"name\":\"双阳区\"},{\"code\":\"220113\",\"name\":\"九台区\"},{\"code\":\"220122\",\"name\":\"农安县\"},{\"code\":\"220182\",\"name\":\"榆树市\"},{\"code\":\"220183\",\"name\":\"德惠市\"}]},{\"code\":\"2202\",\"name\":\"吉林市\",\"childs\":[{\"code\":\"220202\",\"name\":\"昌邑区\"},{\"code\":\"220203\",\"name\":\"龙潭区\"},{\"code\":\"220204\",\"name\":\"船营区\"},{\"code\":\"220211\",\"name\":\"丰满区\"},{\"code\":\"220221\",\"name\":\"永吉县\"},{\"code\":\"220281\",\"name\":\"蛟河市\"},{\"code\":\"220282\",\"name\":\"桦甸市\"},{\"code\":\"220283\",\"name\":\"舒兰市\"},{\"code\":\"220284\",\"name\":\"磐石市\"}]},{\"code\":\"2203\",\"name\":\"四平市\",\"childs\":[{\"code\":\"220302\",\"name\":\"铁西区\"},{\"code\":\"220303\",\"name\":\"铁东区\"},{\"code\":\"220322\",\"name\":\"梨树县\"},{\"code\":\"220323\",\"name\":\"伊通满族自治县\"},{\"code\":\"220381\",\"name\":\"公主岭市\"},{\"code\":\"220382\",\"name\":\"双辽市\"}]},{\"code\":\"2204\",\"name\":\"辽源市\",\"childs\":[{\"code\":\"220402\",\"name\":\"龙山区\"},{\"code\":\"220403\",\"name\":\"西安区\"},{\"code\":\"220421\",\"name\":\"东丰县\"},{\"code\":\"220422\",\"name\":\"东辽县\"}]},{\"code\":\"2205\",\"name\":\"通化市\",\"childs\":[{\"code\":\"220502\",\"name\":\"东昌区\"},{\"code\":\"220503\",\"name\":\"二道江区\"},{\"code\":\"220521\",\"name\":\"通化县\"},{\"code\":\"220523\",\"name\":\"辉南县\"},{\"code\":\"220524\",\"name\":\"柳河县\"},{\"code\":\"220581\",\"name\":\"梅河口市\"},{\"code\":\"220582\",\"name\":\"集安市\"}]},{\"code\":\"2206\",\"name\":\"白山市\",\"childs\":[{\"code\":\"220602\",\"name\":\"浑江区\"},{\"code\":\"220605\",\"name\":\"江源区\"},{\"code\":\"220621\",\"name\":\"抚松县\"},{\"code\":\"220622\",\"name\":\"靖宇县\"},{\"code\":\"220623\",\"name\":\"长白朝鲜族自治县\"},{\"code\":\"220681\",\"name\":\"临江市\"}]},{\"code\":\"2207\",\"name\":\"松原市\",\"childs\":[{\"code\":\"220702\",\"name\":\"宁江区\"},{\"code\":\"220721\",\"name\":\"前郭尔罗斯蒙古族自治县\"},{\"code\":\"220722\",\"name\":\"长岭县\"},{\"code\":\"220723\",\"name\":\"乾安县\"},{\"code\":\"220781\",\"name\":\"扶余市\"}]},{\"code\":\"2208\",\"name\":\"白城市\",\"childs\":[{\"code\":\"220802\",\"name\":\"洮北区\"},{\"code\":\"220821\",\"name\":\"镇赉县\"},{\"code\":\"220822\",\"name\":\"通榆县\"},{\"code\":\"220881\",\"name\":\"洮南市\"},{\"code\":\"220882\",\"name\":\"大安市\"}]},{\"code\":\"2224\",\"name\":\"延边朝鲜族自治州\",\"childs\":[{\"code\":\"222401\",\"name\":\"延吉市\"},{\"code\":\"222402\",\"name\":\"图们市\"},{\"code\":\"222403\",\"name\":\"敦化市\"},{\"code\":\"222404\",\"name\":\"珲春市\"},{\"code\":\"222405\",\"name\":\"龙井市\"},{\"code\":\"222406\",\"name\":\"和龙市\"},{\"code\":\"222424\",\"name\":\"汪清县\"},{\"code\":\"222426\",\"name\":\"安图县\"}]}]},{\"code\":\"23\",\"name\":\"黑龙江省\",\"childs\":[{\"code\":\"2301\",\"name\":\"哈尔滨市\",\"childs\":[{\"code\":\"230102\",\"name\":\"道里区\"},{\"code\":\"230103\",\"name\":\"南岗区\"},{\"code\":\"230104\",\"name\":\"道外区\"},{\"code\":\"230108\",\"name\":\"平房区\"},{\"code\":\"230109\",\"name\":\"松北区\"},{\"code\":\"230110\",\"name\":\"香坊区\"},{\"code\":\"230111\",\"name\":\"呼兰区\"},{\"code\":\"230112\",\"name\":\"阿城区\"},{\"code\":\"230113\",\"name\":\"双城区\"},{\"code\":\"230123\",\"name\":\"依兰县\"},{\"code\":\"230124\",\"name\":\"方正县\"},{\"code\":\"230125\",\"name\":\"宾县\"},{\"code\":\"230126\",\"name\":\"巴彦县\"},{\"code\":\"230127\",\"name\":\"木兰县\"},{\"code\":\"230128\",\"name\":\"通河县\"},{\"code\":\"230129\",\"name\":\"延寿县\"},{\"code\":\"230183\",\"name\":\"尚志市\"},{\"code\":\"230184\",\"name\":\"五常市\"}]},{\"code\":\"2302\",\"name\":\"齐齐哈尔市\",\"childs\":[{\"code\":\"230202\",\"name\":\"龙沙区\"},{\"code\":\"230203\",\"name\":\"建华区\"},{\"code\":\"230204\",\"name\":\"铁锋区\"},{\"code\":\"230205\",\"name\":\"昂昂溪区\"},{\"code\":\"230206\",\"name\":\"富拉尔基区\"},{\"code\":\"230207\",\"name\":\"碾子山区\"},{\"code\":\"230208\",\"name\":\"梅里斯达斡尔族区\"},{\"code\":\"230221\",\"name\":\"龙江县\"},{\"code\":\"230223\",\"name\":\"依安县\"},{\"code\":\"230224\",\"name\":\"泰来县\"},{\"code\":\"230225\",\"name\":\"甘南县\"},{\"code\":\"230227\",\"name\":\"富裕县\"},{\"code\":\"230229\",\"name\":\"克山县\"},{\"code\":\"230230\",\"name\":\"克东县\"},{\"code\":\"230231\",\"name\":\"拜泉县\"},{\"code\":\"230281\",\"name\":\"讷河市\"}]},{\"code\":\"2303\",\"name\":\"鸡西市\",\"childs\":[{\"code\":\"230302\",\"name\":\"鸡冠区\"},{\"code\":\"230303\",\"name\":\"恒山区\"},{\"code\":\"230304\",\"name\":\"滴道区\"},{\"code\":\"230305\",\"name\":\"梨树区\"},{\"code\":\"230306\",\"name\":\"城子河区\"},{\"code\":\"230307\",\"name\":\"麻山区\"},{\"code\":\"230321\",\"name\":\"鸡东县\"},{\"code\":\"230381\",\"name\":\"虎林市\"},{\"code\":\"230382\",\"name\":\"密山市\"}]},{\"code\":\"2304\",\"name\":\"鹤岗市\",\"childs\":[{\"code\":\"230402\",\"name\":\"向阳区\"},{\"code\":\"230403\",\"name\":\"工农区\"},{\"code\":\"230404\",\"name\":\"南山区\"},{\"code\":\"230405\",\"name\":\"兴安区\"},{\"code\":\"230406\",\"name\":\"东山区\"},{\"code\":\"230407\",\"name\":\"兴山区\"},{\"code\":\"230421\",\"name\":\"萝北县\"},{\"code\":\"230422\",\"name\":\"绥滨县\"}]},{\"code\":\"2305\",\"name\":\"双鸭山市\",\"childs\":[{\"code\":\"230502\",\"name\":\"尖山区\"},{\"code\":\"230503\",\"name\":\"岭东区\"},{\"code\":\"230505\",\"name\":\"四方台区\"},{\"code\":\"230506\",\"name\":\"宝山区\"},{\"code\":\"230521\",\"name\":\"集贤县\"},{\"code\":\"230522\",\"name\":\"友谊县\"},{\"code\":\"230523\",\"name\":\"宝清县\"},{\"code\":\"230524\",\"name\":\"饶河县\"}]},{\"code\":\"2306\",\"name\":\"大庆市\",\"childs\":[{\"code\":\"230602\",\"name\":\"萨尔图区\"},{\"code\":\"230603\",\"name\":\"龙凤区\"},{\"code\":\"230604\",\"name\":\"让胡路区\"},{\"code\":\"230605\",\"name\":\"红岗区\"},{\"code\":\"230606\",\"name\":\"大同区\"},{\"code\":\"230621\",\"name\":\"肇州县\"},{\"code\":\"230622\",\"name\":\"肇源县\"},{\"code\":\"230623\",\"name\":\"林甸县\"},{\"code\":\"230624\",\"name\":\"杜尔伯特蒙古族自治县\"}]},{\"code\":\"2307\",\"name\":\"伊春市\",\"childs\":[{\"code\":\"230702\",\"name\":\"伊春区\"},{\"code\":\"230703\",\"name\":\"南岔区\"},{\"code\":\"230704\",\"name\":\"友好区\"},{\"code\":\"230705\",\"name\":\"西林区\"},{\"code\":\"230706\",\"name\":\"翠峦区\"},{\"code\":\"230707\",\"name\":\"新青区\"},{\"code\":\"230708\",\"name\":\"美溪区\"},{\"code\":\"230709\",\"name\":\"金山屯区\"},{\"code\":\"230710\",\"name\":\"五营区\"},{\"code\":\"230711\",\"name\":\"乌马河区\"},{\"code\":\"230712\",\"name\":\"汤旺河区\"},{\"code\":\"230713\",\"name\":\"带岭区\"},{\"code\":\"230714\",\"name\":\"乌伊岭区\"},{\"code\":\"230715\",\"name\":\"红星区\"},{\"code\":\"230716\",\"name\":\"上甘岭区\"},{\"code\":\"230722\",\"name\":\"嘉荫县\"},{\"code\":\"230781\",\"name\":\"铁力市\"}]},{\"code\":\"2308\",\"name\":\"佳木斯市\",\"childs\":[{\"code\":\"230803\",\"name\":\"向阳区\"},{\"code\":\"230804\",\"name\":\"前进区\"},{\"code\":\"230805\",\"name\":\"东风区\"},{\"code\":\"230811\",\"name\":\"郊区\"},{\"code\":\"230822\",\"name\":\"桦南县\"},{\"code\":\"230826\",\"name\":\"桦川县\"},{\"code\":\"230828\",\"name\":\"汤原县\"},{\"code\":\"230881\",\"name\":\"同江市\"},{\"code\":\"230882\",\"name\":\"富锦市\"},{\"code\":\"230883\",\"name\":\"抚远市\"}]},{\"code\":\"2309\",\"name\":\"七台河市\",\"childs\":[{\"code\":\"230902\",\"name\":\"新兴区\"},{\"code\":\"230903\",\"name\":\"桃山区\"},{\"code\":\"230904\",\"name\":\"茄子河区\"},{\"code\":\"230921\",\"name\":\"勃利县\"}]},{\"code\":\"2310\",\"name\":\"牡丹江市\",\"childs\":[{\"code\":\"231002\",\"name\":\"东安区\"},{\"code\":\"231003\",\"name\":\"阳明区\"},{\"code\":\"231004\",\"name\":\"爱民区\"},{\"code\":\"231005\",\"name\":\"西安区\"},{\"code\":\"231025\",\"name\":\"林口县\"},{\"code\":\"231081\",\"name\":\"绥芬河市\"},{\"code\":\"231083\",\"name\":\"海林市\"},{\"code\":\"231084\",\"name\":\"宁安市\"},{\"code\":\"231085\",\"name\":\"穆棱市\"},{\"code\":\"231086\",\"name\":\"东宁市\"}]},{\"code\":\"2311\",\"name\":\"黑河市\",\"childs\":[{\"code\":\"231102\",\"name\":\"爱辉区\"},{\"code\":\"231121\",\"name\":\"嫩江县\"},{\"code\":\"231123\",\"name\":\"逊克县\"},{\"code\":\"231124\",\"name\":\"孙吴县\"},{\"code\":\"231181\",\"name\":\"北安市\"},{\"code\":\"231182\",\"name\":\"五大连池市\"}]},{\"code\":\"2312\",\"name\":\"绥化市\",\"childs\":[{\"code\":\"231202\",\"name\":\"北林区\"},{\"code\":\"231221\",\"name\":\"望奎县\"},{\"code\":\"231222\",\"name\":\"兰西县\"},{\"code\":\"231223\",\"name\":\"青冈县\"},{\"code\":\"231224\",\"name\":\"庆安县\"},{\"code\":\"231225\",\"name\":\"明水县\"},{\"code\":\"231226\",\"name\":\"绥棱县\"},{\"code\":\"231281\",\"name\":\"安达市\"},{\"code\":\"231282\",\"name\":\"肇东市\"},{\"code\":\"231283\",\"name\":\"海伦市\"}]},{\"code\":\"2327\",\"name\":\"大兴安岭地区\",\"childs\":[{\"code\":\"232721\",\"name\":\"呼玛县\"},{\"code\":\"232722\",\"name\":\"塔河县\"},{\"code\":\"232723\",\"name\":\"漠河县\"}]}]},{\"code\":\"31\",\"name\":\"上海市\",\"childs\":[{\"code\":\"3101\",\"name\":\"市辖区\",\"childs\":[{\"code\":\"310101\",\"name\":\"黄浦区\"},{\"code\":\"310104\",\"name\":\"徐汇区\"},{\"code\":\"310105\",\"name\":\"长宁区\"},{\"code\":\"310106\",\"name\":\"静安区\"},{\"code\":\"310107\",\"name\":\"普陀区\"},{\"code\":\"310109\",\"name\":\"虹口区\"},{\"code\":\"310110\",\"name\":\"杨浦区\"},{\"code\":\"310112\",\"name\":\"闵行区\"},{\"code\":\"310113\",\"name\":\"宝山区\"},{\"code\":\"310114\",\"name\":\"嘉定区\"},{\"code\":\"310115\",\"name\":\"浦东新区\"},{\"code\":\"310116\",\"name\":\"金山区\"},{\"code\":\"310117\",\"name\":\"松江区\"},{\"code\":\"310118\",\"name\":\"青浦区\"},{\"code\":\"310120\",\"name\":\"奉贤区\"},{\"code\":\"310151\",\"name\":\"崇明区\"}]}]},{\"code\":\"32\",\"name\":\"江苏省\",\"childs\":[{\"code\":\"3201\",\"name\":\"南京市\",\"childs\":[{\"code\":\"320102\",\"name\":\"玄武区\"},{\"code\":\"320104\",\"name\":\"秦淮区\"},{\"code\":\"320105\",\"name\":\"建邺区\"},{\"code\":\"320106\",\"name\":\"鼓楼区\"},{\"code\":\"320111\",\"name\":\"浦口区\"},{\"code\":\"320113\",\"name\":\"栖霞区\"},{\"code\":\"320114\",\"name\":\"雨花台区\"},{\"code\":\"320115\",\"name\":\"江宁区\"},{\"code\":\"320116\",\"name\":\"六合区\"},{\"code\":\"320117\",\"name\":\"溧水区\"},{\"code\":\"320118\",\"name\":\"高淳区\"}]},{\"code\":\"3202\",\"name\":\"无锡市\",\"childs\":[{\"code\":\"320205\",\"name\":\"锡山区\"},{\"code\":\"320206\",\"name\":\"惠山区\"},{\"code\":\"320211\",\"name\":\"滨湖区\"},{\"code\":\"320213\",\"name\":\"梁溪区\"},{\"code\":\"320214\",\"name\":\"新吴区\"},{\"code\":\"320281\",\"name\":\"江阴市\"},{\"code\":\"320282\",\"name\":\"宜兴市\"}]},{\"code\":\"3203\",\"name\":\"徐州市\",\"childs\":[{\"code\":\"320302\",\"name\":\"鼓楼区\"},{\"code\":\"320303\",\"name\":\"云龙区\"},{\"code\":\"320305\",\"name\":\"贾汪区\"},{\"code\":\"320311\",\"name\":\"泉山区\"},{\"code\":\"320312\",\"name\":\"铜山区\"},{\"code\":\"320321\",\"name\":\"丰县\"},{\"code\":\"320322\",\"name\":\"沛县\"},{\"code\":\"320324\",\"name\":\"睢宁县\"},{\"code\":\"320381\",\"name\":\"新沂市\"},{\"code\":\"320382\",\"name\":\"邳州市\"}]},{\"code\":\"3204\",\"name\":\"常州市\",\"childs\":[{\"code\":\"320402\",\"name\":\"天宁区\"},{\"code\":\"320404\",\"name\":\"钟楼区\"},{\"code\":\"320411\",\"name\":\"新北区\"},{\"code\":\"320412\",\"name\":\"武进区\"},{\"code\":\"320413\",\"name\":\"金坛区\"},{\"code\":\"320481\",\"name\":\"溧阳市\"}]},{\"code\":\"3205\",\"name\":\"苏州市\",\"childs\":[{\"code\":\"320505\",\"name\":\"虎丘区\"},{\"code\":\"320506\",\"name\":\"吴中区\"},{\"code\":\"320507\",\"name\":\"相城区\"},{\"code\":\"320508\",\"name\":\"姑苏区\"},{\"code\":\"320509\",\"name\":\"吴江区\"},{\"code\":\"320581\",\"name\":\"常熟市\"},{\"code\":\"320582\",\"name\":\"张家港市\"},{\"code\":\"320583\",\"name\":\"昆山市\"},{\"code\":\"320585\",\"name\":\"太仓市\"}]},{\"code\":\"3206\",\"name\":\"南通市\",\"childs\":[{\"code\":\"320602\",\"name\":\"崇川区\"},{\"code\":\"320611\",\"name\":\"港闸区\"},{\"code\":\"320612\",\"name\":\"通州区\"},{\"code\":\"320621\",\"name\":\"海安县\"},{\"code\":\"320623\",\"name\":\"如东县\"},{\"code\":\"320681\",\"name\":\"启东市\"},{\"code\":\"320682\",\"name\":\"如皋市\"},{\"code\":\"320684\",\"name\":\"海门市\"}]},{\"code\":\"3207\",\"name\":\"连云港市\",\"childs\":[{\"code\":\"320703\",\"name\":\"连云区\"},{\"code\":\"320706\",\"name\":\"海州区\"},{\"code\":\"320707\",\"name\":\"赣榆区\"},{\"code\":\"320722\",\"name\":\"东海县\"},{\"code\":\"320723\",\"name\":\"灌云县\"},{\"code\":\"320724\",\"name\":\"灌南县\"}]},{\"code\":\"3208\",\"name\":\"淮安市\",\"childs\":[{\"code\":\"320803\",\"name\":\"淮安区\"},{\"code\":\"320804\",\"name\":\"淮阴区\"},{\"code\":\"320812\",\"name\":\"清江浦区\"},{\"code\":\"320813\",\"name\":\"洪泽区\"},{\"code\":\"320826\",\"name\":\"涟水县\"},{\"code\":\"320830\",\"name\":\"盱眙县\"},{\"code\":\"320831\",\"name\":\"金湖县\"}]},{\"code\":\"3209\",\"name\":\"盐城市\",\"childs\":[{\"code\":\"320902\",\"name\":\"亭湖区\"},{\"code\":\"320903\",\"name\":\"盐都区\"},{\"code\":\"320904\",\"name\":\"大丰区\"},{\"code\":\"320921\",\"name\":\"响水县\"},{\"code\":\"320922\",\"name\":\"滨海县\"},{\"code\":\"320923\",\"name\":\"阜宁县\"},{\"code\":\"320924\",\"name\":\"射阳县\"},{\"code\":\"320925\",\"name\":\"建湖县\"},{\"code\":\"320981\",\"name\":\"东台市\"}]},{\"code\":\"3210\",\"name\":\"扬州市\",\"childs\":[{\"code\":\"321002\",\"name\":\"广陵区\"},{\"code\":\"321003\",\"name\":\"邗江区\"},{\"code\":\"321012\",\"name\":\"江都区\"},{\"code\":\"321023\",\"name\":\"宝应县\"},{\"code\":\"321081\",\"name\":\"仪征市\"},{\"code\":\"321084\",\"name\":\"高邮市\"}]},{\"code\":\"3211\",\"name\":\"镇江市\",\"childs\":[{\"code\":\"321102\",\"name\":\"京口区\"},{\"code\":\"321111\",\"name\":\"润州区\"},{\"code\":\"321112\",\"name\":\"丹徒区\"},{\"code\":\"321181\",\"name\":\"丹阳市\"},{\"code\":\"321182\",\"name\":\"扬中市\"},{\"code\":\"321183\",\"name\":\"句容市\"}]},{\"code\":\"3212\",\"name\":\"泰州市\",\"childs\":[{\"code\":\"321202\",\"name\":\"海陵区\"},{\"code\":\"321203\",\"name\":\"高港区\"},{\"code\":\"321204\",\"name\":\"姜堰区\"},{\"code\":\"321281\",\"name\":\"兴化市\"},{\"code\":\"321282\",\"name\":\"靖江市\"},{\"code\":\"321283\",\"name\":\"泰兴市\"}]},{\"code\":\"3213\",\"name\":\"宿迁市\",\"childs\":[{\"code\":\"321302\",\"name\":\"宿城区\"},{\"code\":\"321311\",\"name\":\"宿豫区\"},{\"code\":\"321322\",\"name\":\"沭阳县\"},{\"code\":\"321323\",\"name\":\"泗阳县\"},{\"code\":\"321324\",\"name\":\"泗洪县\"}]}]},{\"code\":\"33\",\"name\":\"浙江省\",\"childs\":[{\"code\":\"3301\",\"name\":\"杭州市\",\"childs\":[{\"code\":\"330102\",\"name\":\"上城区\"},{\"code\":\"330103\",\"name\":\"下城区\"},{\"code\":\"330104\",\"name\":\"江干区\"},{\"code\":\"330105\",\"name\":\"拱墅区\"},{\"code\":\"330106\",\"name\":\"西湖区\"},{\"code\":\"330108\",\"name\":\"滨江区\"},{\"code\":\"330109\",\"name\":\"萧山区\"},{\"code\":\"330110\",\"name\":\"余杭区\"},{\"code\":\"330111\",\"name\":\"富阳区\"},{\"code\":\"330122\",\"name\":\"桐庐县\"},{\"code\":\"330127\",\"name\":\"淳安县\"},{\"code\":\"330182\",\"name\":\"建德市\"},{\"code\":\"330185\",\"name\":\"临安市\"}]},{\"code\":\"3302\",\"name\":\"宁波市\",\"childs\":[{\"code\":\"330203\",\"name\":\"海曙区\"},{\"code\":\"330204\",\"name\":\"江东区\"},{\"code\":\"330205\",\"name\":\"江北区\"},{\"code\":\"330206\",\"name\":\"北仑区\"},{\"code\":\"330211\",\"name\":\"镇海区\"},{\"code\":\"330212\",\"name\":\"鄞州区\"},{\"code\":\"330225\",\"name\":\"象山县\"},{\"code\":\"330226\",\"name\":\"宁海县\"},{\"code\":\"330281\",\"name\":\"余姚市\"},{\"code\":\"330282\",\"name\":\"慈溪市\"},{\"code\":\"330283\",\"name\":\"奉化市\"}]},{\"code\":\"3303\",\"name\":\"温州市\",\"childs\":[{\"code\":\"330302\",\"name\":\"鹿城区\"},{\"code\":\"330303\",\"name\":\"龙湾区\"},{\"code\":\"330304\",\"name\":\"瓯海区\"},{\"code\":\"330305\",\"name\":\"洞头区\"},{\"code\":\"330324\",\"name\":\"永嘉县\"},{\"code\":\"330326\",\"name\":\"平阳县\"},{\"code\":\"330327\",\"name\":\"苍南县\"},{\"code\":\"330328\",\"name\":\"文成县\"},{\"code\":\"330329\",\"name\":\"泰顺县\"},{\"code\":\"330381\",\"name\":\"瑞安市\"},{\"code\":\"330382\",\"name\":\"乐清市\"}]},{\"code\":\"3304\",\"name\":\"嘉兴市\",\"childs\":[{\"code\":\"330402\",\"name\":\"南湖区\"},{\"code\":\"330411\",\"name\":\"秀洲区\"},{\"code\":\"330421\",\"name\":\"嘉善县\"},{\"code\":\"330424\",\"name\":\"海盐县\"},{\"code\":\"330481\",\"name\":\"海宁市\"},{\"code\":\"330482\",\"name\":\"平湖市\"},{\"code\":\"330483\",\"name\":\"桐乡市\"}]},{\"code\":\"3305\",\"name\":\"湖州市\",\"childs\":[{\"code\":\"330502\",\"name\":\"吴兴区\"},{\"code\":\"330503\",\"name\":\"南浔区\"},{\"code\":\"330521\",\"name\":\"德清县\"},{\"code\":\"330522\",\"name\":\"长兴县\"},{\"code\":\"330523\",\"name\":\"安吉县\"}]},{\"code\":\"3306\",\"name\":\"绍兴市\",\"childs\":[{\"code\":\"330602\",\"name\":\"越城区\"},{\"code\":\"330603\",\"name\":\"柯桥区\"},{\"code\":\"330604\",\"name\":\"上虞区\"},{\"code\":\"330624\",\"name\":\"新昌县\"},{\"code\":\"330681\",\"name\":\"诸暨市\"},{\"code\":\"330683\",\"name\":\"嵊州市\"}]},{\"code\":\"3307\",\"name\":\"金华市\",\"childs\":[{\"code\":\"330702\",\"name\":\"婺城区\"},{\"code\":\"330703\",\"name\":\"金东区\"},{\"code\":\"330723\",\"name\":\"武义县\"},{\"code\":\"330726\",\"name\":\"浦江县\"},{\"code\":\"330727\",\"name\":\"磐安县\"},{\"code\":\"330781\",\"name\":\"兰溪市\"},{\"code\":\"330782\",\"name\":\"义乌市\"},{\"code\":\"330783\",\"name\":\"东阳市\"},{\"code\":\"330784\",\"name\":\"永康市\"}]},{\"code\":\"3308\",\"name\":\"衢州市\",\"childs\":[{\"code\":\"330802\",\"name\":\"柯城区\"},{\"code\":\"330803\",\"name\":\"衢江区\"},{\"code\":\"330822\",\"name\":\"常山县\"},{\"code\":\"330824\",\"name\":\"开化县\"},{\"code\":\"330825\",\"name\":\"龙游县\"},{\"code\":\"330881\",\"name\":\"江山市\"}]},{\"code\":\"3309\",\"name\":\"舟山市\",\"childs\":[{\"code\":\"330902\",\"name\":\"定海区\"},{\"code\":\"330903\",\"name\":\"普陀区\"},{\"code\":\"330921\",\"name\":\"岱山县\"},{\"code\":\"330922\",\"name\":\"嵊泗县\"}]},{\"code\":\"3310\",\"name\":\"台州市\",\"childs\":[{\"code\":\"331002\",\"name\":\"椒江区\"},{\"code\":\"331003\",\"name\":\"黄岩区\"},{\"code\":\"331004\",\"name\":\"路桥区\"},{\"code\":\"331021\",\"name\":\"玉环县\"},{\"code\":\"331022\",\"name\":\"三门县\"},{\"code\":\"331023\",\"name\":\"天台县\"},{\"code\":\"331024\",\"name\":\"仙居县\"},{\"code\":\"331081\",\"name\":\"温岭市\"},{\"code\":\"331082\",\"name\":\"临海市\"}]},{\"code\":\"3311\",\"name\":\"丽水市\",\"childs\":[{\"code\":\"331102\",\"name\":\"莲都区\"},{\"code\":\"331121\",\"name\":\"青田县\"},{\"code\":\"331122\",\"name\":\"缙云县\"},{\"code\":\"331123\",\"name\":\"遂昌县\"},{\"code\":\"331124\",\"name\":\"松阳县\"},{\"code\":\"331125\",\"name\":\"云和县\"},{\"code\":\"331126\",\"name\":\"庆元县\"},{\"code\":\"331127\",\"name\":\"景宁畲族自治县\"},{\"code\":\"331181\",\"name\":\"龙泉市\"}]}]},{\"code\":\"34\",\"name\":\"安徽省\",\"childs\":[{\"code\":\"3401\",\"name\":\"合肥市\",\"childs\":[{\"code\":\"340102\",\"name\":\"瑶海区\"},{\"code\":\"340103\",\"name\":\"庐阳区\"},{\"code\":\"340104\",\"name\":\"蜀山区\"},{\"code\":\"340111\",\"name\":\"包河区\"},{\"code\":\"340121\",\"name\":\"长丰县\"},{\"code\":\"340122\",\"name\":\"肥东县\"},{\"code\":\"340123\",\"name\":\"肥西县\"},{\"code\":\"340124\",\"name\":\"庐江县\"},{\"code\":\"340181\",\"name\":\"巢湖市\"}]},{\"code\":\"3402\",\"name\":\"芜湖市\",\"childs\":[{\"code\":\"340202\",\"name\":\"镜湖区\"},{\"code\":\"340203\",\"name\":\"弋江区\"},{\"code\":\"340207\",\"name\":\"鸠江区\"},{\"code\":\"340208\",\"name\":\"三山区\"},{\"code\":\"340221\",\"name\":\"芜湖县\"},{\"code\":\"340222\",\"name\":\"繁昌县\"},{\"code\":\"340223\",\"name\":\"南陵县\"},{\"code\":\"340225\",\"name\":\"无为县\"}]},{\"code\":\"3403\",\"name\":\"蚌埠市\",\"childs\":[{\"code\":\"340302\",\"name\":\"龙子湖区\"},{\"code\":\"340303\",\"name\":\"蚌山区\"},{\"code\":\"340304\",\"name\":\"禹会区\"},{\"code\":\"340311\",\"name\":\"淮上区\"},{\"code\":\"340321\",\"name\":\"怀远县\"},{\"code\":\"340322\",\"name\":\"五河县\"},{\"code\":\"340323\",\"name\":\"固镇县\"}]},{\"code\":\"3404\",\"name\":\"淮南市\",\"childs\":[{\"code\":\"340402\",\"name\":\"大通区\"},{\"code\":\"340403\",\"name\":\"田家庵区\"},{\"code\":\"340404\",\"name\":\"谢家集区\"},{\"code\":\"340405\",\"name\":\"八公山区\"},{\"code\":\"340406\",\"name\":\"潘集区\"},{\"code\":\"340421\",\"name\":\"凤台县\"},{\"code\":\"340422\",\"name\":\"寿县\"}]},{\"code\":\"3405\",\"name\":\"马鞍山市\",\"childs\":[{\"code\":\"340503\",\"name\":\"花山区\"},{\"code\":\"340504\",\"name\":\"雨山区\"},{\"code\":\"340506\",\"name\":\"博望区\"},{\"code\":\"340521\",\"name\":\"当涂县\"},{\"code\":\"340522\",\"name\":\"含山县\"},{\"code\":\"340523\",\"name\":\"和县\"}]},{\"code\":\"3406\",\"name\":\"淮北市\",\"childs\":[{\"code\":\"340602\",\"name\":\"杜集区\"},{\"code\":\"340603\",\"name\":\"相山区\"},{\"code\":\"340604\",\"name\":\"烈山区\"},{\"code\":\"340621\",\"name\":\"濉溪县\"}]},{\"code\":\"3407\",\"name\":\"铜陵市\",\"childs\":[{\"code\":\"340705\",\"name\":\"铜官区\"},{\"code\":\"340706\",\"name\":\"义安区\"},{\"code\":\"340711\",\"name\":\"郊区\"},{\"code\":\"340722\",\"name\":\"枞阳县\"}]},{\"code\":\"3408\",\"name\":\"安庆市\",\"childs\":[{\"code\":\"340802\",\"name\":\"迎江区\"},{\"code\":\"340803\",\"name\":\"大观区\"},{\"code\":\"340811\",\"name\":\"宜秀区\"},{\"code\":\"340822\",\"name\":\"怀宁县\"},{\"code\":\"340824\",\"name\":\"潜山县\"},{\"code\":\"340825\",\"name\":\"太湖县\"},{\"code\":\"340826\",\"name\":\"宿松县\"},{\"code\":\"340827\",\"name\":\"望江县\"},{\"code\":\"340828\",\"name\":\"岳西县\"},{\"code\":\"340881\",\"name\":\"桐城市\"}]},{\"code\":\"3410\",\"name\":\"黄山市\",\"childs\":[{\"code\":\"341002\",\"name\":\"屯溪区\"},{\"code\":\"341003\",\"name\":\"黄山区\"},{\"code\":\"341004\",\"name\":\"徽州区\"},{\"code\":\"341021\",\"name\":\"歙县\"},{\"code\":\"341022\",\"name\":\"休宁县\"},{\"code\":\"341023\",\"name\":\"黟县\"},{\"code\":\"341024\",\"name\":\"祁门县\"}]},{\"code\":\"3411\",\"name\":\"滁州市\",\"childs\":[{\"code\":\"341102\",\"name\":\"琅琊区\"},{\"code\":\"341103\",\"name\":\"南谯区\"},{\"code\":\"341122\",\"name\":\"来安县\"},{\"code\":\"341124\",\"name\":\"全椒县\"},{\"code\":\"341125\",\"name\":\"定远县\"},{\"code\":\"341126\",\"name\":\"凤阳县\"},{\"code\":\"341181\",\"name\":\"天长市\"},{\"code\":\"341182\",\"name\":\"明光市\"}]},{\"code\":\"3412\",\"name\":\"阜阳市\",\"childs\":[{\"code\":\"341202\",\"name\":\"颍州区\"},{\"code\":\"341203\",\"name\":\"颍东区\"},{\"code\":\"341204\",\"name\":\"颍泉区\"},{\"code\":\"341221\",\"name\":\"临泉县\"},{\"code\":\"341222\",\"name\":\"太和县\"},{\"code\":\"341225\",\"name\":\"阜南县\"},{\"code\":\"341226\",\"name\":\"颍上县\"},{\"code\":\"341282\",\"name\":\"界首市\"}]},{\"code\":\"3413\",\"name\":\"宿州市\",\"childs\":[{\"code\":\"341302\",\"name\":\"埇桥区\"},{\"code\":\"341321\",\"name\":\"砀山县\"},{\"code\":\"341322\",\"name\":\"萧县\"},{\"code\":\"341323\",\"name\":\"灵璧县\"},{\"code\":\"341324\",\"name\":\"泗县\"}]},{\"code\":\"3415\",\"name\":\"六安市\",\"childs\":[{\"code\":\"341502\",\"name\":\"金安区\"},{\"code\":\"341503\",\"name\":\"裕安区\"},{\"code\":\"341504\",\"name\":\"叶集区\"},{\"code\":\"341522\",\"name\":\"霍邱县\"},{\"code\":\"341523\",\"name\":\"舒城县\"},{\"code\":\"341524\",\"name\":\"金寨县\"},{\"code\":\"341525\",\"name\":\"霍山县\"}]},{\"code\":\"3416\",\"name\":\"亳州市\",\"childs\":[{\"code\":\"341602\",\"name\":\"谯城区\"},{\"code\":\"341621\",\"name\":\"涡阳县\"},{\"code\":\"341622\",\"name\":\"蒙城县\"},{\"code\":\"341623\",\"name\":\"利辛县\"}]},{\"code\":\"3417\",\"name\":\"池州市\",\"childs\":[{\"code\":\"341702\",\"name\":\"贵池区\"},{\"code\":\"341721\",\"name\":\"东至县\"},{\"code\":\"341722\",\"name\":\"石台县\"},{\"code\":\"341723\",\"name\":\"青阳县\"}]},{\"code\":\"3418\",\"name\":\"宣城市\",\"childs\":[{\"code\":\"341802\",\"name\":\"宣州区\"},{\"code\":\"341821\",\"name\":\"郎溪县\"},{\"code\":\"341822\",\"name\":\"广德县\"},{\"code\":\"341823\",\"name\":\"泾县\"},{\"code\":\"341824\",\"name\":\"绩溪县\"},{\"code\":\"341825\",\"name\":\"旌德县\"},{\"code\":\"341881\",\"name\":\"宁国市\"}]}]},{\"code\":\"35\",\"name\":\"福建省\",\"childs\":[{\"code\":\"3501\",\"name\":\"福州市\",\"childs\":[{\"code\":\"350102\",\"name\":\"鼓楼区\"},{\"code\":\"350103\",\"name\":\"台江区\"},{\"code\":\"350104\",\"name\":\"仓山区\"},{\"code\":\"350105\",\"name\":\"马尾区\"},{\"code\":\"350111\",\"name\":\"晋安区\"},{\"code\":\"350121\",\"name\":\"闽侯县\"},{\"code\":\"350122\",\"name\":\"连江县\"},{\"code\":\"350123\",\"name\":\"罗源县\"},{\"code\":\"350124\",\"name\":\"闽清县\"},{\"code\":\"350125\",\"name\":\"永泰县\"},{\"code\":\"350128\",\"name\":\"平潭县\"},{\"code\":\"350181\",\"name\":\"福清市\"},{\"code\":\"350182\",\"name\":\"长乐市\"}]},{\"code\":\"3502\",\"name\":\"厦门市\",\"childs\":[{\"code\":\"350203\",\"name\":\"思明区\"},{\"code\":\"350205\",\"name\":\"海沧区\"},{\"code\":\"350206\",\"name\":\"湖里区\"},{\"code\":\"350211\",\"name\":\"集美区\"},{\"code\":\"350212\",\"name\":\"同安区\"},{\"code\":\"350213\",\"name\":\"翔安区\"}]},{\"code\":\"3503\",\"name\":\"莆田市\",\"childs\":[{\"code\":\"350302\",\"name\":\"城厢区\"},{\"code\":\"350303\",\"name\":\"涵江区\"},{\"code\":\"350304\",\"name\":\"荔城区\"},{\"code\":\"350305\",\"name\":\"秀屿区\"},{\"code\":\"350322\",\"name\":\"仙游县\"}]},{\"code\":\"3504\",\"name\":\"三明市\",\"childs\":[{\"code\":\"350402\",\"name\":\"梅列区\"},{\"code\":\"350403\",\"name\":\"三元区\"},{\"code\":\"350421\",\"name\":\"明溪县\"},{\"code\":\"350423\",\"name\":\"清流县\"},{\"code\":\"350424\",\"name\":\"宁化县\"},{\"code\":\"350425\",\"name\":\"大田县\"},{\"code\":\"350426\",\"name\":\"尤溪县\"},{\"code\":\"350427\",\"name\":\"沙县\"},{\"code\":\"350428\",\"name\":\"将乐县\"},{\"code\":\"350429\",\"name\":\"泰宁县\"},{\"code\":\"350430\",\"name\":\"建宁县\"},{\"code\":\"350481\",\"name\":\"永安市\"}]},{\"code\":\"3505\",\"name\":\"泉州市\",\"childs\":[{\"code\":\"350502\",\"name\":\"鲤城区\"},{\"code\":\"350503\",\"name\":\"丰泽区\"},{\"code\":\"350504\",\"name\":\"洛江区\"},{\"code\":\"350505\",\"name\":\"泉港区\"},{\"code\":\"350521\",\"name\":\"惠安县\"},{\"code\":\"350524\",\"name\":\"安溪县\"},{\"code\":\"350525\",\"name\":\"永春县\"},{\"code\":\"350526\",\"name\":\"德化县\"},{\"code\":\"350527\",\"name\":\"金门县\"},{\"code\":\"350581\",\"name\":\"石狮市\"},{\"code\":\"350582\",\"name\":\"晋江市\"},{\"code\":\"350583\",\"name\":\"南安市\"}]},{\"code\":\"3506\",\"name\":\"漳州市\",\"childs\":[{\"code\":\"350602\",\"name\":\"芗城区\"},{\"code\":\"350603\",\"name\":\"龙文区\"},{\"code\":\"350622\",\"name\":\"云霄县\"},{\"code\":\"350623\",\"name\":\"漳浦县\"},{\"code\":\"350624\",\"name\":\"诏安县\"},{\"code\":\"350625\",\"name\":\"长泰县\"},{\"code\":\"350626\",\"name\":\"东山县\"},{\"code\":\"350627\",\"name\":\"南靖县\"},{\"code\":\"350628\",\"name\":\"平和县\"},{\"code\":\"350629\",\"name\":\"华安县\"},{\"code\":\"350681\",\"name\":\"龙海市\"}]},{\"code\":\"3507\",\"name\":\"南平市\",\"childs\":[{\"code\":\"350702\",\"name\":\"延平区\"},{\"code\":\"350703\",\"name\":\"建阳区\"},{\"code\":\"350721\",\"name\":\"顺昌县\"},{\"code\":\"350722\",\"name\":\"浦城县\"},{\"code\":\"350723\",\"name\":\"光泽县\"},{\"code\":\"350724\",\"name\":\"松溪县\"},{\"code\":\"350725\",\"name\":\"政和县\"},{\"code\":\"350781\",\"name\":\"邵武市\"},{\"code\":\"350782\",\"name\":\"武夷山市\"},{\"code\":\"350783\",\"name\":\"建瓯市\"}]},{\"code\":\"3508\",\"name\":\"龙岩市\",\"childs\":[{\"code\":\"350802\",\"name\":\"新罗区\"},{\"code\":\"350803\",\"name\":\"永定区\"},{\"code\":\"350821\",\"name\":\"长汀县\"},{\"code\":\"350823\",\"name\":\"上杭县\"},{\"code\":\"350824\",\"name\":\"武平县\"},{\"code\":\"350825\",\"name\":\"连城县\"},{\"code\":\"350881\",\"name\":\"漳平市\"}]},{\"code\":\"3509\",\"name\":\"宁德市\",\"childs\":[{\"code\":\"350902\",\"name\":\"蕉城区\"},{\"code\":\"350921\",\"name\":\"霞浦县\"},{\"code\":\"350922\",\"name\":\"古田县\"},{\"code\":\"350923\",\"name\":\"屏南县\"},{\"code\":\"350924\",\"name\":\"寿宁县\"},{\"code\":\"350925\",\"name\":\"周宁县\"},{\"code\":\"350926\",\"name\":\"柘荣县\"},{\"code\":\"350981\",\"name\":\"福安市\"},{\"code\":\"350982\",\"name\":\"福鼎市\"}]}]},{\"code\":\"36\",\"name\":\"江西省\",\"childs\":[{\"code\":\"3601\",\"name\":\"南昌市\",\"childs\":[{\"code\":\"360102\",\"name\":\"东湖区\"},{\"code\":\"360103\",\"name\":\"西湖区\"},{\"code\":\"360104\",\"name\":\"青云谱区\"},{\"code\":\"360105\",\"name\":\"湾里区\"},{\"code\":\"360111\",\"name\":\"青山湖区\"},{\"code\":\"360112\",\"name\":\"新建区\"},{\"code\":\"360121\",\"name\":\"南昌县\"},{\"code\":\"360123\",\"name\":\"安义县\"},{\"code\":\"360124\",\"name\":\"进贤县\"}]},{\"code\":\"3602\",\"name\":\"景德镇市\",\"childs\":[{\"code\":\"360202\",\"name\":\"昌江区\"},{\"code\":\"360203\",\"name\":\"珠山区\"},{\"code\":\"360222\",\"name\":\"浮梁县\"},{\"code\":\"360281\",\"name\":\"乐平市\"}]},{\"code\":\"3603\",\"name\":\"萍乡市\",\"childs\":[{\"code\":\"360302\",\"name\":\"安源区\"},{\"code\":\"360313\",\"name\":\"湘东区\"},{\"code\":\"360321\",\"name\":\"莲花县\"},{\"code\":\"360322\",\"name\":\"上栗县\"},{\"code\":\"360323\",\"name\":\"芦溪县\"}]},{\"code\":\"3604\",\"name\":\"九江市\",\"childs\":[{\"code\":\"360402\",\"name\":\"濂溪区\"},{\"code\":\"360403\",\"name\":\"浔阳区\"},{\"code\":\"360421\",\"name\":\"九江县\"},{\"code\":\"360423\",\"name\":\"武宁县\"},{\"code\":\"360424\",\"name\":\"修水县\"},{\"code\":\"360425\",\"name\":\"永修县\"},{\"code\":\"360426\",\"name\":\"德安县\"},{\"code\":\"360428\",\"name\":\"都昌县\"},{\"code\":\"360429\",\"name\":\"湖口县\"},{\"code\":\"360430\",\"name\":\"彭泽县\"},{\"code\":\"360481\",\"name\":\"瑞昌市\"},{\"code\":\"360482\",\"name\":\"共青城市\"},{\"code\":\"360483\",\"name\":\"庐山市\"}]},{\"code\":\"3605\",\"name\":\"新余市\",\"childs\":[{\"code\":\"360502\",\"name\":\"渝水区\"},{\"code\":\"360521\",\"name\":\"分宜县\"}]},{\"code\":\"3606\",\"name\":\"鹰潭市\",\"childs\":[{\"code\":\"360602\",\"name\":\"月湖区\"},{\"code\":\"360622\",\"name\":\"余江县\"},{\"code\":\"360681\",\"name\":\"贵溪市\"}]},{\"code\":\"3607\",\"name\":\"赣州市\",\"childs\":[{\"code\":\"360702\",\"name\":\"章贡区\"},{\"code\":\"360703\",\"name\":\"南康区\"},{\"code\":\"360721\",\"name\":\"赣县\"},{\"code\":\"360722\",\"name\":\"信丰县\"},{\"code\":\"360723\",\"name\":\"大余县\"},{\"code\":\"360724\",\"name\":\"上犹县\"},{\"code\":\"360725\",\"name\":\"崇义县\"},{\"code\":\"360726\",\"name\":\"安远县\"},{\"code\":\"360727\",\"name\":\"龙南县\"},{\"code\":\"360728\",\"name\":\"定南县\"},{\"code\":\"360729\",\"name\":\"全南县\"},{\"code\":\"360730\",\"name\":\"宁都县\"},{\"code\":\"360731\",\"name\":\"于都县\"},{\"code\":\"360732\",\"name\":\"兴国县\"},{\"code\":\"360733\",\"name\":\"会昌县\"},{\"code\":\"360734\",\"name\":\"寻乌县\"},{\"code\":\"360735\",\"name\":\"石城县\"},{\"code\":\"360781\",\"name\":\"瑞金市\"}]},{\"code\":\"3608\",\"name\":\"吉安市\",\"childs\":[{\"code\":\"360802\",\"name\":\"吉州区\"},{\"code\":\"360803\",\"name\":\"青原区\"},{\"code\":\"360821\",\"name\":\"吉安县\"},{\"code\":\"360822\",\"name\":\"吉水县\"},{\"code\":\"360823\",\"name\":\"峡江县\"},{\"code\":\"360824\",\"name\":\"新干县\"},{\"code\":\"360825\",\"name\":\"永丰县\"},{\"code\":\"360826\",\"name\":\"泰和县\"},{\"code\":\"360827\",\"name\":\"遂川县\"},{\"code\":\"360828\",\"name\":\"万安县\"},{\"code\":\"360829\",\"name\":\"安福县\"},{\"code\":\"360830\",\"name\":\"永新县\"},{\"code\":\"360881\",\"name\":\"井冈山市\"}]},{\"code\":\"3609\",\"name\":\"宜春市\",\"childs\":[{\"code\":\"360902\",\"name\":\"袁州区\"},{\"code\":\"360921\",\"name\":\"奉新县\"},{\"code\":\"360922\",\"name\":\"万载县\"},{\"code\":\"360923\",\"name\":\"上高县\"},{\"code\":\"360924\",\"name\":\"宜丰县\"},{\"code\":\"360925\",\"name\":\"靖安县\"},{\"code\":\"360926\",\"name\":\"铜鼓县\"},{\"code\":\"360981\",\"name\":\"丰城市\"},{\"code\":\"360982\",\"name\":\"樟树市\"},{\"code\":\"360983\",\"name\":\"高安市\"}]},{\"code\":\"3610\",\"name\":\"抚州市\",\"childs\":[{\"code\":\"361002\",\"name\":\"临川区\"},{\"code\":\"361021\",\"name\":\"南城县\"},{\"code\":\"361022\",\"name\":\"黎川县\"},{\"code\":\"361023\",\"name\":\"南丰县\"},{\"code\":\"361024\",\"name\":\"崇仁县\"},{\"code\":\"361025\",\"name\":\"乐安县\"},{\"code\":\"361026\",\"name\":\"宜黄县\"},{\"code\":\"361027\",\"name\":\"金溪县\"},{\"code\":\"361028\",\"name\":\"资溪县\"},{\"code\":\"361029\",\"name\":\"东乡县\"},{\"code\":\"361030\",\"name\":\"广昌县\"}]},{\"code\":\"3611\",\"name\":\"上饶市\",\"childs\":[{\"code\":\"361102\",\"name\":\"信州区\"},{\"code\":\"361103\",\"name\":\"广丰区\"},{\"code\":\"361121\",\"name\":\"上饶县\"},{\"code\":\"361123\",\"name\":\"玉山县\"},{\"code\":\"361124\",\"name\":\"铅山县\"},{\"code\":\"361125\",\"name\":\"横峰县\"},{\"code\":\"361126\",\"name\":\"弋阳县\"},{\"code\":\"361127\",\"name\":\"余干县\"},{\"code\":\"361128\",\"name\":\"鄱阳县\"},{\"code\":\"361129\",\"name\":\"万年县\"},{\"code\":\"361130\",\"name\":\"婺源县\"},{\"code\":\"361181\",\"name\":\"德兴市\"}]}]},{\"code\":\"37\",\"name\":\"山东省\",\"childs\":[{\"code\":\"3701\",\"name\":\"济南市\",\"childs\":[{\"code\":\"370102\",\"name\":\"历下区\"},{\"code\":\"370103\",\"name\":\"市中区\"},{\"code\":\"370104\",\"name\":\"槐荫区\"},{\"code\":\"370105\",\"name\":\"天桥区\"},{\"code\":\"370112\",\"name\":\"历城区\"},{\"code\":\"370113\",\"name\":\"长清区\"},{\"code\":\"370124\",\"name\":\"平阴县\"},{\"code\":\"370125\",\"name\":\"济阳县\"},{\"code\":\"370126\",\"name\":\"商河县\"},{\"code\":\"370181\",\"name\":\"章丘市\"}]},{\"code\":\"3702\",\"name\":\"青岛市\",\"childs\":[{\"code\":\"370202\",\"name\":\"市南区\"},{\"code\":\"370203\",\"name\":\"市北区\"},{\"code\":\"370211\",\"name\":\"黄岛区\"},{\"code\":\"370212\",\"name\":\"崂山区\"},{\"code\":\"370213\",\"name\":\"李沧区\"},{\"code\":\"370214\",\"name\":\"城阳区\"},{\"code\":\"370281\",\"name\":\"胶州市\"},{\"code\":\"370282\",\"name\":\"即墨市\"},{\"code\":\"370283\",\"name\":\"平度市\"},{\"code\":\"370285\",\"name\":\"莱西市\"}]},{\"code\":\"3703\",\"name\":\"淄博市\",\"childs\":[{\"code\":\"370302\",\"name\":\"淄川区\"},{\"code\":\"370303\",\"name\":\"张店区\"},{\"code\":\"370304\",\"name\":\"博山区\"},{\"code\":\"370305\",\"name\":\"临淄区\"},{\"code\":\"370306\",\"name\":\"周村区\"},{\"code\":\"370321\",\"name\":\"桓台县\"},{\"code\":\"370322\",\"name\":\"高青县\"},{\"code\":\"370323\",\"name\":\"沂源县\"}]},{\"code\":\"3704\",\"name\":\"枣庄市\",\"childs\":[{\"code\":\"370402\",\"name\":\"市中区\"},{\"code\":\"370403\",\"name\":\"薛城区\"},{\"code\":\"370404\",\"name\":\"峄城区\"},{\"code\":\"370405\",\"name\":\"台儿庄区\"},{\"code\":\"370406\",\"name\":\"山亭区\"},{\"code\":\"370481\",\"name\":\"滕州市\"}]},{\"code\":\"3705\",\"name\":\"东营市\",\"childs\":[{\"code\":\"370502\",\"name\":\"东营区\"},{\"code\":\"370503\",\"name\":\"河口区\"},{\"code\":\"370505\",\"name\":\"垦利区\"},{\"code\":\"370522\",\"name\":\"利津县\"},{\"code\":\"370523\",\"name\":\"广饶县\"}]},{\"code\":\"3706\",\"name\":\"烟台市\",\"childs\":[{\"code\":\"370602\",\"name\":\"芝罘区\"},{\"code\":\"370611\",\"name\":\"福山区\"},{\"code\":\"370612\",\"name\":\"牟平区\"},{\"code\":\"370613\",\"name\":\"莱山区\"},{\"code\":\"370634\",\"name\":\"长岛县\"},{\"code\":\"370681\",\"name\":\"龙口市\"},{\"code\":\"370682\",\"name\":\"莱阳市\"},{\"code\":\"370683\",\"name\":\"莱州市\"},{\"code\":\"370684\",\"name\":\"蓬莱市\"},{\"code\":\"370685\",\"name\":\"招远市\"},{\"code\":\"370686\",\"name\":\"栖霞市\"},{\"code\":\"370687\",\"name\":\"海阳市\"}]},{\"code\":\"3707\",\"name\":\"潍坊市\",\"childs\":[{\"code\":\"370702\",\"name\":\"潍城区\"},{\"code\":\"370703\",\"name\":\"寒亭区\"},{\"code\":\"370704\",\"name\":\"坊子区\"},{\"code\":\"370705\",\"name\":\"奎文区\"},{\"code\":\"370724\",\"name\":\"临朐县\"},{\"code\":\"370725\",\"name\":\"昌乐县\"},{\"code\":\"370781\",\"name\":\"青州市\"},{\"code\":\"370782\",\"name\":\"诸城市\"},{\"code\":\"370783\",\"name\":\"寿光市\"},{\"code\":\"370784\",\"name\":\"安丘市\"},{\"code\":\"370785\",\"name\":\"高密市\"},{\"code\":\"370786\",\"name\":\"昌邑市\"}]},{\"code\":\"3708\",\"name\":\"济宁市\",\"childs\":[{\"code\":\"370811\",\"name\":\"任城区\"},{\"code\":\"370812\",\"name\":\"兖州区\"},{\"code\":\"370826\",\"name\":\"微山县\"},{\"code\":\"370827\",\"name\":\"鱼台县\"},{\"code\":\"370828\",\"name\":\"金乡县\"},{\"code\":\"370829\",\"name\":\"嘉祥县\"},{\"code\":\"370830\",\"name\":\"汶上县\"},{\"code\":\"370831\",\"name\":\"泗水县\"},{\"code\":\"370832\",\"name\":\"梁山县\"},{\"code\":\"370881\",\"name\":\"曲阜市\"},{\"code\":\"370883\",\"name\":\"邹城市\"}]},{\"code\":\"3709\",\"name\":\"泰安市\",\"childs\":[{\"code\":\"370902\",\"name\":\"泰山区\"},{\"code\":\"370911\",\"name\":\"岱岳区\"},{\"code\":\"370921\",\"name\":\"宁阳县\"},{\"code\":\"370923\",\"name\":\"东平县\"},{\"code\":\"370982\",\"name\":\"新泰市\"},{\"code\":\"370983\",\"name\":\"肥城市\"}]},{\"code\":\"3710\",\"name\":\"威海市\",\"childs\":[{\"code\":\"371002\",\"name\":\"环翠区\"},{\"code\":\"371003\",\"name\":\"文登区\"},{\"code\":\"371082\",\"name\":\"荣成市\"},{\"code\":\"371083\",\"name\":\"乳山市\"}]},{\"code\":\"3711\",\"name\":\"日照市\",\"childs\":[{\"code\":\"371102\",\"name\":\"东港区\"},{\"code\":\"371103\",\"name\":\"岚山区\"},{\"code\":\"371121\",\"name\":\"五莲县\"},{\"code\":\"371122\",\"name\":\"莒县\"}]},{\"code\":\"3712\",\"name\":\"莱芜市\",\"childs\":[{\"code\":\"371202\",\"name\":\"莱城区\"},{\"code\":\"371203\",\"name\":\"钢城区\"}]},{\"code\":\"3713\",\"name\":\"临沂市\",\"childs\":[{\"code\":\"371302\",\"name\":\"兰山区\"},{\"code\":\"371311\",\"name\":\"罗庄区\"},{\"code\":\"371312\",\"name\":\"河东区\"},{\"code\":\"371321\",\"name\":\"沂南县\"},{\"code\":\"371322\",\"name\":\"郯城县\"},{\"code\":\"371323\",\"name\":\"沂水县\"},{\"code\":\"371324\",\"name\":\"兰陵县\"},{\"code\":\"371325\",\"name\":\"费县\"},{\"code\":\"371326\",\"name\":\"平邑县\"},{\"code\":\"371327\",\"name\":\"莒南县\"},{\"code\":\"371328\",\"name\":\"蒙阴县\"},{\"code\":\"371329\",\"name\":\"临沭县\"}]},{\"code\":\"3714\",\"name\":\"德州市\",\"childs\":[{\"code\":\"371402\",\"name\":\"德城区\"},{\"code\":\"371403\",\"name\":\"陵城区\"},{\"code\":\"371422\",\"name\":\"宁津县\"},{\"code\":\"371423\",\"name\":\"庆云县\"},{\"code\":\"371424\",\"name\":\"临邑县\"},{\"code\":\"371425\",\"name\":\"齐河县\"},{\"code\":\"371426\",\"name\":\"平原县\"},{\"code\":\"371427\",\"name\":\"夏津县\"},{\"code\":\"371428\",\"name\":\"武城县\"},{\"code\":\"371481\",\"name\":\"乐陵市\"},{\"code\":\"371482\",\"name\":\"禹城市\"}]},{\"code\":\"3715\",\"name\":\"聊城市\",\"childs\":[{\"code\":\"371502\",\"name\":\"东昌府区\"},{\"code\":\"371521\",\"name\":\"阳谷县\"},{\"code\":\"371522\",\"name\":\"莘县\"},{\"code\":\"371523\",\"name\":\"茌平县\"},{\"code\":\"371524\",\"name\":\"东阿县\"},{\"code\":\"371525\",\"name\":\"冠县\"},{\"code\":\"371526\",\"name\":\"高唐县\"},{\"code\":\"371581\",\"name\":\"临清市\"}]},{\"code\":\"3716\",\"name\":\"滨州市\",\"childs\":[{\"code\":\"371602\",\"name\":\"滨城区\"},{\"code\":\"371603\",\"name\":\"沾化区\"},{\"code\":\"371621\",\"name\":\"惠民县\"},{\"code\":\"371622\",\"name\":\"阳信县\"},{\"code\":\"371623\",\"name\":\"无棣县\"},{\"code\":\"371625\",\"name\":\"博兴县\"},{\"code\":\"371626\",\"name\":\"邹平县\"}]},{\"code\":\"3717\",\"name\":\"菏泽市\",\"childs\":[{\"code\":\"371702\",\"name\":\"牡丹区\"},{\"code\":\"371703\",\"name\":\"定陶区\"},{\"code\":\"371721\",\"name\":\"曹县\"},{\"code\":\"371722\",\"name\":\"单县\"},{\"code\":\"371723\",\"name\":\"成武县\"},{\"code\":\"371724\",\"name\":\"巨野县\"},{\"code\":\"371725\",\"name\":\"郓城县\"},{\"code\":\"371726\",\"name\":\"鄄城县\"},{\"code\":\"371728\",\"name\":\"东明县\"}]}]},{\"code\":\"41\",\"name\":\"河南省\",\"childs\":[{\"code\":\"4101\",\"name\":\"郑州市\",\"childs\":[{\"code\":\"410102\",\"name\":\"中原区\"},{\"code\":\"410103\",\"name\":\"二七区\"},{\"code\":\"410104\",\"name\":\"管城回族区\"},{\"code\":\"410105\",\"name\":\"金水区\"},{\"code\":\"410106\",\"name\":\"上街区\"},{\"code\":\"410108\",\"name\":\"惠济区\"},{\"code\":\"410122\",\"name\":\"中牟县\"},{\"code\":\"410181\",\"name\":\"巩义市\"},{\"code\":\"410182\",\"name\":\"荥阳市\"},{\"code\":\"410183\",\"name\":\"新密市\"},{\"code\":\"410184\",\"name\":\"新郑市\"},{\"code\":\"410185\",\"name\":\"登封市\"}]},{\"code\":\"4102\",\"name\":\"开封市\",\"childs\":[{\"code\":\"410202\",\"name\":\"龙亭区\"},{\"code\":\"410203\",\"name\":\"顺河回族区\"},{\"code\":\"410204\",\"name\":\"鼓楼区\"},{\"code\":\"410205\",\"name\":\"禹王台区\"},{\"code\":\"410211\",\"name\":\"金明区\"},{\"code\":\"410212\",\"name\":\"祥符区\"},{\"code\":\"410221\",\"name\":\"杞县\"},{\"code\":\"410222\",\"name\":\"通许县\"},{\"code\":\"410223\",\"name\":\"尉氏县\"},{\"code\":\"410225\",\"name\":\"兰考县\"}]},{\"code\":\"4103\",\"name\":\"洛阳市\",\"childs\":[{\"code\":\"410302\",\"name\":\"老城区\"},{\"code\":\"410303\",\"name\":\"西工区\"},{\"code\":\"410304\",\"name\":\"瀍河回族区\"},{\"code\":\"410305\",\"name\":\"涧西区\"},{\"code\":\"410306\",\"name\":\"吉利区\"},{\"code\":\"410311\",\"name\":\"洛龙区\"},{\"code\":\"410322\",\"name\":\"孟津县\"},{\"code\":\"410323\",\"name\":\"新安县\"},{\"code\":\"410324\",\"name\":\"栾川县\"},{\"code\":\"410325\",\"name\":\"嵩县\"},{\"code\":\"410326\",\"name\":\"汝阳县\"},{\"code\":\"410327\",\"name\":\"宜阳县\"},{\"code\":\"410328\",\"name\":\"洛宁县\"},{\"code\":\"410329\",\"name\":\"伊川县\"},{\"code\":\"410381\",\"name\":\"偃师市\"}]},{\"code\":\"4104\",\"name\":\"平顶山市\",\"childs\":[{\"code\":\"410402\",\"name\":\"新华区\"},{\"code\":\"410403\",\"name\":\"卫东区\"},{\"code\":\"410404\",\"name\":\"石龙区\"},{\"code\":\"410411\",\"name\":\"湛河区\"},{\"code\":\"410421\",\"name\":\"宝丰县\"},{\"code\":\"410422\",\"name\":\"叶县\"},{\"code\":\"410423\",\"name\":\"鲁山县\"},{\"code\":\"410425\",\"name\":\"郏县\"},{\"code\":\"410481\",\"name\":\"舞钢市\"},{\"code\":\"410482\",\"name\":\"汝州市\"}]},{\"code\":\"4105\",\"name\":\"安阳市\",\"childs\":[{\"code\":\"410502\",\"name\":\"文峰区\"},{\"code\":\"410503\",\"name\":\"北关区\"},{\"code\":\"410505\",\"name\":\"殷都区\"},{\"code\":\"410506\",\"name\":\"龙安区\"},{\"code\":\"410522\",\"name\":\"安阳县\"},{\"code\":\"410523\",\"name\":\"汤阴县\"},{\"code\":\"410526\",\"name\":\"滑县\"},{\"code\":\"410527\",\"name\":\"内黄县\"},{\"code\":\"410581\",\"name\":\"林州市\"}]},{\"code\":\"4106\",\"name\":\"鹤壁市\",\"childs\":[{\"code\":\"410602\",\"name\":\"鹤山区\"},{\"code\":\"410603\",\"name\":\"山城区\"},{\"code\":\"410611\",\"name\":\"淇滨区\"},{\"code\":\"410621\",\"name\":\"浚县\"},{\"code\":\"410622\",\"name\":\"淇县\"}]},{\"code\":\"4107\",\"name\":\"新乡市\",\"childs\":[{\"code\":\"410702\",\"name\":\"红旗区\"},{\"code\":\"410703\",\"name\":\"卫滨区\"},{\"code\":\"410704\",\"name\":\"凤泉区\"},{\"code\":\"410711\",\"name\":\"牧野区\"},{\"code\":\"410721\",\"name\":\"新乡县\"},{\"code\":\"410724\",\"name\":\"获嘉县\"},{\"code\":\"410725\",\"name\":\"原阳县\"},{\"code\":\"410726\",\"name\":\"延津县\"},{\"code\":\"410727\",\"name\":\"封丘县\"},{\"code\":\"410728\",\"name\":\"长垣县\"},{\"code\":\"410781\",\"name\":\"卫辉市\"},{\"code\":\"410782\",\"name\":\"辉县市\"}]},{\"code\":\"4108\",\"name\":\"焦作市\",\"childs\":[{\"code\":\"410802\",\"name\":\"解放区\"},{\"code\":\"410803\",\"name\":\"中站区\"},{\"code\":\"410804\",\"name\":\"马村区\"},{\"code\":\"410811\",\"name\":\"山阳区\"},{\"code\":\"410821\",\"name\":\"修武县\"},{\"code\":\"410822\",\"name\":\"博爱县\"},{\"code\":\"410823\",\"name\":\"武陟县\"},{\"code\":\"410825\",\"name\":\"温县\"},{\"code\":\"410882\",\"name\":\"沁阳市\"},{\"code\":\"410883\",\"name\":\"孟州市\"}]},{\"code\":\"4109\",\"name\":\"濮阳市\",\"childs\":[{\"code\":\"410902\",\"name\":\"华龙区\"},{\"code\":\"410922\",\"name\":\"清丰县\"},{\"code\":\"410923\",\"name\":\"南乐县\"},{\"code\":\"410926\",\"name\":\"范县\"},{\"code\":\"410927\",\"name\":\"台前县\"},{\"code\":\"410928\",\"name\":\"濮阳县\"}]},{\"code\":\"4110\",\"name\":\"许昌市\",\"childs\":[{\"code\":\"411002\",\"name\":\"魏都区\"},{\"code\":\"411023\",\"name\":\"许昌县\"},{\"code\":\"411024\",\"name\":\"鄢陵县\"},{\"code\":\"411025\",\"name\":\"襄城县\"},{\"code\":\"411081\",\"name\":\"禹州市\"},{\"code\":\"411082\",\"name\":\"长葛市\"}]},{\"code\":\"4111\",\"name\":\"漯河市\",\"childs\":[{\"code\":\"411102\",\"name\":\"源汇区\"},{\"code\":\"411103\",\"name\":\"郾城区\"},{\"code\":\"411104\",\"name\":\"召陵区\"},{\"code\":\"411121\",\"name\":\"舞阳县\"},{\"code\":\"411122\",\"name\":\"临颍县\"}]},{\"code\":\"4112\",\"name\":\"三门峡市\",\"childs\":[{\"code\":\"411202\",\"name\":\"湖滨区\"},{\"code\":\"411203\",\"name\":\"陕州区\"},{\"code\":\"411221\",\"name\":\"渑池县\"},{\"code\":\"411224\",\"name\":\"卢氏县\"},{\"code\":\"411281\",\"name\":\"义马市\"},{\"code\":\"411282\",\"name\":\"灵宝市\"}]},{\"code\":\"4113\",\"name\":\"南阳市\",\"childs\":[{\"code\":\"411302\",\"name\":\"宛城区\"},{\"code\":\"411303\",\"name\":\"卧龙区\"},{\"code\":\"411321\",\"name\":\"南召县\"},{\"code\":\"411322\",\"name\":\"方城县\"},{\"code\":\"411323\",\"name\":\"西峡县\"},{\"code\":\"411324\",\"name\":\"镇平县\"},{\"code\":\"411325\",\"name\":\"内乡县\"},{\"code\":\"411326\",\"name\":\"淅川县\"},{\"code\":\"411327\",\"name\":\"社旗县\"},{\"code\":\"411328\",\"name\":\"唐河县\"},{\"code\":\"411329\",\"name\":\"新野县\"},{\"code\":\"411330\",\"name\":\"桐柏县\"},{\"code\":\"411381\",\"name\":\"邓州市\"}]},{\"code\":\"4114\",\"name\":\"商丘市\",\"childs\":[{\"code\":\"411402\",\"name\":\"梁园区\"},{\"code\":\"411403\",\"name\":\"睢阳区\"},{\"code\":\"411421\",\"name\":\"民权县\"},{\"code\":\"411422\",\"name\":\"睢县\"},{\"code\":\"411423\",\"name\":\"宁陵县\"},{\"code\":\"411424\",\"name\":\"柘城县\"},{\"code\":\"411425\",\"name\":\"虞城县\"},{\"code\":\"411426\",\"name\":\"夏邑县\"},{\"code\":\"411481\",\"name\":\"永城市\"}]},{\"code\":\"4115\",\"name\":\"信阳市\",\"childs\":[{\"code\":\"411502\",\"name\":\"浉河区\"},{\"code\":\"411503\",\"name\":\"平桥区\"},{\"code\":\"411521\",\"name\":\"罗山县\"},{\"code\":\"411522\",\"name\":\"光山县\"},{\"code\":\"411523\",\"name\":\"新县\"},{\"code\":\"411524\",\"name\":\"商城县\"},{\"code\":\"411525\",\"name\":\"固始县\"},{\"code\":\"411526\",\"name\":\"潢川县\"},{\"code\":\"411527\",\"name\":\"淮滨县\"},{\"code\":\"411528\",\"name\":\"息县\"}]},{\"code\":\"4116\",\"name\":\"周口市\",\"childs\":[{\"code\":\"411602\",\"name\":\"川汇区\"},{\"code\":\"411621\",\"name\":\"扶沟县\"},{\"code\":\"411622\",\"name\":\"西华县\"},{\"code\":\"411623\",\"name\":\"商水县\"},{\"code\":\"411624\",\"name\":\"沈丘县\"},{\"code\":\"411625\",\"name\":\"郸城县\"},{\"code\":\"411626\",\"name\":\"淮阳县\"},{\"code\":\"411627\",\"name\":\"太康县\"},{\"code\":\"411628\",\"name\":\"鹿邑县\"},{\"code\":\"411681\",\"name\":\"项城市\"}]},{\"code\":\"4117\",\"name\":\"驻马店市\",\"childs\":[{\"code\":\"411702\",\"name\":\"驿城区\"},{\"code\":\"411721\",\"name\":\"西平县\"},{\"code\":\"411722\",\"name\":\"上蔡县\"},{\"code\":\"411723\",\"name\":\"平舆县\"},{\"code\":\"411724\",\"name\":\"正阳县\"},{\"code\":\"411725\",\"name\":\"确山县\"},{\"code\":\"411726\",\"name\":\"泌阳县\"},{\"code\":\"411727\",\"name\":\"汝南县\"},{\"code\":\"411728\",\"name\":\"遂平县\"},{\"code\":\"411729\",\"name\":\"新蔡县\"}]},{\"code\":\"4190\",\"name\":\"省直辖县级行政区划\",\"childs\":[{\"code\":\"419001\",\"name\":\"济源市\"}]}]},{\"code\":\"42\",\"name\":\"湖北省\",\"childs\":[{\"code\":\"4201\",\"name\":\"武汉市\",\"childs\":[{\"code\":\"420102\",\"name\":\"江岸区\"},{\"code\":\"420103\",\"name\":\"江汉区\"},{\"code\":\"420104\",\"name\":\"硚口区\"},{\"code\":\"420105\",\"name\":\"汉阳区\"},{\"code\":\"420106\",\"name\":\"武昌区\"},{\"code\":\"420107\",\"name\":\"青山区\"},{\"code\":\"420111\",\"name\":\"洪山区\"},{\"code\":\"420112\",\"name\":\"东西湖区\"},{\"code\":\"420113\",\"name\":\"汉南区\"},{\"code\":\"420114\",\"name\":\"蔡甸区\"},{\"code\":\"420115\",\"name\":\"江夏区\"},{\"code\":\"420116\",\"name\":\"黄陂区\"},{\"code\":\"420117\",\"name\":\"新洲区\"}]},{\"code\":\"4202\",\"name\":\"黄石市\",\"childs\":[{\"code\":\"420202\",\"name\":\"黄石港区\"},{\"code\":\"420203\",\"name\":\"西塞山区\"},{\"code\":\"420204\",\"name\":\"下陆区\"},{\"code\":\"420205\",\"name\":\"铁山区\"},{\"code\":\"420222\",\"name\":\"阳新县\"},{\"code\":\"420281\",\"name\":\"大冶市\"}]},{\"code\":\"4203\",\"name\":\"十堰市\",\"childs\":[{\"code\":\"420302\",\"name\":\"茅箭区\"},{\"code\":\"420303\",\"name\":\"张湾区\"},{\"code\":\"420304\",\"name\":\"郧阳区\"},{\"code\":\"420322\",\"name\":\"郧西县\"},{\"code\":\"420323\",\"name\":\"竹山县\"},{\"code\":\"420324\",\"name\":\"竹溪县\"},{\"code\":\"420325\",\"name\":\"房县\"},{\"code\":\"420381\",\"name\":\"丹江口市\"}]},{\"code\":\"4205\",\"name\":\"宜昌市\",\"childs\":[{\"code\":\"420502\",\"name\":\"西陵区\"},{\"code\":\"420503\",\"name\":\"伍家岗区\"},{\"code\":\"420504\",\"name\":\"点军区\"},{\"code\":\"420505\",\"name\":\"猇亭区\"},{\"code\":\"420506\",\"name\":\"夷陵区\"},{\"code\":\"420525\",\"name\":\"远安县\"},{\"code\":\"420526\",\"name\":\"兴山县\"},{\"code\":\"420527\",\"name\":\"秭归县\"},{\"code\":\"420528\",\"name\":\"长阳土家族自治县\"},{\"code\":\"420529\",\"name\":\"五峰土家族自治县\"},{\"code\":\"420581\",\"name\":\"宜都市\"},{\"code\":\"420582\",\"name\":\"当阳市\"},{\"code\":\"420583\",\"name\":\"枝江市\"}]},{\"code\":\"4206\",\"name\":\"襄阳市\",\"childs\":[{\"code\":\"420602\",\"name\":\"襄城区\"},{\"code\":\"420606\",\"name\":\"樊城区\"},{\"code\":\"420607\",\"name\":\"襄州区\"},{\"code\":\"420624\",\"name\":\"南漳县\"},{\"code\":\"420625\",\"name\":\"谷城县\"},{\"code\":\"420626\",\"name\":\"保康县\"},{\"code\":\"420682\",\"name\":\"老河口市\"},{\"code\":\"420683\",\"name\":\"枣阳市\"},{\"code\":\"420684\",\"name\":\"宜城市\"}]},{\"code\":\"4207\",\"name\":\"鄂州市\",\"childs\":[{\"code\":\"420702\",\"name\":\"梁子湖区\"},{\"code\":\"420703\",\"name\":\"华容区\"},{\"code\":\"420704\",\"name\":\"鄂城区\"}]},{\"code\":\"4208\",\"name\":\"荆门市\",\"childs\":[{\"code\":\"420802\",\"name\":\"东宝区\"},{\"code\":\"420804\",\"name\":\"掇刀区\"},{\"code\":\"420821\",\"name\":\"京山县\"},{\"code\":\"420822\",\"name\":\"沙洋县\"},{\"code\":\"420881\",\"name\":\"钟祥市\"}]},{\"code\":\"4209\",\"name\":\"孝感市\",\"childs\":[{\"code\":\"420902\",\"name\":\"孝南区\"},{\"code\":\"420921\",\"name\":\"孝昌县\"},{\"code\":\"420922\",\"name\":\"大悟县\"},{\"code\":\"420923\",\"name\":\"云梦县\"},{\"code\":\"420981\",\"name\":\"应城市\"},{\"code\":\"420982\",\"name\":\"安陆市\"},{\"code\":\"420984\",\"name\":\"汉川市\"}]},{\"code\":\"4210\",\"name\":\"荆州市\",\"childs\":[{\"code\":\"421002\",\"name\":\"沙市区\"},{\"code\":\"421003\",\"name\":\"荆州区\"},{\"code\":\"421022\",\"name\":\"公安县\"},{\"code\":\"421023\",\"name\":\"监利县\"},{\"code\":\"421024\",\"name\":\"江陵县\"},{\"code\":\"421081\",\"name\":\"石首市\"},{\"code\":\"421083\",\"name\":\"洪湖市\"},{\"code\":\"421087\",\"name\":\"松滋市\"}]},{\"code\":\"4211\",\"name\":\"黄冈市\",\"childs\":[{\"code\":\"421102\",\"name\":\"黄州区\"},{\"code\":\"421121\",\"name\":\"团风县\"},{\"code\":\"421122\",\"name\":\"红安县\"},{\"code\":\"421123\",\"name\":\"罗田县\"},{\"code\":\"421124\",\"name\":\"英山县\"},{\"code\":\"421125\",\"name\":\"浠水县\"},{\"code\":\"421126\",\"name\":\"蕲春县\"},{\"code\":\"421127\",\"name\":\"黄梅县\"},{\"code\":\"421181\",\"name\":\"麻城市\"},{\"code\":\"421182\",\"name\":\"武穴市\"}]},{\"code\":\"4212\",\"name\":\"咸宁市\",\"childs\":[{\"code\":\"421202\",\"name\":\"咸安区\"},{\"code\":\"421221\",\"name\":\"嘉鱼县\"},{\"code\":\"421222\",\"name\":\"通城县\"},{\"code\":\"421223\",\"name\":\"崇阳县\"},{\"code\":\"421224\",\"name\":\"通山县\"},{\"code\":\"421281\",\"name\":\"赤壁市\"}]},{\"code\":\"4213\",\"name\":\"随州市\",\"childs\":[{\"code\":\"421303\",\"name\":\"曾都区\"},{\"code\":\"421321\",\"name\":\"随县\"},{\"code\":\"421381\",\"name\":\"广水市\"}]},{\"code\":\"4228\",\"name\":\"恩施土家族苗族自治州\",\"childs\":[{\"code\":\"422801\",\"name\":\"恩施市\"},{\"code\":\"422802\",\"name\":\"利川市\"},{\"code\":\"422822\",\"name\":\"建始县\"},{\"code\":\"422823\",\"name\":\"巴东县\"},{\"code\":\"422825\",\"name\":\"宣恩县\"},{\"code\":\"422826\",\"name\":\"咸丰县\"},{\"code\":\"422827\",\"name\":\"来凤县\"},{\"code\":\"422828\",\"name\":\"鹤峰县\"}]},{\"code\":\"4290\",\"name\":\"省直辖县级行政区划\",\"childs\":[{\"code\":\"429004\",\"name\":\"仙桃市\"},{\"code\":\"429005\",\"name\":\"潜江市\"},{\"code\":\"429006\",\"name\":\"天门市\"},{\"code\":\"429021\",\"name\":\"神农架林区\"}]}]},{\"code\":\"43\",\"name\":\"湖南省\",\"childs\":[{\"code\":\"4301\",\"name\":\"长沙市\",\"childs\":[{\"code\":\"430102\",\"name\":\"芙蓉区\"},{\"code\":\"430103\",\"name\":\"天心区\"},{\"code\":\"430104\",\"name\":\"岳麓区\"},{\"code\":\"430105\",\"name\":\"开福区\"},{\"code\":\"430111\",\"name\":\"雨花区\"},{\"code\":\"430112\",\"name\":\"望城区\"},{\"code\":\"430121\",\"name\":\"长沙县\"},{\"code\":\"430124\",\"name\":\"宁乡县\"},{\"code\":\"430181\",\"name\":\"浏阳市\"}]},{\"code\":\"4302\",\"name\":\"株洲市\",\"childs\":[{\"code\":\"430202\",\"name\":\"荷塘区\"},{\"code\":\"430203\",\"name\":\"芦淞区\"},{\"code\":\"430204\",\"name\":\"石峰区\"},{\"code\":\"430211\",\"name\":\"天元区\"},{\"code\":\"430221\",\"name\":\"株洲县\"},{\"code\":\"430223\",\"name\":\"攸县\"},{\"code\":\"430224\",\"name\":\"茶陵县\"},{\"code\":\"430225\",\"name\":\"炎陵县\"},{\"code\":\"430281\",\"name\":\"醴陵市\"}]},{\"code\":\"4303\",\"name\":\"湘潭市\",\"childs\":[{\"code\":\"430302\",\"name\":\"雨湖区\"},{\"code\":\"430304\",\"name\":\"岳塘区\"},{\"code\":\"430321\",\"name\":\"湘潭县\"},{\"code\":\"430381\",\"name\":\"湘乡市\"},{\"code\":\"430382\",\"name\":\"韶山市\"}]},{\"code\":\"4304\",\"name\":\"衡阳市\",\"childs\":[{\"code\":\"430405\",\"name\":\"珠晖区\"},{\"code\":\"430406\",\"name\":\"雁峰区\"},{\"code\":\"430407\",\"name\":\"石鼓区\"},{\"code\":\"430408\",\"name\":\"蒸湘区\"},{\"code\":\"430412\",\"name\":\"南岳区\"},{\"code\":\"430421\",\"name\":\"衡阳县\"},{\"code\":\"430422\",\"name\":\"衡南县\"},{\"code\":\"430423\",\"name\":\"衡山县\"},{\"code\":\"430424\",\"name\":\"衡东县\"},{\"code\":\"430426\",\"name\":\"祁东县\"},{\"code\":\"430481\",\"name\":\"耒阳市\"},{\"code\":\"430482\",\"name\":\"常宁市\"}]},{\"code\":\"4305\",\"name\":\"邵阳市\",\"childs\":[{\"code\":\"430502\",\"name\":\"双清区\"},{\"code\":\"430503\",\"name\":\"大祥区\"},{\"code\":\"430511\",\"name\":\"北塔区\"},{\"code\":\"430521\",\"name\":\"邵东县\"},{\"code\":\"430522\",\"name\":\"新邵县\"},{\"code\":\"430523\",\"name\":\"邵阳县\"},{\"code\":\"430524\",\"name\":\"隆回县\"},{\"code\":\"430525\",\"name\":\"洞口县\"},{\"code\":\"430527\",\"name\":\"绥宁县\"},{\"code\":\"430528\",\"name\":\"新宁县\"},{\"code\":\"430529\",\"name\":\"城步苗族自治县\"},{\"code\":\"430581\",\"name\":\"武冈市\"}]},{\"code\":\"4306\",\"name\":\"岳阳市\",\"childs\":[{\"code\":\"430602\",\"name\":\"岳阳楼区\"},{\"code\":\"430603\",\"name\":\"云溪区\"},{\"code\":\"430611\",\"name\":\"君山区\"},{\"code\":\"430621\",\"name\":\"岳阳县\"},{\"code\":\"430623\",\"name\":\"华容县\"},{\"code\":\"430624\",\"name\":\"湘阴县\"},{\"code\":\"430626\",\"name\":\"平江县\"},{\"code\":\"430681\",\"name\":\"汨罗市\"},{\"code\":\"430682\",\"name\":\"临湘市\"}]},{\"code\":\"4307\",\"name\":\"常德市\",\"childs\":[{\"code\":\"430702\",\"name\":\"武陵区\"},{\"code\":\"430703\",\"name\":\"鼎城区\"},{\"code\":\"430721\",\"name\":\"安乡县\"},{\"code\":\"430722\",\"name\":\"汉寿县\"},{\"code\":\"430723\",\"name\":\"澧县\"},{\"code\":\"430724\",\"name\":\"临澧县\"},{\"code\":\"430725\",\"name\":\"桃源县\"},{\"code\":\"430726\",\"name\":\"石门县\"},{\"code\":\"430781\",\"name\":\"津市市\"}]},{\"code\":\"4308\",\"name\":\"张家界市\",\"childs\":[{\"code\":\"430802\",\"name\":\"永定区\"},{\"code\":\"430811\",\"name\":\"武陵源区\"},{\"code\":\"430821\",\"name\":\"慈利县\"},{\"code\":\"430822\",\"name\":\"桑植县\"}]},{\"code\":\"4309\",\"name\":\"益阳市\",\"childs\":[{\"code\":\"430902\",\"name\":\"资阳区\"},{\"code\":\"430903\",\"name\":\"赫山区\"},{\"code\":\"430921\",\"name\":\"南县\"},{\"code\":\"430922\",\"name\":\"桃江县\"},{\"code\":\"430923\",\"name\":\"安化县\"},{\"code\":\"430981\",\"name\":\"沅江市\"}]},{\"code\":\"4310\",\"name\":\"郴州市\",\"childs\":[{\"code\":\"431002\",\"name\":\"北湖区\"},{\"code\":\"431003\",\"name\":\"苏仙区\"},{\"code\":\"431021\",\"name\":\"桂阳县\"},{\"code\":\"431022\",\"name\":\"宜章县\"},{\"code\":\"431023\",\"name\":\"永兴县\"},{\"code\":\"431024\",\"name\":\"嘉禾县\"},{\"code\":\"431025\",\"name\":\"临武县\"},{\"code\":\"431026\",\"name\":\"汝城县\"},{\"code\":\"431027\",\"name\":\"桂东县\"},{\"code\":\"431028\",\"name\":\"安仁县\"},{\"code\":\"431081\",\"name\":\"资兴市\"}]},{\"code\":\"4311\",\"name\":\"永州市\",\"childs\":[{\"code\":\"431102\",\"name\":\"零陵区\"},{\"code\":\"431103\",\"name\":\"冷水滩区\"},{\"code\":\"431121\",\"name\":\"祁阳县\"},{\"code\":\"431122\",\"name\":\"东安县\"},{\"code\":\"431123\",\"name\":\"双牌县\"},{\"code\":\"431124\",\"name\":\"道县\"},{\"code\":\"431125\",\"name\":\"江永县\"},{\"code\":\"431126\",\"name\":\"宁远县\"},{\"code\":\"431127\",\"name\":\"蓝山县\"},{\"code\":\"431128\",\"name\":\"新田县\"},{\"code\":\"431129\",\"name\":\"江华瑶族自治县\"}]},{\"code\":\"4312\",\"name\":\"怀化市\",\"childs\":[{\"code\":\"431202\",\"name\":\"鹤城区\"},{\"code\":\"431221\",\"name\":\"中方县\"},{\"code\":\"431222\",\"name\":\"沅陵县\"},{\"code\":\"431223\",\"name\":\"辰溪县\"},{\"code\":\"431224\",\"name\":\"溆浦县\"},{\"code\":\"431225\",\"name\":\"会同县\"},{\"code\":\"431226\",\"name\":\"麻阳苗族自治县\"},{\"code\":\"431227\",\"name\":\"新晃侗族自治县\"},{\"code\":\"431228\",\"name\":\"芷江侗族自治县\"},{\"code\":\"431229\",\"name\":\"靖州苗族侗族自治县\"},{\"code\":\"431230\",\"name\":\"通道侗族自治县\"},{\"code\":\"431281\",\"name\":\"洪江市\"}]},{\"code\":\"4313\",\"name\":\"娄底市\",\"childs\":[{\"code\":\"431302\",\"name\":\"娄星区\"},{\"code\":\"431321\",\"name\":\"双峰县\"},{\"code\":\"431322\",\"name\":\"新化县\"},{\"code\":\"431381\",\"name\":\"冷水江市\"},{\"code\":\"431382\",\"name\":\"涟源市\"}]},{\"code\":\"4331\",\"name\":\"湘西土家族苗族自治州\",\"childs\":[{\"code\":\"433101\",\"name\":\"吉首市\"},{\"code\":\"433122\",\"name\":\"泸溪县\"},{\"code\":\"433123\",\"name\":\"凤凰县\"},{\"code\":\"433124\",\"name\":\"花垣县\"},{\"code\":\"433125\",\"name\":\"保靖县\"},{\"code\":\"433126\",\"name\":\"古丈县\"},{\"code\":\"433127\",\"name\":\"永顺县\"},{\"code\":\"433130\",\"name\":\"龙山县\"}]}]},{\"code\":\"44\",\"name\":\"广东省\",\"childs\":[{\"code\":\"4401\",\"name\":\"广州市\",\"childs\":[{\"code\":\"440103\",\"name\":\"荔湾区\"},{\"code\":\"440104\",\"name\":\"越秀区\"},{\"code\":\"440105\",\"name\":\"海珠区\"},{\"code\":\"440106\",\"name\":\"天河区\"},{\"code\":\"440111\",\"name\":\"白云区\"},{\"code\":\"440112\",\"name\":\"黄埔区\"},{\"code\":\"440113\",\"name\":\"番禺区\"},{\"code\":\"440114\",\"name\":\"花都区\"},{\"code\":\"440115\",\"name\":\"南沙区\"},{\"code\":\"440117\",\"name\":\"从化区\"},{\"code\":\"440118\",\"name\":\"增城区\"}]},{\"code\":\"4402\",\"name\":\"韶关市\",\"childs\":[{\"code\":\"440203\",\"name\":\"武江区\"},{\"code\":\"440204\",\"name\":\"浈江区\"},{\"code\":\"440205\",\"name\":\"曲江区\"},{\"code\":\"440222\",\"name\":\"始兴县\"},{\"code\":\"440224\",\"name\":\"仁化县\"},{\"code\":\"440229\",\"name\":\"翁源县\"},{\"code\":\"440232\",\"name\":\"乳源瑶族自治县\"},{\"code\":\"440233\",\"name\":\"新丰县\"},{\"code\":\"440281\",\"name\":\"乐昌市\"},{\"code\":\"440282\",\"name\":\"南雄市\"}]},{\"code\":\"4403\",\"name\":\"深圳市\",\"childs\":[{\"code\":\"440303\",\"name\":\"罗湖区\"},{\"code\":\"440304\",\"name\":\"福田区\"},{\"code\":\"440305\",\"name\":\"南山区\"},{\"code\":\"440306\",\"name\":\"宝安区\"},{\"code\":\"440307\",\"name\":\"龙岗区\"},{\"code\":\"440308\",\"name\":\"盐田区\"}]},{\"code\":\"4404\",\"name\":\"珠海市\",\"childs\":[{\"code\":\"440402\",\"name\":\"香洲区\"},{\"code\":\"440403\",\"name\":\"斗门区\"},{\"code\":\"440404\",\"name\":\"金湾区\"}]},{\"code\":\"4405\",\"name\":\"汕头市\",\"childs\":[{\"code\":\"440507\",\"name\":\"龙湖区\"},{\"code\":\"440511\",\"name\":\"金平区\"},{\"code\":\"440512\",\"name\":\"濠江区\"},{\"code\":\"440513\",\"name\":\"潮阳区\"},{\"code\":\"440514\",\"name\":\"潮南区\"},{\"code\":\"440515\",\"name\":\"澄海区\"},{\"code\":\"440523\",\"name\":\"南澳县\"}]},{\"code\":\"4406\",\"name\":\"佛山市\",\"childs\":[{\"code\":\"440604\",\"name\":\"禅城区\"},{\"code\":\"440605\",\"name\":\"南海区\"},{\"code\":\"440606\",\"name\":\"顺德区\"},{\"code\":\"440607\",\"name\":\"三水区\"},{\"code\":\"440608\",\"name\":\"高明区\"}]},{\"code\":\"4407\",\"name\":\"江门市\",\"childs\":[{\"code\":\"440703\",\"name\":\"蓬江区\"},{\"code\":\"440704\",\"name\":\"江海区\"},{\"code\":\"440705\",\"name\":\"新会区\"},{\"code\":\"440781\",\"name\":\"台山市\"},{\"code\":\"440783\",\"name\":\"开平市\"},{\"code\":\"440784\",\"name\":\"鹤山市\"},{\"code\":\"440785\",\"name\":\"恩平市\"}]},{\"code\":\"4408\",\"name\":\"湛江市\",\"childs\":[{\"code\":\"440802\",\"name\":\"赤坎区\"},{\"code\":\"440803\",\"name\":\"霞山区\"},{\"code\":\"440804\",\"name\":\"坡头区\"},{\"code\":\"440811\",\"name\":\"麻章区\"},{\"code\":\"440823\",\"name\":\"遂溪县\"},{\"code\":\"440825\",\"name\":\"徐闻县\"},{\"code\":\"440881\",\"name\":\"廉江市\"},{\"code\":\"440882\",\"name\":\"雷州市\"},{\"code\":\"440883\",\"name\":\"吴川市\"}]},{\"code\":\"4409\",\"name\":\"茂名市\",\"childs\":[{\"code\":\"440902\",\"name\":\"茂南区\"},{\"code\":\"440904\",\"name\":\"电白区\"},{\"code\":\"440981\",\"name\":\"高州市\"},{\"code\":\"440982\",\"name\":\"化州市\"},{\"code\":\"440983\",\"name\":\"信宜市\"}]},{\"code\":\"4412\",\"name\":\"肇庆市\",\"childs\":[{\"code\":\"441202\",\"name\":\"端州区\"},{\"code\":\"441203\",\"name\":\"鼎湖区\"},{\"code\":\"441204\",\"name\":\"高要区\"},{\"code\":\"441223\",\"name\":\"广宁县\"},{\"code\":\"441224\",\"name\":\"怀集县\"},{\"code\":\"441225\",\"name\":\"封开县\"},{\"code\":\"441226\",\"name\":\"德庆县\"},{\"code\":\"441284\",\"name\":\"四会市\"}]},{\"code\":\"4413\",\"name\":\"惠州市\",\"childs\":[{\"code\":\"441302\",\"name\":\"惠城区\"},{\"code\":\"441303\",\"name\":\"惠阳区\"},{\"code\":\"441322\",\"name\":\"博罗县\"},{\"code\":\"441323\",\"name\":\"惠东县\"},{\"code\":\"441324\",\"name\":\"龙门县\"}]},{\"code\":\"4414\",\"name\":\"梅州市\",\"childs\":[{\"code\":\"441402\",\"name\":\"梅江区\"},{\"code\":\"441403\",\"name\":\"梅县区\"},{\"code\":\"441422\",\"name\":\"大埔县\"},{\"code\":\"441423\",\"name\":\"丰顺县\"},{\"code\":\"441424\",\"name\":\"五华县\"},{\"code\":\"441426\",\"name\":\"平远县\"},{\"code\":\"441427\",\"name\":\"蕉岭县\"},{\"code\":\"441481\",\"name\":\"兴宁市\"}]},{\"code\":\"4415\",\"name\":\"汕尾市\",\"childs\":[{\"code\":\"441502\",\"name\":\"城区\"},{\"code\":\"441521\",\"name\":\"海丰县\"},{\"code\":\"441523\",\"name\":\"陆河县\"},{\"code\":\"441581\",\"name\":\"陆丰市\"}]},{\"code\":\"4416\",\"name\":\"河源市\",\"childs\":[{\"code\":\"441602\",\"name\":\"源城区\"},{\"code\":\"441621\",\"name\":\"紫金县\"},{\"code\":\"441622\",\"name\":\"龙川县\"},{\"code\":\"441623\",\"name\":\"连平县\"},{\"code\":\"441624\",\"name\":\"和平县\"},{\"code\":\"441625\",\"name\":\"东源县\"}]},{\"code\":\"4417\",\"name\":\"阳江市\",\"childs\":[{\"code\":\"441702\",\"name\":\"江城区\"},{\"code\":\"441704\",\"name\":\"阳东区\"},{\"code\":\"441721\",\"name\":\"阳西县\"},{\"code\":\"441781\",\"name\":\"阳春市\"}]},{\"code\":\"4418\",\"name\":\"清远市\",\"childs\":[{\"code\":\"441802\",\"name\":\"清城区\"},{\"code\":\"441803\",\"name\":\"清新区\"},{\"code\":\"441821\",\"name\":\"佛冈县\"},{\"code\":\"441823\",\"name\":\"阳山县\"},{\"code\":\"441825\",\"name\":\"连山壮族瑶族自治县\"},{\"code\":\"441826\",\"name\":\"连南瑶族自治县\"},{\"code\":\"441881\",\"name\":\"英德市\"},{\"code\":\"441882\",\"name\":\"连州市\"}]},{\"code\":\"441900\",\"name\":\"东莞市\",\"childs\":[{\"code\":\"441900003\",\"name\":\"东城街道办事处\"},{\"code\":\"441900004\",\"name\":\"南城街道办事处\"},{\"code\":\"441900005\",\"name\":\"万江街道办事处\"},{\"code\":\"441900006\",\"name\":\"莞城街道办事处\"},{\"code\":\"441900101\",\"name\":\"石碣镇\"},{\"code\":\"441900102\",\"name\":\"石龙镇\"},{\"code\":\"441900103\",\"name\":\"茶山镇\"},{\"code\":\"441900104\",\"name\":\"石排镇\"},{\"code\":\"441900105\",\"name\":\"企石镇\"},{\"code\":\"441900106\",\"name\":\"横沥镇\"},{\"code\":\"441900107\",\"name\":\"桥头镇\"},{\"code\":\"441900108\",\"name\":\"谢岗镇\"},{\"code\":\"441900109\",\"name\":\"东坑镇\"},{\"code\":\"441900110\",\"name\":\"常平镇\"},{\"code\":\"441900111\",\"name\":\"寮步镇\"},{\"code\":\"441900112\",\"name\":\"樟木头镇\"},{\"code\":\"441900113\",\"name\":\"大朗镇\"},{\"code\":\"441900114\",\"name\":\"黄江镇\"},{\"code\":\"441900115\",\"name\":\"清溪镇\"},{\"code\":\"441900116\",\"name\":\"塘厦镇\"},{\"code\":\"441900117\",\"name\":\"凤岗镇\"},{\"code\":\"441900118\",\"name\":\"大岭山镇\"},{\"code\":\"441900119\",\"name\":\"长安镇\"},{\"code\":\"441900121\",\"name\":\"虎门镇\"},{\"code\":\"441900122\",\"name\":\"厚街镇\"},{\"code\":\"441900123\",\"name\":\"沙田镇\"},{\"code\":\"441900124\",\"name\":\"道滘镇\"},{\"code\":\"441900125\",\"name\":\"洪梅镇\"},{\"code\":\"441900126\",\"name\":\"麻涌镇\"},{\"code\":\"441900127\",\"name\":\"望牛墩镇\"},{\"code\":\"441900128\",\"name\":\"中堂镇\"},{\"code\":\"441900129\",\"name\":\"高埗镇\"},{\"code\":\"441900401\",\"name\":\"松山湖管委会\"},{\"code\":\"441900402\",\"name\":\"虎门港管委会\"},{\"code\":\"441900403\",\"name\":\"东莞生态园\"}]},{\"code\":\"442000\",\"name\":\"中山市\",\"childs\":[{\"code\":\"442000001\",\"name\":\"石岐区街道办事处\"},{\"code\":\"442000002\",\"name\":\"东区街道办事处\"},{\"code\":\"442000003\",\"name\":\"火炬开发区街道办事处\"},{\"code\":\"442000004\",\"name\":\"西区街道办事处\"},{\"code\":\"442000005\",\"name\":\"南区街道办事处\"},{\"code\":\"442000006\",\"name\":\"五桂山街道办事处\"},{\"code\":\"442000100\",\"name\":\"小榄镇\"},{\"code\":\"442000101\",\"name\":\"黄圃镇\"},{\"code\":\"442000102\",\"name\":\"民众镇\"},{\"code\":\"442000103\",\"name\":\"东凤镇\"},{\"code\":\"442000104\",\"name\":\"东升镇\"},{\"code\":\"442000105\",\"name\":\"古镇镇\"},{\"code\":\"442000106\",\"name\":\"沙溪镇\"},{\"code\":\"442000107\",\"name\":\"坦洲镇\"},{\"code\":\"442000108\",\"name\":\"港口镇\"},{\"code\":\"442000109\",\"name\":\"三角镇\"},{\"code\":\"442000110\",\"name\":\"横栏镇\"},{\"code\":\"442000111\",\"name\":\"南头镇\"},{\"code\":\"442000112\",\"name\":\"阜沙镇\"},{\"code\":\"442000113\",\"name\":\"南朗镇\"},{\"code\":\"442000114\",\"name\":\"三乡镇\"},{\"code\":\"442000115\",\"name\":\"板芙镇\"},{\"code\":\"442000116\",\"name\":\"大涌镇\"},{\"code\":\"442000117\",\"name\":\"神湾镇\"}]},{\"code\":\"4451\",\"name\":\"潮州市\",\"childs\":[{\"code\":\"445102\",\"name\":\"湘桥区\"},{\"code\":\"445103\",\"name\":\"潮安区\"},{\"code\":\"445122\",\"name\":\"饶平县\"}]},{\"code\":\"4452\",\"name\":\"揭阳市\",\"childs\":[{\"code\":\"445202\",\"name\":\"榕城区\"},{\"code\":\"445203\",\"name\":\"揭东区\"},{\"code\":\"445222\",\"name\":\"揭西县\"},{\"code\":\"445224\",\"name\":\"惠来县\"},{\"code\":\"445281\",\"name\":\"普宁市\"}]},{\"code\":\"4453\",\"name\":\"云浮市\",\"childs\":[{\"code\":\"445302\",\"name\":\"云城区\"},{\"code\":\"445303\",\"name\":\"云安区\"},{\"code\":\"445321\",\"name\":\"新兴县\"},{\"code\":\"445322\",\"name\":\"郁南县\"},{\"code\":\"445381\",\"name\":\"罗定市\"}]}]},{\"code\":\"45\",\"name\":\"广西壮族自治区\",\"childs\":[{\"code\":\"4501\",\"name\":\"南宁市\",\"childs\":[{\"code\":\"450102\",\"name\":\"兴宁区\"},{\"code\":\"450103\",\"name\":\"青秀区\"},{\"code\":\"450105\",\"name\":\"江南区\"},{\"code\":\"450107\",\"name\":\"西乡塘区\"},{\"code\":\"450108\",\"name\":\"良庆区\"},{\"code\":\"450109\",\"name\":\"邕宁区\"},{\"code\":\"450110\",\"name\":\"武鸣区\"},{\"code\":\"450123\",\"name\":\"隆安县\"},{\"code\":\"450124\",\"name\":\"马山县\"},{\"code\":\"450125\",\"name\":\"上林县\"},{\"code\":\"450126\",\"name\":\"宾阳县\"},{\"code\":\"450127\",\"name\":\"横县\"}]},{\"code\":\"4502\",\"name\":\"柳州市\",\"childs\":[{\"code\":\"450202\",\"name\":\"城中区\"},{\"code\":\"450203\",\"name\":\"鱼峰区\"},{\"code\":\"450204\",\"name\":\"柳南区\"},{\"code\":\"450205\",\"name\":\"柳北区\"},{\"code\":\"450206\",\"name\":\"柳江区\"},{\"code\":\"450222\",\"name\":\"柳城县\"},{\"code\":\"450223\",\"name\":\"鹿寨县\"},{\"code\":\"450224\",\"name\":\"融安县\"},{\"code\":\"450225\",\"name\":\"融水苗族自治县\"},{\"code\":\"450226\",\"name\":\"三江侗族自治县\"}]},{\"code\":\"4503\",\"name\":\"桂林市\",\"childs\":[{\"code\":\"450302\",\"name\":\"秀峰区\"},{\"code\":\"450303\",\"name\":\"叠彩区\"},{\"code\":\"450304\",\"name\":\"象山区\"},{\"code\":\"450305\",\"name\":\"七星区\"},{\"code\":\"450311\",\"name\":\"雁山区\"},{\"code\":\"450312\",\"name\":\"临桂区\"},{\"code\":\"450321\",\"name\":\"阳朔县\"},{\"code\":\"450323\",\"name\":\"灵川县\"},{\"code\":\"450324\",\"name\":\"全州县\"},{\"code\":\"450325\",\"name\":\"兴安县\"},{\"code\":\"450326\",\"name\":\"永福县\"},{\"code\":\"450327\",\"name\":\"灌阳县\"},{\"code\":\"450328\",\"name\":\"龙胜各族自治县\"},{\"code\":\"450329\",\"name\":\"资源县\"},{\"code\":\"450330\",\"name\":\"平乐县\"},{\"code\":\"450331\",\"name\":\"荔浦县\"},{\"code\":\"450332\",\"name\":\"恭城瑶族自治县\"}]},{\"code\":\"4504\",\"name\":\"梧州市\",\"childs\":[{\"code\":\"450403\",\"name\":\"万秀区\"},{\"code\":\"450405\",\"name\":\"长洲区\"},{\"code\":\"450406\",\"name\":\"龙圩区\"},{\"code\":\"450421\",\"name\":\"苍梧县\"},{\"code\":\"450422\",\"name\":\"藤县\"},{\"code\":\"450423\",\"name\":\"蒙山县\"},{\"code\":\"450481\",\"name\":\"岑溪市\"}]},{\"code\":\"4505\",\"name\":\"北海市\",\"childs\":[{\"code\":\"450502\",\"name\":\"海城区\"},{\"code\":\"450503\",\"name\":\"银海区\"},{\"code\":\"450512\",\"name\":\"铁山港区\"},{\"code\":\"450521\",\"name\":\"合浦县\"}]},{\"code\":\"4506\",\"name\":\"防城港市\",\"childs\":[{\"code\":\"450602\",\"name\":\"港口区\"},{\"code\":\"450603\",\"name\":\"防城区\"},{\"code\":\"450621\",\"name\":\"上思县\"},{\"code\":\"450681\",\"name\":\"东兴市\"}]},{\"code\":\"4507\",\"name\":\"钦州市\",\"childs\":[{\"code\":\"450702\",\"name\":\"钦南区\"},{\"code\":\"450703\",\"name\":\"钦北区\"},{\"code\":\"450721\",\"name\":\"灵山县\"},{\"code\":\"450722\",\"name\":\"浦北县\"}]},{\"code\":\"4508\",\"name\":\"贵港市\",\"childs\":[{\"code\":\"450802\",\"name\":\"港北区\"},{\"code\":\"450803\",\"name\":\"港南区\"},{\"code\":\"450804\",\"name\":\"覃塘区\"},{\"code\":\"450821\",\"name\":\"平南县\"},{\"code\":\"450881\",\"name\":\"桂平市\"}]},{\"code\":\"4509\",\"name\":\"玉林市\",\"childs\":[{\"code\":\"450902\",\"name\":\"玉州区\"},{\"code\":\"450903\",\"name\":\"福绵区\"},{\"code\":\"450921\",\"name\":\"容县\"},{\"code\":\"450922\",\"name\":\"陆川县\"},{\"code\":\"450923\",\"name\":\"博白县\"},{\"code\":\"450924\",\"name\":\"兴业县\"},{\"code\":\"450981\",\"name\":\"北流市\"}]},{\"code\":\"4510\",\"name\":\"百色市\",\"childs\":[{\"code\":\"451002\",\"name\":\"右江区\"},{\"code\":\"451021\",\"name\":\"田阳县\"},{\"code\":\"451022\",\"name\":\"田东县\"},{\"code\":\"451023\",\"name\":\"平果县\"},{\"code\":\"451024\",\"name\":\"德保县\"},{\"code\":\"451026\",\"name\":\"那坡县\"},{\"code\":\"451027\",\"name\":\"凌云县\"},{\"code\":\"451028\",\"name\":\"乐业县\"},{\"code\":\"451029\",\"name\":\"田林县\"},{\"code\":\"451030\",\"name\":\"西林县\"},{\"code\":\"451031\",\"name\":\"隆林各族自治县\"},{\"code\":\"451081\",\"name\":\"靖西市\"}]},{\"code\":\"4511\",\"name\":\"贺州市\",\"childs\":[{\"code\":\"451102\",\"name\":\"八步区\"},{\"code\":\"451103\",\"name\":\"平桂区\"},{\"code\":\"451121\",\"name\":\"昭平县\"},{\"code\":\"451122\",\"name\":\"钟山县\"},{\"code\":\"451123\",\"name\":\"富川瑶族自治县\"}]},{\"code\":\"4512\",\"name\":\"河池市\",\"childs\":[{\"code\":\"451202\",\"name\":\"金城江区\"},{\"code\":\"451221\",\"name\":\"南丹县\"},{\"code\":\"451222\",\"name\":\"天峨县\"},{\"code\":\"451223\",\"name\":\"凤山县\"},{\"code\":\"451224\",\"name\":\"东兰县\"},{\"code\":\"451225\",\"name\":\"罗城仫佬族自治县\"},{\"code\":\"451226\",\"name\":\"环江毛南族自治县\"},{\"code\":\"451227\",\"name\":\"巴马瑶族自治县\"},{\"code\":\"451228\",\"name\":\"都安瑶族自治县\"},{\"code\":\"451229\",\"name\":\"大化瑶族自治县\"},{\"code\":\"451281\",\"name\":\"宜州市\"}]},{\"code\":\"4513\",\"name\":\"来宾市\",\"childs\":[{\"code\":\"451302\",\"name\":\"兴宾区\"},{\"code\":\"451321\",\"name\":\"忻城县\"},{\"code\":\"451322\",\"name\":\"象州县\"},{\"code\":\"451323\",\"name\":\"武宣县\"},{\"code\":\"451324\",\"name\":\"金秀瑶族自治县\"},{\"code\":\"451381\",\"name\":\"合山市\"}]},{\"code\":\"4514\",\"name\":\"崇左市\",\"childs\":[{\"code\":\"451402\",\"name\":\"江州区\"},{\"code\":\"451421\",\"name\":\"扶绥县\"},{\"code\":\"451422\",\"name\":\"宁明县\"},{\"code\":\"451423\",\"name\":\"龙州县\"},{\"code\":\"451424\",\"name\":\"大新县\"},{\"code\":\"451425\",\"name\":\"天等县\"},{\"code\":\"451481\",\"name\":\"凭祥市\"}]}]},{\"code\":\"46\",\"name\":\"海南省\",\"childs\":[{\"code\":\"4601\",\"name\":\"海口市\",\"childs\":[{\"code\":\"460105\",\"name\":\"秀英区\"},{\"code\":\"460106\",\"name\":\"龙华区\"},{\"code\":\"460107\",\"name\":\"琼山区\"},{\"code\":\"460108\",\"name\":\"美兰区\"}]},{\"code\":\"4602\",\"name\":\"三亚市\",\"childs\":[{\"code\":\"460202\",\"name\":\"海棠区\"},{\"code\":\"460203\",\"name\":\"吉阳区\"},{\"code\":\"460204\",\"name\":\"天涯区\"},{\"code\":\"460205\",\"name\":\"崖州区\"}]},{\"code\":\"4603\",\"name\":\"三沙市\",\"childs\":[{\"code\":\"460321\",\"name\":\"西沙群岛\"},{\"code\":\"460322\",\"name\":\"南沙群岛\"},{\"code\":\"460323\",\"name\":\"中沙群岛的岛礁及其海域\"}]},{\"code\":\"460400\",\"name\":\"儋州市\",\"childs\":[{\"code\":\"460400100\",\"name\":\"那大镇\"},{\"code\":\"460400101\",\"name\":\"和庆镇\"},{\"code\":\"460400102\",\"name\":\"南丰镇\"},{\"code\":\"460400103\",\"name\":\"大成镇\"},{\"code\":\"460400104\",\"name\":\"雅星镇\"},{\"code\":\"460400105\",\"name\":\"兰洋镇\"},{\"code\":\"460400106\",\"name\":\"光村镇\"},{\"code\":\"460400107\",\"name\":\"木棠镇\"},{\"code\":\"460400108\",\"name\":\"海头镇\"},{\"code\":\"460400109\",\"name\":\"峨蔓镇\"},{\"code\":\"460400110\",\"name\":\"三都镇\"},{\"code\":\"460400111\",\"name\":\"王五镇\"},{\"code\":\"460400112\",\"name\":\"白马井镇\"},{\"code\":\"460400113\",\"name\":\"中和镇\"},{\"code\":\"460400114\",\"name\":\"排浦镇\"},{\"code\":\"460400115\",\"name\":\"东成镇\"},{\"code\":\"460400116\",\"name\":\"新州镇\"},{\"code\":\"460400400\",\"name\":\"国营西培农场\"},{\"code\":\"460400404\",\"name\":\"国营西联农场\"},{\"code\":\"460400405\",\"name\":\"国营蓝洋农场\"},{\"code\":\"460400407\",\"name\":\"国营八一农场\"},{\"code\":\"460400499\",\"name\":\"洋浦经济开发区\"},{\"code\":\"460400500\",\"name\":\"华南热作学院\"}]},{\"code\":\"4690\",\"name\":\"省直辖县级行政区划\",\"childs\":[{\"code\":\"469001\",\"name\":\"五指山市\"},{\"code\":\"469002\",\"name\":\"琼海市\"},{\"code\":\"469005\",\"name\":\"文昌市\"},{\"code\":\"469006\",\"name\":\"万宁市\"},{\"code\":\"469007\",\"name\":\"东方市\"},{\"code\":\"469021\",\"name\":\"定安县\"},{\"code\":\"469022\",\"name\":\"屯昌县\"},{\"code\":\"469023\",\"name\":\"澄迈县\"},{\"code\":\"469024\",\"name\":\"临高县\"},{\"code\":\"469025\",\"name\":\"白沙黎族自治县\"},{\"code\":\"469026\",\"name\":\"昌江黎族自治县\"},{\"code\":\"469027\",\"name\":\"乐东黎族自治县\"},{\"code\":\"469028\",\"name\":\"陵水黎族自治县\"},{\"code\":\"469029\",\"name\":\"保亭黎族苗族自治县\"},{\"code\":\"469030\",\"name\":\"琼中黎族苗族自治县\"}]}]},{\"code\":\"50\",\"name\":\"重庆市\",\"childs\":[{\"code\":\"5001\",\"name\":\"市辖区\",\"childs\":[{\"code\":\"500101\",\"name\":\"万州区\"},{\"code\":\"500102\",\"name\":\"涪陵区\"},{\"code\":\"500103\",\"name\":\"渝中区\"},{\"code\":\"500104\",\"name\":\"大渡口区\"},{\"code\":\"500105\",\"name\":\"江北区\"},{\"code\":\"500106\",\"name\":\"沙坪坝区\"},{\"code\":\"500107\",\"name\":\"九龙坡区\"},{\"code\":\"500108\",\"name\":\"南岸区\"},{\"code\":\"500109\",\"name\":\"北碚区\"},{\"code\":\"500110\",\"name\":\"綦江区\"},{\"code\":\"500111\",\"name\":\"大足区\"},{\"code\":\"500112\",\"name\":\"渝北区\"},{\"code\":\"500113\",\"name\":\"巴南区\"},{\"code\":\"500114\",\"name\":\"黔江区\"},{\"code\":\"500115\",\"name\":\"长寿区\"},{\"code\":\"500116\",\"name\":\"江津区\"},{\"code\":\"500117\",\"name\":\"合川区\"},{\"code\":\"500118\",\"name\":\"永川区\"},{\"code\":\"500119\",\"name\":\"南川区\"},{\"code\":\"500120\",\"name\":\"璧山区\"},{\"code\":\"500151\",\"name\":\"铜梁区\"},{\"code\":\"500152\",\"name\":\"潼南区\"},{\"code\":\"500153\",\"name\":\"荣昌区\"},{\"code\":\"500154\",\"name\":\"开州区\"}]},{\"code\":\"5002\",\"name\":\"县\",\"childs\":[{\"code\":\"500228\",\"name\":\"梁平县\"},{\"code\":\"500229\",\"name\":\"城口县\"},{\"code\":\"500230\",\"name\":\"丰都县\"},{\"code\":\"500231\",\"name\":\"垫江县\"},{\"code\":\"500232\",\"name\":\"武隆县\"},{\"code\":\"500233\",\"name\":\"忠县\"},{\"code\":\"500235\",\"name\":\"云阳县\"},{\"code\":\"500236\",\"name\":\"奉节县\"},{\"code\":\"500237\",\"name\":\"巫山县\"},{\"code\":\"500238\",\"name\":\"巫溪县\"},{\"code\":\"500240\",\"name\":\"石柱土家族自治县\"},{\"code\":\"500241\",\"name\":\"秀山土家族苗族自治县\"},{\"code\":\"500242\",\"name\":\"酉阳土家族苗族自治县\"},{\"code\":\"500243\",\"name\":\"彭水苗族土家族自治县\"}]}]},{\"code\":\"51\",\"name\":\"四川省\",\"childs\":[{\"code\":\"5101\",\"name\":\"成都市\",\"childs\":[{\"code\":\"510104\",\"name\":\"锦江区\"},{\"code\":\"510105\",\"name\":\"青羊区\"},{\"code\":\"510106\",\"name\":\"金牛区\"},{\"code\":\"510107\",\"name\":\"武侯区\"},{\"code\":\"510108\",\"name\":\"成华区\"},{\"code\":\"510112\",\"name\":\"龙泉驿区\"},{\"code\":\"510113\",\"name\":\"青白江区\"},{\"code\":\"510114\",\"name\":\"新都区\"},{\"code\":\"510115\",\"name\":\"温江区\"},{\"code\":\"510116\",\"name\":\"双流区\"},{\"code\":\"510121\",\"name\":\"金堂县\"},{\"code\":\"510124\",\"name\":\"郫县\"},{\"code\":\"510129\",\"name\":\"大邑县\"},{\"code\":\"510131\",\"name\":\"蒲江县\"},{\"code\":\"510132\",\"name\":\"新津县\"},{\"code\":\"510181\",\"name\":\"都江堰市\"},{\"code\":\"510182\",\"name\":\"彭州市\"},{\"code\":\"510183\",\"name\":\"邛崃市\"},{\"code\":\"510184\",\"name\":\"崇州市\"},{\"code\":\"510185\",\"name\":\"简阳市\"}]},{\"code\":\"5103\",\"name\":\"自贡市\",\"childs\":[{\"code\":\"510302\",\"name\":\"自流井区\"},{\"code\":\"510303\",\"name\":\"贡井区\"},{\"code\":\"510304\",\"name\":\"大安区\"},{\"code\":\"510311\",\"name\":\"沿滩区\"},{\"code\":\"510321\",\"name\":\"荣县\"},{\"code\":\"510322\",\"name\":\"富顺县\"}]},{\"code\":\"5104\",\"name\":\"攀枝花市\",\"childs\":[{\"code\":\"510402\",\"name\":\"东区\"},{\"code\":\"510403\",\"name\":\"西区\"},{\"code\":\"510411\",\"name\":\"仁和区\"},{\"code\":\"510421\",\"name\":\"米易县\"},{\"code\":\"510422\",\"name\":\"盐边县\"}]},{\"code\":\"5105\",\"name\":\"泸州市\",\"childs\":[{\"code\":\"510502\",\"name\":\"江阳区\"},{\"code\":\"510503\",\"name\":\"纳溪区\"},{\"code\":\"510504\",\"name\":\"龙马潭区\"},{\"code\":\"510521\",\"name\":\"泸县\"},{\"code\":\"510522\",\"name\":\"合江县\"},{\"code\":\"510524\",\"name\":\"叙永县\"},{\"code\":\"510525\",\"name\":\"古蔺县\"}]},{\"code\":\"5106\",\"name\":\"德阳市\",\"childs\":[{\"code\":\"510603\",\"name\":\"旌阳区\"},{\"code\":\"510623\",\"name\":\"中江县\"},{\"code\":\"510626\",\"name\":\"罗江县\"},{\"code\":\"510681\",\"name\":\"广汉市\"},{\"code\":\"510682\",\"name\":\"什邡市\"},{\"code\":\"510683\",\"name\":\"绵竹市\"}]},{\"code\":\"5107\",\"name\":\"绵阳市\",\"childs\":[{\"code\":\"510703\",\"name\":\"涪城区\"},{\"code\":\"510704\",\"name\":\"游仙区\"},{\"code\":\"510705\",\"name\":\"安州区\"},{\"code\":\"510722\",\"name\":\"三台县\"},{\"code\":\"510723\",\"name\":\"盐亭县\"},{\"code\":\"510725\",\"name\":\"梓潼县\"},{\"code\":\"510726\",\"name\":\"北川羌族自治县\"},{\"code\":\"510727\",\"name\":\"平武县\"},{\"code\":\"510781\",\"name\":\"江油市\"}]},{\"code\":\"5108\",\"name\":\"广元市\",\"childs\":[{\"code\":\"510802\",\"name\":\"利州区\"},{\"code\":\"510811\",\"name\":\"昭化区\"},{\"code\":\"510812\",\"name\":\"朝天区\"},{\"code\":\"510821\",\"name\":\"旺苍县\"},{\"code\":\"510822\",\"name\":\"青川县\"},{\"code\":\"510823\",\"name\":\"剑阁县\"},{\"code\":\"510824\",\"name\":\"苍溪县\"}]},{\"code\":\"5109\",\"name\":\"遂宁市\",\"childs\":[{\"code\":\"510903\",\"name\":\"船山区\"},{\"code\":\"510904\",\"name\":\"安居区\"},{\"code\":\"510921\",\"name\":\"蓬溪县\"},{\"code\":\"510922\",\"name\":\"射洪县\"},{\"code\":\"510923\",\"name\":\"大英县\"}]},{\"code\":\"5110\",\"name\":\"内江市\",\"childs\":[{\"code\":\"511002\",\"name\":\"市中区\"},{\"code\":\"511011\",\"name\":\"东兴区\"},{\"code\":\"511024\",\"name\":\"威远县\"},{\"code\":\"511025\",\"name\":\"资中县\"},{\"code\":\"511028\",\"name\":\"隆昌县\"}]},{\"code\":\"5111\",\"name\":\"乐山市\",\"childs\":[{\"code\":\"511102\",\"name\":\"市中区\"},{\"code\":\"511111\",\"name\":\"沙湾区\"},{\"code\":\"511112\",\"name\":\"五通桥区\"},{\"code\":\"511113\",\"name\":\"金口河区\"},{\"code\":\"511123\",\"name\":\"犍为县\"},{\"code\":\"511124\",\"name\":\"井研县\"},{\"code\":\"511126\",\"name\":\"夹江县\"},{\"code\":\"511129\",\"name\":\"沐川县\"},{\"code\":\"511132\",\"name\":\"峨边彝族自治县\"},{\"code\":\"511133\",\"name\":\"马边彝族自治县\"},{\"code\":\"511181\",\"name\":\"峨眉山市\"}]},{\"code\":\"5113\",\"name\":\"南充市\",\"childs\":[{\"code\":\"511302\",\"name\":\"顺庆区\"},{\"code\":\"511303\",\"name\":\"高坪区\"},{\"code\":\"511304\",\"name\":\"嘉陵区\"},{\"code\":\"511321\",\"name\":\"南部县\"},{\"code\":\"511322\",\"name\":\"营山县\"},{\"code\":\"511323\",\"name\":\"蓬安县\"},{\"code\":\"511324\",\"name\":\"仪陇县\"},{\"code\":\"511325\",\"name\":\"西充县\"},{\"code\":\"511381\",\"name\":\"阆中市\"}]},{\"code\":\"5114\",\"name\":\"眉山市\",\"childs\":[{\"code\":\"511402\",\"name\":\"东坡区\"},{\"code\":\"511403\",\"name\":\"彭山区\"},{\"code\":\"511421\",\"name\":\"仁寿县\"},{\"code\":\"511423\",\"name\":\"洪雅县\"},{\"code\":\"511424\",\"name\":\"丹棱县\"},{\"code\":\"511425\",\"name\":\"青神县\"}]},{\"code\":\"5115\",\"name\":\"宜宾市\",\"childs\":[{\"code\":\"511502\",\"name\":\"翠屏区\"},{\"code\":\"511503\",\"name\":\"南溪区\"},{\"code\":\"511521\",\"name\":\"宜宾县\"},{\"code\":\"511523\",\"name\":\"江安县\"},{\"code\":\"511524\",\"name\":\"长宁县\"},{\"code\":\"511525\",\"name\":\"高县\"},{\"code\":\"511526\",\"name\":\"珙县\"},{\"code\":\"511527\",\"name\":\"筠连县\"},{\"code\":\"511528\",\"name\":\"兴文县\"},{\"code\":\"511529\",\"name\":\"屏山县\"}]},{\"code\":\"5116\",\"name\":\"广安市\",\"childs\":[{\"code\":\"511602\",\"name\":\"广安区\"},{\"code\":\"511603\",\"name\":\"前锋区\"},{\"code\":\"511621\",\"name\":\"岳池县\"},{\"code\":\"511622\",\"name\":\"武胜县\"},{\"code\":\"511623\",\"name\":\"邻水县\"},{\"code\":\"511681\",\"name\":\"华蓥市\"}]},{\"code\":\"5117\",\"name\":\"达州市\",\"childs\":[{\"code\":\"511702\",\"name\":\"通川区\"},{\"code\":\"511703\",\"name\":\"达川区\"},{\"code\":\"511722\",\"name\":\"宣汉县\"},{\"code\":\"511723\",\"name\":\"开江县\"},{\"code\":\"511724\",\"name\":\"大竹县\"},{\"code\":\"511725\",\"name\":\"渠县\"},{\"code\":\"511781\",\"name\":\"万源市\"}]},{\"code\":\"5118\",\"name\":\"雅安市\",\"childs\":[{\"code\":\"511802\",\"name\":\"雨城区\"},{\"code\":\"511803\",\"name\":\"名山区\"},{\"code\":\"511822\",\"name\":\"荥经县\"},{\"code\":\"511823\",\"name\":\"汉源县\"},{\"code\":\"511824\",\"name\":\"石棉县\"},{\"code\":\"511825\",\"name\":\"天全县\"},{\"code\":\"511826\",\"name\":\"芦山县\"},{\"code\":\"511827\",\"name\":\"宝兴县\"}]},{\"code\":\"5119\",\"name\":\"巴中市\",\"childs\":[{\"code\":\"511902\",\"name\":\"巴州区\"},{\"code\":\"511903\",\"name\":\"恩阳区\"},{\"code\":\"511921\",\"name\":\"通江县\"},{\"code\":\"511922\",\"name\":\"南江县\"},{\"code\":\"511923\",\"name\":\"平昌县\"}]},{\"code\":\"5120\",\"name\":\"资阳市\",\"childs\":[{\"code\":\"512002\",\"name\":\"雁江区\"},{\"code\":\"512021\",\"name\":\"安岳县\"},{\"code\":\"512022\",\"name\":\"乐至县\"}]},{\"code\":\"5132\",\"name\":\"阿坝藏族羌族自治州\",\"childs\":[{\"code\":\"513201\",\"name\":\"马尔康市\"},{\"code\":\"513221\",\"name\":\"汶川县\"},{\"code\":\"513222\",\"name\":\"理县\"},{\"code\":\"513223\",\"name\":\"茂县\"},{\"code\":\"513224\",\"name\":\"松潘县\"},{\"code\":\"513225\",\"name\":\"九寨沟县\"},{\"code\":\"513226\",\"name\":\"金川县\"},{\"code\":\"513227\",\"name\":\"小金县\"},{\"code\":\"513228\",\"name\":\"黑水县\"},{\"code\":\"513230\",\"name\":\"壤塘县\"},{\"code\":\"513231\",\"name\":\"阿坝县\"},{\"code\":\"513232\",\"name\":\"若尔盖县\"},{\"code\":\"513233\",\"name\":\"红原县\"}]},{\"code\":\"5133\",\"name\":\"甘孜藏族自治州\",\"childs\":[{\"code\":\"513301\",\"name\":\"康定市\"},{\"code\":\"513322\",\"name\":\"泸定县\"},{\"code\":\"513323\",\"name\":\"丹巴县\"},{\"code\":\"513324\",\"name\":\"九龙县\"},{\"code\":\"513325\",\"name\":\"雅江县\"},{\"code\":\"513326\",\"name\":\"道孚县\"},{\"code\":\"513327\",\"name\":\"炉霍县\"},{\"code\":\"513328\",\"name\":\"甘孜县\"},{\"code\":\"513329\",\"name\":\"新龙县\"},{\"code\":\"513330\",\"name\":\"德格县\"},{\"code\":\"513331\",\"name\":\"白玉县\"},{\"code\":\"513332\",\"name\":\"石渠县\"},{\"code\":\"513333\",\"name\":\"色达县\"},{\"code\":\"513334\",\"name\":\"理塘县\"},{\"code\":\"513335\",\"name\":\"巴塘县\"},{\"code\":\"513336\",\"name\":\"乡城县\"},{\"code\":\"513337\",\"name\":\"稻城县\"},{\"code\":\"513338\",\"name\":\"得荣县\"}]},{\"code\":\"5134\",\"name\":\"凉山彝族自治州\",\"childs\":[{\"code\":\"513401\",\"name\":\"西昌市\"},{\"code\":\"513422\",\"name\":\"木里藏族自治县\"},{\"code\":\"513423\",\"name\":\"盐源县\"},{\"code\":\"513424\",\"name\":\"德昌县\"},{\"code\":\"513425\",\"name\":\"会理县\"},{\"code\":\"513426\",\"name\":\"会东县\"},{\"code\":\"513427\",\"name\":\"宁南县\"},{\"code\":\"513428\",\"name\":\"普格县\"},{\"code\":\"513429\",\"name\":\"布拖县\"},{\"code\":\"513430\",\"name\":\"金阳县\"},{\"code\":\"513431\",\"name\":\"昭觉县\"},{\"code\":\"513432\",\"name\":\"喜德县\"},{\"code\":\"513433\",\"name\":\"冕宁县\"},{\"code\":\"513434\",\"name\":\"越西县\"},{\"code\":\"513435\",\"name\":\"甘洛县\"},{\"code\":\"513436\",\"name\":\"美姑县\"},{\"code\":\"513437\",\"name\":\"雷波县\"}]}]},{\"code\":\"52\",\"name\":\"贵州省\",\"childs\":[{\"code\":\"5201\",\"name\":\"贵阳市\",\"childs\":[{\"code\":\"520102\",\"name\":\"南明区\"},{\"code\":\"520103\",\"name\":\"云岩区\"},{\"code\":\"520111\",\"name\":\"花溪区\"},{\"code\":\"520112\",\"name\":\"乌当区\"},{\"code\":\"520113\",\"name\":\"白云区\"},{\"code\":\"520115\",\"name\":\"观山湖区\"},{\"code\":\"520121\",\"name\":\"开阳县\"},{\"code\":\"520122\",\"name\":\"息烽县\"},{\"code\":\"520123\",\"name\":\"修文县\"},{\"code\":\"520181\",\"name\":\"清镇市\"}]},{\"code\":\"5202\",\"name\":\"六盘水市\",\"childs\":[{\"code\":\"520201\",\"name\":\"钟山区\"},{\"code\":\"520203\",\"name\":\"六枝特区\"},{\"code\":\"520221\",\"name\":\"水城县\"},{\"code\":\"520222\",\"name\":\"盘县\"}]},{\"code\":\"5203\",\"name\":\"遵义市\",\"childs\":[{\"code\":\"520302\",\"name\":\"红花岗区\"},{\"code\":\"520303\",\"name\":\"汇川区\"},{\"code\":\"520304\",\"name\":\"播州区\"},{\"code\":\"520322\",\"name\":\"桐梓县\"},{\"code\":\"520323\",\"name\":\"绥阳县\"},{\"code\":\"520324\",\"name\":\"正安县\"},{\"code\":\"520325\",\"name\":\"道真仡佬族苗族自治县\"},{\"code\":\"520326\",\"name\":\"务川仡佬族苗族自治县\"},{\"code\":\"520327\",\"name\":\"凤冈县\"},{\"code\":\"520328\",\"name\":\"湄潭县\"},{\"code\":\"520329\",\"name\":\"余庆县\"},{\"code\":\"520330\",\"name\":\"习水县\"},{\"code\":\"520381\",\"name\":\"赤水市\"},{\"code\":\"520382\",\"name\":\"仁怀市\"}]},{\"code\":\"5204\",\"name\":\"安顺市\",\"childs\":[{\"code\":\"520402\",\"name\":\"西秀区\"},{\"code\":\"520403\",\"name\":\"平坝区\"},{\"code\":\"520422\",\"name\":\"普定县\"},{\"code\":\"520423\",\"name\":\"镇宁布依族苗族自治县\"},{\"code\":\"520424\",\"name\":\"关岭布依族苗族自治县\"},{\"code\":\"520425\",\"name\":\"紫云苗族布依族自治县\"}]},{\"code\":\"5205\",\"name\":\"毕节市\",\"childs\":[{\"code\":\"520502\",\"name\":\"七星关区\"},{\"code\":\"520521\",\"name\":\"大方县\"},{\"code\":\"520522\",\"name\":\"黔西县\"},{\"code\":\"520523\",\"name\":\"金沙县\"},{\"code\":\"520524\",\"name\":\"织金县\"},{\"code\":\"520525\",\"name\":\"纳雍县\"},{\"code\":\"520526\",\"name\":\"威宁彝族回族苗族自治县\"},{\"code\":\"520527\",\"name\":\"赫章县\"}]},{\"code\":\"5206\",\"name\":\"铜仁市\",\"childs\":[{\"code\":\"520602\",\"name\":\"碧江区\"},{\"code\":\"520603\",\"name\":\"万山区\"},{\"code\":\"520621\",\"name\":\"江口县\"},{\"code\":\"520622\",\"name\":\"玉屏侗族自治县\"},{\"code\":\"520623\",\"name\":\"石阡县\"},{\"code\":\"520624\",\"name\":\"思南县\"},{\"code\":\"520625\",\"name\":\"印江土家族苗族自治县\"},{\"code\":\"520626\",\"name\":\"德江县\"},{\"code\":\"520627\",\"name\":\"沿河土家族自治县\"},{\"code\":\"520628\",\"name\":\"松桃苗族自治县\"}]},{\"code\":\"5223\",\"name\":\"黔西南布依族苗族自治州\",\"childs\":[{\"code\":\"522301\",\"name\":\"兴义市\"},{\"code\":\"522322\",\"name\":\"兴仁县\"},{\"code\":\"522323\",\"name\":\"普安县\"},{\"code\":\"522324\",\"name\":\"晴隆县\"},{\"code\":\"522325\",\"name\":\"贞丰县\"},{\"code\":\"522326\",\"name\":\"望谟县\"},{\"code\":\"522327\",\"name\":\"册亨县\"},{\"code\":\"522328\",\"name\":\"安龙县\"}]},{\"code\":\"5226\",\"name\":\"黔东南苗族侗族自治州\",\"childs\":[{\"code\":\"522601\",\"name\":\"凯里市\"},{\"code\":\"522622\",\"name\":\"黄平县\"},{\"code\":\"522623\",\"name\":\"施秉县\"},{\"code\":\"522624\",\"name\":\"三穗县\"},{\"code\":\"522625\",\"name\":\"镇远县\"},{\"code\":\"522626\",\"name\":\"岑巩县\"},{\"code\":\"522627\",\"name\":\"天柱县\"},{\"code\":\"522628\",\"name\":\"锦屏县\"},{\"code\":\"522629\",\"name\":\"剑河县\"},{\"code\":\"522630\",\"name\":\"台江县\"},{\"code\":\"522631\",\"name\":\"黎平县\"},{\"code\":\"522632\",\"name\":\"榕江县\"},{\"code\":\"522633\",\"name\":\"从江县\"},{\"code\":\"522634\",\"name\":\"雷山县\"},{\"code\":\"522635\",\"name\":\"麻江县\"},{\"code\":\"522636\",\"name\":\"丹寨县\"}]},{\"code\":\"5227\",\"name\":\"黔南布依族苗族自治州\",\"childs\":[{\"code\":\"522701\",\"name\":\"都匀市\"},{\"code\":\"522702\",\"name\":\"福泉市\"},{\"code\":\"522722\",\"name\":\"荔波县\"},{\"code\":\"522723\",\"name\":\"贵定县\"},{\"code\":\"522725\",\"name\":\"瓮安县\"},{\"code\":\"522726\",\"name\":\"独山县\"},{\"code\":\"522727\",\"name\":\"平塘县\"},{\"code\":\"522728\",\"name\":\"罗甸县\"},{\"code\":\"522729\",\"name\":\"长顺县\"},{\"code\":\"522730\",\"name\":\"龙里县\"},{\"code\":\"522731\",\"name\":\"惠水县\"},{\"code\":\"522732\",\"name\":\"三都水族自治县\"}]}]},{\"code\":\"53\",\"name\":\"云南省\",\"childs\":[{\"code\":\"5301\",\"name\":\"昆明市\",\"childs\":[{\"code\":\"530102\",\"name\":\"五华区\"},{\"code\":\"530103\",\"name\":\"盘龙区\"},{\"code\":\"530111\",\"name\":\"官渡区\"},{\"code\":\"530112\",\"name\":\"西山区\"},{\"code\":\"530113\",\"name\":\"东川区\"},{\"code\":\"530114\",\"name\":\"呈贡区\"},{\"code\":\"530122\",\"name\":\"晋宁县\"},{\"code\":\"530124\",\"name\":\"富民县\"},{\"code\":\"530125\",\"name\":\"宜良县\"},{\"code\":\"530126\",\"name\":\"石林彝族自治县\"},{\"code\":\"530127\",\"name\":\"嵩明县\"},{\"code\":\"530128\",\"name\":\"禄劝彝族苗族自治县\"},{\"code\":\"530129\",\"name\":\"寻甸回族彝族自治县\"},{\"code\":\"530181\",\"name\":\"安宁市\"}]},{\"code\":\"5303\",\"name\":\"曲靖市\",\"childs\":[{\"code\":\"530302\",\"name\":\"麒麟区\"},{\"code\":\"530303\",\"name\":\"沾益区\"},{\"code\":\"530321\",\"name\":\"马龙县\"},{\"code\":\"530322\",\"name\":\"陆良县\"},{\"code\":\"530323\",\"name\":\"师宗县\"},{\"code\":\"530324\",\"name\":\"罗平县\"},{\"code\":\"530325\",\"name\":\"富源县\"},{\"code\":\"530326\",\"name\":\"会泽县\"},{\"code\":\"530381\",\"name\":\"宣威市\"}]},{\"code\":\"5304\",\"name\":\"玉溪市\",\"childs\":[{\"code\":\"530402\",\"name\":\"红塔区\"},{\"code\":\"530403\",\"name\":\"江川区\"},{\"code\":\"530422\",\"name\":\"澄江县\"},{\"code\":\"530423\",\"name\":\"通海县\"},{\"code\":\"530424\",\"name\":\"华宁县\"},{\"code\":\"530425\",\"name\":\"易门县\"},{\"code\":\"530426\",\"name\":\"峨山彝族自治县\"},{\"code\":\"530427\",\"name\":\"新平彝族傣族自治县\"},{\"code\":\"530428\",\"name\":\"元江哈尼族彝族傣族自治县\"}]},{\"code\":\"5305\",\"name\":\"保山市\",\"childs\":[{\"code\":\"530502\",\"name\":\"隆阳区\"},{\"code\":\"530521\",\"name\":\"施甸县\"},{\"code\":\"530523\",\"name\":\"龙陵县\"},{\"code\":\"530524\",\"name\":\"昌宁县\"},{\"code\":\"530581\",\"name\":\"腾冲市\"}]},{\"code\":\"5306\",\"name\":\"昭通市\",\"childs\":[{\"code\":\"530602\",\"name\":\"昭阳区\"},{\"code\":\"530621\",\"name\":\"鲁甸县\"},{\"code\":\"530622\",\"name\":\"巧家县\"},{\"code\":\"530623\",\"name\":\"盐津县\"},{\"code\":\"530624\",\"name\":\"大关县\"},{\"code\":\"530625\",\"name\":\"永善县\"},{\"code\":\"530626\",\"name\":\"绥江县\"},{\"code\":\"530627\",\"name\":\"镇雄县\"},{\"code\":\"530628\",\"name\":\"彝良县\"},{\"code\":\"530629\",\"name\":\"威信县\"},{\"code\":\"530630\",\"name\":\"水富县\"}]},{\"code\":\"5307\",\"name\":\"丽江市\",\"childs\":[{\"code\":\"530702\",\"name\":\"古城区\"},{\"code\":\"530721\",\"name\":\"玉龙纳西族自治县\"},{\"code\":\"530722\",\"name\":\"永胜县\"},{\"code\":\"530723\",\"name\":\"华坪县\"},{\"code\":\"530724\",\"name\":\"宁蒗彝族自治县\"}]},{\"code\":\"5308\",\"name\":\"普洱市\",\"childs\":[{\"code\":\"530802\",\"name\":\"思茅区\"},{\"code\":\"530821\",\"name\":\"宁洱哈尼族彝族自治县\"},{\"code\":\"530822\",\"name\":\"墨江哈尼族自治县\"},{\"code\":\"530823\",\"name\":\"景东彝族自治县\"},{\"code\":\"530824\",\"name\":\"景谷傣族彝族自治县\"},{\"code\":\"530825\",\"name\":\"镇沅彝族哈尼族拉祜族自治县\"},{\"code\":\"530826\",\"name\":\"江城哈尼族彝族自治县\"},{\"code\":\"530827\",\"name\":\"孟连傣族拉祜族佤族自治县\"},{\"code\":\"530828\",\"name\":\"澜沧拉祜族自治县\"},{\"code\":\"530829\",\"name\":\"西盟佤族自治县\"}]},{\"code\":\"5309\",\"name\":\"临沧市\",\"childs\":[{\"code\":\"530902\",\"name\":\"临翔区\"},{\"code\":\"530921\",\"name\":\"凤庆县\"},{\"code\":\"530922\",\"name\":\"云县\"},{\"code\":\"530923\",\"name\":\"永德县\"},{\"code\":\"530924\",\"name\":\"镇康县\"},{\"code\":\"530925\",\"name\":\"双江拉祜族佤族布朗族傣族自治县\"},{\"code\":\"530926\",\"name\":\"耿马傣族佤族自治县\"},{\"code\":\"530927\",\"name\":\"沧源佤族自治县\"}]},{\"code\":\"5323\",\"name\":\"楚雄彝族自治州\",\"childs\":[{\"code\":\"532301\",\"name\":\"楚雄市\"},{\"code\":\"532322\",\"name\":\"双柏县\"},{\"code\":\"532323\",\"name\":\"牟定县\"},{\"code\":\"532324\",\"name\":\"南华县\"},{\"code\":\"532325\",\"name\":\"姚安县\"},{\"code\":\"532326\",\"name\":\"大姚县\"},{\"code\":\"532327\",\"name\":\"永仁县\"},{\"code\":\"532328\",\"name\":\"元谋县\"},{\"code\":\"532329\",\"name\":\"武定县\"},{\"code\":\"532331\",\"name\":\"禄丰县\"}]},{\"code\":\"5325\",\"name\":\"红河哈尼族彝族自治州\",\"childs\":[{\"code\":\"532501\",\"name\":\"个旧市\"},{\"code\":\"532502\",\"name\":\"开远市\"},{\"code\":\"532503\",\"name\":\"蒙自市\"},{\"code\":\"532504\",\"name\":\"弥勒市\"},{\"code\":\"532523\",\"name\":\"屏边苗族自治县\"},{\"code\":\"532524\",\"name\":\"建水县\"},{\"code\":\"532525\",\"name\":\"石屏县\"},{\"code\":\"532527\",\"name\":\"泸西县\"},{\"code\":\"532528\",\"name\":\"元阳县\"},{\"code\":\"532529\",\"name\":\"红河县\"},{\"code\":\"532530\",\"name\":\"金平苗族瑶族傣族自治县\"},{\"code\":\"532531\",\"name\":\"绿春县\"},{\"code\":\"532532\",\"name\":\"河口瑶族自治县\"}]},{\"code\":\"5326\",\"name\":\"文山壮族苗族自治州\",\"childs\":[{\"code\":\"532601\",\"name\":\"文山市\"},{\"code\":\"532622\",\"name\":\"砚山县\"},{\"code\":\"532623\",\"name\":\"西畴县\"},{\"code\":\"532624\",\"name\":\"麻栗坡县\"},{\"code\":\"532625\",\"name\":\"马关县\"},{\"code\":\"532626\",\"name\":\"丘北县\"},{\"code\":\"532627\",\"name\":\"广南县\"},{\"code\":\"532628\",\"name\":\"富宁县\"}]},{\"code\":\"5328\",\"name\":\"西双版纳傣族自治州\",\"childs\":[{\"code\":\"532801\",\"name\":\"景洪市\"},{\"code\":\"532822\",\"name\":\"勐海县\"},{\"code\":\"532823\",\"name\":\"勐腊县\"}]},{\"code\":\"5329\",\"name\":\"大理白族自治州\",\"childs\":[{\"code\":\"532901\",\"name\":\"大理市\"},{\"code\":\"532922\",\"name\":\"漾濞彝族自治县\"},{\"code\":\"532923\",\"name\":\"祥云县\"},{\"code\":\"532924\",\"name\":\"宾川县\"},{\"code\":\"532925\",\"name\":\"弥渡县\"},{\"code\":\"532926\",\"name\":\"南涧彝族自治县\"},{\"code\":\"532927\",\"name\":\"巍山彝族回族自治县\"},{\"code\":\"532928\",\"name\":\"永平县\"},{\"code\":\"532929\",\"name\":\"云龙县\"},{\"code\":\"532930\",\"name\":\"洱源县\"},{\"code\":\"532931\",\"name\":\"剑川县\"},{\"code\":\"532932\",\"name\":\"鹤庆县\"}]},{\"code\":\"5331\",\"name\":\"德宏傣族景颇族自治州\",\"childs\":[{\"code\":\"533102\",\"name\":\"瑞丽市\"},{\"code\":\"533103\",\"name\":\"芒市\"},{\"code\":\"533122\",\"name\":\"梁河县\"},{\"code\":\"533123\",\"name\":\"盈江县\"},{\"code\":\"533124\",\"name\":\"陇川县\"}]},{\"code\":\"5333\",\"name\":\"怒江傈僳族自治州\",\"childs\":[{\"code\":\"533301\",\"name\":\"泸水市\"},{\"code\":\"533323\",\"name\":\"福贡县\"},{\"code\":\"533324\",\"name\":\"贡山独龙族怒族自治县\"},{\"code\":\"533325\",\"name\":\"兰坪白族普米族自治县\"}]},{\"code\":\"5334\",\"name\":\"迪庆藏族自治州\",\"childs\":[{\"code\":\"533401\",\"name\":\"香格里拉市\"},{\"code\":\"533422\",\"name\":\"德钦县\"},{\"code\":\"533423\",\"name\":\"维西傈僳族自治县\"}]}]},{\"code\":\"54\",\"name\":\"西藏自治区\",\"childs\":[{\"code\":\"5401\",\"name\":\"拉萨市\",\"childs\":[{\"code\":\"540102\",\"name\":\"城关区\"},{\"code\":\"540103\",\"name\":\"堆龙德庆区\"},{\"code\":\"540121\",\"name\":\"林周县\"},{\"code\":\"540122\",\"name\":\"当雄县\"},{\"code\":\"540123\",\"name\":\"尼木县\"},{\"code\":\"540124\",\"name\":\"曲水县\"},{\"code\":\"540126\",\"name\":\"达孜县\"},{\"code\":\"540127\",\"name\":\"墨竹工卡县\"}]},{\"code\":\"5402\",\"name\":\"日喀则市\",\"childs\":[{\"code\":\"540202\",\"name\":\"桑珠孜区\"},{\"code\":\"540221\",\"name\":\"南木林县\"},{\"code\":\"540222\",\"name\":\"江孜县\"},{\"code\":\"540223\",\"name\":\"定日县\"},{\"code\":\"540224\",\"name\":\"萨迦县\"},{\"code\":\"540225\",\"name\":\"拉孜县\"},{\"code\":\"540226\",\"name\":\"昂仁县\"},{\"code\":\"540227\",\"name\":\"谢通门县\"},{\"code\":\"540228\",\"name\":\"白朗县\"},{\"code\":\"540229\",\"name\":\"仁布县\"},{\"code\":\"540230\",\"name\":\"康马县\"},{\"code\":\"540231\",\"name\":\"定结县\"},{\"code\":\"540232\",\"name\":\"仲巴县\"},{\"code\":\"540233\",\"name\":\"亚东县\"},{\"code\":\"540234\",\"name\":\"吉隆县\"},{\"code\":\"540235\",\"name\":\"聂拉木县\"},{\"code\":\"540236\",\"name\":\"萨嘎县\"},{\"code\":\"540237\",\"name\":\"岗巴县\"}]},{\"code\":\"5403\",\"name\":\"昌都市\",\"childs\":[{\"code\":\"540302\",\"name\":\"卡若区\"},{\"code\":\"540321\",\"name\":\"江达县\"},{\"code\":\"540322\",\"name\":\"贡觉县\"},{\"code\":\"540323\",\"name\":\"类乌齐县\"},{\"code\":\"540324\",\"name\":\"丁青县\"},{\"code\":\"540325\",\"name\":\"察雅县\"},{\"code\":\"540326\",\"name\":\"八宿县\"},{\"code\":\"540327\",\"name\":\"左贡县\"},{\"code\":\"540328\",\"name\":\"芒康县\"},{\"code\":\"540329\",\"name\":\"洛隆县\"},{\"code\":\"540330\",\"name\":\"边坝县\"}]},{\"code\":\"5404\",\"name\":\"林芝市\",\"childs\":[{\"code\":\"540402\",\"name\":\"巴宜区\"},{\"code\":\"540421\",\"name\":\"工布江达县\"},{\"code\":\"540422\",\"name\":\"米林县\"},{\"code\":\"540423\",\"name\":\"墨脱县\"},{\"code\":\"540424\",\"name\":\"波密县\"},{\"code\":\"540425\",\"name\":\"察隅县\"},{\"code\":\"540426\",\"name\":\"朗县\"}]},{\"code\":\"5405\",\"name\":\"山南市\",\"childs\":[{\"code\":\"540502\",\"name\":\"乃东区\"},{\"code\":\"540521\",\"name\":\"扎囊县\"},{\"code\":\"540522\",\"name\":\"贡嘎县\"},{\"code\":\"540523\",\"name\":\"桑日县\"},{\"code\":\"540524\",\"name\":\"琼结县\"},{\"code\":\"540525\",\"name\":\"曲松县\"},{\"code\":\"540526\",\"name\":\"措美县\"},{\"code\":\"540527\",\"name\":\"洛扎县\"},{\"code\":\"540528\",\"name\":\"加查县\"},{\"code\":\"540529\",\"name\":\"隆子县\"},{\"code\":\"540530\",\"name\":\"错那县\"},{\"code\":\"540531\",\"name\":\"浪卡子县\"}]},{\"code\":\"5424\",\"name\":\"那曲地区\",\"childs\":[{\"code\":\"542421\",\"name\":\"那曲县\"},{\"code\":\"542422\",\"name\":\"嘉黎县\"},{\"code\":\"542423\",\"name\":\"比如县\"},{\"code\":\"542424\",\"name\":\"聂荣县\"},{\"code\":\"542425\",\"name\":\"安多县\"},{\"code\":\"542426\",\"name\":\"申扎县\"},{\"code\":\"542427\",\"name\":\"索县\"},{\"code\":\"542428\",\"name\":\"班戈县\"},{\"code\":\"542429\",\"name\":\"巴青县\"},{\"code\":\"542430\",\"name\":\"尼玛县\"},{\"code\":\"542431\",\"name\":\"双湖县\"}]},{\"code\":\"5425\",\"name\":\"阿里地区\",\"childs\":[{\"code\":\"542521\",\"name\":\"普兰县\"},{\"code\":\"542522\",\"name\":\"札达县\"},{\"code\":\"542523\",\"name\":\"噶尔县\"},{\"code\":\"542524\",\"name\":\"日土县\"},{\"code\":\"542525\",\"name\":\"革吉县\"},{\"code\":\"542526\",\"name\":\"改则县\"},{\"code\":\"542527\",\"name\":\"措勤县\"}]}]},{\"code\":\"61\",\"name\":\"陕西省\",\"childs\":[{\"code\":\"6101\",\"name\":\"西安市\",\"childs\":[{\"code\":\"610102\",\"name\":\"新城区\"},{\"code\":\"610103\",\"name\":\"碑林区\"},{\"code\":\"610104\",\"name\":\"莲湖区\"},{\"code\":\"610111\",\"name\":\"灞桥区\"},{\"code\":\"610112\",\"name\":\"未央区\"},{\"code\":\"610113\",\"name\":\"雁塔区\"},{\"code\":\"610114\",\"name\":\"阎良区\"},{\"code\":\"610115\",\"name\":\"临潼区\"},{\"code\":\"610116\",\"name\":\"长安区\"},{\"code\":\"610117\",\"name\":\"高陵区\"},{\"code\":\"610122\",\"name\":\"蓝田县\"},{\"code\":\"610124\",\"name\":\"周至县\"},{\"code\":\"610125\",\"name\":\"户县\"}]},{\"code\":\"6102\",\"name\":\"铜川市\",\"childs\":[{\"code\":\"610202\",\"name\":\"王益区\"},{\"code\":\"610203\",\"name\":\"印台区\"},{\"code\":\"610204\",\"name\":\"耀州区\"},{\"code\":\"610222\",\"name\":\"宜君县\"}]},{\"code\":\"6103\",\"name\":\"宝鸡市\",\"childs\":[{\"code\":\"610302\",\"name\":\"渭滨区\"},{\"code\":\"610303\",\"name\":\"金台区\"},{\"code\":\"610304\",\"name\":\"陈仓区\"},{\"code\":\"610322\",\"name\":\"凤翔县\"},{\"code\":\"610323\",\"name\":\"岐山县\"},{\"code\":\"610324\",\"name\":\"扶风县\"},{\"code\":\"610326\",\"name\":\"眉县\"},{\"code\":\"610327\",\"name\":\"陇县\"},{\"code\":\"610328\",\"name\":\"千阳县\"},{\"code\":\"610329\",\"name\":\"麟游县\"},{\"code\":\"610330\",\"name\":\"凤县\"},{\"code\":\"610331\",\"name\":\"太白县\"}]},{\"code\":\"6104\",\"name\":\"咸阳市\",\"childs\":[{\"code\":\"610402\",\"name\":\"秦都区\"},{\"code\":\"610403\",\"name\":\"杨陵区\"},{\"code\":\"610404\",\"name\":\"渭城区\"},{\"code\":\"610422\",\"name\":\"三原县\"},{\"code\":\"610423\",\"name\":\"泾阳县\"},{\"code\":\"610424\",\"name\":\"乾县\"},{\"code\":\"610425\",\"name\":\"礼泉县\"},{\"code\":\"610426\",\"name\":\"永寿县\"},{\"code\":\"610427\",\"name\":\"彬县\"},{\"code\":\"610428\",\"name\":\"长武县\"},{\"code\":\"610429\",\"name\":\"旬邑县\"},{\"code\":\"610430\",\"name\":\"淳化县\"},{\"code\":\"610431\",\"name\":\"武功县\"},{\"code\":\"610481\",\"name\":\"兴平市\"}]},{\"code\":\"6105\",\"name\":\"渭南市\",\"childs\":[{\"code\":\"610502\",\"name\":\"临渭区\"},{\"code\":\"610503\",\"name\":\"华州区\"},{\"code\":\"610522\",\"name\":\"潼关县\"},{\"code\":\"610523\",\"name\":\"大荔县\"},{\"code\":\"610524\",\"name\":\"合阳县\"},{\"code\":\"610525\",\"name\":\"澄城县\"},{\"code\":\"610526\",\"name\":\"蒲城县\"},{\"code\":\"610527\",\"name\":\"白水县\"},{\"code\":\"610528\",\"name\":\"富平县\"},{\"code\":\"610581\",\"name\":\"韩城市\"},{\"code\":\"610582\",\"name\":\"华阴市\"}]},{\"code\":\"6106\",\"name\":\"延安市\",\"childs\":[{\"code\":\"610602\",\"name\":\"宝塔区\"},{\"code\":\"610603\",\"name\":\"安塞区\"},{\"code\":\"610621\",\"name\":\"延长县\"},{\"code\":\"610622\",\"name\":\"延川县\"},{\"code\":\"610623\",\"name\":\"子长县\"},{\"code\":\"610625\",\"name\":\"志丹县\"},{\"code\":\"610626\",\"name\":\"吴起县\"},{\"code\":\"610627\",\"name\":\"甘泉县\"},{\"code\":\"610628\",\"name\":\"富县\"},{\"code\":\"610629\",\"name\":\"洛川县\"},{\"code\":\"610630\",\"name\":\"宜川县\"},{\"code\":\"610631\",\"name\":\"黄龙县\"},{\"code\":\"610632\",\"name\":\"黄陵县\"}]},{\"code\":\"6107\",\"name\":\"汉中市\",\"childs\":[{\"code\":\"610702\",\"name\":\"汉台区\"},{\"code\":\"610721\",\"name\":\"南郑县\"},{\"code\":\"610722\",\"name\":\"城固县\"},{\"code\":\"610723\",\"name\":\"洋县\"},{\"code\":\"610724\",\"name\":\"西乡县\"},{\"code\":\"610725\",\"name\":\"勉县\"},{\"code\":\"610726\",\"name\":\"宁强县\"},{\"code\":\"610727\",\"name\":\"略阳县\"},{\"code\":\"610728\",\"name\":\"镇巴县\"},{\"code\":\"610729\",\"name\":\"留坝县\"},{\"code\":\"610730\",\"name\":\"佛坪县\"}]},{\"code\":\"6108\",\"name\":\"榆林市\",\"childs\":[{\"code\":\"610802\",\"name\":\"榆阳区\"},{\"code\":\"610803\",\"name\":\"横山区\"},{\"code\":\"610821\",\"name\":\"神木县\"},{\"code\":\"610822\",\"name\":\"府谷县\"},{\"code\":\"610824\",\"name\":\"靖边县\"},{\"code\":\"610825\",\"name\":\"定边县\"},{\"code\":\"610826\",\"name\":\"绥德县\"},{\"code\":\"610827\",\"name\":\"米脂县\"},{\"code\":\"610828\",\"name\":\"佳县\"},{\"code\":\"610829\",\"name\":\"吴堡县\"},{\"code\":\"610830\",\"name\":\"清涧县\"},{\"code\":\"610831\",\"name\":\"子洲县\"}]},{\"code\":\"6109\",\"name\":\"安康市\",\"childs\":[{\"code\":\"610902\",\"name\":\"汉滨区\"},{\"code\":\"610921\",\"name\":\"汉阴县\"},{\"code\":\"610922\",\"name\":\"石泉县\"},{\"code\":\"610923\",\"name\":\"宁陕县\"},{\"code\":\"610924\",\"name\":\"紫阳县\"},{\"code\":\"610925\",\"name\":\"岚皋县\"},{\"code\":\"610926\",\"name\":\"平利县\"},{\"code\":\"610927\",\"name\":\"镇坪县\"},{\"code\":\"610928\",\"name\":\"旬阳县\"},{\"code\":\"610929\",\"name\":\"白河县\"}]},{\"code\":\"6110\",\"name\":\"商洛市\",\"childs\":[{\"code\":\"611002\",\"name\":\"商州区\"},{\"code\":\"611021\",\"name\":\"洛南县\"},{\"code\":\"611022\",\"name\":\"丹凤县\"},{\"code\":\"611023\",\"name\":\"商南县\"},{\"code\":\"611024\",\"name\":\"山阳县\"},{\"code\":\"611025\",\"name\":\"镇安县\"},{\"code\":\"611026\",\"name\":\"柞水县\"}]}]},{\"code\":\"62\",\"name\":\"甘肃省\",\"childs\":[{\"code\":\"6201\",\"name\":\"兰州市\",\"childs\":[{\"code\":\"620102\",\"name\":\"城关区\"},{\"code\":\"620103\",\"name\":\"七里河区\"},{\"code\":\"620104\",\"name\":\"西固区\"},{\"code\":\"620105\",\"name\":\"安宁区\"},{\"code\":\"620111\",\"name\":\"红古区\"},{\"code\":\"620121\",\"name\":\"永登县\"},{\"code\":\"620122\",\"name\":\"皋兰县\"},{\"code\":\"620123\",\"name\":\"榆中县\"}]},{\"code\":\"620201\",\"name\":\"嘉峪关市\",\"childs\":[{\"code\":\"620201100\",\"name\":\"新城镇\"},{\"code\":\"620201101\",\"name\":\"峪泉镇\"},{\"code\":\"620201102\",\"name\":\"文殊镇\"},{\"code\":\"620201401\",\"name\":\"雄关区\"},{\"code\":\"620201402\",\"name\":\"镜铁区\"},{\"code\":\"620201403\",\"name\":\"长城区\"}]},{\"code\":\"6203\",\"name\":\"金昌市\",\"childs\":[{\"code\":\"620302\",\"name\":\"金川区\"},{\"code\":\"620321\",\"name\":\"永昌县\"}]},{\"code\":\"6204\",\"name\":\"白银市\",\"childs\":[{\"code\":\"620402\",\"name\":\"白银区\"},{\"code\":\"620403\",\"name\":\"平川区\"},{\"code\":\"620421\",\"name\":\"靖远县\"},{\"code\":\"620422\",\"name\":\"会宁县\"},{\"code\":\"620423\",\"name\":\"景泰县\"}]},{\"code\":\"6205\",\"name\":\"天水市\",\"childs\":[{\"code\":\"620502\",\"name\":\"秦州区\"},{\"code\":\"620503\",\"name\":\"麦积区\"},{\"code\":\"620521\",\"name\":\"清水县\"},{\"code\":\"620522\",\"name\":\"秦安县\"},{\"code\":\"620523\",\"name\":\"甘谷县\"},{\"code\":\"620524\",\"name\":\"武山县\"},{\"code\":\"620525\",\"name\":\"张家川回族自治县\"}]},{\"code\":\"6206\",\"name\":\"武威市\",\"childs\":[{\"code\":\"620602\",\"name\":\"凉州区\"},{\"code\":\"620621\",\"name\":\"民勤县\"},{\"code\":\"620622\",\"name\":\"古浪县\"},{\"code\":\"620623\",\"name\":\"天祝藏族自治县\"}]},{\"code\":\"6207\",\"name\":\"张掖市\",\"childs\":[{\"code\":\"620702\",\"name\":\"甘州区\"},{\"code\":\"620721\",\"name\":\"肃南裕固族自治县\"},{\"code\":\"620722\",\"name\":\"民乐县\"},{\"code\":\"620723\",\"name\":\"临泽县\"},{\"code\":\"620724\",\"name\":\"高台县\"},{\"code\":\"620725\",\"name\":\"山丹县\"}]},{\"code\":\"6208\",\"name\":\"平凉市\",\"childs\":[{\"code\":\"620802\",\"name\":\"崆峒区\"},{\"code\":\"620821\",\"name\":\"泾川县\"},{\"code\":\"620822\",\"name\":\"灵台县\"},{\"code\":\"620823\",\"name\":\"崇信县\"},{\"code\":\"620824\",\"name\":\"华亭县\"},{\"code\":\"620825\",\"name\":\"庄浪县\"},{\"code\":\"620826\",\"name\":\"静宁县\"}]},{\"code\":\"6209\",\"name\":\"酒泉市\",\"childs\":[{\"code\":\"620902\",\"name\":\"肃州区\"},{\"code\":\"620921\",\"name\":\"金塔县\"},{\"code\":\"620922\",\"name\":\"瓜州县\"},{\"code\":\"620923\",\"name\":\"肃北蒙古族自治县\"},{\"code\":\"620924\",\"name\":\"阿克塞哈萨克族自治县\"},{\"code\":\"620981\",\"name\":\"玉门市\"},{\"code\":\"620982\",\"name\":\"敦煌市\"}]},{\"code\":\"6210\",\"name\":\"庆阳市\",\"childs\":[{\"code\":\"621002\",\"name\":\"西峰区\"},{\"code\":\"621021\",\"name\":\"庆城县\"},{\"code\":\"621022\",\"name\":\"环县\"},{\"code\":\"621023\",\"name\":\"华池县\"},{\"code\":\"621024\",\"name\":\"合水县\"},{\"code\":\"621025\",\"name\":\"正宁县\"},{\"code\":\"621026\",\"name\":\"宁县\"},{\"code\":\"621027\",\"name\":\"镇原县\"}]},{\"code\":\"6211\",\"name\":\"定西市\",\"childs\":[{\"code\":\"621102\",\"name\":\"安定区\"},{\"code\":\"621121\",\"name\":\"通渭县\"},{\"code\":\"621122\",\"name\":\"陇西县\"},{\"code\":\"621123\",\"name\":\"渭源县\"},{\"code\":\"621124\",\"name\":\"临洮县\"},{\"code\":\"621125\",\"name\":\"漳县\"},{\"code\":\"621126\",\"name\":\"岷县\"}]},{\"code\":\"6212\",\"name\":\"陇南市\",\"childs\":[{\"code\":\"621202\",\"name\":\"武都区\"},{\"code\":\"621221\",\"name\":\"成县\"},{\"code\":\"621222\",\"name\":\"文县\"},{\"code\":\"621223\",\"name\":\"宕昌县\"},{\"code\":\"621224\",\"name\":\"康县\"},{\"code\":\"621225\",\"name\":\"西和县\"},{\"code\":\"621226\",\"name\":\"礼县\"},{\"code\":\"621227\",\"name\":\"徽县\"},{\"code\":\"621228\",\"name\":\"两当县\"}]},{\"code\":\"6229\",\"name\":\"临夏回族自治州\",\"childs\":[{\"code\":\"622901\",\"name\":\"临夏市\"},{\"code\":\"622921\",\"name\":\"临夏县\"},{\"code\":\"622922\",\"name\":\"康乐县\"},{\"code\":\"622923\",\"name\":\"永靖县\"},{\"code\":\"622924\",\"name\":\"广河县\"},{\"code\":\"622925\",\"name\":\"和政县\"},{\"code\":\"622926\",\"name\":\"东乡族自治县\"},{\"code\":\"622927\",\"name\":\"积石山保安族东乡族撒拉族自治县\"}]},{\"code\":\"6230\",\"name\":\"甘南藏族自治州\",\"childs\":[{\"code\":\"623001\",\"name\":\"合作市\"},{\"code\":\"623021\",\"name\":\"临潭县\"},{\"code\":\"623022\",\"name\":\"卓尼县\"},{\"code\":\"623023\",\"name\":\"舟曲县\"},{\"code\":\"623024\",\"name\":\"迭部县\"},{\"code\":\"623025\",\"name\":\"玛曲县\"},{\"code\":\"623026\",\"name\":\"碌曲县\"},{\"code\":\"623027\",\"name\":\"夏河县\"}]}]},{\"code\":\"63\",\"name\":\"青海省\",\"childs\":[{\"code\":\"6301\",\"name\":\"西宁市\",\"childs\":[{\"code\":\"630102\",\"name\":\"城东区\"},{\"code\":\"630103\",\"name\":\"城中区\"},{\"code\":\"630104\",\"name\":\"城西区\"},{\"code\":\"630105\",\"name\":\"城北区\"},{\"code\":\"630121\",\"name\":\"大通回族土族自治县\"},{\"code\":\"630122\",\"name\":\"湟中县\"},{\"code\":\"630123\",\"name\":\"湟源县\"}]},{\"code\":\"6302\",\"name\":\"海东市\",\"childs\":[{\"code\":\"630202\",\"name\":\"乐都区\"},{\"code\":\"630203\",\"name\":\"平安区\"},{\"code\":\"630222\",\"name\":\"民和回族土族自治县\"},{\"code\":\"630223\",\"name\":\"互助土族自治县\"},{\"code\":\"630224\",\"name\":\"化隆回族自治县\"},{\"code\":\"630225\",\"name\":\"循化撒拉族自治县\"}]},{\"code\":\"6322\",\"name\":\"海北藏族自治州\",\"childs\":[{\"code\":\"632221\",\"name\":\"门源回族自治县\"},{\"code\":\"632222\",\"name\":\"祁连县\"},{\"code\":\"632223\",\"name\":\"海晏县\"},{\"code\":\"632224\",\"name\":\"刚察县\"}]},{\"code\":\"6323\",\"name\":\"黄南藏族自治州\",\"childs\":[{\"code\":\"632321\",\"name\":\"同仁县\"},{\"code\":\"632322\",\"name\":\"尖扎县\"},{\"code\":\"632323\",\"name\":\"泽库县\"},{\"code\":\"632324\",\"name\":\"河南蒙古族自治县\"}]},{\"code\":\"6325\",\"name\":\"海南藏族自治州\",\"childs\":[{\"code\":\"632521\",\"name\":\"共和县\"},{\"code\":\"632522\",\"name\":\"同德县\"},{\"code\":\"632523\",\"name\":\"贵德县\"},{\"code\":\"632524\",\"name\":\"兴海县\"},{\"code\":\"632525\",\"name\":\"贵南县\"}]},{\"code\":\"6326\",\"name\":\"果洛藏族自治州\",\"childs\":[{\"code\":\"632621\",\"name\":\"玛沁县\"},{\"code\":\"632622\",\"name\":\"班玛县\"},{\"code\":\"632623\",\"name\":\"甘德县\"},{\"code\":\"632624\",\"name\":\"达日县\"},{\"code\":\"632625\",\"name\":\"久治县\"},{\"code\":\"632626\",\"name\":\"玛多县\"}]},{\"code\":\"6327\",\"name\":\"玉树藏族自治州\",\"childs\":[{\"code\":\"632701\",\"name\":\"玉树市\"},{\"code\":\"632722\",\"name\":\"杂多县\"},{\"code\":\"632723\",\"name\":\"称多县\"},{\"code\":\"632724\",\"name\":\"治多县\"},{\"code\":\"632725\",\"name\":\"囊谦县\"},{\"code\":\"632726\",\"name\":\"曲麻莱县\"}]},{\"code\":\"6328\",\"name\":\"海西蒙古族藏族自治州\",\"childs\":[{\"code\":\"632801\",\"name\":\"格尔木市\"},{\"code\":\"632802\",\"name\":\"德令哈市\"},{\"code\":\"632821\",\"name\":\"乌兰县\"},{\"code\":\"632822\",\"name\":\"都兰县\"},{\"code\":\"632823\",\"name\":\"天峻县\"}]}]},{\"code\":\"64\",\"name\":\"宁夏回族自治区\",\"childs\":[{\"code\":\"6401\",\"name\":\"银川市\",\"childs\":[{\"code\":\"640104\",\"name\":\"兴庆区\"},{\"code\":\"640105\",\"name\":\"西夏区\"},{\"code\":\"640106\",\"name\":\"金凤区\"},{\"code\":\"640121\",\"name\":\"永宁县\"},{\"code\":\"640122\",\"name\":\"贺兰县\"},{\"code\":\"640181\",\"name\":\"灵武市\"}]},{\"code\":\"6402\",\"name\":\"石嘴山市\",\"childs\":[{\"code\":\"640202\",\"name\":\"大武口区\"},{\"code\":\"640205\",\"name\":\"惠农区\"},{\"code\":\"640221\",\"name\":\"平罗县\"}]},{\"code\":\"6403\",\"name\":\"吴忠市\",\"childs\":[{\"code\":\"640302\",\"name\":\"利通区\"},{\"code\":\"640303\",\"name\":\"红寺堡区\"},{\"code\":\"640323\",\"name\":\"盐池县\"},{\"code\":\"640324\",\"name\":\"同心县\"},{\"code\":\"640381\",\"name\":\"青铜峡市\"}]},{\"code\":\"6404\",\"name\":\"固原市\",\"childs\":[{\"code\":\"640402\",\"name\":\"原州区\"},{\"code\":\"640422\",\"name\":\"西吉县\"},{\"code\":\"640423\",\"name\":\"隆德县\"},{\"code\":\"640424\",\"name\":\"泾源县\"},{\"code\":\"640425\",\"name\":\"彭阳县\"}]},{\"code\":\"6405\",\"name\":\"中卫市\",\"childs\":[{\"code\":\"640502\",\"name\":\"沙坡头区\"},{\"code\":\"640521\",\"name\":\"中宁县\"},{\"code\":\"640522\",\"name\":\"海原县\"}]}]},{\"code\":\"65\",\"name\":\"新疆维吾尔自治区\",\"childs\":[{\"code\":\"6501\",\"name\":\"乌鲁木齐市\",\"childs\":[{\"code\":\"650102\",\"name\":\"天山区\"},{\"code\":\"650103\",\"name\":\"沙依巴克区\"},{\"code\":\"650104\",\"name\":\"新市区\"},{\"code\":\"650105\",\"name\":\"水磨沟区\"},{\"code\":\"650106\",\"name\":\"头屯河区\"},{\"code\":\"650107\",\"name\":\"达坂城区\"},{\"code\":\"650109\",\"name\":\"米东区\"},{\"code\":\"650121\",\"name\":\"乌鲁木齐县\"}]},{\"code\":\"6502\",\"name\":\"克拉玛依市\",\"childs\":[{\"code\":\"650202\",\"name\":\"独山子区\"},{\"code\":\"650203\",\"name\":\"克拉玛依区\"},{\"code\":\"650204\",\"name\":\"白碱滩区\"},{\"code\":\"650205\",\"name\":\"乌尔禾区\"}]},{\"code\":\"6504\",\"name\":\"吐鲁番市\",\"childs\":[{\"code\":\"650402\",\"name\":\"高昌区\"},{\"code\":\"650421\",\"name\":\"鄯善县\"},{\"code\":\"650422\",\"name\":\"托克逊县\"}]},{\"code\":\"6505\",\"name\":\"哈密市\",\"childs\":[{\"code\":\"650502\",\"name\":\"伊州区\"},{\"code\":\"650521\",\"name\":\"巴里坤哈萨克自治县\"},{\"code\":\"650522\",\"name\":\"伊吾县\"}]},{\"code\":\"6523\",\"name\":\"昌吉回族自治州\",\"childs\":[{\"code\":\"652301\",\"name\":\"昌吉市\"},{\"code\":\"652302\",\"name\":\"阜康市\"},{\"code\":\"652323\",\"name\":\"呼图壁县\"},{\"code\":\"652324\",\"name\":\"玛纳斯县\"},{\"code\":\"652325\",\"name\":\"奇台县\"},{\"code\":\"652327\",\"name\":\"吉木萨尔县\"},{\"code\":\"652328\",\"name\":\"木垒哈萨克自治县\"}]},{\"code\":\"6527\",\"name\":\"博尔塔拉蒙古自治州\",\"childs\":[{\"code\":\"652701\",\"name\":\"博乐市\"},{\"code\":\"652702\",\"name\":\"阿拉山口市\"},{\"code\":\"652722\",\"name\":\"精河县\"},{\"code\":\"652723\",\"name\":\"温泉县\"}]},{\"code\":\"6528\",\"name\":\"巴音郭楞蒙古自治州\",\"childs\":[{\"code\":\"652801\",\"name\":\"库尔勒市\"},{\"code\":\"652822\",\"name\":\"轮台县\"},{\"code\":\"652823\",\"name\":\"尉犁县\"},{\"code\":\"652824\",\"name\":\"若羌县\"},{\"code\":\"652825\",\"name\":\"且末县\"},{\"code\":\"652826\",\"name\":\"焉耆回族自治县\"},{\"code\":\"652827\",\"name\":\"和静县\"},{\"code\":\"652828\",\"name\":\"和硕县\"},{\"code\":\"652829\",\"name\":\"博湖县\"}]},{\"code\":\"6529\",\"name\":\"阿克苏地区\",\"childs\":[{\"code\":\"652901\",\"name\":\"阿克苏市\"},{\"code\":\"652922\",\"name\":\"温宿县\"},{\"code\":\"652923\",\"name\":\"库车县\"},{\"code\":\"652924\",\"name\":\"沙雅县\"},{\"code\":\"652925\",\"name\":\"新和县\"},{\"code\":\"652926\",\"name\":\"拜城县\"},{\"code\":\"652927\",\"name\":\"乌什县\"},{\"code\":\"652928\",\"name\":\"阿瓦提县\"},{\"code\":\"652929\",\"name\":\"柯坪县\"}]},{\"code\":\"6530\",\"name\":\"克孜勒苏柯尔克孜自治州\",\"childs\":[{\"code\":\"653001\",\"name\":\"阿图什市\"},{\"code\":\"653022\",\"name\":\"阿克陶县\"},{\"code\":\"653023\",\"name\":\"阿合奇县\"},{\"code\":\"653024\",\"name\":\"乌恰县\"}]},{\"code\":\"6531\",\"name\":\"喀什地区\",\"childs\":[{\"code\":\"653101\",\"name\":\"喀什市\"},{\"code\":\"653121\",\"name\":\"疏附县\"},{\"code\":\"653122\",\"name\":\"疏勒县\"},{\"code\":\"653123\",\"name\":\"英吉沙县\"},{\"code\":\"653124\",\"name\":\"泽普县\"},{\"code\":\"653125\",\"name\":\"莎车县\"},{\"code\":\"653126\",\"name\":\"叶城县\"},{\"code\":\"653127\",\"name\":\"麦盖提县\"},{\"code\":\"653128\",\"name\":\"岳普湖县\"},{\"code\":\"653129\",\"name\":\"伽师县\"},{\"code\":\"653130\",\"name\":\"巴楚县\"},{\"code\":\"653131\",\"name\":\"塔什库尔干塔吉克自治县\"}]},{\"code\":\"6532\",\"name\":\"和田地区\",\"childs\":[{\"code\":\"653201\",\"name\":\"和田市\"},{\"code\":\"653221\",\"name\":\"和田县\"},{\"code\":\"653222\",\"name\":\"墨玉县\"},{\"code\":\"653223\",\"name\":\"皮山县\"},{\"code\":\"653224\",\"name\":\"洛浦县\"},{\"code\":\"653225\",\"name\":\"策勒县\"},{\"code\":\"653226\",\"name\":\"于田县\"},{\"code\":\"653227\",\"name\":\"民丰县\"}]},{\"code\":\"6540\",\"name\":\"伊犁哈萨克自治州\",\"childs\":[{\"code\":\"654002\",\"name\":\"伊宁市\"},{\"code\":\"654003\",\"name\":\"奎屯市\"},{\"code\":\"654004\",\"name\":\"霍尔果斯市\"},{\"code\":\"654021\",\"name\":\"伊宁县\"},{\"code\":\"654022\",\"name\":\"察布查尔锡伯自治县\"},{\"code\":\"654023\",\"name\":\"霍城县\"},{\"code\":\"654024\",\"name\":\"巩留县\"},{\"code\":\"654025\",\"name\":\"新源县\"},{\"code\":\"654026\",\"name\":\"昭苏县\"},{\"code\":\"654027\",\"name\":\"特克斯县\"},{\"code\":\"654028\",\"name\":\"尼勒克县\"}]},{\"code\":\"6542\",\"name\":\"塔城地区\",\"childs\":[{\"code\":\"654201\",\"name\":\"塔城市\"},{\"code\":\"654202\",\"name\":\"乌苏市\"},{\"code\":\"654221\",\"name\":\"额敏县\"},{\"code\":\"654223\",\"name\":\"沙湾县\"},{\"code\":\"654224\",\"name\":\"托里县\"},{\"code\":\"654225\",\"name\":\"裕民县\"},{\"code\":\"654226\",\"name\":\"和布克赛尔蒙古自治县\"}]},{\"code\":\"6543\",\"name\":\"阿勒泰地区\",\"childs\":[{\"code\":\"654301\",\"name\":\"阿勒泰市\"},{\"code\":\"654321\",\"name\":\"布尔津县\"},{\"code\":\"654322\",\"name\":\"富蕴县\"},{\"code\":\"654323\",\"name\":\"福海县\"},{\"code\":\"654324\",\"name\":\"哈巴河县\"},{\"code\":\"654325\",\"name\":\"青河县\"},{\"code\":\"654326\",\"name\":\"吉木乃县\"}]},{\"code\":\"6590\",\"name\":\"自治区直辖县级行政区划\",\"childs\":[{\"code\":\"659001\",\"name\":\"石河子市\"},{\"code\":\"659002\",\"name\":\"阿拉尔市\"},{\"code\":\"659003\",\"name\":\"图木舒克市\"},{\"code\":\"659004\",\"name\":\"五家渠市\"},{\"code\":\"659006\",\"name\":\"铁门关市\"}]}]},{\"code\":\"71\",\"name\":\"台湾省\",\"childs\":[]},{\"code\":\"81\",\"name\":\"香港特别行政区\",\"childs\":[]},{\"code\":\"82\",\"name\":\"澳门特别行政区\",\"childs\":[]}]");

/***/ }),

/***/ 3:
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ 4:
/*!****************************************!*\
  !*** D:/桌面/XLCM/baoma-work/pages.json ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ 52:
/*!**************************************************!*\
  !*** D:/桌面/XLCM/baoma-work/common/cityList.json ***!
  \**************************************************/
/*! exports provided: topCitys, citys, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"topCitys\":[{\"city\":\"北京\",\"id\":110001,\"pinyin\":\"beijing\"},{\"id\":310001,\"city\":\"上海\",\"pinyin\":\"shanghai\"},{\"id\":420001,\"city\":\"武汉\",\"pinyin\":\"wuhan\"},{\"id\":320001,\"city\":\"南京\",\"pinyin\":\"nanjing\"},{\"id\":330001,\"city\":\"杭州\",\"pinyin\":\"hangzhou\"},{\"id\":430001,\"city\":\"长沙\",\"pinyin\":\"changsha\"},{\"id\":440003,\"city\":\"深圳\",\"pinyin\":\"shenzhen\"},{\"id\":510001,\"city\":\"成都\",\"pinyin\":\"chengdu\"},{\"id\":500003,\"city\":\"重庆\",\"pinyin\":\"chongqing\"},{\"id\":610001,\"city\":\"西安\",\"pinyin\":\"xian\"},{\"id\":410001,\"city\":\"郑州\",\"pinyin\":\"zhengzhou\"},{\"city\":\"天津\",\"id\":120001,\"pinyin\":\"tianjin\"}],\"citys\":[{\"id\":110001,\"city\":\"北京\",\"pinyin\":\"beijing\"},{\"id\":120001,\"city\":\"天津\",\"pinyin\":\"tianjin\"},{\"id\":130001,\"city\":\"石家庄\",\"pinyin\":\"jiazhuang\"},{\"id\":130002,\"city\":\"唐山\",\"pinyin\":\"tangshan\"},{\"id\":130003,\"city\":\"秦皇岛\",\"pinyin\":\"qinhuangdao\"},{\"id\":130004,\"city\":\"邯郸\",\"pinyin\":\"handan\"},{\"id\":130005,\"city\":\"邢台\",\"pinyin\":\"xingtai\"},{\"id\":130006,\"city\":\"保定\",\"pinyin\":\"baoding\"},{\"id\":130007,\"city\":\"张家口\",\"pinyin\":\"zhangjiakou\"},{\"id\":130008,\"city\":\"承德\",\"pinyin\":\"chengde\"},{\"id\":130009,\"city\":\"沧州\",\"pinyin\":\"cangzhou\"},{\"id\":13010,\"city\":\"廊坊\",\"pinyin\":\"langfang\"},{\"id\":131001,\"city\":\"衡水\",\"pinyin\":\"hengshui\"},{\"id\":140001,\"city\":\"太原\",\"pinyin\":\"taiyuan\"},{\"id\":140002,\"city\":\"大同\",\"pinyin\":\"datong\"},{\"id\":140003,\"city\":\"阳泉\",\"pinyin\":\"yangquan\"},{\"id\":140004,\"city\":\"长治\",\"pinyin\":\"zhangzhi\"},{\"id\":140005,\"city\":\"晋城\",\"pinyin\":\"jincheng\"},{\"id\":140006,\"city\":\"朔州\",\"pinyin\":\"shuozhou\"},{\"id\":140007,\"city\":\"晋中\",\"pinyin\":\"jinzhong\"},{\"id\":140008,\"city\":\"运城\",\"pinyin\":\"yuncheng\"},{\"id\":140009,\"city\":\"忻州\",\"pinyin\":\"xinzhou\"},{\"id\":14010,\"city\":\"临汾\",\"pinyin\":\"linfen\"},{\"id\":141001,\"city\":\"吕梁\",\"pinyin\":\"lvliang\"},{\"id\":150001,\"city\":\"呼和浩特\",\"pinyin\":\"huhehaote\"},{\"id\":150002,\"city\":\"包头\",\"pinyin\":\"baotou\"},{\"id\":150003,\"city\":\"乌海\",\"pinyin\":\"wuhai\"},{\"id\":150004,\"city\":\"赤峰\",\"pinyin\":\"chifeng\"},{\"id\":150005,\"city\":\"通辽\",\"pinyin\":\"tongliao\"},{\"id\":150006,\"city\":\"鄂尔多斯\",\"pinyin\":\"eerduosi\"},{\"id\":150007,\"city\":\"呼伦贝尔\",\"pinyin\":\"hulunbeier\"},{\"id\":150008,\"city\":\"巴彦淖尔\",\"pinyin\":\"bayannaoer\"},{\"id\":150009,\"city\":\"乌兰察布\",\"pinyin\":\"wulanchabu\"},{\"id\":152002,\"city\":\"兴安盟\",\"pinyin\":\"xinganmeng\"},{\"id\":152005,\"city\":\"锡林郭勒盟\",\"pinyin\":\"xilinguolemeng\"},{\"id\":152009,\"city\":\"阿拉善盟\",\"pinyin\":\"alashanmeng\"},{\"id\":210001,\"city\":\"沈阳\",\"pinyin\":\"shenyang\"},{\"id\":210002,\"city\":\"大连\",\"pinyin\":\"dalian\"},{\"id\":210003,\"city\":\"鞍山\",\"pinyin\":\"anshan\"},{\"id\":210004,\"city\":\"抚顺\",\"pinyin\":\"fushun\"},{\"id\":210005,\"city\":\"本溪\",\"pinyin\":\"benxi\"},{\"id\":210006,\"city\":\"丹东\",\"pinyin\":\"dandong\"},{\"id\":210007,\"city\":\"锦州\",\"pinyin\":\"jinzhou\"},{\"id\":210008,\"city\":\"营口\",\"pinyin\":\"yingkou\"},{\"id\":210009,\"city\":\"阜新\",\"pinyin\":\"fuxin\"},{\"id\":21010,\"city\":\"辽阳\",\"pinyin\":\"liaoyang\"},{\"id\":211001,\"city\":\"盘锦\",\"pinyin\":\"panjin\"},{\"id\":211002,\"city\":\"铁岭\",\"pinyin\":\"tieling\"},{\"id\":211003,\"city\":\"朝阳\",\"pinyin\":\"chaoyang\"},{\"id\":211004,\"city\":\"葫芦岛\",\"pinyin\":\"huludao\"},{\"id\":220001,\"city\":\"长春\",\"pinyin\":\"zhangchun\"},{\"id\":220002,\"city\":\"吉林\",\"pinyin\":\"jilin\"},{\"id\":220003,\"city\":\"四平\",\"pinyin\":\"siping\"},{\"id\":220004,\"city\":\"辽源\",\"pinyin\":\"liaoyuan\"},{\"id\":220005,\"city\":\"通化\",\"pinyin\":\"tonghua\"},{\"id\":220006,\"city\":\"白山\",\"pinyin\":\"baishan\"},{\"id\":220007,\"city\":\"松原\",\"pinyin\":\"songyuan\"},{\"id\":220008,\"city\":\"白城\",\"pinyin\":\"baicheng\"},{\"id\":222004,\"city\":\"延边朝鲜族自治州\",\"pinyin\":\"yanbianchaoxianzuzizhizhou\"},{\"id\":230001,\"city\":\"哈尔滨\",\"pinyin\":\"haerbin\"},{\"id\":230002,\"city\":\"齐齐哈尔\",\"pinyin\":\"qiqihaer\"},{\"id\":230003,\"city\":\"鸡西\",\"pinyin\":\"jixi\"},{\"id\":230004,\"city\":\"鹤岗\",\"pinyin\":\"hegang\"},{\"id\":230006,\"city\":\"大庆\",\"pinyin\":\"daqing\"},{\"id\":230007,\"city\":\"伊春\",\"pinyin\":\"yichun\"},{\"id\":230008,\"city\":\"佳木斯\",\"pinyin\":\"jiamusi\"},{\"id\":230009,\"city\":\"七台河\",\"pinyin\":\"qitaihe\"},{\"id\":23010,\"city\":\"牡丹江\",\"pinyin\":\"mudanjiang\"},{\"id\":231001,\"city\":\"黑河\",\"pinyin\":\"heihe\"},{\"id\":231002,\"city\":\"绥化\",\"pinyin\":\"suihua\"},{\"id\":232007,\"city\":\"大兴安岭地区\",\"pinyin\":\"daxinganlingdiqu\"},{\"id\":310001,\"city\":\"上海\",\"pinyin\":\"shanghai\"},{\"id\":320001,\"city\":\"南京\",\"pinyin\":\"nanjing\"},{\"id\":320002,\"city\":\"无锡\",\"pinyin\":\"wuxi\"},{\"id\":320003,\"city\":\"徐州\",\"pinyin\":\"xuzhou\"},{\"id\":320004,\"city\":\"常州\",\"pinyin\":\"changzhou\"},{\"id\":320005,\"city\":\"苏州\",\"pinyin\":\"suzhou\"},{\"id\":320006,\"city\":\"南通\",\"pinyin\":\"nantong\"},{\"id\":320007,\"city\":\"连云港\",\"pinyin\":\"lianyungang\"},{\"id\":320008,\"city\":\"淮安\",\"pinyin\":\"huaian\"},{\"id\":320009,\"city\":\"盐城\",\"pinyin\":\"yancheng\"},{\"id\":32010,\"city\":\"扬州\",\"pinyin\":\"yangzhou\"},{\"id\":321001,\"city\":\"镇江\",\"pinyin\":\"zhenjiang\"},{\"id\":321002,\"city\":\"泰州\",\"pinyin\":\"taizhou\"},{\"id\":321003,\"city\":\"宿迁\",\"pinyin\":\"suqian\"},{\"id\":330001,\"city\":\"杭州\",\"pinyin\":\"hangzhou\"},{\"id\":330002,\"city\":\"宁波\",\"pinyin\":\"ningbo\"},{\"id\":330003,\"city\":\"温州\",\"pinyin\":\"wenzhou\"},{\"id\":330004,\"city\":\"嘉兴\",\"pinyin\":\"jiaxing\"},{\"id\":330005,\"city\":\"湖州\",\"pinyin\":\"huzhou\"},{\"id\":330006,\"city\":\"绍兴\",\"pinyin\":\"shaoxing\"},{\"id\":330007,\"city\":\"金华\",\"pinyin\":\"jinhua\"},{\"id\":330008,\"city\":\"衢州\",\"pinyin\":\"quzhou\"},{\"id\":330009,\"city\":\"舟山\",\"pinyin\":\"zhoushan\"},{\"id\":33010,\"city\":\"台州\",\"pinyin\":\"taizhou1\"},{\"id\":331001,\"city\":\"丽水\",\"pinyin\":\"lishui\"},{\"id\":340001,\"city\":\"合肥\",\"pinyin\":\"hefei\"},{\"id\":340002,\"city\":\"芜湖\",\"pinyin\":\"wuhu\"},{\"id\":340003,\"city\":\"蚌埠\",\"pinyin\":\"bangbu\"},{\"id\":340004,\"city\":\"淮南\",\"pinyin\":\"huainan\"},{\"id\":340005,\"city\":\"马鞍山\",\"pinyin\":\"maanshan\"},{\"id\":340006,\"city\":\"淮北\",\"pinyin\":\"huaibei\"},{\"id\":340007,\"city\":\"铜陵\",\"pinyin\":\"tongling\"},{\"id\":340008,\"city\":\"安庆\",\"pinyin\":\"anqing\"},{\"id\":34010,\"city\":\"黄山\",\"pinyin\":\"huangshan\"},{\"id\":341001,\"city\":\"滁州\",\"pinyin\":\"chuzhou\"},{\"id\":341002,\"city\":\"阜阳\",\"pinyin\":\"fuyang\"},{\"id\":341003,\"city\":\"宿州\",\"pinyin\":\"suzhou1\"},{\"id\":341004,\"city\":\"巢湖\",\"pinyin\":\"chaohu\"},{\"id\":341005,\"city\":\"六安\",\"pinyin\":\"liuan\"},{\"id\":341006,\"city\":\"亳州\",\"pinyin\":\"bozhou\"},{\"id\":341007,\"city\":\"池州\",\"pinyin\":\"chizhou\"},{\"id\":341008,\"city\":\"宣城\",\"pinyin\":\"xuancheng\"},{\"id\":350001,\"city\":\"福州\",\"pinyin\":\"fuzhou\"},{\"id\":350002,\"city\":\"厦门\",\"pinyin\":\"xiamen\"},{\"id\":350003,\"city\":\"莆田\",\"pinyin\":\"putian\"},{\"id\":350004,\"city\":\"三明\",\"pinyin\":\"sanming\"},{\"id\":350005,\"city\":\"泉州\",\"pinyin\":\"quanzhou\"},{\"id\":350006,\"city\":\"漳州\",\"pinyin\":\"zhangzhou\"},{\"id\":350007,\"city\":\"南平\",\"pinyin\":\"nanping\"},{\"id\":350008,\"city\":\"龙岩\",\"pinyin\":\"longyan\"},{\"id\":350009,\"city\":\"宁德\",\"pinyin\":\"ningde\"},{\"id\":360001,\"city\":\"南昌\",\"pinyin\":\"nanchang\"},{\"id\":360002,\"city\":\"景德镇\",\"pinyin\":\"jingdezhen\"},{\"id\":360003,\"city\":\"萍乡\",\"pinyin\":\"pingxiang\"},{\"id\":360004,\"city\":\"九江\",\"pinyin\":\"jiujiang\"},{\"id\":360005,\"city\":\"新余\",\"pinyin\":\"xinyu\"},{\"id\":360006,\"city\":\"鹰潭\",\"pinyin\":\"yingtan\"},{\"id\":360007,\"city\":\"赣州\",\"pinyin\":\"ganzhou\"},{\"id\":360008,\"city\":\"吉安\",\"pinyin\":\"jian\"},{\"id\":360009,\"city\":\"宜春\",\"pinyin\":\"yichun1\"},{\"id\":36010,\"city\":\"抚州\",\"pinyin\":\"fuzhou1\"},{\"id\":361001,\"city\":\"上饶\",\"pinyin\":\"shangrao\"},{\"id\":370001,\"city\":\"济南\",\"pinyin\":\"jinan\"},{\"id\":370002,\"city\":\"青岛\",\"pinyin\":\"qingdao\"},{\"id\":370003,\"city\":\"淄博\",\"pinyin\":\"zibo\"},{\"id\":370004,\"city\":\"枣庄\",\"pinyin\":\"zaozhuang\"},{\"id\":370005,\"city\":\"东营\",\"pinyin\":\"dongying\"},{\"id\":370006,\"city\":\"烟台\",\"pinyin\":\"yantai\"},{\"id\":370007,\"city\":\"潍坊\",\"pinyin\":\"weifang\"},{\"id\":370008,\"city\":\"济宁\",\"pinyin\":\"jining\"},{\"id\":370009,\"city\":\"泰安\",\"pinyin\":\"taian\"},{\"id\":37010,\"city\":\"威海\",\"pinyin\":\"weihai\"},{\"id\":371001,\"city\":\"日照\",\"pinyin\":\"rizhao\"},{\"id\":371002,\"city\":\"莱芜\",\"pinyin\":\"laiwu\"},{\"id\":371003,\"city\":\"临沂\",\"pinyin\":\"linyi\"},{\"id\":371004,\"city\":\"德州\",\"pinyin\":\"dezhou\"},{\"id\":371005,\"city\":\"聊城\",\"pinyin\":\"liaocheng\"},{\"id\":371006,\"city\":\"滨州\",\"pinyin\":\"binzhou\"},{\"id\":371007,\"city\":\"荷泽\",\"pinyin\":\"heze\"},{\"id\":410001,\"city\":\"郑州\",\"pinyin\":\"zhengzhou\"},{\"id\":410002,\"city\":\"开封\",\"pinyin\":\"kaifeng\"},{\"id\":410003,\"city\":\"洛阳\",\"pinyin\":\"luoyang\"},{\"id\":410004,\"city\":\"平顶山\",\"pinyin\":\"pingdingshan\"},{\"id\":410005,\"city\":\"安阳\",\"pinyin\":\"anyang\"},{\"id\":410006,\"city\":\"鹤壁\",\"pinyin\":\"hebi\"},{\"id\":410007,\"city\":\"新乡\",\"pinyin\":\"xinxiang\"},{\"id\":410008,\"city\":\"焦作\",\"pinyin\":\"jiaozuo\"},{\"id\":410009,\"city\":\"濮阳\",\"pinyin\":\"puyang\"},{\"id\":41010,\"city\":\"许昌\",\"pinyin\":\"xuchang\"},{\"id\":411001,\"city\":\"漯河\",\"pinyin\":\"luohe\"},{\"id\":411002,\"city\":\"三门峡\",\"pinyin\":\"sanmenxia\"},{\"id\":411003,\"city\":\"南阳\",\"pinyin\":\"nanyang\"},{\"id\":411004,\"city\":\"商丘\",\"pinyin\":\"shangqiu\"},{\"id\":411005,\"city\":\"信阳\",\"pinyin\":\"xinyang\"},{\"id\":411006,\"city\":\"周口\",\"pinyin\":\"zhoukou\"},{\"id\":411007,\"city\":\"驻马店\",\"pinyin\":\"zhumadian\"},{\"id\":420001,\"city\":\"武汉\",\"pinyin\":\"wuhan\"},{\"id\":420002,\"city\":\"黄石\",\"pinyin\":\"huang\"},{\"id\":420003,\"city\":\"十堰\",\"pinyin\":\"shiyan\"},{\"id\":420005,\"city\":\"宜昌\",\"pinyin\":\"yichang\"},{\"id\":420006,\"city\":\"襄樊\",\"pinyin\":\"xiangfan\"},{\"id\":420007,\"city\":\"鄂州\",\"pinyin\":\"ezhou\"},{\"id\":420008,\"city\":\"荆门\",\"pinyin\":\"jingmen\"},{\"id\":420009,\"city\":\"孝感\",\"pinyin\":\"xiaogan\"},{\"id\":42010,\"city\":\"荆州\",\"pinyin\":\"jingzhou\"},{\"id\":421001,\"city\":\"黄冈\",\"pinyin\":\"huanggang\"},{\"id\":421002,\"city\":\"咸宁\",\"pinyin\":\"xianning\"},{\"id\":421003,\"city\":\"随州\",\"pinyin\":\"suizhou\"},{\"id\":422008,\"city\":\"恩施土家族苗族自治州\",\"pinyin\":\"entujiazumiaozuzizhizhou\"},{\"id\":430001,\"city\":\"长沙\",\"pinyin\":\"changsha\"},{\"id\":430002,\"city\":\"株洲\",\"pinyin\":\"zhuzhou\"},{\"id\":430003,\"city\":\"湘潭\",\"pinyin\":\"xiangtan\"},{\"id\":430004,\"city\":\"衡阳\",\"pinyin\":\"hengyang\"},{\"id\":430005,\"city\":\"邵阳\",\"pinyin\":\"shaoyang\"},{\"id\":430006,\"city\":\"岳阳\",\"pinyin\":\"yueyang\"},{\"id\":430007,\"city\":\"常德\",\"pinyin\":\"changde\"},{\"id\":430008,\"city\":\"张家界\",\"pinyin\":\"zhangjiajie\"},{\"id\":430009,\"city\":\"益阳\",\"pinyin\":\"yiyang\"},{\"id\":43010,\"city\":\"郴州\",\"pinyin\":\"chenzhou\"},{\"id\":431001,\"city\":\"永州\",\"pinyin\":\"yongzhou\"},{\"id\":431002,\"city\":\"怀化\",\"pinyin\":\"huaihua\"},{\"id\":431003,\"city\":\"娄底\",\"pinyin\":\"loudi\"},{\"id\":433001,\"city\":\"湘西\",\"pinyin\":\"xiangxitujiazumiaozuzizhizhou\"},{\"id\":440001,\"city\":\"广州\",\"pinyin\":\"guangzhou\"},{\"id\":440002,\"city\":\"韶关\",\"pinyin\":\"shaoguan\"},{\"id\":440003,\"city\":\"深圳\",\"pinyin\":\"shenzhen\"},{\"id\":440004,\"city\":\"珠海\",\"pinyin\":\"zhuhai\"},{\"id\":440005,\"city\":\"汕头\",\"pinyin\":\"shantou\"},{\"id\":440006,\"city\":\"佛山\",\"pinyin\":\"foshan\"},{\"id\":440007,\"city\":\"江门\",\"pinyin\":\"jiangmen\"},{\"id\":440008,\"city\":\"湛江\",\"pinyin\":\"zhanjiang\"},{\"id\":440009,\"city\":\"茂名\",\"pinyin\":\"maoming\"},{\"id\":441002,\"city\":\"肇庆\",\"pinyin\":\"zhaoqing\"},{\"id\":441003,\"city\":\"惠州\",\"pinyin\":\"huizhou\"},{\"id\":441004,\"city\":\"梅州\",\"pinyin\":\"meizhou\"},{\"id\":441005,\"city\":\"汕尾\",\"pinyin\":\"shanwei\"},{\"id\":441006,\"city\":\"河源\",\"pinyin\":\"heyuan\"},{\"id\":441007,\"city\":\"阳江\",\"pinyin\":\"yangjiang\"},{\"id\":441008,\"city\":\"清远\",\"pinyin\":\"qingyuan\"},{\"id\":441009,\"city\":\"东莞\",\"pinyin\":\"dongguan\"},{\"id\":442000,\"city\":\"中山\",\"pinyin\":\"zhongshan\"},{\"id\":445001,\"city\":\"潮州\",\"pinyin\":\"chaozhou\"},{\"id\":445002,\"city\":\"揭阳\",\"pinyin\":\"jieyang\"},{\"id\":445003,\"city\":\"云浮\",\"pinyin\":\"yunfu\"},{\"id\":450001,\"city\":\"南宁\",\"pinyin\":\"nanning\"},{\"id\":450002,\"city\":\"柳州\",\"pinyin\":\"liuzhou\"},{\"id\":450003,\"city\":\"桂林\",\"pinyin\":\"guilin\"},{\"id\":450004,\"city\":\"梧州\",\"pinyin\":\"wuzhou\"},{\"id\":450005,\"city\":\"北海\",\"pinyin\":\"beihai\"},{\"id\":450006,\"city\":\"防城港\",\"pinyin\":\"fangchenggang\"},{\"id\":450007,\"city\":\"钦州\",\"pinyin\":\"qinzhou\"},{\"id\":450008,\"city\":\"贵港\",\"pinyin\":\"guigang\"},{\"id\":450009,\"city\":\"玉林\",\"pinyin\":\"yulin\"},{\"id\":45010,\"city\":\"百色\",\"pinyin\":\"baise\"},{\"id\":451001,\"city\":\"贺州\",\"pinyin\":\"hezhou\"},{\"id\":451002,\"city\":\"河池\",\"pinyin\":\"hechi\"},{\"id\":451003,\"city\":\"来宾\",\"pinyin\":\"laibin\"},{\"id\":451004,\"city\":\"崇左\",\"pinyin\":\"chongzuo\"},{\"id\":460001,\"city\":\"海口\",\"pinyin\":\"haikou\"},{\"id\":460002,\"city\":\"三亚\",\"pinyin\":\"sanya\"},{\"id\":500003,\"city\":\"重庆\",\"pinyin\":\"chongqing\"},{\"id\":510001,\"city\":\"成都\",\"pinyin\":\"chengdu\"},{\"id\":510003,\"city\":\"自贡\",\"pinyin\":\"zigong\"},{\"id\":510004,\"city\":\"攀枝花\",\"pinyin\":\"panzhihua\"},{\"id\":510005,\"city\":\"泸州\",\"pinyin\":\"luzhou\"},{\"id\":510006,\"city\":\"德阳\",\"pinyin\":\"deyang\"},{\"id\":510007,\"city\":\"绵阳\",\"pinyin\":\"mianyang\"},{\"id\":510008,\"city\":\"广元\",\"pinyin\":\"guangyuan\"},{\"id\":510009,\"city\":\"遂宁\",\"pinyin\":\"suining\"},{\"id\":51010,\"city\":\"内江\",\"pinyin\":\"neijiang\"},{\"id\":511001,\"city\":\"乐山\",\"pinyin\":\"leshan\"},{\"id\":511003,\"city\":\"南充\",\"pinyin\":\"nanchong\"},{\"id\":511004,\"city\":\"眉山\",\"pinyin\":\"meishan\"},{\"id\":511005,\"city\":\"宜宾\",\"pinyin\":\"yibin\"},{\"id\":511006,\"city\":\"广安\",\"pinyin\":\"guangan\"},{\"id\":511007,\"city\":\"达州\",\"pinyin\":\"dazhou\"},{\"id\":511008,\"city\":\"雅安\",\"pinyin\":\"yaan\"},{\"id\":511009,\"city\":\"巴中\",\"pinyin\":\"bazhong\"},{\"id\":512000,\"city\":\"资阳\",\"pinyin\":\"ziyang\"},{\"id\":513002,\"city\":\"阿坝藏族羌族自治州\",\"pinyin\":\"abazangzuqiangzuzizhizhou\"},{\"id\":513003,\"city\":\"甘孜藏族自治州\",\"pinyin\":\"ganzizangzuzizhizhou\"},{\"id\":513004,\"city\":\"凉山彝族自治州\",\"pinyin\":\"liangshanyizuzizhizhou\"},{\"id\":520001,\"city\":\"贵阳\",\"pinyin\":\"guiyang\"},{\"id\":520002,\"city\":\"六盘水\",\"pinyin\":\"liupanshui\"},{\"id\":520003,\"city\":\"遵义\",\"pinyin\":\"zunyi\"},{\"id\":520004,\"city\":\"安顺\",\"pinyin\":\"anshun\"},{\"id\":522002,\"city\":\"铜仁地区\",\"pinyin\":\"tongrendiqu\"},{\"id\":522003,\"city\":\"黔西南布依族苗族自治州\",\"pinyin\":\"qianxinanbuyizumiaozuzizhizhou\"},{\"id\":522004,\"city\":\"毕节地区\",\"pinyin\":\"bijiediqu\"},{\"id\":522006,\"city\":\"黔东南苗族侗族自治州\",\"pinyin\":\"qiandongnanmiaozudongzuzizhizhou\"},{\"id\":522007,\"city\":\"黔南布依族苗族自治州\",\"pinyin\":\"qiannanbuyizumiaozuzizhizhou\"},{\"id\":530001,\"city\":\"昆明\",\"pinyin\":\"kunming\"},{\"id\":530003,\"city\":\"曲靖\",\"pinyin\":\"qujing\"},{\"id\":530004,\"city\":\"玉溪\",\"pinyin\":\"yuxi\"},{\"id\":530005,\"city\":\"保山\",\"pinyin\":\"baoshan\"},{\"id\":530006,\"city\":\"昭通\",\"pinyin\":\"zhaotong\"},{\"id\":530007,\"city\":\"丽江\",\"pinyin\":\"lijiang\"},{\"id\":530008,\"city\":\"思茅\",\"pinyin\":\"simao\"},{\"id\":530009,\"city\":\"临沧\",\"pinyin\":\"lincang\"},{\"id\":532003,\"city\":\"楚雄彝族自治州\",\"pinyin\":\"chuxiongyizuzizhizhou\"},{\"id\":532005,\"city\":\"红河哈尼族彝族自治州\",\"pinyin\":\"honghehanizuyizuzizhizhou\"},{\"id\":532006,\"city\":\"文山壮族苗族自治州\",\"pinyin\":\"wenshanzhuangzumiaozuzizhizhou\"},{\"id\":532008,\"city\":\"西双版纳傣族自治州\",\"pinyin\":\"xishuangbannadaizuzizhizhou\"},{\"id\":532009,\"city\":\"大理白族自治州\",\"pinyin\":\"dalibaizuzizhizhou\"},{\"id\":533001,\"city\":\"德宏傣族景颇族自治州\",\"pinyin\":\"dehongdaizujingpozuzizhizhou\"},{\"id\":533003,\"city\":\"怒江傈僳族自治州\",\"pinyin\":\"nujianglisuzuzizhizhou\"},{\"id\":533004,\"city\":\"迪庆藏族自治州\",\"pinyin\":\"diqingzangzuzizhizhou\"},{\"id\":540001,\"city\":\"拉萨\",\"pinyin\":\"lasa\"},{\"id\":542001,\"city\":\"昌都地区\",\"pinyin\":\"changdoudiqu\"},{\"id\":542002,\"city\":\"山南地区\",\"pinyin\":\"shannandiqu\"},{\"id\":542003,\"city\":\"日喀则地区\",\"pinyin\":\"rikazediqu\"},{\"id\":542004,\"city\":\"那曲地区\",\"pinyin\":\"neiqudiqu\"},{\"id\":542005,\"city\":\"阿里地区\",\"pinyin\":\"alidiqu\"},{\"id\":542006,\"city\":\"林芝地区\",\"pinyin\":\"linzhidiqu\"},{\"id\":610001,\"city\":\"西安\",\"pinyin\":\"xian\"},{\"id\":610002,\"city\":\"铜川\",\"pinyin\":\"tongchuan\"},{\"id\":610003,\"city\":\"宝鸡\",\"pinyin\":\"baoji\"},{\"id\":610004,\"city\":\"咸阳\",\"pinyin\":\"xianyang\"},{\"id\":610005,\"city\":\"渭南\",\"pinyin\":\"weinan\"},{\"id\":610006,\"city\":\"延安\",\"pinyin\":\"yanan\"},{\"id\":610007,\"city\":\"汉中\",\"pinyin\":\"hanzhong\"},{\"id\":610008,\"city\":\"榆林\",\"pinyin\":\"yulin\"},{\"id\":610009,\"city\":\"安康\",\"pinyin\":\"ankang\"},{\"id\":61010,\"city\":\"商洛\",\"pinyin\":\"shangluo\"},{\"id\":620001,\"city\":\"兰州\",\"pinyin\":\"lanzhou\"},{\"id\":620002,\"city\":\"嘉峪关\",\"pinyin\":\"jiayuguan\"},{\"id\":620003,\"city\":\"金昌\",\"pinyin\":\"jinchang\"},{\"id\":620004,\"city\":\"白银\",\"pinyin\":\"baiyin\"},{\"id\":620005,\"city\":\"天水\",\"pinyin\":\"tianshui\"},{\"id\":620006,\"city\":\"武威\",\"pinyin\":\"wuwei\"},{\"id\":620007,\"city\":\"张掖\",\"pinyin\":\"zhangye\"},{\"id\":620008,\"city\":\"平凉\",\"pinyin\":\"pingliang\"},{\"id\":620009,\"city\":\"酒泉\",\"pinyin\":\"jiuquan\"},{\"id\":62010,\"city\":\"庆阳\",\"pinyin\":\"qingyang\"},{\"id\":621001,\"city\":\"定西\",\"pinyin\":\"dingxi\"},{\"id\":621002,\"city\":\"陇南\",\"pinyin\":\"longnan\"},{\"id\":622009,\"city\":\"临夏回族自治州\",\"pinyin\":\"linxiahuizuzizhizhou\"},{\"id\":623000,\"city\":\"甘南藏族自治州\",\"pinyin\":\"gannanzangzuzizhizhou\"},{\"id\":630001,\"city\":\"西宁\",\"pinyin\":\"xining\"},{\"id\":632001,\"city\":\"海东地区\",\"pinyin\":\"haidongdiqu\"},{\"id\":632002,\"city\":\"海北藏族自治州\",\"pinyin\":\"haibeizangzuzizhizhou\"},{\"id\":632003,\"city\":\"黄南藏族自治州\",\"pinyin\":\"huangnanzangzuzizhizhou\"},{\"id\":632005,\"city\":\"海南藏族自治州\",\"pinyin\":\"hainanzangzuzizhizhou\"},{\"id\":632006,\"city\":\"果洛藏族自治州\",\"pinyin\":\"guoluozangzuzizhizhou\"},{\"id\":632007,\"city\":\"玉树藏族自治州\",\"pinyin\":\"yushuzangzuzizhizhou\"},{\"id\":632008,\"city\":\"海西蒙古族藏族自治州\",\"pinyin\":\"haiximengguzuzangzuzizhizhou\"},{\"id\":640001,\"city\":\"银川\",\"pinyin\":\"yinchuan\"},{\"id\":640002,\"city\":\"石嘴山\",\"pinyin\":\"zuishan\"},{\"id\":640003,\"city\":\"吴忠\",\"pinyin\":\"wuzhong\"},{\"id\":640004,\"city\":\"固原\",\"pinyin\":\"guyuan\"},{\"id\":640005,\"city\":\"中卫\",\"pinyin\":\"zhongwei\"},{\"id\":650001,\"city\":\"乌鲁木齐\",\"pinyin\":\"wulumuqi\"},{\"id\":650002,\"city\":\"克拉玛依\",\"pinyin\":\"kelamayi\"},{\"id\":652001,\"city\":\"吐鲁番地区\",\"pinyin\":\"tulufandiqu\"},{\"id\":652002,\"city\":\"哈密地区\",\"pinyin\":\"hamidiqu\"},{\"id\":652003,\"city\":\"昌吉回族自治州\",\"pinyin\":\"changjihuizuzizhizhou\"},{\"id\":652007,\"city\":\"博尔塔拉蒙古自治州\",\"pinyin\":\"boertalamengguzizhizhou\"},{\"id\":652008,\"city\":\"巴音郭楞蒙古自治州\",\"pinyin\":\"bayinguolengmengguzizhizhou\"},{\"id\":652009,\"city\":\"阿克苏地区\",\"pinyin\":\"akesudiqu\"},{\"id\":653000,\"city\":\"克孜勒苏柯尔克孜自治州\",\"pinyin\":\"kezilesukeerkezizizhizhou\"},{\"id\":653001,\"city\":\"喀什地区\",\"pinyin\":\"kashendiqu\"},{\"id\":653002,\"city\":\"和田地区\",\"pinyin\":\"hetiandiqu\"},{\"id\":654003,\"city\":\"阿勒泰地区\",\"pinyin\":\"aletaidiqu\"},{\"id\":810001,\"city\":\"香港\",\"pinyin\":\"xianggang\"}]}");

/***/ }),

/***/ 53:
/*!*******************************************************************!*\
  !*** D:/桌面/XLCM/baoma-work/node_modules/pinyin-pro/dist/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: !0 });var n = [];n[30340] = "de dì dí", n[19968] = "yī", n[22269] = "guó", n[22312] = "zài", n[20154] = "rén", n[20102] = "le liǎo", n[26377] = "yǒu yòu", n[20013] = "zhōng zhòng", n[26159] = "shì", n[24180] = "nián", n[21644] = "hé hè huó huò hú", n[22823] = "dà dài tài", n[19994] = "yè", n[19981] = "bù fǒu", n[20026] = "wèi wéi", n[21457] = "fā fà", n[20250] = "huì kuài", n[24037] = "gōng", n[32463] = "jīng", n[19978] = "shàng shǎng", n[22320] = "dì de", n[24066] = "shì", n[35201] = "yào yāo", n[20010] = "gè gě", n[20135] = "chǎn", n[36825] = "zhè zhèi", n[20986] = "chū", n[34892] = "háng xíng", n[20316] = "zuò", n[29983] = "shēng", n[23478] = "jiā jia jie", n[20197] = "yǐ", n[25104] = "chéng", n[21040] = "dào", n[26085] = "rì", n[27665] = "mín", n[26469] = "lái", n[25105] = "wǒ", n[37096] = "bù", n[23545] = "duì", n[36827] = "jìn", n[22810] = "duō", n[20840] = "quán", n[24314] = "jiàn", n[20182] = "tā", n[20844] = "gōng", n[24320] = "kāi", n[20204] = "mén", n[22330] = "chǎng cháng", n[23637] = "zhǎn", n[26102] = "shí", n[29702] = "lǐ", n[26032] = "xīn", n[26041] = "fāng", n[20027] = "zhǔ", n[20225] = "qǐ", n[36164] = "zī", n[23454] = "shí", n[23398] = "xué", n[25253] = "bào", n[21046] = "zhì", n[25919] = "zhèng", n[27982] = "jì jǐ", n[29992] = "yòng", n[21516] = "tóng tòng", n[20110] = "yú", n[27861] = "fǎ", n[39640] = "gāo", n[38271] = "cháng zhǎng", n[29616] = "xiàn", n[26412] = "běn", n[26376] = "yuè", n[23450] = "dìng", n[21270] = "huà huā", n[21152] = "jiā", n[21160] = "dòng", n[21512] = "hé gě", n[21697] = "pǐn", n[37325] = "zhòng chóng", n[20851] = "guān", n[26426] = "jī", n[20998] = "fēn fèn", n[21147] = "lì", n[33258] = "zì", n[22806] = "wài", n[32773] = "zhě", n[21306] = "qū ōu", n[33021] = "néng nài", n[35774] = "shè", n[21518] = "hòu", n[23601] = "jiù", n[31561] = "děng", n[20307] = "tǐ tī bèn", n[19979] = "xià", n[19975] = "wàn mò", n[20803] = "yuán", n[31038] = "shè", n[36807] = "guò guo guō", n[21069] = "qián", n[38754] = "miàn", n[20892] = "nóng", n[20063] = "yě", n[24471] = "dé děi de", n[19982] = "yǔ yù yú", n[35828] = "shuō shuì yuè", n[20043] = "zhī", n[21592] = "yuán yún yùn", n[32780] = "ér", n[21153] = "wù", n[21033] = "lì", n[30005] = "diàn", n[25991] = "wén", n[20107] = "shì", n[21487] = "kě kè", n[31181] = "zhòng zhǒng chóng", n[24635] = "zǒng", n[25913] = "gǎi", n[19977] = "sān", n[21508] = "gè gě", n[22909] = "hǎo hào", n[37329] = "jīn", n[31532] = "dì", n[21496] = "sī", n[20854] = "qí jī", n[20174] = "cóng zòng", n[24179] = "píng", n[20195] = "dài", n[24403] = "dāng dàng", n[22825] = "tiān", n[27700] = "shuǐ", n[30465] = "shěng xǐng", n[25552] = "tí dī dǐ", n[21830] = "shāng", n[21313] = "shí", n[31649] = "guǎn", n[20869] = "nèi nà", n[23567] = "xiǎo", n[25216] = "jì", n[20301] = "wèi", n[30446] = "mù", n[36215] = "qǐ", n[28023] = "hǎi", n[25152] = "suǒ", n[31435] = "lì", n[24050] = "yǐ", n[36890] = "tōng", n[20837] = "rù", n[37327] = "liáng liàng", n[23376] = "zǐ", n[38382] = "wèn", n[24230] = "dù duó", n[21271] = "běi bèi", n[20445] = "bǎo", n[24515] = "xīn", n[36824] = "hái huán", n[31185] = "kē", n[22996] = "wěi wēi", n[37117] = "dū dōu", n[26415] = "shù shú zhú", n[20351] = "shǐ", n[26126] = "míng", n[30528] = "zhe zhuó zháo zhāo", n[27425] = "cì", n[23558] = "jiāng jiàng", n[22686] = "zēng", n[22522] = "jī", n[21517] = "míng", n[21521] = "xiàng", n[38376] = "mén", n[24212] = "yìng yīng", n[37324] = "lǐ", n[32654] = "měi", n[30001] = "yóu", n[35268] = "guī", n[20170] = "jīn", n[39064] = "tí", n[35760] = "jì", n[28857] = "diǎn", n[35745] = "jì", n[21435] = "qù", n[24378] = "qiáng qiǎng jiàng", n[20004] = "liǎng", n[20123] = "xiē suò", n[34920] = "biǎo", n[31995] = "xì jì", n[21150] = "bàn", n[25945] = "jiào jiāo", n[27491] = "zhèng zhēng", n[26465] = "tiáo tiāo", n[26368] = "zuì", n[36798] = "dá", n[29305] = "tè", n[38761] = "gé", n[25910] = "shōu", n[20108] = "èr", n[26399] = "qī jī", n[24182] = "bìng bīng", n[31243] = "chéng", n[21378] = "chǎng ān hàn", n[22914] = "rú", n[36947] = "dào", n[38469] = "jì", n[21450] = "jí", n[35199] = "xī", n[21475] = "kǒu", n[20140] = "jīng", n[21326] = "huá huà huā", n[20219] = "rèn rén", n[35843] = "tiáo diào zhōu", n[24615] = "xìng", n[23548] = "dǎo", n[32452] = "zǔ", n[19996] = "dōng", n[36335] = "lù", n[27963] = "huó", n[24191] = "guǎng ān", n[24847] = "yì", n[27604] = "bǐ", n[25237] = "tóu", n[20915] = "jué", n[20132] = "jiāo", n[32479] = "tǒng", n[20826] = "dǎng", n[21335] = "nán nā", n[23433] = "ān", n[27492] = "cǐ", n[39046] = "lǐng", n[32467] = "jié jiē", n[33829] = "yíng", n[39033] = "xiàng", n[24773] = "qíng", n[35299] = "jiě jiè xiè", n[35758] = "yì", n[20041] = "yì", n[23665] = "shān", n[20808] = "xiān", n[36710] = "chē jū", n[28982] = "rán", n[20215] = "jià jiè jie", n[25918] = "fàng", n[19990] = "shì", n[38388] = "jiān jiàn", n[22240] = "yīn", n[20849] = "gòng gōng", n[38498] = "yuàn", n[27493] = "bù", n[29289] = "wù", n[30028] = "jiè", n[38598] = "jí", n[25226] = "bǎ bà", n[25345] = "chí", n[26080] = "wú", n[20294] = "dàn", n[22478] = "chéng", n[30456] = "xiāng xiàng", n[20070] = "shū", n[26449] = "cūn", n[27714] = "qiú", n[27835] = "zhì", n[21462] = "qǔ", n[21407] = "yuán", n[22788] = "chù chǔ", n[24220] = "fǔ", n[30740] = "yán yàn", n[36136] = "zhì", n[20449] = "xìn shēn", n[22235] = "sì", n[36816] = "yùn", n[21439] = "xiàn xuán", n[20891] = "jūn", n[20214] = "jiàn", n[32946] = "yù", n[23616] = "jú", n[24178] = "gān gàn", n[38431] = "duì", n[22242] = "tuán", n[21448] = "yòu", n[36896] = "zào", n[24418] = "xíng", n[32423] = "jí", n[26631] = "biāo", n[32852] = "lián", n[19987] = "zhuān", n[23569] = "shǎo shào", n[36153] = "fèi", n[25928] = "xiào", n[25454] = "jù jū", n[25163] = "shǒu", n[26045] = "shī", n[26435] = "quán", n[27743] = "jiāng", n[36817] = "jìn", n[28145] = "shēn", n[26356] = "gèng gēng", n[35748] = "rèn", n[26524] = "guǒ", n[26684] = "gé", n[20960] = "jǐ jī", n[30475] = "kàn kān", n[27809] = "méi mò", n[32844] = "zhí", n[26381] = "fú fù", n[21488] = "tái tāi", n[24335] = "shì", n[30410] = "yì", n[24819] = "xiǎng", n[25968] = "shù shǔ shuò", n[21333] = "dān shàn chán", n[26679] = "yàng", n[21482] = "zhī zhǐ", n[34987] = "bèi pī", n[20159] = "yì", n[32769] = "lǎo", n[21463] = "shòu", n[20248] = "yōu", n[24120] = "cháng", n[38144] = "xiāo", n[24535] = "zhì", n[25112] = "zhàn", n[27969] = "liú", n[24456] = "hěn", n[25509] = "jiē", n[20065] = "xiāng", n[22836] = "tóu tou", n[32473] = "gěi jǐ", n[33267] = "zhì", n[38590] = "nán nàn nuó", n[35266] = "guān guàn", n[25351] = "zhǐ", n[21019] = "chuàng chuāng", n[35777] = "zhèng", n[32455] = "zhī zhì", n[35770] = "lùn lún", n[21035] = "bié biè", n[20116] = "wǔ", n[21327] = "xié", n[21464] = "biàn", n[39118] = "fēng fěng", n[25209] = "pī", n[35265] = "jiàn xiàn", n[31350] = "jiū", n[25903] = "zhī", n[37027] = "nà nǎ nèi nā", n[26597] = "chá zhā", n[24352] = "zhāng", n[31934] = "jīng", n[26519] = "lín", n[27599] = "měi", n[36716] = "zhuǎn zhuàn zhuǎi", n[21010] = "huà huá", n[20934] = "zhǔn", n[20570] = "zuò", n[38656] = "xū", n[20256] = "chuán zhuàn", n[20105] = "zhēng", n[31246] = "shuì", n[26500] = "gòu", n[20855] = "jù", n[30334] = "bǎi", n[25110] = "huò", n[25165] = "cái", n[31215] = "jī", n[21183] = "shì", n[20030] = "jǔ", n[24517] = "bì", n[22411] = "xíng", n[26131] = "yì", n[35270] = "shì", n[24555] = "kuài", n[26446] = "lǐ", n[21442] = "cān shēn cēn sān", n[22238] = "huí", n[24341] = "yǐn", n[38215] = "zhèn", n[39318] = "shǒu", n[25512] = "tuī", n[24605] = "sī sāi", n[23436] = "wán", n[28040] = "xiāo", n[20540] = "zhí", n[35813] = "gāi", n[36208] = "zǒu", n[35013] = "zhuāng", n[20247] = "zhòng", n[36131] = "zhài", n[22791] = "bèi", n[24030] = "zhōu", n[20379] = "gòng gōng", n[21253] = "bāo", n[21103] = "fù pì", n[26497] = "jí", n[25972] = "zhěng", n[30830] = "què", n[30693] = "zhī zhì", n[36152] = "mào", n[24049] = "jǐ", n[29615] = "huán", n[35805] = "huà", n[21453] = "fǎn", n[36523] = "shēn", n[36873] = "xuǎn", n[20122] = "yà", n[20040] = "me mó ma yāo", n[24102] = "dài", n[37319] = "cǎi cài", n[29579] = "wáng wàng", n[31574] = "cè", n[30495] = "zhēn", n[22899] = "nǚ rǔ", n[35848] = "tán", n[20005] = "yán", n[26031] = "sī", n[20917] = "kuàng", n[33394] = "sè", n[25171] = "dǎ dá", n[24503] = "dé", n[21578] = "gào", n[20165] = "jǐn jìn", n[23427] = "tā", n[27668] = "qì", n[26009] = "liào", n[31070] = "shén", n[29575] = "lǜ shuài", n[35782] = "shí zhì", n[21171] = "láo", n[22659] = "jìng", n[28304] = "yuán", n[38738] = "qīng", n[25252] = "hù", n[21015] = "liè", n[20852] = "xīng xìng", n[35768] = "xǔ hǔ", n[25143] = "hù", n[39532] = "mǎ", n[28207] = "gǎng jiǎng", n[21017] = "zé", n[33410] = "jié jiē", n[27454] = "kuǎn", n[25289] = "lā lá", n[30452] = "zhí", n[26696] = "àn", n[32929] = "gǔ", n[20809] = "guāng", n[36739] = "jiào", n[27827] = "hé", n[33457] = "huā", n[26681] = "gēn", n[24067] = "bù", n[32447] = "xiàn", n[22303] = "tǔ", n[20811] = "kè", n[20877] = "zài", n[32676] = "qún", n[21307] = "yī", n[28165] = "qīng", n[36895] = "sù", n[24459] = "lǜ", n[22905] = "tā jiě", n[26063] = "zú", n[21382] = "lì", n[38750] = "fēi", n[24863] = "gǎn", n[21344] = "zhàn zhān", n[32493] = "xù", n[24072] = "shī", n[20309] = "hé hē hè", n[24433] = "yǐng", n[21151] = "gōng", n[36127] = "fù", n[39564] = "yàn", n[26395] = "wàng", n[36130] = "cái", n[31867] = "lèi", n[36135] = "huò", n[32422] = "yuē yāo", n[33402] = "yì", n[21806] = "shòu", n[36830] = "lián", n[32426] = "jì jǐ", n[25353] = "àn", n[35759] = "xùn", n[21490] = "shǐ", n[31034] = "shì", n[35937] = "xiàng", n[20859] = "yǎng", n[33719] = "huò", n[30707] = "shí dàn", n[39135] = "shí sì yì", n[25235] = "zhuā", n[23500] = "fù", n[27169] = "mó mú", n[22987] = "shǐ", n[20303] = "zhù", n[36187] = "sài", n[23458] = "kè", n[36234] = "yuè", n[38395] = "wén", n[22830] = "yāng", n[24109] = "xí", n[22362] = "jiān", n[20221] = "fèn bīn", n[22763] = "shì", n[28909] = "rè", n[38480] = "xiàn", n[31859] = "mǐ", n[38134] = "yín", n[24687] = "xī", n[26657] = "xiào jiào", n[22343] = "jūn", n[25151] = "fáng", n[21608] = "zhōu", n[28216] = "yóu", n[21315] = "qiān", n[22833] = "shī", n[20843] = "bā", n[26816] = "jiǎn", n[36275] = "zú", n[37197] = "pèi", n[23384] = "cún", n[20061] = "jiǔ", n[21629] = "mìng", n[23572] = "ěr", n[21363] = "jí", n[38450] = "fáng", n[38065] = "qián", n[35780] = "píng", n[22797] = "fù", n[32771] = "kǎo", n[20381] = "yī", n[26029] = "duàn", n[33539] = "fàn", n[30784] = "chǔ", n[27833] = "yóu", n[29031] = "zhào", n[27573] = "duàn", n[33853] = "luò là lào", n[35775] = "fǎng", n[26410] = "wèi", n[39069] = "é", n[21452] = "shuāng", n[35753] = "ràng", n[20999] = "qiè qiē", n[39035] = "xū", n[20799] = "ér", n[20415] = "biàn pián", n[31354] = "kōng kòng kǒng", n[24448] = "wǎng", n[20320] = "nǐ", n[23618] = "céng", n[20302] = "dī", n[22870] = "jiǎng", n[27880] = "zhù", n[40644] = "huáng", n[33521] = "yīng", n[25215] = "chéng", n[36828] = "yuǎn yuàn", n[29256] = "bǎn", n[32500] = "wéi", n[31639] = "suàn", n[30772] = "pò", n[38081] = "tiě", n[20048] = "lè yuè", n[36793] = "biān", n[21021] = "chū", n[28385] = "mǎn", n[30149] = "bìng", n[21709] = "xiǎng", n[33647] = "yào", n[21161] = "zhù chú", n[33268] = "zhì", n[21892] = "shàn", n[31361] = "tū", n[29233] = "ài", n[23481] = "róng", n[39321] = "xiāng", n[31216] = "chēng chèn chèng", n[36141] = "gòu", n[23626] = "jiè", n[20313] = "yú", n[32032] = "sù", n[35831] = "qǐng", n[30333] = "bái", n[23459] = "xuān", n[20581] = "jiàn", n[29260] = "pái", n[20419] = "cù", n[22521] = "péi", n[31454] = "jìng", n[24052] = "bā", n[31283] = "wěn", n[32487] = "jì", n[32039] = "jǐn", n[23383] = "zì", n[22256] = "kùn", n[21016] = "liú", n[26053] = "lǚ", n[22768] = "shēng", n[36229] = "chāo", n[38543] = "suí", n[20363] = "lì", n[25285] = "dān dàn dǎn", n[21451] = "yǒu", n[21495] = "hào háo", n[26174] = "xiǎn", n[21364] = "què", n[30417] = "jiān jiàn", n[26448] = "cái", n[19988] = "qiě jū", n[26149] = "chūn", n[23621] = "jū", n[36866] = "shì", n[38500] = "chú", n[32418] = "hóng gōng", n[21322] = "bàn", n[20080] = "mǎi", n[20805] = "chōng", n[38472] = "chén", n[28779] = "huǒ", n[25630] = "gǎo", n[22270] = "tú", n[38451] = "yáng", n[20845] = "liù lù", n[23519] = "chá", n[35797] = "shì", n[22826] = "tài", n[20160] = "shén shí", n[25191] = "zhí", n[29255] = "piàn piān", n[21476] = "gǔ", n[19971] = "qī", n[29699] = "qiú", n[20462] = "xiū", n[23613] = "jìn jǐn", n[25511] = "kòng", n[35762] = "jiǎng", n[25490] = "pái pǎi", n[31918] = "liáng", n[27494] = "wǔ", n[39044] = "yù", n[20146] = "qīn qìng", n[25381] = "huī", n[21334] = "mài", n[23457] = "shěn", n[25514] = "cuò", n[33635] = "róng", n[27954] = "zhōu", n[21355] = "wèi", n[24076] = "xī", n[24215] = "diàn", n[33391] = "liáng", n[23646] = "shǔ zhǔ", n[38505] = "xiǎn", n[26366] = "céng zēng", n[22260] = "wéi", n[22495] = "yù", n[20196] = "lìng líng lǐng", n[31449] = "zhàn", n[33487] = "sū sù", n[40857] = "lóng", n[24565] = "niàn", n[32599] = "luó", n[21544] = "dūn", n[22120] = "qì", n[27719] = "huì", n[24247] = "kāng", n[20943] = "jiǎn", n[20064] = "xí", n[28436] = "yǎn", n[26222] = "pǔ", n[3e4] = "tián", n[29677] = "bān", n[24453] = "dài dāi", n[26143] = "xīng", n[39134] = "fēi", n[20889] = "xiě", n[30719] = "kuàng", n[36731] = "qīng", n[25193] = "kuò", n[35328] = "yán", n[31456] = "zhāng", n[27773] = "qì", n[38752] = "kào", n[27611] = "máo", n[32456] = "zhōng", n[20173] = "réng", n[26223] = "jǐng yǐng", n[32622] = "zhì", n[24213] = "dǐ de", n[31119] = "fú", n[27490] = "zhǐ", n[31163] = "lí", n[27901] = "zé shì", n[27874] = "bō", n[20848] = "lán", n[26680] = "hé hú", n[38477] = "jiàng xiáng", n[35757] = "xùn", n[36880] = "zhú", n[31080] = "piào piāo", n[33756] = "cài", n[24231] = "zuò", n[29486] = "xiàn", n[38050] = "gāng gàng", n[30524] = "yǎn", n[25439] = "sǔn", n[23425] = "níng nìng zhù", n[20687] = "xiàng", n[33510] = "kǔ", n[21360] = "yìn", n[34701] = "róng", n[29420] = "dú", n[28246] = "hú", n[26089] = "zǎo", n[20104] = "yǔ yú", n[22827] = "fū fú", n[32534] = "biān", n[25442] = "huàn", n[27431] = "ōu", n[21162] = "nǔ", n[33879] = "zhù zhuó zhe", n[39038] = "gù", n[24449] = "zhēng", n[21319] = "shēng", n[24577] = "tài", n[22871] = "tào", n[20171] = "jiè", n[36865] = "sòng", n[26576] = "mǒu", n[26007] = "dǒu dòu", n[29366] = "zhuàng", n[30011] = "huà", n[30041] = "liú", n[33322] = "háng", n[27966] = "pài", n[23460] = "shì", n[20020] = "lín", n[20853] = "bīng", n[34917] = "bǔ", n[23453] = "bǎo", n[30053] = "lüè", n[40657] = "hēi", n[32508] = "zōng zèng", n[20113] = "yún", n[24046] = "chà chā chāi cī", n[32435] = "nà", n[23494] = "mì", n[36139] = "pín", n[21095] = "jù", n[29359] = "fàn", n[38463] = "ā ē", n[20987] = "jī", n[36935] = "yù", n[23681] = "suì", n[38454] = "jiē", n[28872] = "liè", n[30563] = "dū", n[21507] = "chī", n[20016] = "fēng", n[39302] = "guǎn", n[25307] = "zhāo", n[23475] = "hài", n[23448] = "guān", n[26641] = "shù", n[21548] = "tīng", n[24237] = "tíng", n[21478] = "lìng", n[27801] = "shā shà", n[31169] = "sī", n[38024] = "zhēn", n[32988] = "shèng", n[36151] = "dài", n[32593] = "wǎng", n[24895] = "yuàn", n[25176] = "tuō", n[32570] = "quē", n[22253] = "yuán", n[20551] = "jiǎ jià", n[37202] = "jiǔ", n[38899] = "yīn", n[24040] = "jù", n[26082] = "jì", n[21028] = "pàn", n[36755] = "shū", n[35752] = "tǎo", n[27979] = "cè", n[35835] = "dú dòu", n[27915] = "yáng", n[25324] = "kuò guā", n[31569] = "zhù zhú", n[27426] = "huān", n[21018] = "gāng", n[24198] = "qìng", n[20037] = "jiǔ", n[38470] = "lù", n[25214] = "zhǎo", n[27004] = "lóu", n[28608] = "jī", n[26202] = "wǎn", n[32477] = "jué", n[21387] = "yā yà";n[25925] = "gù", n[20114] = "hù", n[31614] = "qiān", n[27721] = "hàn", n[33609] = "cǎo", n[26408] = "mù", n[20137] = "mǔ", n[30701] = "duǎn", n[32461] = "shào", n[36814] = "yíng", n[21560] = "xī", n[35686] = "jǐng", n[34255] = "cáng zàng", n[30103] = "liáo", n[36149] = "guì", n[32439] = "fēn", n[25480] = "shòu", n[30331] = "dēng", n[25506] = "tàn", n[32034] = "suǒ", n[28286] = "wān", n[23439] = "hóng", n[24405] = "lù", n[30003] = "shēn", n[35785] = "sù", n[31168] = "xiù", n[24207] = "xù", n[39034] = "shùn", n[27515] = "sǐ", n[21345] = "kǎ qiǎ", n[27468] = "gē", n[21320] = "wǔ", n[23401] = "hái", n[26725] = "qiáo", n[21916] = "xǐ", n[24029] = "chuān", n[37011] = "dèng", n[25196] = "yáng", n[27941] = "jīn", n[28201] = "wēn", n[33337] = "chuán", n[24211] = "kù", n[35746] = "dìng", n[32451] = "liàn", n[20505] = "hòu", n[36864] = "tuì", n[36829] = "wéi", n[21542] = "fǒu pǐ", n[24425] = "cǎi", n[26825] = "mián", n[24110] = "bāng", n[25343] = "ná", n[32618] = "zuì", n[24065] = "bì", n[35282] = "jiǎo jué", n[21484] = "zhào shào", n[28798] = "zāi", n[22919] = "fù", n[26472] = "yáng", n[22859] = "fèn", n[32489] = "jì", n[34429] = "suī", n[29028] = "méi", n[20813] = "miǎn", n[31508] = "bǐ", n[22815] = "gòu", n[27704] = "yǒng", n[22323] = "zhèn", n[20572] = "tíng", n[22885] = "ào yù", n[40092] = "xiān xiǎn", n[26397] = "zhāo cháo", n[21556] = "wú", n[23707] = "dǎo", n[35273] = "jué jiào", n[31227] = "yí", n[23612] = "ní", n[24613] = "jí", n[21338] = "bó", n[36143] = "guàn", n[25317] = "yōng", n[26463] = "shù", n[24038] = "zuǒ", n[32454] = "xì", n[33310] = "wǔ", n[24133] = "fú", n[35821] = "yǔ yù", n[20420] = "é", n[22855] = "qí jī", n[33324] = "bān", n[31616] = "jiǎn", n[25293] = "pāi", n[33041] = "nǎo", n[20538] = "zhài", n[22266] = "gù", n[23041] = "wēi", n[21048] = "quàn xuàn", n[36861] = "zhuī duī", n[31609] = "chóu", n[21051] = "kè", n[26144] = "yìng", n[32321] = "fán pó", n[20255] = "wěi", n[29978] = "shèn shén", n[39277] = "fàn", n[21491] = "yòu", n[24443] = "chè", n[28895] = "yān", n[27839] = "yán", n[34903] = "jiē", n[34880] = "xiě xuè", n[20914] = "chōng chòng", n[27946] = "hóng", n[26893] = "zhí", n[35465] = "yù", n[21002] = "kān", n[29577] = "yù", n[21381] = "tīng", n[25937] = "jiù", n[28526] = "cháo", n[36805] = "xùn", n[20237] = "wǔ", n[24590] = "zěn", n[20184] = "fù", n[20493] = "bèi", n[39039] = "dùn", n[36848] = "shù", n[25773] = "bō", n[21169] = "lì", n[26020] = "jīn", n[20046] = "hū", n[32440] = "zhǐ", n[25391] = "zhèn", n[26087] = "jiù", n[38556] = "zhàng", n[40723] = "gǔ", n[33392] = "jiān", n[21628] = "hū", n[21513] = "jí", n[30007] = "nán", n[32511] = "lǜ lù", n[23578] = "shàng", n[22799] = "xià", n[20111] = "kuī", n[23395] = "jì", n[26494] = "sōng", n[21704] = "hā hǎ hà", n[31062] = "zǔ", n[20856] = "diǎn", n[38889] = "hán", n[36941] = "biàn", n[22812] = "yè", n[36718] = "lún", n[26495] = "bǎn", n[25239] = "kàng", n[25668] = "shè niè", n[26434] = "zá", n[30382] = "pí", n[36129] = "gòng", n[20511] = "jiè", n[24149] = "mù", n[32602] = "fá", n[20260] = "shāng", n[23736] = "àn", n[25206] = "fú", n[20081] = "luàn", n[26354] = "qū qǔ", n[33073] = "tuō", n[36341] = "jiàn", n[21361] = "wēi", n[28595] = "ào", n[31461] = "tóng", n[25955] = "sàn sǎn", n[21619] = "wèi", n[21494] = "yè xié", n[32047] = "lèi léi lěi", n[35874] = "xiè", n[23385] = "sūn xùn", n[37038] = "yóu", n[38596] = "xióng", n[20860] = "jiān", n[24494] = "wēi", n[21602] = "ne ní", n[35841] = "shuí", n[24800] = "huì", n[20607] = "cháng", n[32626] = "shǔ", n[25321] = "zé zhái", n[26579] = "rǎn", n[31572] = "dá dā", n[22359] = "kuài", n[24464] = "xú", n[40060] = "yú", n[36190] = "zàn", n[35838] = "kè", n[30427] = "shèng chéng", n[24310] = "yán", n[29790] = "ruì", n[24576] = "huái", n[22530] = "táng", n[39547] = "zhù", n[38646] = "líng", n[36742] = "liàng", n[40784] = "qí jì zī zhāi", n[32993] = "hú", n[36884] = "tú", n[23553] = "fēng", n[20284] = "sì shì", n[28070] = "rùn", n[23432] = "shǒu", n[27605] = "bì", n[22374] = "tǎn", n[27597] = "mǔ", n[38632] = "yǔ yù", n[36133] = "bài", n[26417] = "zhū shú", n[27745] = "wū", n[36235] = "qū cù", n[26800] = "xiè", n[32442] = "fǎng", n[31199] = "zū", n[28789] = "líng", n[25299] = "tuò tà zhí", n[27531] = "cán", n[21547] = "hán", n[25569] = "wò", n[36328] = "kuà", n[34915] = "yī", n[20648] = "chǔ", n[29926] = "wǎ wà", n[33945] = "méng mēng měng", n[37492] = "jiàn", n[26512] = "xī", n[31455] = "jìng", n[39592] = "gǔ gū", n[26723] = "dàng", n[31192] = "mì bì", n[31105] = "jìn jīn", n[36213] = "zhào", n[23486] = "bīn", n[24322] = "yì", n[20234] = "yī", n[26234] = "zhì", n[38047] = "zhōng", n[38190] = "jiàn", n[36745] = "huī", n[36291] = "yuè", n[20919] = "lěng", n[20498] = "dào dǎo", n[24196] = "zhuāng", n[27602] = "dú dài", n[20202] = "yí", n[21738] = "nǎ něi na né", n[28041] = "shè", n[27867] = "fàn", n[23447] = "zōng", n[40527] = "péng", n[24402] = "guī", n[23703] = "gǎng", n[38647] = "léi", n[31036] = "lǐ", n[23588] = "yóu", n[20241] = "xiū xǔ", n[27888] = "tài", n[30142] = "jí", n[32933] = "féi", n[29664] = "zhū", n[21483] = "jiào", n[29275] = "niú", n[23452] = "yí", n[25269] = "dǐ", n[25346] = "guà", n[23547] = "xún", n[29238] = "fù fǔ", n[25915] = "gōng", n[20339] = "jiā", n[22622] = "sāi sài sè", n[26550] = "jià", n[31526] = "fú", n[35009] = "cái", n[34385] = "lǜ", n[32905] = "ròu", n[21551] = "qǐ", n[20029] = "lì lí", n[38706] = "lù lòu", n[40065] = "lǔ", n[31179] = "qiū", n[26124] = "chāng", n[20272] = "gū gù", n[23556] = "shè yè yì", n[20876] = "cè", n[33509] = "ruò rě", n[23485] = "kuān", n[21402] = "hòu", n[30462] = "dùn", n[30828] = "yìng", n[26411] = "mò", n[36712] = "guǐ", n[39278] = "yǐn", n[21220] = "qín", n[33590] = "chá", n[35799] = "shī", n[37073] = "zhèng", n[20896] = "guān guàn", n[28072] = "zhǎng zhàng", n[31687] = "piān", n[27877] = "ní nì", n[21809] = "chàng", n[32431] = "chún", n[22369] = "pō", n[29087] = "shú", n[27993] = "zhè", n[26195] = "xiǎo", n[25250] = "qiǎng qiāng chēng", n[19997] = "sī", n[38182] = "jǐn", n[36733] = "zǎi zài", n[31505] = "xiào", n[21191] = "yǒng", n[26480] = "jié", n[24739] = "huàn", n[20044] = "wū", n[22352] = "zuò", n[38634] = "xuě", n[25103] = "xì hū", n[32972] = "bèi bēi", n[22612] = "tǎ", n[32763] = "fān", n[27784] = "shěn chén", n[36951] = "yí", n[32858] = "jù", n[28192] = "qú jù", n[21733] = "gē", n[20139] = "xiǎng", n[36857] = "jì", n[26862] = "sēn", n[36797] = "liáo", n[34913] = "héng", n[25484] = "zhǎng", n[29287] = "mù", n[38468] = "fù", n[25805] = "cāo", n[36214] = "gǎn", n[35272] = "lǎn", n[37326] = "yě", n[30431] = "méng", n[27530] = "shū", n[20161] = "rén", n[38169] = "cuò", n[33832] = "sà", n[22842] = "duó", n[26757] = "méi", n[35823] = "wù", n[35789] = "cí", n[33891] = "dǒng", n[28508] = "qián", n[21367] = "juàn juǎn", n[30683] = "máo", n[33104] = "fǔ", n[20142] = "liàng", n[20882] = "mào mò", n[30422] = "gài gě hé", n[26071] = "qí", n[20117] = "jǐng", n[20961] = "fán", n[38663] = "zhèn", n[23792] = "fēng", n[22351] = "huài pēi pī péi", n[20542] = "qīng", n[36317] = "jù", n[22766] = "zhuàng", n[24778] = "jīng", n[30424] = "pán", n[26753] = "liáng", n[25670] = "bǎi", n[24452] = "jìng", n[24544] = "zhōng", n[20912] = "bīng", n[23777] = "xiá", n[20025] = "dān", n[36991] = "bì", n[29645] = "zhēn", n[20056] = "chéng shèng", n[21009] = "xíng", n[25166] = "zhā zā zhá", n[36879] = "tòu", n[36843] = "pò pǎi", n[31665] = "xiāng", n[33707] = "mò mù", n[36305] = "pǎo páo", n[31359] = "chuān", n[31069] = "zhù", n[20047] = "fá", n[21414] = "xià shà", n[28176] = "jiàn jiān", n[36719] = "ruǎn", n[35810] = "xún", n[25240] = "zhé shé zhē", n[28010] = "làng", n[26379] = "péng", n[25954] = "gǎn", n[35802] = "chéng", n[24369] = "ruò", n[30097] = "yí nǐ", n[36992] = "yāo", n[27785] = "chén", n[31471] = "duān", n[24202] = "chuáng", n[32476] = "luò lào", n[30086] = "jiāng qiáng", n[32553] = "suō sù", n[33050] = "jiǎo", n[29976] = "gān", n[36148] = "tiē", n[21202] = "lè lēi", n[33618] = "huāng", n[21776] = "táng", n[38745] = "jìng", n[32531] = "huǎn", n[20405] = "qīn", n[21477] = "jù gōu", n[23562] = "zūn", n[22609] = "sù", n[32899] = "sù", n[24597] = "pà", n[32789] = "gēng", n[30171] = "tòng", n[25588] = "yuán", n[21155] = "liè", n[20249] = "huǒ", n[25361] = "tiāo tiǎo", n[27927] = "xǐ xiǎn", n[26292] = "bào pù", n[20908] = "dōng", n[40836] = "líng", n[20052] = "qiáo", n[39184] = "cān", n[32943] = "kěn", n[24265] = "lián", n[36319] = "gēn", n[38453] = "zhèn", n[20240] = "fá", n[24713] = "xī", n[24536] = "wàng", n[38381] = "bì", n[22868] = "bēn bèn", n[24674] = "huī", n[23435] = "sòng", n[27849] = "quán", n[26479] = "bēi", n[28193] = "dù", n[21527] = "ma má mǎ", n[22857] = "fèng", n[23130] = "hūn", n[36212] = "fù", n[24681] = "ēn", n[30416] = "yán", n[25481] = "diào", n[27905] = "jié", n[20129] = "wáng wú", n[27931] = "luò", n[32856] = "pìn", n[34092] = "shū", n[28151] = "hùn hún", n[25705] = "mó mā", n[25277] = "chōu", n[40481] = "jī", n[21058] = "jì", n[32966] = "dǎn", n[40614] = "mài", n[35851] = "móu", n[38597] = "yǎ", n[24223] = "fèi", n[36154] = "hè", n[32650] = "yáng xiáng", n[38420] = "kuò", n[21807] = "wéi", n[25424] = "juān", n[36820] = "fǎn", n[38534] = "lóng", n[31351] = "qióng", n[36763] = "xīn", n[29482] = "zhū", n[24080] = "zhàng", n[39280] = "shì", n[37101] = "guō", n[39041] = "bān", n[28783] = "dēng", n[32469] = "rào", n[35832] = "zhū", n[20276] = "bàn", n[39030] = "dǐng", n[31077] = "xiáng", n[35859] = "wèi", n[24694] = "è wù ě wū", n[30058] = "fān pān", n[25935] = "mǐn", n[26086] = "dàn", n[21170] = "jìn jìng", n[32564] = "jiǎo zhuó", n[40635] = "má", n[23627] = "wū", n[36339] = "tiào táo", n[30721] = "mǎ", n[38795] = "xié", n[25187] = "kòu", n[36808] = "mài", n[24537] = "máng", n[36259] = "qù cù", n[30408] = "yíng", n[26827] = "qí", n[21187] = "bó bèi", n[25964] = "jìng", n[36753] = "jí", n[25674] = "tān", n[26106] = "wàng", n[32416] = "jiū", n[28860] = "liàn", n[26790] = "mèng", n[20559] = "piān", n[28180] = "yú", n[29273] = "yá", n[20392] = "qiáo", n[40654] = "lí", n[36180] = "péi", n[35029] = "yù", n[23467] = "gōng", n[35895] = "gǔ", n[27010] = "gài", n[31295] = "gǎo", n[26609] = "zhù", n[24377] = "tán dàn", n[27542] = "zhí shi", n[31209] = "zhì", n[20973] = "píng", n[25320] = "bō", n[24184] = "xìng", n[27934] = "dòng", n[20266] = "wěi", n[27807] = "gōu", n[22995] = "xìng", n[36973] = "zāo", n[28044] = "yǒng chōng", n[38518] = "táo", n[36801] = "qiān", n[35834] = "nuò", n[25300] = "bá", n[30021] = "chàng", n[24551] = "yōu", n[32990] = "bāo", n[19969] = "dīng zhēng", n[33988] = "xù", n[36125] = "bèi", n[33293] = "shè", n[33150] = "téng", n[26432] = "shā", n[29004] = "huáng", n[22278] = "yuán", n[20262] = "lún", n[27178] = "héng hèng", n[34180] = "báo bó bò", n[30044] = "chù xù", n[27627] = "háo", n[35946] = "háo", n[24351] = "dì tì tuí", n[21576] = "chéng", n[20315] = "fó fú bì bó", n[37030] = "bāng", n[24744] = "nín", n[22696] = "mò", n[24509] = "huī", n[24815] = "guàn", n[24490] = "xún", n[34013] = "lán", n[28903] = "shāo", n[35302] = "chù", n[38485] = "shǎn", n[25302] = "tuō", n[20271] = "bó bǎi bà", n[30450] = "máng", n[23466] = "xiàn", n[20928] = "jìng chēng", n[21346] = "lú", n[28845] = "tàn", n[31821] = "jí", n[31206] = "qín", n[31881] = "fěn", n[22971] = "qī qì", n[29190] = "bào", n[27427] = "xīn", n[37322] = "shì", n[29609] = "wán", n[20426] = "jùn", n[27424] = "qiàn", n[34507] = "dàn", n[29467] = "měng", n[36842] = "dí", n[33495] = "miáo", n[26242] = "zàn", n[35980] = "mào", n[36981] = "zūn", n[38177] = "xī", n[26970] = "chǔ", n[26690] = "guì", n[26118] = "kūn", n[26460] = "dù", n[30343] = "huáng", n[37266] = "xǐng", n[29123] = "rán", n[20964] = "fèng", n[25130] = "jié", n[38138] = "pù pū", n[28082] = "yè", n[25764] = "chè", n[33014] = "jiāo", n[24930] = "màn", n[26477] = "háng", n[34394] = "xū", n[36766] = "cí", n[26364] = "màn", n[27589] = "yì", n[21672] = "zī", n[20439] = "sú", n[31958] = "táng", n[24573] = "hū", n[33459] = "fāng", n[22992] = "jiě", n[32791] = "hào", n[22920] = "mā", n[35850] = "yì", n[28006] = "pǔ", n[39057] = "pín bīn", n[38459] = "zǔ", n[20801] = "yǔn", n[23429] = "zhái", n[31383] = "chuāng", n[40664] = "mò", n[32960] = "zhàng", n[24323] = "qì", n[20513] = "chàng chāng", n[28781] = "miè", n[30002] = "jiǎ", n[30151] = "zhèng zhēng", n[22467] = "āi", n[28392] = "bīn", n[36175] = "shǎng", n[33713] = "lái", n[25298] = "jù", n[28129] = "dàn", n[22363] = "tán", n[38517] = "líng", n[32472] = "huì", n[34382] = "hǔ", n[31481] = "zhú", n[36194] = "yíng", n[38155] = "fēng", n[31726] = "lán", n[36855] = "mí", n[32445] = "niǔ", n[36735] = "jiào", n[36137] = "fàn", n[36882] = "dì", n[23064] = "niáng", n[22280] = "quān juàn juān", n[25366] = "wā", n[28809] = "lú", n[26367] = "tì", n[24188] = "yòu", n[20035] = "nǎi", n[37066] = "jiāo", n[39047] = "pō", n[25140] = "dài", n[28369] = "huá", n[24466] = "tú", n[23815] = "chóng", n[28059] = "tāo", n[28966] = "jiāo", n[20957] = "níng", n[22681] = "qiáng", n[21543] = "ba bā", n[28814] = "yán", n[20992] = "dāo", n[29627] = "bō", n[23551] = "shòu", n[23653] = "lǚ", n[22307] = "shèng", n[26152] = "zuó", n[37240] = "suān", n[26391] = "lǎng", n[23186] = "méi", n[26705] = "sāng", n[38108] = "tóng", n[20210] = "zhòng", n[20134] = "yì", n[35806] = "dàn", n[25581] = "jiē qì", n[32437] = "zòng zǒng", n[28459] = "màn", n[24840] = "yù", n[36767] = "pì bì", n[36192] = "zèng", n[26097] = "hàn", n[22902] = "nǎi", n[27891] = "yǒng", n[26538] = "qiāng", n[39575] = "piàn", n[34411] = "chóng", n[27744] = "chí", n[38236] = "jìng", n[27987] = "nóng", n[25286] = "chāi cā", n[33406] = "ài yì", n[25195] = "sǎo sào", n[23089] = "yú", n[38075] = "zuàn zuān", n[30861] = "ài", n[23506] = "hán", n[36831] = "chí", n[37051] = "lín", n[26361] = "cáo", n[30423] = "dào", n[31302] = "mù", n[35910] = "dòu", n[36186] = "zhuàn", n[26216] = "chén", n[28009] = "hào", n[24429] = "péng bāng", n[32819] = "ěr", n[29916] = "guā", n[25197] = "niǔ", n[33080] = "liǎn", n[29141] = "yàn yān", n[25671] = "yáo", n[23492] = "jì", n[20223] = "fǎng", n[28846] = "pào páo bāo", n[26187] = "jìn", n[27882] = "lèi", n[27442] = "yù", n[39281] = "bǎo", n[22721] = "bì", n[38145] = "suǒ", n[21047] = "shuā shuà", n[26604] = "jiǎn", n[35786] = "zhěn", n[30952] = "mó mò", n[25429] = "bǔ", n[23528] = "zhài", n[28378] = "gǔn", n[33192] = "péng", n[23380] = "kǒng", n[28155] = "tiān", n[24093] = "dì", n[36758] = "xiá", n[28856] = "zhà zhá", n[26088] = "zhǐ", n[21505] = "xū yù", n[22336] = "zhǐ", n[39542] = "shǐ", n[25265] = "bào", n[22025] = "jiā", n[25308] = "bài", n[25200] = "rǎo", n[34955] = "dài", n[20329] = "pèi", n[38452] = "yīn", n[36744] = "bèi", n[38149] = "guō", n[36182] = "lài", n[21097] = "shèng", n[25276] = "yā", n[24618] = "guài", n[28014] = "fú", n[26522] = "méi", n[26639] = "lán", n[27585] = "huǐ", n[26611] = "liǔ", n[24656] = "kǒng", n[25958] = "dūn duì", n[23391] = "mèng", n[26049] = "páng bàng", n[20179] = "cāng", n[23721] = "yán", n[20280] = "shēn", n[23725] = "lǐng líng", n[32784] = "nài", n[25026] = "dǒng", n[25463] = "jié", n[29827] = "lí", n[28330] = "xī", n[26262] = "nuǎn", n[32420] = "xiān qiàn", n[27735] = "hàn hán", n[30123] = "yì", n[24039] = "qiǎo", n[26059] = "xuán xuàn", n[20391] = "cè zè zhāi", n[20918] = "yě", n[38506] = "péi", n[40483] = "míng";n[29942] = "píng", n[32434] = "gāng", n[25380] = "jǐ", n[26092] = "xún", n[33286] = "yú", n[21917] = "hē hè yè", n[38519] = "xiàn", n[32536] = "yuán", n[31291] = "dào", n[39282] = "sì", n[28393] = "tān", n[38548] = "gé", n[24944] = "wèi", n[26420] = "pǔ pò pō piáo", n[38544] = "yǐn yìn", n[28748] = "guàn", n[25311] = "nǐ", n[20599] = "tōu", n[38386] = "xián", n[36203] = "hè", n[24688] = "qià", n[24935] = "huì", n[33931] = "jiǎng", n[38393] = "nào", n[37049] = "zōu", n[29301] = "qiān", n[26612] = "chái", n[21050] = "cì cī", n[28382] = "zhì", n[24432] = "zhāng", n[20465] = "jù", n[21208] = "kān", n[22635] = "tián zhèn", n[29723] = "chēn", n[23581] = "cháng", n[36158] = "jiǎ gǔ", n[25644] = "bān", n[28142] = "huái", n[22863] = "zòu", n[33655] = "hé", n[28363] = "zī", n[35206] = "fù", n[24441] = "yì", n[31186] = "miǎo", n[36367] = "tà", n[24041] = "gǒng", n[25720] = "mō", n[33633] = "dàng", n[36741] = "fǔ", n[24796] = "xī", n[26588] = "guì jǔ", n[32918] = "xiāo xiào", n[39063] = "kē", n[25615] = "bó", n[27663] = "shì zhī", n[22993] = "gū", n[24324] = "nòng lòng", n[23004] = "jiāng", n[21531] = "jūn", n[33298] = "shū", n[20817] = "duì ruì yuè", n[23431] = "yǔ", n[21106] = "gē", n[21746] = "zhé", n[25688] = "zhāi", n[38054] = "qīn", n[36867] = "táo", n[28448] = "mò", n[24518] = "yì", n[25932] = "dí", n[23487] = "sù xiǔ xiù", n[21834] = "a ā á ǎ à", n[20940] = "líng", n[32768] = "yào", n[38383] = "chuǎng", n[38405] = "yuè", n[36138] = "tān", n[36196] = "chì", n[27754] = "wāng", n[24754] = "bēi", n[25233] = "yì", n[29943] = "cí", n[20911] = "féng píng", n[21385] = "lì", n[31895] = "cū", n[33778] = "fēi fěi", n[29748] = "qín", n[22561] = "bǎo bǔ pù", n[25996] = "bīn", n[25496] = "jué", n[31232] = "xī", n[34928] = "shuāi cuī", n[39550] = "jià", n[38613] = "diāo", n[29282] = "láo", n[27675] = "fēn", n[39537] = "qū", n[22949] = "tuǒ", n[24708] = "qiāo qiǎo", n[37070] = "láng làng", n[24033] = "xún", n[33251] = "chén", n[32701] = "yǔ", n[28784] = "huī", n[30284] = "ái", n[39062] = "yǐng", n[22982] = "mǔ", n[28431] = "lòu", n[34989] = "xí", n[36132] = "xián", n[40479] = "niǎo", n[26263] = "àn", n[33538] = "mào", n[23396] = "gū", n[24809] = "chéng", n[27036] = "bǎng bàng", n[34945] = "yuán", n[26700] = "zhuō", n[21331] = "zhuó", n[20613] = "fù", n[21073] = "jiàn", n[22534] = "duī", n[20806] = "zhào", n[29408] = "hěn", n[36720] = "hōng", n[25331] = "quán", n[22969] = "mèi", n[32466] = "róng", n[35010] = "liè liě", n[28504] = "pān", n[20804] = "xiōng", n[27965] = "qià", n[21497] = "tàn", n[28085] = "hán", n[36159] = "huì", n[20399] = "hóu hòu", n[23706] = "lán", n[29066] = "xióng", n[32490] = "xù", n[38401] = "gé", n[23614] = "wěi yǐ", n[30865] = "bēi", n[23574] = "jiān", n[33151] = "tuǐ", n[28034] = "tú", n[26685] = "zāi", n[22365] = "bà", n[29369] = "yóu", n[38136] = "zhù", n[32937] = "jiān", n[38378] = "shǎn", n[35825] = "yòu", n[36777] = "biàn", n[33452] = "fēn", n[30561] = "shuì", n[22880] = "diàn", n[20239] = "fú", n[22937] = "miào", n[20057] = "yǐ", n[32504] = "chóu", n[24311] = "tíng", n[22805] = "xī", n[24658] = "héng", n[26799] = "tī", n[36161] = "lìn", n[38686] = "xiá", n[25856] = "pān", n[26525] = "zhī qí", n[35793] = "yì", n[25551] = "miáo", n[28248] = "xiāng", n[30913] = "cí", n[21525] = "lǚ", n[30805] = "shuò shí", n[29240] = "bà", n[32925] = "gān", n[23803] = "jùn", n[33889] = "pú", n[34935] = "zhōng", n[25645] = "dā", n[21796] = "huàn", n[34218] = "xīn", n[25402] = "tǐng", n[36893] = "shì", n[29399] = "gǒu", n[34081] = "cài", n[23476] = "yàn", n[34028] = "péng", n[25758] = "zhuàng", n[38109] = "lǚ", n[29298] = "shēng", n[33328] = "jiàn", n[32961] = "xié", n[23835] = "jué", n[26691] = "táo", n[26012] = "xié", n[20007] = "sàng sāng", n[28866] = "làn", n[23631] = "píng bǐng", n[30742] = "zhuān", n[22675] = "mù", n[35814] = "xiáng yáng", n[36926] = "yú", n[20989] = "hán", n[36300] = "diē", n[25242] = "fǔ", n[25554] = "chā", n[25096] = "gē", n[20937] = "liáng liàng", n[21860] = "pí", n[33033] = "mài mò", n[28389] = "làn", n[36171] = "fù", n[26575] = "bǎi bó bò", n[22564] = "dī", n[33136] = "yāo", n[27850] = "pō bó", n[23546] = "sì", n[23576] = "chén", n[33922] = "dì", n[21066] = "xiāo xuē", n[20185] = "xiān", n[36394] = "zōng", n[20923] = "dòng", n[27748] = "tāng shāng", n[30555] = "jīng", n[33395] = "yàn", n[33616] = "jiàn", n[21163] = "jié", n[26694] = "kuàng", n[24266] = "láng", n[24785] = "huò", n[39029] = "yè", n[25340] = "pīn", n[22570] = "kān", n[25658] = "xié", n[19976] = "zhàng", n[20083] = "rǔ", n[25386] = "nuó", n[35889] = "pǔ", n[33334] = "bó", n[22484] = "pǔ", n[36965] = "yáo", n[33740] = "jūn jùn", n[22616] = "táng", n[27687] = "yǎng", n[26230] = "jīng", n[27922] = "sǎ xǐ", n[26666] = "zhū", n[39068] = "yán", n[34425] = "hóng", n[23731] = "yuè", n[33016] = "xiōng", n[24525] = "rěn", n[29980] = "tián", n[21305] = "pǐ", n[30633] = "zhǔ", n[25032] = "xiè", n[29239] = "yé", n[19995] = "cóng", n[33714] = "lián", n[21465] = "xù", n[40511] = "hóng", n[36898] = "féng", n[25260] = "tái", n[22068] = "zuǐ", n[24344] = "hóng", n[28818] = "chǎo", n[21943] = "pēn pèn", n[21514] = "diào", n[31389] = "wō", n[34900] = "xián", n[21561] = "chuī", n[38712] = "bà", n[20180] = "zǎi zǐ zī", n[22438] = "kěn", n[32974] = "tāi", n[24910] = "shèn", n[33039] = "zàng", n[27495] = "qí", n[30095] = "shū", n[24736] = "yōu", n[24917] = "mù", n[28418] = "piāo piào piǎo", n[26438] = "gān gǎn", n[33805] = "píng", n[33311] = "zhōu", n[21520] = "tù tǔ", n[29618] = "líng", n[20975] = "kǎi", n[25106] = "jiè", n[30460] = "pàn", n[20598] = "ǒu", n[30406] = "pén", n[24936] = "kǎi", n[24330] = "bì", n[31661] = "jiàn", n[33541] = "máo", n[34923] = "shān", n[32592] = "guàn", n[20018] = "chuàn", n[36752] = "fú", n[33145] = "fù", n[38057] = "gōu", n[30896] = "pèng", n[26114] = "áng", n[37228] = "chóu", n[26224] = "xī", n[23039] = "zī", n[24444] = "bǐ", n[38203] = "duàn", n[39128] = "piāo", n[23233] = "jià", n[31459] = "jùn", n[32541] = "fèng féng", n[36424] = "dǎo", n[24748] = "xuán", n[32043] = "zǐ", n[27973] = "qiǎn jiān", n[32518] = "lǎn", n[21898] = "hǎn", n[26132] = "xī", n[39536] = "chí", n[28287] = "shī", n[21098] = "jiǎn", n[20390] = "zhēn", n[22353] = "kēng", n[23002] = "yáo", n[39759] = "wèi", n[25169] = "pū", n[25379] = "zhèng zhēng", n[28949] = "huàn", n[30342] = "jiē", n[29378] = "kuáng", n[27873] = "pào pāo", n[39588] = "zhòu", n[22581] = "dǔ", n[33180] = "mó", n[31165] = "qín", n[38160] = "ruì", n[33437] = "zhī", n[24125] = "mào", n[25797] = "shàn", n[27818] = "hù", n[26212] = "wù", n[23110] = "pó", n[22475] = "mái mán", n[21149] = "quàn", n[30871] = "wǎn", n[29595] = "mǎ", n[39031] = "qǐng", n[40493] = "yā", n[23043] = "wá", n[35947] = "yù", n[21254] = "cōng", n[39746] = "hún", n[21741] = "kū", n[24222] = "páng", n[20141] = "tíng", n[23649] = "lǚ", n[36924] = "bī", n[23610] = "chǐ chě", n[25746] = "sā sǎ", n[40575] = "lù", n[35772] = "sòng", n[24357] = "mí mǐ", n[22346] = "fāng fáng", n[30862] = "suì", n[32532] = "dì", n[38669] = "huò", n[22756] = "rǎng", n[33796] = "táo", n[38083] = "líng", n[31245] = "shāo shào", n[19992] = "qiū", n[32959] = "zhǒng", n[28902] = "fán", n[33529] = "píng pēng", n[24217] = "miào", n[38599] = "gù", n[27739] = "xùn", n[23389] = "xiào", n[36784] = "chén", n[21534] = "tūn", n[27760] = "tài", n[24616] = "yuàn", n[37247] = "niàng", n[32822] = "yé", n[21681] = "zán zǎ", n[27450] = "qī", n[20002] = "diū", n[29756] = "qióng", n[26842] = "péng", n[25259] = "pī", n[28212] = "kě", n[23624] = "qū", n[24343] = "fú", n[30130] = "pí", n[24085] = "pà", n[26157] = "zhāo", n[30418] = "hé", n[20208] = "yǎng áng", n[33831] = "xiāo", n[29306] = "xī", n[25745] = "chēng", n[25243] = "pāo", n[40736] = "shǔ", n[32433] = "shā", n[32764] = "yì", n[20857] = "zī", n[39569] = "qí", n[31946] = "hú hū hù", n[22865] = "qì qiè xiè", n[38125] = "míng", n[28120] = "táo", n[39037] = "wán", n[25776] = "zhuàn", n[20050] = "pīng", n[28113] = "shū", n[22918] = "zhuāng", n[31377] = "yáo", n[26580] = "róu", n[23035] = "yīn", n[33485] = "cāng", n[35880] = "jǐn", n[21375] = "qīng", n[28799] = "càn", n[26635] = "dòng", n[25970] = "qiāo", n[31363] = "qiè", n[33738] = "jú", n[37057] = "yù", n[20652] = "cuī", n[30473] = "méi", n[37041] = "qiū", n[25597] = "lǎn", n[40718] = "dǐng", n[38886] = "wéi", n[32932] = "fū", n[23068] = "nà nuó", n[20431] = "qiào xiào", n[21568] = "ya yā", n[25306] = "pīn", n[23544] = "cùn", n[29228] = "pá", n[24735] = "wù", n[23615] = "niào suī", n[32610] = "bà ba pí", n[22317] = "guī", n[33900] = "zàng", n[32874] = "cōng", n[27779] = "wò", n[32928] = "cháng", n[21397] = "cè", n[24904] = "cí", n[24651] = "liàn", n[32501] = "mián", n[27233] = "xiàng", n[22334] = "jī", n[22403] = "lā", n[32705] = "wēng", n[31908] = "yuè", n[33026] = "zhī", n[27513] = "dǎi", n[25022] = "hàn", n[38416] = "chǎn", n[30008] = "diàn tián shèng", n[24055] = "xiàng hàng", n[34562] = "fēng", n[36724] = "zhóu zhòu", n[33368] = "sōu", n[22404] = "lǒng", n[34924] = "chèn", n[38428] = "fù", n[24808] = "cǎn", n[20864] = "jì", n[24189] = "yōu", n[21400] = "lí", n[23853] = "zhǎn chán", n[31563] = "jīn", n[23507] = "yù", n[36804] = "qì", n[28183] = "shèn", n[30872] = "diǎn", n[30887] = "bì", n[36172] = "dǔ", n[34966] = "xiù", n[22856] = "nài", n[23828] = "cuī", n[24742] = "yuè", n[25438] = "lāo", n[21093] = "bō bāo", n[23381] = "yùn", n[36870] = "nì", n[23156] = "yīng", n[33030] = "cuì", n[32517] = "miǎn", n[33351] = "tǐng", n[35885] = "tán", n[31548] = "lóng lǒng", n[20754] = "rú", n[31890] = "lì", n[35784] = "zhà", n[36963] = "qiǎn", n[22402] = "chuí", n[30923] = "cuō", n[21368] = "xiè", n[24092] = "zhì", n[26531] = "zǎo", n[24162] = "zhuàng chuáng", n[28096] = "diàn", n[24070] = "fān", n[34503] = "shé yí", n[23472] = "zǎi", n[27583] = "diàn", n[29454] = "liè", n[21460] = "shū", n[22841] = "jiá jiā gā xiá", n[24069] = "shuài", n[27815] = "cāng", n[39749] = "mèi", n[20457] = "liǎng", n[29279] = "mù", n[38035] = "diào", n[33883] = "gě gé", n[32597] = "hǎn", n[28196] = "bó", n[27733] = "shàn", n[28322] = "yì", n[25830] = "cā", n[34993] = "fú", n[23273] = "nèn", n[26742] = "tǒng", n[27575] = "yīn yān yǐn", n[37239] = "kù", n[21574] = "dāi", n[21351] = "wò", n[26257] = "shǔ", n[39556] = "jiāo", n[24187] = "huàn", n[22218] = "náng nāng", n[25472] = "xiān", n[37257] = "zuì", n[29281] = "mǔ", n[39292] = "bǐng", n[25159] = "shàn shān", n[33976] = "zhēng", n[36195] = "gàn", n[20461] = "jiǎn", n[26885] = "yǐ yī", n[26530] = "shū", n[24422] = "yàn", n[27146] = "fán", n[21566] = "yù", n[20183] = "zhàng", n[24428] = "bīn", n[30722] = "shā", n[32499] = "shéng", n[24062] = "jīn", n[21888] = "kā", n[21195] = "xūn", n[24833] = "chóu", n[30897] = "jiǎn", n[35878] = "qiān", n[22771] = "ké qiào", n[36711] = "yà", n[28525] = "tán", n[27974] = "jiāng jiàng", n[25405] = "wǎn", n[37026] = "xíng", n[21861] = "shá", n[28938] = "hàn", n[38046] = "chāo", n[28900] = "kǎo", n[24278] = "liào", n[29483] = "māo máo", n[29425] = "yù", n[33108] = "qiāng", n[21947] = "yù", n[24481] = "yù", n[34164] = "yùn", n[22350] = "kǎn", n[39764] = "mó", n[21038] = "guā", n[30244] = "liú", n[33579] = "máng", n[31469] = "jié", n[33673] = "lì", n[38142] = "liàn", n[28139] = "yín", n[24868] = "fèn", n[32441] = "wén wèn", n[21688] = "xián", n[30544] = "lài", n[30585] = "dǔ", n[35044] = "kù", n[22840] = "kuā kuà", n[28404] = "dī", n[38654] = "wù", n[25628] = "sōu", n[25304] = "jū gōu", n[40858] = "gōng", n[20982] = "xiōng", n[33576] = "cí", n[20658] = "ào", n[38797] = "ān", n[40548] = "hè", n[34432] = "shí", n[39048] = "jǐng gěng", n[32736] = "cuì", n[21321] = "huì", n[27713] = "zhī", n[20872] = "gāng", n[29422] = "shī", n[38567] = "suì", n[24367] = "wān", n[32963] = "wèi", n[27803] = "pèi", n[21215] = "mù", n[29747] = "lín", n[30140] = "téng", n[34453] = "cán", n[27900] = "pō", n[30967] = "lín", n[25447] = "pěng", n[28851] = "bǐng", n[32483] = "xiù", n[26421] = "duǒ", n[28079] = "yá", n[25487] = "tāo", n[22862] = "kuí", n[32834] = "niè", n[23388] = "zī", n[38901] = "yùn", n[27985] = "hún", n[32724] = "xiáng", n[39748] = "pò", n[25513] = "yǎn", n[26021] = "chì", n[25950] = "chǎng", n[33098] = "là xī", n[24871] = "kuì", n[31896] = "zhān", n[19985] = "chǒu", n[28297] = "gài", n[26001] = "bān", n[21862] = "la lā", n[26607] = "kē", n[35856] = "xié", n[28911] = "xī", n[31108] = "lù", n[28020] = "yù", n[28061] = "lào", n[39740] = "guǐ", n[34203] = "xuē", n[30246] = "shòu", n[25377] = "dǎng dàng", n[26127] = "hūn", n[40517] = "é", n[28251] = "zhàn", n[36923] = "luó", n[34430] = "xiā", n[27778] = "yí", n[36785] = "rǔ", n[21449] = "chā chá chǎ", n[40763] = "bí", n[21416] = "chú", n[40077] = "bào", n[38829] = "biān", n[36771] = "là", n[28487] = "xiāo", n[20051] = "pāng", n[32954] = "fèi", n[23609] = "yǐn", n[39042] = "sòng", n[37045] = "shào", n[28572] = "lán", n[26704] = "tóng", n[40560] = "yīng", n[22952] = "fáng", n[38397] = "mǐn", n[23648] = "tú", n[30031] = "wèi", n[32752] = "hàn", n[22604] = "tā", n[20127] = "qì", n[23490] = "jì", n[36162] = "lù", n[29356] = "quǎn", n[32842] = "liáo", n[26280] = "jì", n[22443] = "diàn", n[27844] = "xiè yì", n[28422] = "qī", n[26093] = "xù", n[34174] = "lěi", n[22378] = "píng", n[28068] = "dí", n[25387] = "cuò", n[20304] = "zuǒ", n[30596] = "miáo", n[25318] = "lán", n[30827] = "liú", n[26834] = "bàng", n[26447] = "xìng", n[29245] = "shuǎng", n[30899] = "tàn", n[30036] = "pàn", n[29081] = "xī", n[35140] = "xiāng", n[31096] = "huò", n[20094] = "qián gān", n[28153] = "yān", n[33218] = "bì bei", n[33678] = "shā", n[36764] = "gū", n[38414] = "yán", n[24248] = "yōng", n[30733] = "kǎn", n[25417] = "zhuō", n[21246] = "gōu gòu", n[22418] = "lěi", n[34893] = "yǎn", n[22372] = "kūn", n[22122] = "zào", n[27631] = "tǎn", n[20522] = "ní", n[25198] = "bàn", n[38085] = "qiān yán", n[36943] = "è", n[21696] = "āi", n[24841] = "yú tōu", n[29814] = "yáo", n[21676] = "yǎo", n[23244] = "xián", n[38392] = "zhá", n[24691] = "kěn", n[40831] = "chǐ", n[26464] = "gàng gāng", n[24594] = "nù", n[20861] = "shòu", n[27975] = "jiāo", n[32903] = "zhào", n[37122] = "è", n[28342] = "róng", n[21700] = "hǒng hōng hòng", n[26869] = "kē", n[30447] = "dīng", n[26792] = "lí", n[28790] = "zào", n[23663] = "tún zhūn", n[29421] = "xiá", n[38475] = "lòu", n[21857] = "fēi", n[28024] = "jìn", n[28107] = "lín lìn", n[28626] = "bīn", n[33034] = "jǐ", n[25114] = "qī", n[21193] = "miǎn", n[33167] = "gāo gào", n[27688] = "ān", n[22661] = "shù", n[27832] = "fèi", n[25384] = "ái āi", n[34067] = "màn wàn", n[25220] = "chāo", n[33426] = "máng", n[31177] = "bǐng", n[21049] = "chà shā", n[39286] = "ráo", n[21410] = "xiāng", n[21654] = "gā kā", n[39745] = "kuí", n[39578] = "sāo sǎo", n[32538] = "fù", n[36930] = "suì", n[24680] = "hèn", n[36347] = "jī", n[34746] = "luó", n[36776] = "biàn", n[33735] = "gū", n[24119] = "wéi", n[20976] = "huáng", n[26898] = "jiāo", n[27741] = "rǔ", n[30636] = "shùn", n[28100] = "zī", n[33329] = "cāng", n[39304] = "kuì", n[26729] = "zhuāng", n[28844] = "jù", n[35475] = "shì", n[21340] = "bǔ bo", n[40607] = "lín", n[23682] = "qǐ kǎi", n[20820] = "tù", n[30496] = "mián", n[27893] = "bèng", n[25296] = "guǎi";n[32922] = "dù dǔ", n[21290] = "fěi", n[33446] = "lú", n[21256] = "xiōng", n[38665] = "méi", n[34588] = "mì", n[33606] = "jīng", n[38593] = "yàn", n[31364] = "zhǎi", n[31207] = "yāng", n[26543] = "kū", n[20166] = "pú pū", n[22065] = "zhǔ", n[22774] = "hú", n[35845] = "liàng", n[21736] = "shào", n[32908] = "jī", n[36140] = "biǎn", n[21472] = "dié", n[31293] = "jī qǐ", n[23696] = "qí", n[27819] = "mò", n[32902] = "sì", n[37255] = "chún", n[33777] = "líng", n[24426] = "biāo", n[36538] = "tǎng", n[25684] = "shuāi", n[33152] = "páng", n[29995] = "fǔ", n[36874] = "xùn", n[20945] = "còu", n[28170] = "yuān", n[21890] = "wèi", n[34276] = "téng", n[30776] = "zá", n[24724] = "huǐ", n[26441] = "shān", n[38684] = "shuāng", n[21380] = "è", n[24524] = "jì", n[26708] = "jú", n[31570] = "tǒng", n[19993] = "bǐng", n[33261] = "chòu xiù", n[25342] = "shí shè", n[33436] = "wú", n[31161] = "yǔ", n[20024] = "wán", n[34809] = "xiè", n[22043] = "má", n[20446] = "yù", n[32709] = "chì", n[23608] = "shī", n[28548] = "chéng dèng", n[39554] = "mà", n[30566] = "mù", n[39336] = "xīn", n[37085] = "hǎo", n[36142] = "zhù", n[38476] = "mò", n[38055] = "jūn", n[36713] = "xuān", n[36163] = "zāng", n[31499] = "sǔn", n[27465] = "qiàn", n[36920] = "yì", n[27498] = "wāi", n[24013] = "wēi", n[33795] = "cuì", n[23830] = "yá", n[31391] = "kū", n[36386] = "tī", n[38179] = "luó", n[33806] = "wěi", n[24208] = "lú", n[21078] = "pōu", n[31869] = "zǐ", n[29993] = "shuǎi", n[39269] = "jī", n[33489] = "yuàn", n[24700] = "nǎo", n[28195] = "zhā", n[30165] = "hén", n[33694] = "wǎn", n[30789] = "guī", n[26228] = "qíng", n[24034] = "cháo", n[30251] = "tān", n[32544] = "chán", n[38582] = "lì dài", n[31579] = "shāi", n[31348] = "xué", n[26172] = "zhòu", n[22496] = "bù", n[23456] = "chǒng", n[32930] = "zhī", n[39295] = "è", n[20177] = "lún", n[36910] = "dài", n[20834] = "jīng", n[36255] = "tàng tāng", n[31957] = "gāo", n[22958] = "nī", n[37034] = "xié yá yé yú xú", n[25273] = "mǒ mò mā", n[20433] = "yǒng", n[33804] = "méng", n[21280] = "jiàng", n[25172] = "rēng", n[37233] = "jiàng", n[33905] = "cōng", n[30977] = "jiāo", n[25530] = "chān xiān càn shǎn", n[38592] = "què qiāo qiǎo", n[39635] = "suǐ", n[24764] = "dào", n[25370] = "zhì", n[34074] = "wèi", n[26539] = "fēng", n[24218] = "gēng", n[20254] = "sǎn", n[20355] = "kǎn", n[20725] = "jiāng", n[25414] = "kǔn", n[33948] = "suàn", n[28316] = "liū liù", n[20667] = "shǎ", n[34071] = "zhè", n[35868] = "mí", n[25995] = "zhāi", n[34678] = "dié", n[27838] = "zhān", n[38391] = "mēn mèn", n[39539] = "bó", n[32831] = "gěng", n[27133] = "cáo", n[40660] = "qián", n[21523] = "xià hè", n[32958] = "shèn", n[33469] = "yá", n[26647] = "lì", n[26429] = "xiǔ", n[33643] = "yìn", n[27014] = "yú", n[30358] = "wǎn", n[26352] = "yuē", n[24458] = "huái", n[22900] = "nú", n[36845] = "dié", n[20731] = "pì", n[33993] = "róng", n[38742] = "jìng", n[27679] = "fú", n[28372] = "tāo", n[32673] = "xiàn", n[24858] = "yú", n[23591] = "yáo", n[20474] = "ǎn", n[24472] = "pái", n[32617] = "zhào", n[30922] = "lěi", n[38225] = "bàng", n[33292] = "shé", n[26329] = "shǔ", n[32438] = "lún", n[31914] = "fèn", n[21273] = "chí shi", n[38025] = "dīng dìng", n[20348] = "jiǎo", n[25199] = "chě", n[36362] = "yǒng", n[36530] = "duǒ", n[29492] = "hóu", n[32428] = "wěi", n[21693] = "yè yàn yān", n[37213] = "yùn", n[25376] = "náo", n[23451] = "wǎn yuān", n[29808] = "guī", n[27463] = "xiē", n[25234] = "shū", n[33575] = "jiǎn", n[31319] = "suì", n[31085] = "jì zhài", n[37995] = "xīn", n[36225] = "chèn", n[30196] = "chī", n[35033] = "qún", n[29468] = "cāi", n[32792] = "yún", n[30860] = "lù liù", n[38152] = "xiù", n[26194] = "shài", n[28493] = "wéi", n[24358] = "xián", n[31292] = "jià", n[29436] = "láng", n[25314] = "lǒng", n[26791] = "wú", n[33455] = "xīn xìn", n[30519] = "juàn", n[21713] = "yǎ yā", n[23449] = "zhòu", n[21388] = "yàn", n[36891] = "guàng", n[35892] = "qiǎn", n[37039] = "hán", n[21621] = "hē a kē", n[34593] = "là", n[23525] = "liáo", n[38053] = "yào yuè", n[32824] = "sǒng", n[23219] = "xí", n[29071] = "xūn xùn", n[34433] = "yǐ", n[24789] = "tì", n[39072] = "diān", n[23071] = "juān", n[20136] = "pēng", n[21535] = "yín", n[33970] = "pú", n[26797] = "suō", n[30651] = "zhān", n[28189] = "yú", n[21897] = "hóu", n[36974] = "zhē", n[24908] = "huāng", n[22839] = "yí", n[38902] = "sháo", n[28976] = "yàn", n[23561] = "wèi yù", n[29642] = "shān", n[32982] = "pàng", n[34121] = "jiāo", n[31929] = "cuì", n[35065] = "guǒ", n[29734] = "qí", n[31229] = "huì", n[20384] = "xiá", n[22904] = "jiān", n[25373] = "zhuā", n[32465] = "bǎng", n[26333] = "pù", n[26829] = "gùn hùn", n[23113] = "wǎn", n[38262] = "xiāng", n[29100] = "áo āo", n[20621] = "bàng", n[29157] = "zào", n[27695] = "lǜ", n[39558] = "luò", n[26179] = "huàng huǎng", n[40509] = "gē", n[30127] = "fēng", n[29730] = "zhuó zuó", n[32843] = "lóng", n[29791] = "sè", n[26247] = "xiá", n[32485] = "suí", n[31109] = "shàn", n[28291] = "kuì huì", n[33146] = "xiàn", n[22446] = "kuǎ", n[38400] = "fá", n[25788] = "hàn", n[29038] = "zhǔ", n[20323] = "yòng yōng", n[28373] = "téng", n[28132] = "yū", n[36466] = "dūn", n[26646] = "qī xī", n[30813] = "xiāo", n[30529] = "zhēng", n[33631] = "huì", n[33639] = "yíng", n[25238] = "dǒu", n[22367] = "fén", n[33453] = "bā", n[33275] = "zhēn", n[38189] = "dìng", n[26198] = "huī", n[20518] = "juàn", n[20504] = "tǎng cháng", n[21912] = "chuǎn", n[37009] = "yì", n[38180] = "chuí", n[24807] = "jù", n[33620] = "lì", n[27607] = "pí", n[35269] = "mì", n[30702] = "ǎi", n[24685] = "gōng", n[38041] = "gài", n[27694] = "dàn", n[32568] = "gāng", n[30631] = "qiáo", n[39076] = "chàn zhàn", n[33821] = "luó", n[20305] = "yòu", n[24609] = "yí", n[30270] = "yǐn", n[23521] = "guǎ", n[28921] = "pēng", n[25703] = "cuī", n[26848] = "táng", n[32554] = "mù", n[38607] = "chú", n[38887] = "rèn", n[21895] = "lǎ", n[20828] = "dōu", n[22383] = "pī", n[22391] = "kē kě", n[36126] = "zhēn", n[20167] = "chóu qiú", n[32521] = "qī", n[24088] = "lián", n[31446] = "shù", n[31967] = "zāo", n[29462] = "chāng", n[25042] = "lǎn", n[20991] = "záo", n[27964] = "wā", n[21927] = "xuān", n[35875] = "yáo", n[39548] = "tuó", n[28907] = "tàng", n[38156] = "xīn", n[26928] = "yē", n[23849] = "bēng", n[27813] = "lì", n[27774] = "fén", n[30917] = "páng bàng", n[38678] = "lín", n[26840] = "jí", n[25179] = "káng gāng", n[24407] = "huì", n[30697] = "jǔ", n[30610] = "mán mén", n[38471] = "lǒng", n[32462] = "yì", n[35819] = "jiè", n[26e3] = "fěi", n[21365] = "luǎn", n[38126] = "zhēng", n[38078] = "jiǎ", n[23477] = "xiāo", n[31807] = "bó bù", n[31204] = "chèng", n[30068] = "chóu", n[26023] = "fǔ", n[25794] = "lèi léi", n[21076] = "tī", n[36481] = "zào", n[20900] = "yuān", n[35763] = "huì", n[23493] = "yín", n[28954] = "fén", n[28467] = "zhāng", n[40150] = "biē", n[21754] = "bǔ", n[32827] = "chǐ", n[20711] = "sēng", n[29701] = "láng", n[31903] = "sù", n[24598] = "bù", n[21647] = "yǒng", n[34560] = "shǔ", n[28147] = "chún zhūn", n[26577] = "gān", n[32533] = "lǚ", n[28865] = "shuò", n[27682] = "qīng", n[34109] = "bì", n[29738] = "qí", n[27875] = "qì", n[38446] = "ruǎn", n[38208] = "dù", n[27572] = "ōu", n[34398] = "yú", n[34384] = "nüè", n[28810] = "chuī", n[25601] = "gē gé", n[35776] = "jué", n[25504] = "lüè", n[22368] = "zhuì", n[23679] = "yǔ", n[39654] = "máo", n[37195] = "qiú", n[36527] = "qū", n[21557] = "chǎo chāo", n[36944] = "xiá", n[23518] = "mò", n[20181] = "shì", n[31258] = "zhì", n[20698] = "liáo", n[26976] = "nán", n[30710] = "jī", n[31581] = "zhēng", n[24413] = "yí", n[21486] = "dīng", n[29076] = "róng", n[27088] = "huái", n[28514] = "huáng", n[33465] = "qín", n[37112] = "dān", n[21310] = "biǎn", n[21643] = "zhā", n[29572] = "xuán", n[35028] = "yì", n[38497] = "dǒu", n[21719] = "huá huā", n[24604] = "lián", n[35167] = "jīn", n[20995] = "rèn", n[33086] = "pí", n[23884] = "qiàn kàn", n[25329] = "gǒng", n[24951] = "kāng", n[30186] = "huàn", n[36299] = "bá", n[23386] = "fú", n[23786] = "yù", n[38026] = "zhāo", n[28359] = "diān", n[33503] = "gǒu", n[26197] = "yūn yùn", n[22697] = "dūn", n[33181] = "xī", n[32670] = "xiū", n[20045] = "zhà", n[33147] = "nì", n[35449] = "zhān", n[35766] = "yà", n[25975] = "fū", n[32948] = "yáo", n[33721] = "yíng", n[34914] = "qú", n[26623] = "shì", n[26388] = "shuò", n[34972] = "wà", n[26517] = "zhěn", n[28888] = "hōng", n[21248] = "yún", n[27516] = "jiān", n[27899] = "xiè", n[27185] = "yīng", n[21563] = "wěn", n[32735] = "zhái", n[22576] = "yàn", n[33519] = "běn", n[38553] = "xì", n[23047] = "jiāo", n[29527] = "jué", n[27762] = "jí", n[34521] = "wā", n[26025] = "zhǎn", n[38753] = "mí", n[27777] = "qìn", n[20062] = "qǐ", n[23016] = "yí", n[32745] = "piān", n[27836] = "zhǎo", n[22030] = "gǎ", n[30072] = "jī", n[30699] = "jiǎo jiáo", n[39567] = "jùn", n[34223] = "shǔ", n[32474] = "xuàn", n[31388] = "cuàn", n[34299] = "zǎo", n[30679] = "chù", n[30338] = "zào", n[26999] = "kǎi jiē", n[33109] = "wàn", n[31735] = "péng", n[24455] = "xùn", n[32829] = "dān", n[23100] = "chāng", n[29313] = "lí", n[27067] = "tà", n[33540] = "qié", n[26837] = "zōng", n[27769] = "xiōng", n[23784] = "é", n[36420] = "tí", n[26151] = "mèi", n[22882] = "shē", n[28073] = "sè", n[28796] = "zhuó", n[36393] = "cǎi", n[31909] = "zhōu yù", n[25315] = "jiǎn", n[26103] = "kuàng", n[31751] = "cù", n[28335] = "sù", n[25874] = "zǎn cuán", n[27795] = "tà", n[21589] = "ǒu ōu òu", n[26803] = "shū", n[25605] = "jiǎo", n[30732] = "qì qiè", n[32427] = "rèn", n[28205] = "wèi", n[28577] = "zǎo", n[25749] = "sī", n[28435] = "lí", n[33862] = "bǎo", n[36749] = "chuò", n[32938] = "fáng", n[31041] = "qí", n[38816] = "jū", n[34542] = "mán", n[25423] = "niē", n[35829] = "sòng", n[23075] = "dì", n[23729] = "dài", n[28689] = "pù bào", n[21880] = "xiào", n[35064] = "luǒ", n[40486] = "yā", n[29787] = "yīng", n[36524] = "gōng", n[33308] = "shùn", n[24561] = "chén", n[35961] = "bào", n[32386] = "zuǎn", n[24676] = "xù", n[24799] = "wéi", n[36176] = "cì", n[20463] = "fǔ", n[29312] = "xī", n[23194] = "mèi", n[23234] = "sǎo", n[21971] = "sǎng", n[34442] = "wén", n[33580] = "chá", n[39533] = "yù", n[32512] = "zhuì", n[30385] = "zhòu", n[20979] = "dèng", n[38062] = "niǔ", n[34434] = "mǎ mā mà", n[23020] = "jī", n[25170] = "bā pá", n[23254] = "piáo", n[36330] = "guì", n[20985] = "āo wā", n[25571] = "chuǎi chuài chuāi tuán zhuī", n[23596] = "gà", n[27814] = "lún", n[23604] = "gān", n[35905] = "huò huō huá", n[29611] = "méi", n[27553] = "bìn", n[28108] = "tǎng chǎng", n[21485] = "bā", n[21767] = "chún", n[21827] = "kěn", n[35032] = "qiú", n[21329] = "bēi", n[29712] = "suǒ", n[30690] = "shǐ", n[25327] = "zhěng", n[24545] = "chōng", n[21247] = "wù", n[30414] = "àng", n[33589] = "yīn", n[26894] = "zhuī chuí", n[33046] = "bó", n[25282] = "fú bì", n[39557] = "huá", n[33899] = "hú", n[36834] = "tiáo", n[34183] = "wēi", n[40863] = "guī jūn qiū", n[32478] = "jiǎo", n[30518] = "kuàng", n[27792] = "mù", n[20643] = "dǎi", n[27978] = "zhuó", n[33285] = "jiù", n[21467] = "pàn", n[27994] = "xùn", n[31384] = "jiǒng", n[26643] = "shuān", n[37238] = "méi", n[31515] = "dí", n[27852] = "mì bì", n[27012] = "lǎn", n[24825] = "rě", n[38130] = "chǎn", n[30879] = "dié", n[25441] = "jiǎn", n[24682] = "kè", n[37231] = "zhǐ", n[28388] = "lǜ", n[21311] = "nì", n[37237] = "jiào", n[30746] = "yàn", n[36156] = "zéi", n[21294] = "kuì", n[29088] = "yì", n[40158] = "lín", n[40595] = "lù", n[38209] = "měi", n[27667] = "máng méng", n[33479] = "wěi", n[24275] = "kuò", n[24043] = "wū", n[36405] = "zhǒng", n[31487] = "gān", n[34321] = "mó", n[32728] = "qiào qiáo", n[26771] = "zǐ", n[36155] = "yí", n[40151] = "mán", n[24124] = "guó", n[20873] = "rǎn", n[27859] = "hóng", n[29392] = "hú", n[28063] = "lián", n[23822] = "qí", n[31373] = "qiào", n[29788] = "yú", n[35773] = "fěng", n[36887] = "dòu", n[38094] = "duó", n[25527] = "zhì", n[29824] = "cuǐ", n[27863] = "sì", n[27983] = "liú", n[38514] = "chuí", n[37259] = "cù", n[33499] = "kē hē", n[25880] = "rǎng", n[29863] = "bì", n[28698] = "hàn", n[21737] = "li lǐ lī", n[26286] = "mù", n[30691] = "yǐ", n[34444] = "bàng bèng", n[24726] = "bèi", n[25212] = "è", n[28463] = "tà", n[28891] = "zhú", n[34676] = "hú", n[23633] = "xiè", n[22687] = "xū", n[20440] = "fú", n[20387] = "lǚ", n[24199] = "bì", n[38464] = "tuó", n[29006] = "jiān", n[31224] = "jiē", n[24339] = "gōng", n[25443] = "dǎo", n[35692] = "pì", n[28828] = "wěi", n[28847] = "jiǒng", n[25292] = "bàn pàn", n[25153] = "biǎn piān", n[24420] = "tóng", n[38170] = "máo", n[31166] = "hé", n[20398] = "wǔ", n[31174] = "gǎn", n[32494] = "qǐ", n[22179] = "xiāo", n[27167] = "zhāng", n[21648] = "fù", n[26505] = "wǎng", n[31398] = "dòu", n[26726] = "huà", n[23495] = "kòu", n[21705] = "zāi", n[29432] = "lí", n[32781] = "shuǎ", n[39314] = "mán", n[39545] = "jū", n[38539] = "suí", n[20885] = "miǎn", n[30126] = "chuāng", n[21636] = "duō", n[22916] = "wàng", n[23769] = "zhì", n[23044] = "lóu", n[28325] = "pǔ", n[33105] = "fǔ", n[38048] = "nà", n[26665] = "xǔ", n[31961] = "cāo", n[28390] = "luán", n[21584] = "nà nè", n[40123] = "zī", n[23094] = "qǔ", n[31098] = "qí", n[21032] = "páo bào", n[35090] = "bāo", n[27225] = "chéng", n[33593] = "rú", n[35854] = "huǎng", n[25225] = "jué", n[24913] = "shè", n[23195] = "yuàn", n[27204] = "gǎn", n[25102] = "róng", n[36841] = "ěr", n[38639] = "wén", n[29864] = "càn", n[38605] = "yōng", n[24822] = "huáng", n[25203] = "bān", n[26722] = "zhēn", n[38675] = "ní", n[36134] = "zhàng", n[26775] = "gěng", n[28821] = "kàng", n[35060] = "péi", n[38892] = "tāo", n[26454] = "zhàng", n[30201] = "bì", n[32548] = "bīn", n[27837] = "gū", n[29134] = "liáo liǎo", n[29022] = "shà shā", n[21024] = "shān", n[36761] = "zhé", n[29237] = "jué", n[32557] = "liáo", n[21128] = "pī pǐ", n[28904] = "yè", n[27084] = "chuí", n[23218] = "pì", n[20955] = "lǐn", n[33670] = "pú", n[39045] = "lú", n[38191] = "jù", n[33203] = "shàn", n[28558] = "péng", n[22366] = "wù", n[29923] = "bàn", n[23159] = "tíng", n[32110] = "xù", n[37196] = "zhuó", n[28065] = "wō guō", n[21761] = "yàn", n[31171] = "tū", n[31162] = "yù", n[33162] = "bó", n[26851] = "tì", n[33464] = "yún", n[24571] = "xīn", n[28861] = "chì", n[27048] = "zhà", n[31686] = "zhuàn", n[25e3] = "hān", n[25101] = "shù", n[22313] = "xū", n[29241] = "diē", n[36426] = "xī", n[39274] = "rèn", n[33018] = "àn", n[36145] = "jiàn", n[30571] = "jié", n[34631] = "yíng", n[24811] = "bèi", n[25287] = "mǔ", n[36168] = "zhèn", n[27902] = "jīng", n[30415] = "zhǎn", n[24359] = "hú", n[21119] = "jiǎo chāo", n[30802] = "xī", n[27603] = "yù", n[30355] = "hào", n[33743] = "hé", n[28792] = "jiǔ", n[28228] = "méi", n[28825] = "zhì", n[31072] = "cí", n[33659] = "dí", n[25421] = "hàn", n[22204] = "jiáo jué jiào", n[26406] = "méng", n[23673] = "yì", n[32010] = "wěn", n[34268] = "lí", n[39540] = "lǘ", n[23517] = "qǐn", n[20846] = "xī", n[38552] = "ài", n[31048] = "qí", n[27029] = "róng", n[33255] = "zàng", n[34633] = "chán", n[32482] = "juàn", n[30606] = "xiā", n[38389] = "mǐn", n[40140] = "áo";n[23077] = "é", n[34249] = "jiè", n[23045] = "yà", n[28925] = "fēng", n[26946] = "zhā", n[25682] = "bìng", n[20932] = "qī", n[20984] = "tū", n[29060] = "xī", n[23413] = "fū", n[21481] = "kòu", n[28174] = "dú", n[33011] = "gē gé", n[21281] = "kuāng", n[34957] = "páo", n[21330] = "zú cù", n[24608] = "dài", n[26707] = "huán", n[33725] = "mǎng", n[20521] = "qiàn", n[27896] = "lú", n[34261] = "ǒu", n[38504] = "yǔn", n[36759] = "zhǎn", n[39563] = "chěng", n[23789] = "qiào", n[20901] = "míng", n[39290] = "jiǎo", n[20130] = "kàng", n[22275] = "pǔ", n[39056] = "yí", n[25810] = "qín", n[38133] = "ǎn", n[40132] = "è", n[31783] = "huáng", n[24867] = "lèng", n[29852] = "huáng", n[38064] = "yù", n[25305] = "zhuō", n[30240] = "jí", n[38771] = "jìn", n[38589] = "jùn", n[32633] = "lí", n[23697] = "cén", n[38253] = "léi", n[27060] = "liú", n[24661] = "shù", n[27595] = "wú", n[22244] = "tún dùn", n[27712] = "tīng", n[32509] = "zhàn", n[31382] = "jiào", n[31607] = "kuài", n[25806] = "qíng", n[29503] = "yuán", n[35826] = "huì", n[30910] = "niǎn", n[22829] = "yāo", n[31568] = "kuāng", n[36995] = "suì", n[34281] = "fān", n[35820] = "wū", n[33433] = "fú", n[32986] = "pēi", n[21703] = "wā", n[22435] = "yuán", n[32999] = "lóng", n[24086] = "tiě tiē tiè ", n[27529] = "xùn", n[27609] = "bì", n[22737] = "hè", n[32496] = "chuò chāo", n[24971] = "biē", n[20133] = "hài", n[28037] = "niè", n[23617] = "pì", n[29854] = "pú", n[32558] = "shàn", n[20365] = "shì", n[20506] = "yǐ", n[31264] = "chóu", n[26874] = "guān", n[26865] = "léng lēng líng", n[33909] = "kuí", n[35811] = "yì", n[31528] = "bèn", n[27249] = "chú", n[23536] = "huán", n[37089] = "jùn", n[22434] = "gòu", n[24469] = "lài", n[30522] = "tiào", n[33008] = "yí", n[35846] = "zhūn", n[31397] = "kuī", n[38660] = "xiāo", n[26633] = "zhì", n[33336] = "gě", n[36454] = "bèng", n[22338] = "bǎn", n[30634] = "dèng", n[29682] = "hún", n[37321] = "yòu", n[36324] = "jiāo", n[25375] = "xié jiā", n[20356] = "zhí", n[32920] = "zhǒu", n[22066] = "cháo zhāo", n[20993] = "diāo", n[32526] = "duàn", n[22199] = "rǎng rāng", n[30162] = "yǎng", n[25947] = "liǎn", n[31067] = "qū", n[32453] = "shēn", n[23408] = "shú", n[30187] = "xián", n[38394] = "guī", n[26943] = "chūn", n[22134] = "gá", n[24653] = "huǎng", n[20278] = "líng", n[23782] = "luán", n[37221] = "sū", n[33830] = "yíng", n[33486] = "zhù", n[30315] = "diān", n[28074] = "fú", n[38194] = "qiè", n[34586] = "fēi", n[25294] = "līn", n[23913] = "sōng", n[26122] = "hào", n[23092] = "xián", n[28067] = "huàn", n[28889] = "lào luò", n[29835] = "zhāng", n[31491] = "dǔ", n[22234] = "qiú", n[31087] = "zhēn", n[31729] = "lí", n[35764] = "ōu", n[33335] = "xián", n[32429] = "yún", n[38148] = "chú", n[24005] = "diān", n[21350] = "guà", n[25721] = "mó", n[30520] = "móu", n[26564] = "bǐng", n[36382] = "jù", n[28937] = "yān", n[36740] = "zhé", n[35098] = "zhǔ", n[35088] = "hè", n[28227] = "pài", n[22809] = "sù", n[22549] = "duò huī", n[23700] = "chà", n[24806] = "diàn", n[30106] = "jiù", n[35853] = "dié", n[22869] = "yì", n[32666] = "líng", n[24103] = "zhēn", n[28552] = "chè", n[28654] = "pú", n[25422] = "shāo shào", n[28478] = "yàng", n[21564] = "hǒu", n[38192] = "měng", n[36276] = "pā", n[33769] = "pú", n[31800] = "bò bǒ", n[20163] = "dīng", n[28210] = "xuàn", n[26413] = "zhá", n[35865] = "ān", n[21653] = "gū", n[26728] = "jiǎng", n[21632] = "zuǐ", n[37108] = "chēn", n[21683] = "hāi ké", n[21596] = "wū", n[34527] = "jiāo", n[25319] = "nǐng níng nìng", n[33688] = "xīn", n[39535] = "xùn", n[24245] = "ān", n[24380] = "bì", n[36894] = "chěng", n[36460] = "dēng", n[23013] = "lǎo mǔ", n[25730] = "liào", n[38221] = "niè", n[26191] = "yàn", n[30113] = "yáng", n[29226] = "zhuǎ zhǎo", n[39589] = "jì", n[26974] = "léng", n[38067] = "qián", n[25035] = "mào", n[23504] = "mèi", n[28103] = "qí", n[29705] = "liú", n[26462] = "qǐ", n[33760] = "bō", n[38120] = "quán", n[32716] = "yì", n[38774] = "bǎ", n[20375] = "tǒng", n[29785] = "nǎo", n[39301] = "xiàn", n[19984] = "gài", n[30154] = "quán", n[23059] = "wěi", n[20360] = "chǐ", n[33491] = "líng", n[32838] = "líng", n[30591] = "ruì", n[20556] = "ruò", n[37340] = "fǔ", n[22124] = "shì", n[26342] = "xī", n[29166] = "xiè", n[21727] = "yo yō", n[29822] = "jǐn", n[30655] = "qú", n[29831] = "xuán", n[25326] = "jié", n[25004] = "jǐng", n[40522] = "què", n[21242] = "sháo", n[24999] = "chōng", n[21980] = "shì", n[21884] = "tí", n[27280] = "yán", n[26586] = "yòu", n[21617] = "guǎ", n[28173] = "zì", n[38220] = "juān", n[22915] = "pèi", n[28346] = "nì niào", n[40485] = "ōu", n[31893] = "pò", n[27825] = "tuó", n[27053] = "xiè", n[38533] = "yú", n[27617] = "zhān", n[31143] = "xǐ", n[30597] = "chǒu", n[40120] = "jīng", n[28102] = "xiáo", n[38442] = "bǎn", n[33537] = "zhuó", n[28218] = "miǎo", n[30629] = "piē", n[33564] = "qiàn", n[30239] = "wēn", n[31028] = "bó", n[20282] = "sì cì", n[35867] = "dì", n[38201] = "qiāo", n[34108] = "ǎi", n[34388] = "qián", n[33722] = "yīng", n[36856] = "bèng", n[30933] = "kē", n[36193] = "shàn", n[27889] = "yāng", n[26632] = "zhàn", n[29956] = "zhēn", n[38224] = "hào", n[25248] = "kōu", n[23305] = "xī", n[35839] = "wěi", n[29996] = "yǒng", n[32458] = "bàn", n[39285] = "ěr", n[35884] = "miù", n[26786] = "shāo sào", n[39053] = "yǐng", n[25578] = "jiū", n[29750] = "pá", n[35109] = "rù", n[20319] = "tóng", n[33125] = "xīng", n[36746] = "gǔn", n[28293] = "jiàn jiān", n[29749] = "pí", n[37167] = "shàn", n[25332] = "shuān", n[21891] = "nán", n[31513] = "shēng", n[37232] = "xiān", n[31921] = "liáng", n[21348] = "lǔ", n[33454] = "ruì", n[33179] = "táng", n[26003] = "lán", n[28540] = "tóng", n[40501] = "tuó", n[20389] = "jiǎo yáo", n[35767] = "nè", n[23167] = "xù", n[21510] = "yāo", n[32641] = "jī", n[21987] = "sì", n[34578] = "yán", n[26629] = "zhà shān shi cè", n[30105] = "gē yì", n[25335] = "kǎo", n[25139] = "chuō", n[38235] = "yōng", n[33463] = "zhǐ", n[38043] = "tài", n[34623] = "wān", n[38080] = "yóu", n[22831] = "hāng bèn", n[25694] = "luò", n[38604] = "cí", n[37219] = "hān", n[33660] = "tú", n[34638] = "xiē", n[38181] = "zhuī", n[22986] = "zǐ", n[29922] = "piáo", n[31040] = "sì", n[29626] = "xǐ", n[24347] = "chí", n[29367] = "guǎng", n[21734] = "ò", n[33592] = "róng", n[40063] = "yóu", n[32503] = "bēng běng bèng", n[33550] = "jīng", n[24779] = "wǎn", n[20120] = "gèn", n[29649] = "lóng", n[33683] = "méi", n[25474] = "diān", n[36837] = "jiǒng", n[40100] = "lǐ", n[27523] = "yāng", n[30249] = "da dá", n[21480] = "dāo tāo", n[34691] = "páng", n[22852] = "yān yǎn", n[33096] = "jīng", n[30111] = "nüè yào", n[27821] = "shù", n[38056] = "wū", n[26133] = "xīn", n[33210] = "yīng", n[28095] = "zhuō", n[31968] = "kāng", n[27696] = "qíng", n[25545] = "róu", n[29417] = "shòu", n[27264] = "tán", n[24717] = "hàn", n[32555] = "sāo", n[21742] = "xiào", n[34905] = "yá", n[29786] = "hú", n[28510] = "lù", n[35876] = "bàng", n[25600] = "chān", n[27953] = "ěr", n[28051] = "juān", n[34980] = "mào", n[30192] = "tán", n[20054] = "guāi", n[20887] = "rǒng", n[33419] = "yù", n[29997] = "béng", n[39608] = "hái", n[24140] = "huǎng", n[28078] = "shuàn", n[20456] = "yǎn", n[25942] = "áo", n[27099] = "kǎn", n[29380] = "dí", n[29266] = "dié", n[24698] = "kǎi", n[38649] = "báo", n[36174] = "shú", n[24246] = "shù", n[29096] = "yùn", n[34523] = "zhū", n[20336] = "bǎi", n[34022] = "mò", n[37169] = "pó", n[29053] = "shān", n[33100] = "yān ā", n[40687] = "àn", n[30116] = "bā", n[20500] = "juè jué", n[21068] = "là", n[26017] = "wò", n[35837] = "fěi", n[38197] = "qiāng", n[31601] = "xiǎo", n[22925] = "yán", n[25494] = "yè yē", n[38143] = "kēng", n[33040] = "qí", n[25413] = "tǒng", n[24328] = "yì", n[37048] = "dǐ", n[28255] = "huáng", n[30511] = "mī mí", n[36198] = "shè", n[25284] = "zhǔ", n[21866] = "pā", n[29614] = "wěi", n[36726] = "yì", n[34558] = "é yǐ", n[40587] = "mí", n[28843] = "xuàn", n[36170] = "shē", n[38772] = "xuē", n[31636] = "bó", n[33729] = "jīng", n[25772] = "qiào", n[35059] = "shang cháng", n[25100] = "xū", n[32552] = "yīng", n[34647] = "huáng", n[25735] = "piě piē", n[22874] = "xī", n[28699] = "yíng", n[22121] = "è", n[24623] = "qiè", n[34003] = "bèi", n[21269] = "bǐ", n[21658] = "dōng", n[30640] = "kàn", n[20332] = "lǎo", n[27870] = "nìng", n[25161] = "fēi", n[30347] = "háo", n[26238] = "liàng", n[40594] = "qí", n[22999] = "shàn", n[36314] = "shān", n[30208] = "yū", n[37145] = "bǐ", n[29461] = "mí", n[25325] = "shì", n[40095] = "xún", n[31095] = "dǎo", n[33071] = "fǔ", n[30778] = "lì", n[39551] = "yì", n[38491] = "bì", n[30209] = "cuì", n[25619] = "cuō", n[33333] = "duò", n[27742] = "gǒng", n[21756] = "hng", n[33003] = "jìng", n[29632] = "pò", n[37036] = "wū", n[30970] = "huáng", n[39311] = "liú liù", n[39309] = "mó", n[38114] = "zhū", n[35815] = "chà", n[28071] = "jiàn", n[21519] = "lì", n[33492] = "tái tāi", n[28538] = "chán", n[37043] = "pī", n[28919] = "wán", n[22271] = "yòu", n[26015] = "zhēn", n[28353] = "chú", n[27526] = "dài", n[37210] = "fēn", n[29409] = "jiǎo", n[23418] = "rú", n[24684] = "tián", n[27781] = "yuán", n[38124] = "gè", n[28237] = "tuān", n[21863] = "zé", n[22257] = "cōng", n[33983] = "hāo", n[40515] = "juān", n[26592] = "níng", n[28465] = "shù", n[32997] = "xū", n[22934] = "yāo", n[27929] = "zhū", n[29634] = "kē", n[33545] = "mò", n[36434] = "pán", n[22331] = "yín", n[39699] = "bìn", n[25602] = "lǒu lōu", n[33897] = "pā", n[20312] = "shé", n[28197] = "wò", n[35801] = "huī", n[34962] = "tǎn", n[25410] = "wǔ", n[30624] = "chēng", n[22931] = "jì", n[38096] = "kào", n[28583] = "lǐ", n[34946] = "mèi", n[39297] = "něi", n[27728] = "xī", n[21283] = "xiá", n[36877] = "xiāo", n[35866] = "yàn", n[31378] = "zhì", n[34065] = "miè", n[31983] = "nuò", n[27766] = "wèn", n[22777] = "yī", n[23702] = "qū", n[30420] = "kuī", n[22040] = "xū", n[36802] = "yū", n[22016] = "dí", n[38178] = "gù", n[35749] = "jī", n[21549] = "kēng háng", n[25256] = "pēng", n[23630] = "shǐ", n[29549] = "tǎ", n[35114] = "tuì tùn", n[21675] = "zhǐ", n[31287] = "jì", n[36838] = "jiā jia jie", n[27308] = "méng", n[22636] = "yuán", n[34850] = "chǔn", n[34015] = "jì", n[21646] = "jiù", n[30399] = "mǐn", n[39534] = "tuó", n[20432] = "lì", n[22349] = "tān", n[24813] = "cán", n[22427] = "duò duǒ", n[40557] = "lù", n[40510] = "luán", n[36468] = "cù", n[25769] = "liáo liāo", n[35808] = "quán", n[24665] = "yàng", n[33219] = "yōng", n[36968] = "áo", n[30572] = "cǎi", n[36364] = "chóu", n[27986] = "xǔ", n[25642] = "táng", n[37095] = "yún", n[31482] = "zhú", n[32737] = "fěi", n[23462] = "huàn", n[20925] = "liè", n[25001] = "qì", n[33841] = "xuān", n[25341] = "zhuài", n[21342] = "biàn", n[27103] = "bīng", n[36487] = "chú", n[34360] = "zhàn", n[32907] = "lèi lē", n[21595] = "qiàng qiāng", n[28641] = "rú", n[37230] = "tóng", n[30504] = "zhǎ", n[25774] = "cuō zuǒ", n[30712] = "gān", n[22456] = "yuàn", n[34496] = "zhù", n[40667] = "dài", n[28088] = "hé", n[33043] = "nóng", n[24473] = "xǐ", n[25783] = "xié", n[26355] = "yè", n[23781] = "zhēng", n[28186] = "zhǔ", n[38230] = "biāo", n[38068] = "gǔ", n[39562] = "lí", n[34949] = "niǎo", n[30928] = "pán", n[25507] = "chè", n[27788] = "dùn", n[22466] = "gěng", n[22079] = "hēi mò", n[29711] = "liǎn", n[26979] = "méi", n[35930] = "tún", n[35809] = "guǐ", n[24760] = "jì", n[40605] = "shè", n[29030] = "xù", n[30718] = "fán", n[32690] = "xī", n[21769] = "ài āi", n[28327] = "lì", n[21627] = "shēn", n[35203] = "tán", n[20822] = "yǎn", n[21553] = "zhī zī", n[24816] = "duò", n[32697] = "gēng", n[38045] = "dùn", n[26552] = "jǔ", n[23011] = "xiáo", n[39059] = "tuí", n[38115] = "xiǎn xǐ", n[26758] = "bāng", n[39559] = "hài", n[28101] = "xī", n[23394] = "bāo", n[21489] = "chì", n[35879] = "mì", n[27887] = "mǐn", n[35871] = "mó", n[24643] = "shì", n[34233] = "tái", n[31605] = "yán", n[37846] = "áo", n[26686] = "luán", n[40540] = "wù", n[21757] = "gěng", n[25516] = "jū", n[36760] = "lù", n[33559] = "míng", n[29935] = "ōu", n[32475] = "jiàng", n[31584] = "yún", n[38116] = "tǐng", n[34948] = "ǎo", n[27546] = "dān", n[26805] = "fàn", n[25358] = "kuà kū", n[36980] = "lín", n[27016] = "lǘ", n[34581] = "tuì", n[30307] = "xuǎn", n[22432] = "yín", n[21422] = "sī", n[24132] = "wò", n[20565] = "xié", n[28977] = "yàn", n[25893] = "zuàn", n[35048] = "pí", n[28822] = "dùn", n[26094] = "gā", n[26095] = "lá", n[34106] = "lìn", n[39585] = "luó", n[23081] = "miǎn", n[20267] = "zhù", n[29469] = "cù", n[31423] = "lóng", n[34383] = "lǔ", n[23625] = "tì", n[32540] = "zhěn", n[21650] = "zhòu", n[31567] = "fá", n[39612] = "gé", n[29840] = "lù", n[21059] = "tì", n[28053] = "tì", n[29463] = "yǐ", n[28156] = "miǎo", n[20396] = "nóng", n[38425] = "què", n[21957] = "xiù", n[40499] = "yuān", n[22024] = "cáo", n[38671] = "fēi", n[29673] = "héng", n[27822] = "jǔ jù", n[25466] = "nà", n[30844] = "péng", n[33603] = "quán", n[39543] = "sì", n[28457] = "xuán", n[22075] = "xī", n[30505] = "xuàn", n[25520] = "bāi", n[20285] = "qié", n[33037] = "kuài", n[23146] = "lán", n[29020] = "yù", n[40516] = "hú", n[22741] = "háo", n[23810] = "láo", n[32718] = "líng", n[30174] = "pǐ", n[20800] = "wù", n[23162] = "wù", n[40495] = "yāng", n[27001] = "yíng", n[21668] = "zhà", n[24476] = "cháng", n[23241] = "jí", n[31699] = "lǒu", n[28867] = "tīng", n[38082] = "bó", n[21674] = "mī", n[25488] = "qiā", n[21277] = "zā", n[26492] = "zhù", n[34115] = "fán", n[31629] = "gū", n[33636] = "hūn", n[30782] = "lì", n[22070] = "sī", n[30353] = "ái", n[23445] = "dàng", n[33642] = "sūn", n[21710] = "āi", n[27764] = "biàn", n[35970] = "diāo", n[37025] = "fāng", n[21872] = "luō luó luo", n[30637] = "liào liǎo", n[28134] = "gàn", n[34137] = "huì", n[24361] = "nǔ", n[22545] = "qiàn", n[24812] = "qiè", n[20547] = "yǎn", n[24457] = "yáng", n[31668] = "zhēn", n[36184] = "zhuì", n[21883] = "chì", n[20939] = "diāo", n[31353] = "qióng", n[37207] = "xù", n[24974] = "zēng", n[33445] = "jiè gài", n[21822] = "tuò", n[38379] = "yán", n[26196] = "yè", n[33502] = "bāo", n[26166] = "chǎng", n[29977] = "dài", n[31546] = "jiān", n[21533] = "lìn", n[34122] = "ruǐ", n[40157] = "shàn", n[34885] = "xìn", n[29481] = "xīng", n[34224] = "xūn", n[26161] = "yù", n[36286] = "zhǐ", n[28126] = "sōng", n[22387] = "ào", n[24581] = "chàng", n[32753] = "áo", n[27753] = "yù", n[29733] = "hǔ", n[23692] = "jí", n[38417] = "lán", n[31932] = "lín", n[32652] = "qiāng", n[38662] = "tíng", n[31713] = "cuàn", n[22654] = "shú", n[37193] = "yǒu", n[35057] = "biǎo", n[38893] = "jiǔ", n[21792] = "láo lào", n[24319] = "niàn", n[38384] = "rùn", n[25912] = "yōu", n[40669] = "yǒu", n[34532] = "há gé", n[21413] = "jué", n[33630] = "qiáo", n[29781] = "xiá", n[26584] = "zhè", n[31066] = "zuò", n[30133] = "cī", n[24853] = "è", n[34152] = "jué", n[29286] = "máo", n[39144] = "xiǎng", n[30137] = "zhěn", n[22007] = "áo", n[30294] = "pǐ", n[33450] = "qí", n[28437] = "cáo", n[38541] = "huáng", n[24488] = "huáng", n[36917] = "kuí";n[27872] = "líng", n[23896] = "róng", n[21985] = "wēng", n[23723] = "xiù", n[23735] = "mín", n[25822] = "sòu", n[38466] = "pō", n[39050] = "jiá", n[21652] = "kǎ", n[21359] = "mǎo", n[23158] = "shěn", n[26925] = "tuǒ", n[24792] = "wǎng", n[27481] = "xī", n[24186] = "yāo", n[33222] = "yì", n[21501] = "jī", n[32560] = "jiāng", n[30589] = "kuí", n[21200] = "měng", n[26244] = "xuān", n[24331] = "yì", n[30164] = "zhì", n[31213] = "zǐ", n[29042] = "bāo", n[29742] = "cóng", n[22047] = "dū", n[29322] = "dú", n[29590] = "jiǔ", n[24614] = "pēng", n[19989] = "pī", n[28340] = "xiù", n[32578] = "yīng", n[29934] = "wèng", n[19998] = "chéng", n[24814] = "dàn", n[30300] = "diàn", n[26214] = "huì", n[25899] = "jué", n[38256] = "lián", n[38255] = "zhuó", n[26590] = "zhà", n[33323] = "fǎng", n[38086] = "mǎo", n[36476] = "pǔ", n[22953] = "wǔ", n[29113] = "xī", n[38129] = "yī", n[35074] = "guà", n[20011] = "yā", n[31494] = "bā", n[22930] = "dù", n[22114] = "ō", n[22105] = "qín", n[29740] = "wǎn", n[20924] = "xiǎn", n[33600] = "xún", n[34814] = "chán", n[25462] = "chuí", n[21970] = "tà", n[30010] = "tǐng", n[23267] = "yān", n[32942] = "āng", n[30350] = "jiǎo", n[26070] = "yǐ", n[24675] = "zì", n[38042] = "bù", n[30757] = "dǐ", n[21545] = "fēn", n[33583] = "fú", n[39333] = "fù", n[38030] = "qiān", n[29989] = "shēng", n[21990] = "suō", n[34583] = "wō", n[27988] = "xún", n[35858] = "yè", n[36779] = "biàn", n[20147] = "bó", n[24439] = "páng", n[29647] = "jué", n[21679] = "luò", n[28118] = "zhuō", n[22922] = "rèn", n[20324] = "wǎ", n[29623] = "diàn", n[22073] = "liáo", n[23860] = "wēi", n[26044] = "yú", n[36757] = "yuán", n[36146] = "bì", n[25160] = "hù", n[20238] = "qí", n[26062] = "nǐ", n[23421] = "niè", n[32793] = "pá bà", n[23072] = "shēn", n[25098] = "wù", n[20898] = "zhǒng", n[36343] = "qiāo", n[30775] = "shēn", n[28952] = "dào", n[32660] = "gāo", n[22314] = "gē", n[32772] = "mào", n[38076] = "mù", n[24763] = "xìng", n[33637] = "yīng", n[21777] = "zuò", n[31262] = "kē", n[37021] = "kuàng", n[33669] = "lì", n[26487] = "pá", n[37275] = "quán", n[22013] = "sòu", n[21766] = "suō", n[25303] = "ào ǎo niù", n[30900] = "chá chā", n[39307] = "chán", n[33009] = "guāng", n[29736] = "kūn", n[33551] = "lóng", n[31964] = "mí méi", n[25062] = "nuò", n[39582] = "qiān", n[34584] = "zhī", n[22163] = "chā", n[24629] = "chù", n[25249] = "lūn lún", n[21794] = "suǒ", n[33094] = "tiǎn", n[28046] = "xián", n[28751] = "hào", n[33276] = "jiù", n[22674] = "shāng", n[26297] = "xiān", n[26941] = "chuán", n[29261] = "dú", n[38034] = "fán", n[29502] = "huá", n[27028] = "láng", n[25077] = "měng", n[26503] = "pí", n[27189] = "qiáo", n[38198] = "sī", n[31868] = "xiān", n[31659] = "xiāo", n[28458] = "yī", n[24090] = "zhǒu", n[38069] = "bō", n[36179] = "gēng", n[25467] = "niǎn niē", n[37061] = "zhì", n[20747] = "dàn", n[28908] = "jìn", n[38146] = "lǐ", n[21117] = "piāo", n[38161] = "tī", n[37154] = "yān", n[37150] = "yín", n[33278] = "yú", n[21939] = "zhā chā", n[32964] = "zhòu", n[32779] = "dié", n[38449] = "jǐng", n[31520] = "lì", n[29940] = "líng", n[21868] = "sè", n[26483] = "yǎo", n[33828] = "yíng", n[33696] = "yǒu", n[23938] = "zhàng", n[27996] = "bāng", n[20649] = "nuó", n[36946] = "qiú", n[36732] = "shì", n[30562] = "suī", n[20508] = "tì", n[30717] = "xī", n[20169] = "zhǎng", n[21804] = "hǔ xià", n[26060] = "jīng", n[37226] = "lào", n[33148] = "miǎn", n[32580] = "qìng", n[23319] = "shàn", n[30066] = "shē", n[31071] = "suì", n[26693] = "wéi", n[24756] = "cuì", n[35769] = "é", n[24980] = "qiáo", n[40843] = "qǔ", n[23882] = "shèng", n[32502] = "shòu", n[37013] = "yōng", n[24534] = "cǔn", n[31657] = "luó", n[21638] = "páo", n[26188] = "shǎng", n[24875] = "sù", n[29495] = "yóu", n[24091] = "bó", n[40638] = "huī", n[33682] = "jǔ", n[35281] = "qù", n[21550] = "shǔn", n[34763] = "xī", n[24229] = "xiū", n[25034] = "ào", n[38402] = "hé", n[33967] = "kuǎi", n[38433] = "qiān", n[33134] = "sāi", n[28536] = "shān", n[26207] = "shèng", n[34752] = "shuài", n[33216] = "tún", n[32596] = "wǎng", n[39553] = "xiāo", n[23869] = "zǎi", n[32457] = "zhòu", n[31933] = "zòng", n[24575] = "fèn", n[32923] = "gāng", n[34849] = "lǐ", n[36955] = "liù", n[34579] = "tíng", n[29002] = "xuān", n[34460] = "yá", n[22395] = "dǐ", n[28409] = "hū", n[37550] = "luán", n[24751] = "mǐn", n[40720] = "nài", n[25781] = "niǎn", n[22140] = "pī", n[24528] = "tǎn", n[28270] = "yīn", n[20367] = "zhū", n[31923] = "jīng", n[30669] = "jué", n[38084] = "shuò", n[22376] = "tuó", n[38089] = "xuàn", n[30402] = "yú", n[38167] = "zhě", n[38422] = "hé", n[28319] = "míng", n[20447] = "sì", n[24529] = "tè", n[36189] = "yàn", n[39683] = "zōng", n[25949] = "bì", n[23480] = "chén", n[21702] = "duō", n[38739] = "liàng", n[25577] = "kāi", n[30264] = "qué", n[40069] = "bà", n[31709] = "gōu", n[27686] = "hài", n[22158] = "háo", n[27971] = "jiā", n[32537] = "jìn", n[39130] = "biāo", n[38199] = "è", n[30328] = "guǐ", n[26601] = "jiù", n[34510] = "lì", n[28610] = "lián", n[27063] = "què", n[40104] = "shā", n[38049] = "bèi", n[30457] = "dǔn", n[40107] = "jì", n[35800] = "jié", n[35817] = "xǔ", n[36836] = "yǐ", n[26702] = "zhì", n[36929] = "dùn", n[23573] = "gǎ", n[26767] = "gù", n[26987] = "jí", n[36211] = "jiū", n[39122] = "sà", n[38147] = "zèng", n[38601] = "zhì", n[24582] = "chuàng", n[30204] = "gù", n[21182] = "hé", n[30178] = "lì", n[21949] = "lóu", n[38713] = "pī", n[26137] = "tán", n[30073] = "wǎn", n[33005] = "yān", n[20314] = "yì", n[29384] = "bèi", n[30250] = "biě biē", n[23033] = "chà", n[21536] = "fèi", n[38119] = "huá", n[35855] = "jiàn", n[38643] = "lì", n[21657] = "lóng", n[30054] = "qí", n[33632] = "qí", n[23057] = "suō", n[35126] = "zhě", n[24527] = "chàn", n[24794] = "hū", n[30153] = "jìng", n[27224] = "jú", n[28425] = "lù", n[35791] = "zhào", n[21591] = "bei", n[26177] = "cháo", n[24774] = "chóu", n[30720] = "dàng", n[39300] = "hún", n[25119] = "jǐ", n[23745] = "mǎo", n[26165] = "nì", n[25288] = "niān", n[34837] = "rú", n[34417] = "shī", n[27957] = "xún", n[40550] = "yīng", n[34553] = "yǒng", n[38107] = "dāng chēng", n[25371] = "luán", n[20495] = "shū", n[28557] = "zhù", n[28617] = "suī", n[38021] = "jīn", n[22108] = "lū", n[21659] = "níng", n[20467] = "pái", n[30956] = "qìng", n[34615] = "quán", n[38670] = "shà", n[32957] = "tài", n[30780] = "tóng", n[32895] = "yù", n[24596] = "zhēng", n[30765] = "biān", n[35852] = "shèn", n[31637] = "jī", n[36470] = "juě", n[23402] = "luán", n[34103] = "qiáng", n[31941] = "róu", n[25374] = "tà", n[39272] = "tún", n[24820] = "zhuì", n[31104] = "bǐng", n[28121] = "cóng", n[21714] = "dā", n[26551] = "jiā", n[26973] = "liàn", n[38398] = "lǘ", n[34619] = "qīng", n[21974] = "sōu", n[28140] = "cuì", n[22441] = "è", n[30684] = "qín", n[37079] = "xī", n[34468] = "zǎo", n[23270] = "cháng", n[21899] = "zhá", n[38217] = "lì", n[39279] = "jiàn", n[39627] = "kuān", n[28518] = "liáo lào lǎo", n[38210] = "lòu", n[31756] = "sù", n[20558] = "wēi", n[40521] = "wǔ", n[23705] = "ào", n[36401] = "duó", n[35779] = "hē", n[31809] = "lài", n[23443] = "mì", n[33176] = "biāo", n[39129] = "biāo", n[28062] = "lái", n[32774] = "shì", n[33615] = "rěn", n[28177] = "shéng", n[35916] = "wān", n[29744] = "yǎn", n[20430] = "zǔ", n[32460] = "chù", n[22509] = "dài", n[24161] = "fān", n[36165] = "gāi", n[38150] = "gào", n[23854] = "gù", n[30883] = "yà", n[29662] = "luò", n[33099] = "yè", n[28386] = "yíng", n[34006] = "bì", n[20233] = "kàng", n[39319] = "kuí", n[32873] = "kuì", n[24148] = "màn", n[38184] = "xiān", n[34021] = "yíng", n[40529] = "chún", n[30749] = "fǎ", n[37225] = "mǐng", n[26544] = "píng", n[38808] = "shāo", n[33483] = "xiàn", n[31889] = "bā", n[36461] = "cèng", n[20492] = "guān", n[29343] = "jiàng", n[20458] = "lì", n[23961] = "lín", n[30779] = "lóng", n[23883] = "méi", n[28354] = "pāng", n[33914] = "qì", n[33490] = "rǎn", n[26541] = "xiāo", n[32714] = "yì", n[23104] = "ē", n[39123] = "jù", n[38426] = "kàn", n[21919] = "kuì", n[20616] = "lì", n[34256] = "miǎo", n[34563] = "shèn", n[24578] = "sǒng", n[31267] = "sū", n[20149] = "xiè", n[35794] = "yí", n[34567] = "zhé", n[23708] = "bā", n[38657] = "jì", n[30604] = "kē", n[27791] = "qī", n[21317] = "sà", n[33280] = "yǎo", n[40524] = "ān", n[20472] = "fèng", n[23879] = "jī", n[34770] = "měng", n[27752] = "mì", n[30768] = "pēng", n[38819] = "róu", n[21775] = "xī", n[38473] = "xíng", n[20335] = "yáng", n[24703] = "yǒng", n[31485] = "yú", n[30260] = "zhàng", n[31049] = "zhǐ", n[28953] = "bèi", n[35787] = "dǐ", n[28640] = "háo", n[34690] = "láng", n[21499] = "lè", n[22405] = "lǒng", n[35881] = "mán", n[26384] = "xù", n[31252] = "rěn", n[33421] = "sháo", n[30643] = "tóng", n[24826] = "xīng", n[33848] = "yú", n[30405] = "zhōng", n[21828] = "zhuó", n[30472] = "dān", n[20603] = "lǚ", n[29247] = "pán", n[34784] = "pán", n[28820] = "quē", n[22445] = "yā", n[22094] = "yē", n[34544] = "zhé", n[25816] = "bò", n[38159] = "jiǎn", n[33581] = "jiāo", n[24716] = "tì", n[21908] = "wō", n[35857] = "xuè", n[23755] = "xún", n[22954] = "yù", n[24701] = "yùn", n[38891] = "yùn", n[35091] = "bǎo", n[38259] = "biāo", n[39293] = "bō", n[26440] = "chā chà", n[25115] = "jiá", n[40480] = "jiū", n[33803] = "qī", n[35137] = "qiǎng", n[27051] = "sǔn", n[38701] = "ǎi", n[33476] = "biàn", n[36346] = "duò", n[26482] = "gǎo", n[21992] = "hēi", n[29641] = "mín", n[21708] = "pài", n[23046] = "rǎo", n[23360] = "shuāng", n[24696] = "tòng", n[32516] = "jiān", n[22804] = "kuí", n[20311] = "tuó", n[39287] = "xiǎng", n[33527] = "gān", n[37084] = "gào", n[40766] = "hān", n[39052] = "hé", n[35335] = "hōng", n[35890] = "jué", n[28312] = "kè", n[21671] = "liē liě lié lie", n[35099] = "lǚ", n[36868] = "páng", n[39078] = "pín", n[27950] = "táo", n[36918] = "wēi", n[23265] = "dí", n[34873] = "dù", n[30867] = "duì", n[28905] = "huì", n[37300] = "lǐ", n[26638] = "yuè", n[37775] = "liú", n[29924] = "ráng", n[20258] = "yá", n[34091] = "niān", n[24639] = "yì", n[30014] = "zī", n[25672] = "bìn", n[30024] = "fàn", n[38243] = "liào", n[34728] = "mǎn", n[31203] = "mò", n[25620] = "sāo", n[30449] = "xū", n[30157] = "yí", n[25616] = "chù", n[36425] = "cuō", n[20291] = "diàn tián", n[32450] = "fú", n[30141] = "jū", n[39581] = "liú", n[38718] = "mái", n[24730] = "sǒng", n[32515] = "xiāng", n[25087] = "yì", n[21634] = "zā", n[22872] = "zhuǎng", n[36721] = "gū", n[37015] = "hán", n[34461] = "háo", n[30232] = "lòu", n[37274] = "mí", n[28238] = "miǎn", n[30609] = "míng", n[25518] = "qián", n[32671] = "qiǎng", n[20200] = "sā", n[30755] = "tuó", n[37090] = "yǐng", n[30759] = "zhēn", n[40159] = "zūn", n[36315] = "bǒ", n[36381] = "huái", n[36722] = "kē", n[31392] = "kē", n[37094] = "zhí", n[36361] = "liàng", n[36495] = "lìn", n[25134] = "lù", n[31742] = "miè", n[39568] = "qí", n[40141] = "qí", n[36418] = "róu", n[37103] = "tán", n[36302] = "tuó", n[20525] = "wō", n[35781] = "zǔ", n[37124] = "juàn", n[35124] = "lán", n[38406] = "làng", n[32520] = "miǎo", n[21999] = "ňg", n[22942] = "niū", n[27812] = "òu", n[36292] = "qiàng", n[31632] = "qìng", n[33493] = "tiáo", n[31381] = "yáo", n[26964] = "xiē", n[39284] = "yí", n[23748] = "yì", n[33140] = "yú", n[22276] = "yǔ", n[35861] = "yù", n[25549] = "zòu", n[36409] = "chuài", n[32609] = "gāng", n[20317] = "kòu", n[39060] = "hàn", n[35274] = "jì", n[31697] = "kuì", n[40098] = "lián", n[32166] = "qí", n[22974] = "qiè", n[38231] = "tāng", n[21845] = "táo", n[34476] = "xiǎn", n[31368] = "yǎo", n[25558] = "yī", n[30489] = "yí", n[34769] = "zhāng", n[35803] = "zhū", n[38039] = "chāi", n[32495] = "fēi", n[35747] = "fù", n[30590] = "gāo", n[23230] = "gòu", n[21996] = "hē", n[31068] = "hù", n[38242] = "jué", n[22265] = "líng", n[33500] = "mù", n[22381] = "ní", n[34512] = "qū", n[39663] = "rán", n[25633] = "sǎng", n[21471] = "sǒu", n[36427] = "tà", n[35278] = "yú", n[25457] = "ái", n[30857] = "diāo", n[21579] = "fū", n[32600] = "fú", n[33626] = "jiá", n[40555] = "jiù", n[23743] = "kuī", n[23534] = "liáo", n[25194] = "mén", n[28950] = "mèn", n[29406] = "níng", n[40133] = "qiū", n[21956] = "shà", n[21988] = "chī", n[25792] = "gǎn", n[30146] = "jiā", n[21983] = "jiē", n[39049] = "xié", n[34471] = "jiè", n[20742] = "jǐng", n[38196] = "kǎi", n[40859] = "kān", n[21969] = "kè", n[38175] = "kūn", n[20442] = "lǐ", n[26533] = "lì", n[25041] = "mèn", n[35755] = "qì", n[27207] = "qiāo", n[21994] = "qín", n[34412] = "qiú", n[36294] = "tái", n[39591] = "xiāng", n[38495] = "zhì", n[28766] = "bà", n[24699] = "cè", n[28052] = "cén", n[37200] = "gān", n[40490] = "gū", n[29295] = "gǔ", n[38044] = "jù", n[33816] = "nài", n[40118] = "nián", n[32549] = "piǎo", n[26332] = "yào", n[34451] = "yǐn", n[35812] = "zhèng", n[22485] = "chéng", n[22656] = "chí", n[40632] = "fū", n[34656] = "fú", n[34506] = "gǔ", n[36945] = "huáng", n[21417] = "jiù", n[36228] = "qiè", n[27796] = "miǎn", n[32806] = "ǒu", n[30129] = "pào", n[21261] = "pú", n[25599] = "qìn", n[34479] = "qiū", n[35754] = "shàn", n[21808] = "shuā", n[33300] = "tiǎn", n[21623] = "xiā", n[34047] = "xù", n[40551] = "zhè", n[33169] = "bìn", n[21005] = "chú", n[32823] = "dā", n[38801] = "dá", n[35014] = "dāng", n[36280] = "dǔn", n[23377] = "jié", n[40114] = "kūn", n[32491] = "líng", n[22493] = "niàn", n[22061] = "pēng", n[33314] = "shān", n[40482] = "yuān", n[34735] = "áo", n[21537] = "pǐ", n[34649] = "biān", n[30136] = "dǎn", n[21264] = "fú", n[26689] = "héng", n[38112] = "kǎi", n[32696] = "léi", n[40072] = "lú", n[22261] = "lún", n[21787] = "mài", n[20203] = "mù", n[24214] = "páo", n[21165] = "shào", n[37075] = "yùn", n[39580] = "áo", n[31922] = "càn", n[23762] = "tóng", n[33107] = "féi", n[40563] = "guàn", n[40156] = "jué", n[34486] = "hān", n[22251] = "hú", n[33588] = "huí", n[23780] = "qiáo", n[34758] = "mò má", n[34326] = "niè", n[30319] = "qú", n[32446] = "shū", n[20723] = "sù", n[30361] = "xī", n[38576] = "xí", n[32556] = "xié", n[39312] = "xiū", n[35882] = "zhé", n[25453] = "bǎi", n[27722] = "chà", n[30876] = "chěn", n[22605] = "chéng", n[33390] = "gèn", n[30545] = "jiǎn", n[29389] = "páo", n[33515] = "shān shàn", n[31718] = "bì", n[34573] = "chú", n[38153] = "cuò", n[27811] = "fēng", n[35824] = "gào", n[26199] = "hán", n[21913] = "huì", n[40578] = "jǐ", n[35591] = "jiǎn", n[36423] = "jiǎn", n[35280] = "jìn", n[21886] = "jiū", n[36413] = "jǔ", n[37e3] = "miǎo", n[22764] = "rén", n[29159] = "suì", n[23090] = "wā", n[29477] = "wěi", n[27462] = "xīn", n[38226] = "yì", n[33556] = "yíng", n[26141] = "zǎn", n[36205] = "zhě", n[29424] = "zhēng", n[23411] = "zī", n[21735] = "chī", n[33307] = "chuǎn", n[22100] = "dēng", n[40535] = "è", n[34467] = "gōng zhōng", n[36869] = "hòu", n[27961] = "huán", n[33137] = "jiàn";n[38162] = "láng", n[32432] = "pí", n[34502] = "qū", n[34148] = "ruí", n[23005] = "shū", n[37040] = "tái", n[32419] = "zhòu", n[22051] = "bēng", n[38073] = "bó", n[34921] = "chà", n[23157] = "chán", n[23409] = "chán", n[36479] = "cuān", n[40119] = "diāo", n[33852] = "è", n[26881] = "guǒ", n[28003] = "huàn", n[38227] = "jiā", n[36989] = "jù", n[36169] = "lài", n[36244] = "liè", n[34162] = "qí", n[21084] = "wān", n[36994] = "xiè", n[20193] = "yì", n[27684] = "yīn", n[29520] = "zhāng", n[24155] = "zhàng", n[20478] = "bǐ", n[38091] = "bì", n[21972] = "chēn", n[33548] = "chí", n[27681] = "dōng", n[35778] = "gǔ", n[35938] = "huàn", n[26727] = "huì", n[30079] = "jī", n[20517] = "kǒng", n[25419] = "lǚ", n[20190] = "rèn", n[24530] = "tuī", n[30083] = "tuǎn", n[28015] = "wú", n[34568] = "wú", n[27035] = "zhēn", n[20588] = "zǒng", n[31255] = "bài", n[33750] = "chāng", n[40115] = "chāng", n[21405] = "cuò", n[36398] = "diǎn", n[21500] = "diāo", n[30193] = "fèi", n[35977] = "mò", n[29585] = "jī", n[23125] = "jié", n[29722] = "jū", n[30132] = "kē", n[25523] = "lǔ", n[38052] = "qián", n[22439] = "shǎng", n[27701] = "shuǐ", n[40672] = "xiá", n[36345] = "xiān", n[24591] = "yàng", n[25540] = "yú", n[27698] = "yūn", n[38113] = "zhá", n[28655] = "zhuó", n[33470] = "fú", n[31496] = "jí", n[23814] = "kōng", n[38037] = "nǚ", n[33789] = "shū", n[38588] = "sǔn", n[20645] = "tǎng", n[20189] = "tóng", n[22231] = "wéi", n[33431] = "xiāng", n[22489] = "xūn", n[31786] = "zān", n[26279] = "ài", n[26697] = "ān", n[38237] = "dí", n[34474] = "dǒu", n[34569] = "fú", n[34241] = "gǎo", n[31539] = "jiā", n[33733] = "jiān", n[40835] = "jǔ", n[21945] = "kuí", n[27257] = "lǔ", n[25279] = "mǐn", n[21870] = "niè", n[36433] = "niè", n[36886] = "tì", n[21780] = "wù", n[27176] = "xī", n[24061] = "xùn", n[25590] = "yé", n[40671] = "yī", n[35390] = "zī", n[38051] = "bǎn", n[23919] = "cuó", n[20988] = "dàng", n[24683] = "dòng", n[25479] = "duō", n[21057] = "duò", n[29657] = "gǒng", n[27782] = "hàng", n[22129] = "xué", n[25542] = "kuí", n[32786] = "lěi", n[38092] = "ní", n[27845] = "qiú", n[30109] = "shàn", n[33907] = "wēi", n[38551] = "wěi", n[28383] = "yàn", n[40841] = "yǔ", n[38074] = "yuè", n[27538] = "yǔn", n[33953] = "bàng", n[35271] = "chān", n[40668] = "chù", n[28601] = "tán", n[37194] = "dǐng", n[22433] = "fá", n[22850] = "huàn", n[29640] = "jiā", n[28625] = "lài", n[39317] = "nǎng", n[39306] = "sōu", n[22159] = "tì", n[30207] = "wěi", n[23704] = "xiàn", n[27689] = "yà", n[33585] = "zhū", n[28371] = "zǐ", n[28975] = "zhuō", n[25275] = "chēn", n[35913] = "chǐ", n[25941] = "chì", n[25528] = "dǎn shàn", n[30898] = "dì", n[38747] = "diàn", n[25665] = "èn", n[28125] = "féi", n[40143] = "guān", n[30437] = "guàn", n[30344] = "guī", n[40081] = "xié", n[39074] = "hào", n[29316] = "jī", n[32742] = "jiǎn", n[38128] = "jiǎo", n[26896] = "jū", n[33007] = "kuà", n[23674] = "qǐ", n[37019] = "qióng", n[24249] = "tuǒ", n[29484] = "wèi", n[33994] = "wěng", n[39579] = "wù", n[28e3] = "xī", n[26720] = "yā", n[32996] = "yìn", n[40489] = "zhèn", n[30179] = "zhì", n[34541] = "zhì", n[22092] = "cēng", n[26485] = "chǔ", n[21852] = "chuò", n[38780] = "dá", n[21878] = "dìng", n[28997] = "duàn", n[26507] = "fāng", n[35301] = "gōng", n[27586] = "gǔ", n[21053] = "guì", n[34632] = "guō", n[34309] = "héng", n[33448] = "jī", n[25132] = "jiǎn", n[37294] = "jiào", n[30102] = "jiē", n[24574] = "xì", n[39607] = "kū", n[27916] = "liè", n[21604] = "líng", n[33638] = "luò", n[35294] = "shāng", n[35873] = "sù", n[28707] = "xiè", n[34659] = "yóu", n[31948] = "zān", n[20524] = "zhuō", n[30874] = "bèi", n[36441] = "cù", n[30168] = "dòu", n[30744] = "dùn", n[32448] = "gàn", n[34402] = "guó", n[34171] = "hòng", n[32915] = "huāng", n[34516] = "huí", n[21799] = "jī", n[26688] = "jié", n[34636] = "kē", n[20393] = "kuài", n[26818] = "líng", n[27183] = "qiáng", n[25352] = "qiè", n[36715] = "rèn", n[24051] = "sì", n[23847] = "sōng", n[34001] = "suō", n[34259] = "xiǎn", n[40149] = "xuě", n[29783] = "yuàn", n[24089] = "zhì", n[39316] = "zhuàn", n[35962] = "chái", n[30180] = "cuó", n[37063] = "xún", n[27539] = "liàn", n[39621] = "lóu", n[36723] = "lú", n[36911] = "lù", n[21995] = "niè", n[25109] = "qiāng", n[22149] = "rú", n[34547] = "sī", n[29706] = "yá", n[22052] = "yīng", n[30115] = "yóu", n[34481] = "zhà", n[38063] = "pá", n[38079] = "tián", n[30855] = "dìng", n[21667] = "guāng", n[27645] = "jiàn", n[36851] = "jìng", n[21937] = "lí", n[36902] = "lǐ", n[24298] = "lǐn", n[37017] = "máng", n[22241] = "nān", n[21263] = "páo", n[25190] = "qiān", n[20155] = "rén", n[21661] = "sī", n[20935] = "sōng", n[32424] = "wán", n[28064] = "wéi", n[24224] = "xiáng", n[28294] = "xù", n[37306] = "xūn", n[28800] = "yáng", n[28874] = "yàng", n[32900] = "yì", n[40840] = "yín", n[35840] = "yú", n[38193] = "zī", n[30242] = "bān", n[26526] = "zōng", n[30388] = "cūn", n[36144] = "èr", n[26231] = "guǐ", n[38387] = "hóng", n[26011] = "hú", n[23632] = "jī", n[35750] = "jié", n[23143] = "jìng", n[33507] = "qǔ", n[34107] = "kòu", n[32506] = "liǔ", n[28172] = "lù", n[29761] = "mào", n[34719] = "míng", n[21493] = "pǒ", n[39040] = "qí", n[31313] = "sè", n[33211] = "shān", n[32679] = "suō", n[34739] = "táng", n[32486] = "tāo", n[35466] = "téng", n[34597] = "xī", n[26982] = "xuàn", n[24642] = "xún", n[38757] = "yè", n[21695] = "yī", n[32755] = "yì", n[29906] = "zàn", n[26547] = "zhǐ", n[21869] = "zhuàn", n[27197] = "zūn", n[23250] = "ài", n[23114] = "biǎo", n[25661] = "chá", n[38098] = "ěr", n[36311] = "fū", n[20971] = "fú", n[33761] = "hàn", n[31681] = "huáng", n[39675] = "jì", n[35070] = "jū", n[26674] = "kǎo", n[30302] = "lài", n[34044] = "lù", n[27670] = "nǎi", n[23404] = "nāo", n[21903] = "rě", n[30738] = "pī", n[23e3] = "pīn", n[34941] = "rèn", n[32539] = "rù", n[23916] = "wéi", n[25401] = "yì", n[32546] = "yì", n[24949] = "yōng", n[21606] = "yōu", n[31672] = "zhù", n[36457] = "bié", n[27086] = "chá", n[27015] = "chèn", n[33282] = "chōng", n[22002] = "diǎ", n[33012] = "dòng", n[35860] = "è", n[23714] = "kě", n[22329] = "kuàng", n[23052] = "lǐ", n[28491] = "liàn", n[34505] = "líng", n[37187] = "líng", n[40117] = "ní", n[40071] = "nián", n[23049] = "pīng", n[20115] = "qí", n[30875] = "qì", n[33418] = "qiān", n[24554] = "zhōng", n[35847] = "suì", n[31524] = "tiáo", n[38890] = "wěi", n[21232] = "xié", n[21587] = "yì", n[20451] = "yǔ", n[22300] = "yuán", n[24864] = "yùn", n[20164] = "zè", n[28855] = "zhù", n[27606] = "bì", n[31578] = "bì", n[20263] = "chen", n[26864] = "chuí", n[30964] = "dèng", n[28367] = "fǔ", n[31705] = "gāo", n[32945] = "gōng", n[31509] = "jiǎn", n[22535] = "jǐn", n[39313] = "jǐn", n[33641] = "jìn", n[27032] = "jǔ", n[21712] = "kuāng", n[20608] = "kuǐ guī", n[23811] = "lái", n[32625] = "lǎn", n[30184] = "láo", n[20769] = "lěi", n[40514] = "lí", n[27305] = "lǐn", n[22452] = "nǎo", n[20213] = "wǔ", n[27268] = "xí", n[33422] = "xiōng", n[38409] = "yān", n[21e3] = "yì", n[22725] = "yōng", n[39296] = "yú", n[24254] = "yǔ", n[22959] = "zhóu", n[36485] = "zhú", n[29522] = "áo", n[38410] = "chāng", n[31518] = "chī", n[39276] = "chì", n[38031] = "chuàn", n[30800] = "dòng", n[26932] = "duàn", n[27860] = "gān", n[30796] = "luò", n[40536] = "hú", n[40135] = "huáng", n[35911] = "jiāng", n[29401] = "jū", n[25121] = "kān", n[33704] = "liáng", n[21833] = "lín", n[36743] = "niǎn", n[33260] = "niè", n[27527] = "shāng", n[33296] = "shì", n[40653] = "shǔ", n[34222] = "sǒu", n[30509] = "suī", n[20347] = "tiāo", n[22005] = "tōng", n[29032] = "wēi", n[33716] = "wō", n[34484] = "yòu", n[22948] = "yú", n[30224] = "yǔ", n[25826] = "zhuó", n[34511] = "chēng", n[36464] = "chú", n[40842] = "chuò", n[36751] = "còu", n[32464] = "dài", n[27672] = "dāo", n[39606] = "dǐ", n[33706] = "é", n[29648] = "fà", n[32543] = "gǎo", n[32850] = "guō", n[35751] = "hòng", n[23724] = "jiǎ", n[32987] = "jiǎ", n[26743] = "jué", n[35888] = "lán", n[25150] = "lì", n[25784] = "lū", n[40492] = "lú", n[38610] = "luò", n[22055] = "mì", n[22228] = "nāng", n[38093] = "pí", n[39560] = "pián", n[25482] = "pǒu", n[33557] = "qióng", n[22139] = "sāi", n[38127] = "sè", n[26561] = "tuó", n[33353] = "wěi", n[40844] = "wò", n[30806] = "xiá", n[32581] = "xià", n[39751] = "yǎn", n[37245] = "yàn", n[21670] = "yí", n[23991] = "yí", n[32703] = "yì", n[36728] = "zhěn", n[36277] = "bō", n[33656] = "bí", n[34204] = "bì", n[36383] = "chí", n[29619] = "dài", n[21846] = "dàn", n[34104] = "dōu", n[27073] = "gǎo", n[40091] = "jiāo", n[30117] = "jiè", n[30764] = "lì", n[21811] = "lì", n[24365] = "mǐ", n[26345] = "nǎng", n[40655] = "nián", n[38218] = "niè", n[27886] = "pàn", n[38664] = "pèi", n[28128] = "pì", n[26578] = "qī", n[39079] = "quán", n[30233] = "sào", n[30183] = "shā", n[36747] = "wǎng", n[37060] = "xì", n[29177] = "xiǎn", n[27883] = "xuàn", n[37118] = "yǎn", n[40542] = "yào", n[38023] = "yǐ", n[27562] = "yì", n[30152] = "yōng", n[29969] = "zèng", n[36399] = "zhí", n[32741] = "zhù", n[23138] = "bì", n[27287] = "bò", n[26621] = "chēng", n[21840] = "qi", n[33770] = "dàng", n[23965] = "dèng", n[33133] = "è", n[21981] = "gé", n[21072] = "guǎ", n[31503] = "hù", n[34789] = "huáng", n[25122] = "jí", n[38404] = "jiū", n[22104] = "juē", n[25733] = "jué", n[23611] = "kāo", n[36150] = "kuàng", n[36762] = "lín", n[34594] = "měng", n[39070] = "niè", n[24568] = "niǔ", n[33020] = "pián", n[38421] = "què", n[31462] = "sǒng", n[28944] = "wù", n[25568] = "yà", n[37050] = "yè", n[40153] = "yōng", n[21825] = "zhōu", n[31289] = "zhěn", n[24501] = "zhǐ", n[35788] = "zhōu", n[38585] = "zhuī", n[33320] = "bǎn", n[21716] = "bì", n[21343] = "bǔ", n[20261] = "chāng", n[33484] = "cháng", n[40538] = "cí", n[31658] = "dān", n[32525] = "duǒ", n[38151] = "é", n[34670] = "fù", n[35807] = "gòu", n[27908] = "huí", n[27981] = "kuài", n[35816] = "hùn", n[29325] = "qián", n[30839] = "jiǎn", n[22116] = "jìn", n[22450] = "kǎi", n[37072] = "kuài", n[26916] = "luó", n[23275] = "mó", n[20274] = "nì", n[33074] = "niào", n[27533] = "piǎo", n[22103] = "pū", n[28337] = "zhēn", n[31660] = "ruò", n[21389] = "shè", n[38077] = "tǎn", n[38029] = "tǔ", n[24697] = "yān", n[39739] = "yù", n[29232] = "yuán", n[30758] = "zhài", n[33985] = "zhēn", n[32989] = "zhī", n[39067] = "zhuān", n[35097] = "bèi", n[40138] = "biān", n[37044] = "bǐng", n[38102] = "chéng", n[38251] = "dèng", n[33114] = "dìng", n[38061] = "dǒu", n[39066] = "è", n[40066] = "fáng", n[24753] = "fěi", n[29394] = "fèi", n[20342] = "jí", n[20552] = "jié", n[22528] = "kū", n[32468] = "kù", n[37290] = "láo", n[22364] = "lì", n[30112] = "lì", n[26891] = "liáng", n[29368] = "mǎ", n[26269] = "míng", n[20318] = "nìng", n[21725] = "nóng", n[30623] = "piǎo", n[33640] = "xún", n[33449] = "qín", n[36897] = "qūn", n[28349] = "rù", n[35039] = "shā", n[25394] = "shā", n[25247] = "tuán", n[26302] = "tūn", n[23846] = "yān", n[33451] = "yuán", n[33617] = "yí", n[34191] = "yì", n[33720] = "yóu", n[27428] = "yú", n[26624] = "zhī", n[26027] = "zhuó", n[38238] = "zú", n[22003] = "ài", n[40488] = "bǎo", n[36344] = "bì", n[39584] = "piào", n[20454] = "chóu", n[35872] = "dǎng", n[31775] = "diàn", n[26876] = "fén", n[39544] = "fù", n[25532] = "guàn", n[20520] = "jù", n[27227] = "jué", n[29330] = "kào", n[37003] = "lā", n[32807] = "lóu", n[34684] = "lóu", n[34427] = "méng", n[38105] = "náo", n[37099] = "pí", n[27732] = "qì", n[35822] = "qiào", n[27e3] = "qiū", n[38418] = "qù", n[32507] = "quǎn", n[21441] = "sān", n[33226] = "sào sāo", n[38032] = "shàn", n[33127] = "shù", n[38377] = "shuān", n[33752] = "sōng", n[38423] = "tián", n[24541] = "tiǎn", n[27216] = "tuó", n[32725] = "xī", n[38411] = "xì", n[36357] = "xué", n[31400] = "yìn", n[40556] = "yù", n[40715] = "yuán", n[27198] = "yuè", n[37694] = "zàn", n[21522] = "zhà", n[26051] = "zhān", n[24321] = "biàn", n[20394] = "chái", n[22396] = "chè", n[34473] = "chī", n[22060] = "zuō", n[31949] = "cí", n[39586] = "cōng", n[27664] = "dǐ", n[21571] = "è", n[27047] = "fěi", n[29602] = "fēn", n[32459] = "fú", n[34472] = "fú", n[38022] = "gá", n[23715] = "gǒu", n[33776] = "gū", n[32607] = "gǔ", n[22031] = "gǔ", n[22490] = "guō", n[32471] = "háng", n[22191] = "huò", n[34303] = "huò", n[31492] = "jī", n[34952] = "jiā", n[32687] = "jié", n[32956] = "jǐng", n[26252] = "kuí", n[21879] = "lāng", n[33943] = "làng", n[34570] = "lì", n[29536] = "liáo", n[39715] = "liè", n[29107] = "màn", n[40702] = "mǐn", n[20060] = "niè", n[38214] = "mò", n[24617] = "ní", n[39549] = "nú", n[26054] = "pèi", n[39618] = "qià", n[20191] = "qiān", n[33441] = "qiàn", n[35887] = "qiáo", n[24641] = "nín", n[40131] = "xǐ", n[33348] = "shāo", n[33715] = "shì", n[33359] = "shǒu", n[36287] = "tā", n[36962] = "tà", n[40080] = "tái", n[37261] = "tǐ", n[20718] = "zhuàng", n[27709] = "tǔn", n[21006] = "wěn", n[33460] = "wù", n[21905] = "yīn", n[22665] = "yōng", n[26112] = "yún", n[31654] = "zé", n[37155] = "zhāng", n[25722] = "zhé", n[38066] = "zhèng", n[36157] = "zhì", n[32565] = "zuǎn", n[37834] = "ào", n[38171] = "bēn", n[29951] = "bù", n[24283] = "chán", n[30259] = "chōu", n[20109] = "chù", n[36932] = "chuán", n[35105] = "dā", n[22412] = "tóng", n[26911] = "dú", n[37190] = "fēng", n[30761] = "fú", n[26740] = "fú", n[36185] = "fù", n[22377] = "gān", n[33228] = "gǔ", n[26359] = "hé", n[36349] = "jì", n[28267] = "qiū", n[27017] = "jǔ", n[40679] = "lí", n[29441] = "lì", n[38028] = "liào", n[38223] = "liú", n[32550] = "màn", n[27521] = "mò", n[36199] = "nǎn", n[22500] = "pì", n[24749] = "qiān", n[32561] = "qiǎn", n[34942] = "qīn", n[40109] = "qīng", n[38121] = "shā", n[29470] = "shē", n[30490] = "shěng", n[38088] = "shì", n[35877] = "shì", n[32796] = "sì", n[39125] = "sōu", n[39253] = "tāo", n[39214] = "tiè", n[39600] = "tóu", n[20039] = "zhé", n[32510] = "wǎn", n[40519] = "xián", n[40094] = "xiǎng", n[29243] = "yáo", n[34612] = "yì", n[38257] = "yì", n[38111] = "yīn", n[33692] = "yóu", n[31063] = "zhī", n[28638] = "pì", n[38228] = "bīn", n[36875] = "bū", n[35844] = "chǎn", n[35894] = "chèn", n[37234] = "chéng", n[33594] = "chōng", n[27159] = "chū", n[25015] = "chù", n[33724] = "chún", n[25786] = "cuān", n[26594] = "dǐ", n[38415] = "è", n[30748] = "fēng", n[22419] = "gāi", n[26096] = "hàn", n[22955] = "guī", n[34926] = "gǔn", n[21989] = "háo", n[37071] = "jiá", n[38831] = "jiān", n[24508] = "jiào", n[23379] = "jué", n[38058] = "kàng", n[20361] = "kuǎ", n[22844] = "kuǎng", n[36332] = "kuǐ", n[38140] = "lái", n[23256] = "léi", n[34762] = "máo", n[33542] = "máo", n[30568] = "nì", n[24580] = "òu", n[36417] = "pián", n[35869] = "piǎn", n[22028] = "piāo", n[32174] = "qìng", n[23281] = "qiáng";n[31559] = "qióng", n[29360] = "qiú", n[31344] = "ráng", n[38135] = "rú", n[31602] = "shāo", n[21698] = "shěn", n[28859] = "shí", n[35925] = "shǐ", n[31211] = "shú", n[31525] = "sì", n[28049] = "sù", n[38090] = "tuó", n[24079] = "wéi", n[38385] = "wéi", n[37576] = "wù", n[33342] = "xī", n[23651] = "xǐ", n[29390] = "xiá", n[21715] = "xiāo", n[22123] = "yī", n[29838] = "yīng", n[38101] = "yǒu", n[23461] = "yòu", n[38408] = "yù", n[35960] = "zhì", n[36750] = "zī", n[36241] = "zī", n[40839] = "zī", n[25420] = "bā", n[31189] = "bǐ", n[33628] = "bì", n[24846] = "bì", n[31366] = "biǎn", n[38258] = "chǎ", n[35863] = "chán", n[36372] = "chuō", n[33473] = "cōng", n[37218] = "zuò", n[21588] = "dāi", n[32835] = "dān", n[38246] = "duī", n[23641] = "ē", n[40113] = "fēi", n[39730] = "lì", n[33160] = "gé", n[38122] = "kē", n[37264] = "hú", n[29566] = "huān", n[40105] = "huàn", n[34426] = "huǐ", n[33901] = "jiā", n[29294] = "jiàn", n[30995] = "jiāng", n[33524] = "jū", n[35765] = "jù", n[39055] = "kē", n[35017] = "kèn", n[35827] = "kuáng", n[26636] = "lú", n[27655] = "lǔ", n[38233] = "luó", n[21726] = "mōu", n[26608] = "nài", n[34978] = "pàn", n[24084] = "pèi", n[30565] = "pì", n[33508] = "piě", n[23252] = "pín", n[31544] = "pǒ", n[27654] = "pǔ", n[20325] = "qiān", n[31655] = "qiè", n[36331] = "qióng", n[34443] = "ruì", n[40101] = "shí", n[25164] = "shǒu", n[29426] = "sūn", n[26731] = "suō", n[28303] = "táng", n[38141] = "tè", n[27524] = "tiǎn", n[33048] = "wǎn", n[27943] = "wěi", n[32927] = "wò", n[32481] = "xiāo", n[21691] = "xiū", n[27947] = "xù", n[30292] = "yì", n[27911] = "yīn", n[23899] = "yú", n[30932] = "zhé", n[32983] = "zhēn", n[32939] = "zhūn", n[36160] = "zī", n[30502] = "zì", n[21526] = "yā", n[29815] = "ài", n[22511] = "ǎn", n[30042] = "běn", n[22947] = "bǐ", n[39121] = "biāo", n[35955] = "bīn", n[39628] = "bìn", n[30743] = "chē", n[38131] = "chòng", n[26990] = "chǔ", n[34079] = "cù", n[27635] = "cuì", n[38173] = "dé", n[22558] = "dié", n[30100] = "dīng", n[33873] = "fēng", n[32566] = "fǒu", n[33748] = "fú", n[30131] = "gān", n[24384] = "gòu", n[32973] = "guā", n[30937] = "gǔn", n[39032] = "hān", n[34181] = "hāo", n[32750] = "hé", n[29474] = "hú", n[24601] = "hù", n[33978] = "jí", n[24273] = "qín", n[22935] = "jìn", n[39617] = "kē", n[37260] = "kūn", n[31901] = "lì", n[39753] = "liǎng", n[26066] = "liú", n[34661] = "máo", n[32535] = "mín", n[34930] = "nà", n[21624] = "pēi", n[37253] = "pēi", n[33432] = "pí", n[34445] = "pí", n[22318] = "pǐ", n[27008] = "pǐn", n[33793] = "qí", n[33496] = "qǐng", n[36881] = "qiú", n[35790] = "qū", n[21164] = "qú", n[34134] = "qú", n[26378] = "ruǎn", n[21089] = "yǎn", n[34798] = "shàn", n[26937] = "zhēn", n[39267] = "shí", n[37214] = "tài", n[24081] = "tǎng", n[33910] = "tíng", n[33759] = "tù", n[39757] = "wǎng", n[24209] = "wǔ", n[33912] = "xǐ", n[27673] = "xiān", n[35862] = "xuān", n[38789] = "yàng", n[29434] = "yín", n[22820] = "yín", n[23348] = "yíng", n[30271] = "yǐng", n[39252] = "yōng", n[38633] = "yú", n[40518] = "yù", n[27260] = "yuán", n[36188] = "zé", n[28532] = "zhū", n[39571] = "zhuī", n[32513] = "zī", n[35833] = "zōu", n[24589] = "zhà", n[26451] = "sháo", n[33401] = "ǎo", n[27307] = "chá", n[23224] = "chī", n[27674] = "chuān", n[21618] = "zī", n[27522] = "cú", n[30700] = "cuó", n[31530] = "dá", n[36840] = "dài", n[32411] = "dào", n[31782] = "dēng", n[29582] = "dīng", n[33482] = "è", n[36717] = "è", n[21274] = "fāng", n[40738] = "fén", n[21586] = "fǔ", n[32529] = "gōu", n[35798] = "guà", n[28805] = "jiǒng", n[40103] = "gǔn", n[21823] = "hū", n[25149] = "hù", n[39711] = "huán", n[24666] = "huì", n[34999] = "qiā", n[30229] = "xiá", n[26535] = "jiǎn", n[27930] = "jiàng", n[26709] = "jiù", n[38606] = "jū", n[34866] = "juān", n[21056] = "kǎi", n[35795] = "kuāng", n[30220] = "là", n[38247] = "lán", n[38097] = "lǎo", n[40147] = "lè", n[34016] = "lí", n[21590] = "lì", n[36318] = "luò", n[35042] = "lián", n[35043] = "liǎn", n[22482] = "liè", n[25449] = "liè", n[40110] = "líng", n[29080] = "liū", n[23901] = "lǒu", n[30256] = "luǒ", n[38232] = "màn", n[33042] = "mǐ", n[33129] = "nǎn", n[31586] = "pá", n[32810] = "pǎng", n[36756] = "pèi", n[29277] = "pìn", n[22017] = "qī", n[34548] = "qí", n[25111] = "qiàng", n[34537] = "qióng", n[24047] = "qiú", n[24747] = "què", n[33882] = "shèn", n[29109] = "shāng", n[32497] = "shàng", n[34552] = "xiāo", n[34731] = "zhē", n[27641] = "shū", n[22913] = "shuò", n[32415] = "sī", n[22014] = "sǒu", n[40142] = "tǎ", n[32488] = "tì", n[31900] = "tiào", n[33728] = "yùn", n[27817] = "wéi", n[40751] = "wú", n[29310] = "wǔ", n[34693] = "xī", n[39036] = "xū", n[27894] = "xué", n[34120] = "xùn", n[40761] = "yǎn", n[32327] = "zhòu", n[33505] = "yǐ", n[24722] = "yì", n[24308] = "yìn", n[21554] = "yǐn", n[21889] = "yóng", n[21347] = "yǒu", n[29270] = "yǒu", n[31534] = "zuó", n[33332] = "zé", n[32638] = "zēng", n[26873] = "zhuō", n[40503] = "zhì", n[30881] = "zhóu", n[38165] = "ā", n[21964] = "yì", n[23210] = "ǎo", n[40837] = "bāo", n[29967] = "bèng", n[31621] = "bì", n[20647] = "bīn", n[21877] = "bo", n[40513] = "bó", n[26209] = "bū", n[27653] = "chǎng", n[39761] = "chī", n[31722] = "chí", n[24603] = "dá", n[31860] = "dí", n[30981] = "dūn", n[33981] = "ēn", n[29669] = "ěr", n[38059] = "fāng", n[32480] = "gěng", n[35290] = "gū", n[40505] = "guā", n[28075] = "guān", n[39043] = "háng", n[31692] = "hóu", n[38186] = "huò", n[34838] = "huò", n[20073] = "jī", n[21677] = "xī", n[36173] = "jī", n[23924] = "jǐ", n[38103] = "jiá", n[28244] = "jiān", n[27135] = "jǐn", n[36166] = "jìn", n[20710] = "jiù", n[30386] = "jūn", n[20327] = "kǎ", n[31644] = "kōng", n[33929] = "kuì", n[32551] = "léi", n[37241] = "lèi", n[22046] = "lei", n[30124] = "lì", n[33217] = "lián", n[33190] = "lìn", n[27895] = "shuāng", n[33932] = "lóu", n[27898] = "pō", n[33644] = "mǎi", n[39071] = "mān", n[26052] = "mào", n[27862] = "mǎo", n[38213] = "méi", n[34835] = "měng", n[20886] = "mì", n[24130] = "mì", n[32817] = "mò", n[35195] = "pàn", n[40729] = "pí", n[25909] = "pū", n[28829] = "qiàng", n[24832] = "qiǎo", n[34343] = "qú", n[27661] = "qú", n[29357] = "quǎn", n[31155] = "ráng", n[26721] = "ráo", n[31937] = "shēn", n[39315] = "sǎn", n[37246] = "shī", n[27082] = "shuò", n[29435] = "suān", n[38188] = "tán", n[32688] = "tāng", n[40727] = "táo", n[40520] = "tí", n[30027] = "tián", n[39659] = "tiáo", n[33820] = "tiē", n[22541] = "tù", n[29882] = "wèn", n[24579] = "wǔ", n[23844] = "xiáo", n[22239] = "xìn", n[30554] = "yá", n[30166] = "yǎ", n[33784] = "yān", n[39181] = "yàn", n[24493] = "yáo", n[30231] = "yì", n[21815] = "yō", n[22281] = "yǔ", n[34606] = "yù", n[30751] = "zhǎ", n[35893] = "zhān", n[28598] = "chán", n[26389] = "zhèn", n[25709] = "zhí", n[36725] = "zhǐ", n[35836] = "zhuó", n[31531] = "zǐ", n[24274] = "áo", n[32881] = "áo", n[24243] = "bēi", n[39616] = "bì", n[31550] = "biān", n[40832] = "chèn", n[35022] = "chěng", n[38624] = "chóu", n[34685] = "chūn", n[33120] = "còu", n[22962] = "dá", n[20994] = "dāo", n[38117] = "diū", n[40681] = "dú", n[24636] = "duì", n[27826] = "tuó", n[34345] = "fán", n[36282] = "fū", n[33531] = "fú", n[25290] = "fǔ", n[38429] = "fǔ", n[40075] = "fù", n[25094] = "zhuàng", n[32421] = "hé", n[21711] = "hěn", n[40096] = "gěng", n[31537] = "gǒu", n[30653] = "gǔ", n[24203] = "guǐ", n[31755] = "guǐ", n[21055] = "guì", n[25524] = "guó", n[29459] = "guō", n[34485] = "kē", n[27122] = "hú", n[35315] = "hú", n[33809] = "huán", n[30272] = "huáng", n[34794] = "huì", n[38060] = "huǒ", n[34414] = "jǐ", n[25486] = "jǐ", n[40099] = "jiān", n[22237] = "nān", n[35045] = "jiǎn", n[36410] = "jiàn", n[33587] = "jiāng", n[31976] = "jiàng", n[40554] = "jiāo", n[29431] = "juàn", n[40583] = "qún", n[33444] = "kōu", n[21043] = "kū", n[24870] = "kuì", n[39649] = "kūn", n[24707] = "kǔn", n[32545] = "lí", n[40097] = "lí", n[40162] = "lǐ", n[22849] = "lián", n[22682] = "liáng", n[23589] = "liào", n[26563] = "líng", n[33002] = "lú", n[38245] = "lǔ", n[33044] = "luán", n[26473] = "mà", n[21154] = "mài", n[22657] = "màn", n[29599] = "wén", n[34683] = "nǎn", n[21622] = "náo", n[25638] = "nuò", n[28243] = "pén", n[32628] = "pí", n[34609] = "pí", n[20444] = "pīng", n[40070] = "píng", n[30372] = "pó", n[38248] = "pǔ", n[27117] = "sè", n[38250] = "qiǎng", n[40674] = "qū", n[27955] = "rù", n[26520] = "ruì", n[33439] = "shān", n[22479] = "yán", n[28182] = "shěn", n[31598] = "shì", n[27571] = "shū", n[39143] = "sūn", n[28347] = "tā", n[39271] = "xíng", n[27160] = "táng", n[37283] = "táng", n[37217] = "tuó", n[22316] = "wū", n[31902] = "xī", n[35275] = "xí", n[33718] = "xiān", n[38704] = "xiàn", n[27021] = "xiè", n[34212] = "xiè", n[39673] = "xiū", n[26331] = "xūn", n[30091] = "yǎ", n[36819] = "yà", n[34916] = "yī", n[27449] = "qī", n[20350] = "yì", n[22520] = "yì", n[38698] = "yín", n[33562] = "yìn", n[40748] = "yòu", n[20251] = "yǔ", n[30261] = "zhài", n[39587] = "chǎn", n[30043] = "zhěn", n[21358] = "zhī", n[36734] = "zhì", n[24408] = "zhì", n[35311] = "zhì", n[38202] = "zhōng", n[37054] = "zhū", n[27104] = "zhū", n[35864] = "zī", n[23915] = "zī", n[39661] = "zī", n[34142] = "zuì", n[29364] = "hān", n[38836] = "bèi", n[30016] = "bì", n[28375] = "bì", n[29048] = "biān", n[35082] = "biǎn", n[20907] = "bīng", n[23387] = "bèi", n[32700] = "chàn", n[32790] = "chào", n[35115] = "chǐ", n[24435] = "chì", n[33375] = "chōng", n[36790] = "chuò", n[33544] = "zǐ", n[29825] = "cōng", n[29224] = "cuàn", n[27057] = "cuī", n[33807] = "dàn", n[22379] = "diàn", n[40491] = "dōng", n[31740] = "dōu", n[31766] = "duàn", n[35056] = "duō", n[21722] = "duǒ", n[36463] = "fán", n[28725] = "fèn", n[24619] = "fú", n[38484] = "gāi", n[31611] = "gàng", n[24318] = "gǒng", n[34500] = "gū", n[32498] = "gǔn", n[23838] = "guō", n[34622] = "guǒ", n[30413] = "hé", n[33645] = "hóng", n[40649] = "hóng", n[31943] = "hóu", n[39610] = "hóu", n[24460] = "hòu", n[40078] = "hòu", n[29043] = "hú", n[40533] = "hú", n[20913] = "hù", n[29920] = "hù", n[36909] = "huàn", n[28470] = "huàn", n[32800] = "huō", n[38252] = "huò", n[40785] = "jī", n[27547] = "jí", n[40090] = "jì", n[36303] = "jiā", n[34545] = "jiá", n[25627] = "jiān", n[32547] = "jiān", n[40547] = "jiān", n[20716] = "jiāo", n[22093] = "jiào", n[34943] = "jīn", n[32514] = "kè", n[21950] = "kù", n[29423] = "kuài", n[32425] = "kuàng", n[26653] = "tiǎn", n[34526] = "kuò", n[31234] = "láng", n[22596] = "léng", n[23264] = "lí", n[35400] = "lì", n[34826] = "lián", n[40553] = "liáo", n[36496] = "liè", n[40552] = "liù", n[31759] = "lù", n[33154] = "lǚ", n[33078] = "luó", n[23351] = "mó", n[26164] = "mǎo", n[30592] = "mào", n[28028] = "měi", n[33384] = "méng", n[31074] = "mí", n[32315] = "mí", n[34364] = "mí", n[33416] = "mǐ", n[31992] = "sī", n[23424] = "mián", n[30468] = "miǎn", n[40523] = "miáo", n[26474] = "miǎo", n[21673] = "miē", n[24845] = "mǐn", n[40637] = "mó", n[30268] = "mò", n[37738] = "móu", n[30791] = "náo", n[29489] = "náo", n[33553] = "niǎo", n[33068] = "pāo", n[34779] = "péng", n[35988] = "pí", n[20211] = "pǐ", n[29327] = "piān", n[38027] = "pō", n[33425] = "qǐ", n[33884] = "qiā", n[24838] = "qiān", n[38163] = "qǐn", n[34876] = "qú", n[31564] = "quán", n[39688] = "quán", n[34490] = "rán", n[33627] = "ráo", n[22525] = "sào", n[28530] = "shào", n[35804] = "shēn", n[22488] = "shí", n[24337] = "shì", n[21965] = "suō", n[33972] = "shuò", n[40502] = "sī", n[32524] = "sī", n[28556] = "sī", n[22994] = "sì", n[34060] = "sù", n[30531] = "suō", n[32519] = "tí", n[26755] = "tìng", n[24406] = "tuàn", n[40717] = "tuó", n[33412] = "wán", n[38536] = "wēi", n[40084] = "wěi", n[30826] = "wò", n[24548] = "wǔ", n[30182] = "wù", n[27447] = "xī", n[20694] = "xī", n[37295] = "xī", n[40759] = "xī", n[36323] = "xiǎn", n[26549] = "xiāo", n[24516] = "xīn", n[25828] = "xǐng", n[21206] = "xù", n[30147] = "xuán", n[30905] = "xuàn", n[35891] = "yàn", n[36730] = "yáo", n[38104] = "yé", n[22319] = "yí", n[32417] = "yū", n[31404] = "yú", n[31411] = "yǔ", n[39275] = "yù", n[34019] = "yù", n[28729] = "yuè", n[36273] = "zǎn", n[39541] = "zǎng", n[32559] = "zèng", n[25592] = "zhā", n[31498] = "zhào", n[32119] = "zhí", n[36310] = "zhí", n[33327] = "zhōng", n[34749] = "zhōng", n[31808] = "zhòu", n[33331] = "zhú", n[31906] = "zī", n[39546] = "zōu", n[38508] = "zōu", n[38460] = "zuò", n[25566] = "ǎn", n[33757] = "bá", n[39747] = "bá", n[30285] = "bān", n[40526] = "bēi", n[22348] = "bèn", n[29428] = "bì", n[33798] = "bì", n[23318] = "bì", n[35166] = "bì", n[30885] = "biǎn", n[39647] = "biāo", n[40148] = "biào", n[37293] = "bú", n[34732] = "cáo", n[39303] = "chā", n[34431] = "chài", n[30245] = "chài", n[24797] = "chǎng", n[24586] = "chāo", n[40497] = "chī", n[34733] = "chī", n[30235] = "chì", n[24113] = "dào", n[24450] = "cú", n[27718] = "cuān", n[33054] = "cuǒ", n[30213] = "dàn", n[24521] = "dāo", n[32669] = "dī", n[30535] = "dì", n[29918] = "dié", n[40125] = "dié", n[23741] = "dōng", n[33e3] = "dòng", n[33423] = "dù", n[20340] = "nài", n[29140] = "fán", n[20606] = "fèn", n[31235] = "fū", n[37083] = "fú", n[33705] = "piǎo", n[24158] = "fú", n[28553] = "gǎn", n[27092] = "gāo", n[35004] = "gē", n[25663] = "gé", n[33563] = "gèn", n[38834] = "gōu", n[35279] = "gòu", n[37220] = "gū", n[29311] = "gù", n[40116] = "gù", n[23428] = "guǐ", n[21286] = "guǐ", n[21593] = "wǒ", n[39320] = "guó", n[28947] = "hán", n[30218] = "hóu", n[34381] = "hū", n[23733] = "hù", n[40561] = "hù", n[21684] = "huī", n[38579] = "huī", n[32523] = "huì", n[28343] = "hùn", n[22821] = "huǒ", n[21086] = "jī", n[27918] = "jì", n[24669] = "jiá", n[33977] = "jiān", n[35883] = "jiǎn", n[20717] = "jiàn", n[33405] = "qiú", n[25378] = "jiǎo", n[25963] = "jiǎo", n[21370] = "jǐn", n[20866] = "jiōng", n[25155] = "jiōng", n[38164] = "jū", n[31405] = "jù", n[38185] = "juǎn", n[35286] = "jué", n[21122] = "jué", n[27690] = "kè", n[39570] = "kè", n[21721] = "kuài", n[24733] = "lǐ", n[34672] = "kuí", n[35796] = "lěi", n[33480] = "lì", n[31717] = "lì", n[23048] = "luán", n[30645] = "lín", n[38157] = "liǔ", n[26634] = "lóng", n[30275] = "lóng", n[33339] = "lú", n[36738] = "lù", n[31238] = "lǚ", n[29473] = "luó", n[34513] = "móu", n[29965] = "méng", n[33355] = "měng", n[25929] = "mǐ", n[30471] = "miǎo", n[34843] = "miè", n[20372] = "móu", n[38222] = "ná", n[32941] = "nà", n[33407] = "nǎi", n[34546] = "náo", n[30098] = "nè", n[38503] = "niè", n[34884] = "nǜ", n[38168] = "nuò", n[22539] = "péng", n[24192] = "pǐ", n[25815] = "pǐ", n[29971] = "pì", n[34741] = "piāo", n[38071] = "pǒ";n[25908] = "pū", n[26724] = "qī", n[35120] = "qiān", n[20981] = "qiǎn", n[32951] = "qiǎn", n[38166] = "qiāng", n[38802] = "qiáo", n[21539] = "qìn", n[40677] = "qíng", n[20421] = "qiú", n[34660] = "qiú", n[29865] = "qú", n[24731] = "quān", n[36737] = "quán", n[32924] = "róng", n[39073] = "sǎng", n[35842] = "shěn", n[31035] = "shì", n[25669] = "shū", n[27740] = "sì", n[28338] = "sōu", n[21961] = "sù", n[33661] = "suī", n[38396] = "tà", n[39552] = "tái", n[28849] = "tái", n[34711] = "táng", n[32805] = "tǎng", n[35068] = "xī", n[38123] = "yáo", n[33691] = "tíng", n[20128] = "tóu", n[31656] = "tuò", n[34169] = "wèng", n[36821] = "wǔ", n[26444] = "wù", n[23524] = "wù", n[31352] = "xī", n[39273] = "xì", n[33284] = "xì", n[31114] = "xì", n[29443] = "xiǎn", n[32449] = "xiè", n[28203] = "xiè", n[24296] = "xiè", n[29548] = "xiè", n[30798] = "xíng", n[33607] = "xìng", n[40506] = "xiū", n[35973] = "xiū", n[31944] = "xǔ", n[25550] = "xuān", n[38239] = "xuàn", n[29551] = "xūn", n[35744] = "yán", n[21411] = "yǎn", n[32616] = "yǎn", n[34520] = "yáng", n[40144] = "yáo", n[23870] = "yǎo", n[33315] = "yǐ", n[23221] = "yìng", n[23586] = "yóu", n[34480] = "yóu", n[20369] = "yòu", n[29427] = "yú", n[34696] = "yuán", n[40864] = "yuè", n[26115] = "zè", n[30148] = "zhà", n[25612] = "zhǎn", n[27976] = "zhēn", n[22516] = "zhí", n[22786] = "zhōng", n[40697] = "zhǐ", n[37198] = "zhòu", n[27237] = "zhū", n[20022] = "zhǔ", n[32530] = "zhuì", n[31360] = "zhūn", n[33785] = "zū", n[38207] = "āi", n[30777] = "ài", n[33543] = "bá", n[21241] = "bāo", n[37046] = "bèi", n[37950] = "bèi", n[33325] = "bǐ", n[24557] = "biàn", n[32527] = "pián", n[28780] = "huǒ", n[30253] = "biāo", n[36387] = "bó", n[38072] = "bū", n[31012] = "cǎ", n[39574] = "cān", n[40682] = "cǎn", n[33370] = "cáo", n[38200] = "chā", n[29497] = "chá", n[38241] = "xín", n[36500] = "chán", n[33927] = "chǎn", n[20865] = "chǎn", n[39727] = "chàng", n[23662] = "chè", n[26536] = "chéng", n[30517] = "chī", n[20666] = "chì", n[25611] = "chuāi", n[24027] = "chuān", n[33313] = "chuán", n[26993] = "zòu", n[38249] = "cuān", n[40574] = "cuó", n[25125] = "děng", n[35276] = "dí", n[38461] = "diàn", n[38110] = "diào", n[22436] = "dié", n[25586] = "yè", n[36416] = "dié", n[32821] = "dīng", n[39633] = "dú", n[24989] = "duì", n[40504] = "ér", n[40085] = "ér", n[31706] = "fěi", n[38212] = "fèi", n[40124] = "fèn", n[21802] = "fěng", n[31059] = "fú", n[33396] = "fú", n[40699] = "fú", n[40700] = "fǔ", n[40134] = "fù", n[23580] = "gá", n[25124] = "gài", n[22629] = "gé", n[21759] = "jiā", n[34428] = "gè", n[36952] = "gòu", n[26692] = "guàng", n[20008] = "gǔn", n[33010] = "hǎi", n[37282] = "hǎi", n[25750] = "hàn", n[22150] = "hāo", n[34216] = "hōng", n[22560] = "hòu", n[28864] = "hū", n[36727] = "hū", n[38206] = "huán", n[32563] = "huán", n[25808] = "huàn", n[21717] = "yuě", n[38413] = "hūn", n[21136] = "huō", n[25865] = "huō", n[19980] = "qí", n[22716] = "jī", n[34170] = "jí", n[24400] = "xuě", n[33456] = "jì", n[21724] = "zhāi", n[25099] = "jiān", n[36284] = "jiǎn", n[26967] = "jiàn", n[32809] = "jiǎng", n[21896] = "jiē", n[21353] = "jié", n[40082] = "jié", n[39601] = "jiè", n[21037] = "jǐng", n[24362] = "jìng", n[29517] = "jìng", n[39695] = "jiū", n[38827] = "jū", n[29323] = "jù", n[23654] = "jù", n[37301] = "jù", n[26698] = "juàn", n[29213] = "jué", n[25411] = "jùn", n[33001] = "kǎ", n[38158] = "kāi", n[33928] = "kǎi", n[33712] = "kǎn", n[38390] = "kàng", n[38070] = "kē", n[38174] = "kè", n[30477] = "kōu", n[31576] = "kòu", n[38403] = "kǔn", n[28452] = "lǎn", n[38137] = "láo", n[26675] = "lǎo", n[32802] = "lào", n[20162] = "lè", n[27856] = "lè", n[27281] = "léi", n[36729] = "lì", n[34105] = "liǎn", n[25044] = "lǐn", n[22406] = "lú", n[38154] = "lüè", n[20526] = "luǒ", n[34819] = "luǒ", n[38804] = "mèn", n[30829] = "máng", n[28461] = "mǎng", n[29496] = "méi", n[40539] = "méi", n[38036] = "mén", n[30626] = "měng", n[31006] = "méng", n[21941] = "miāo", n[33504] = "mín", n[40152] = "mǐn", n[35978] = "mò", n[35992] = "mò", n[27626] = "mú", n[22390] = "mù", n[25902] = "nǎng", n[29450] = "ní", n[23346] = "niǎo", n[32896] = "yù", n[32845] = "níng", n[29999] = "nìng", n[29379] = "niǔ", n[32808] = "nòu", n[23397] = "nú", n[33004] = "nǔ", n[24679] = "nǜ", n[33934] = "pài", n[38187] = "péi", n[38516] = "pī", n[27669] = "piē", n[20031] = "piě", n[35026] = "póu", n[38244] = "pú", n[34590] = "qí", n[23693] = "qiān", n[25652] = "qiān", n[31645] = "qián", n[24906] = "qiè", n[26912] = "qiàn", n[34595] = "qiāng", n[30807] = "qiāo", n[21121] = "qiāo", n[32562] = "sāo", n[27278] = "qín", n[34707] = "qín", n[22282] = "qīng", n[27296] = "qíng", n[35622] = "qǐng", n[37518] = "qióng", n[36167] = "qiú", n[40765] = "qiú", n[31959] = "qiǔ", n[40628] = "qū", n[40498] = "qú", n[30962] = "qú", n[30030] = "quǎn", n[29416] = "róng", n[34686] = "róng", n[34231] = "rú", n[35174] = "rú", n[39077] = "rú", n[34e3] = "rù", n[33038] = "sà", n[27637] = "sān", n[30921] = "sǎng", n[40139] = "sāo", n[21820] = "shà", n[27459] = "shà", n[24417] = "xiǎn", n[39583] = "shàn", n[28384] = "shè", n[30695] = "shěn", n[32962] = "shèn", n[33997] = "shī", n[40122] = "shī", n[36147] = "shì", n[25632] = "shuò", n[21430] = "sī", n[20821] = "sì", n[38204] = "sōu", n[34699] = "sōu", n[30605] = "sǒu", n[35307] = "sù", n[36181] = "dǎn", n[38132] = "tàng", n[29805] = "táng", n[24925] = "tè", n[25517] = "tiàn", n[31079] = "tiāo", n[40838] = "tiáo", n[34601] = "tiáo", n[40102] = "tiáo", n[33596] = "tóng", n[37236] = "tú", n[29050] = "tuì", n[26589] = "tuò", n[33149] = "wà", n[36558] = "wèi", n[38412] = "wén", n[38434] = "wù", n[35830] = "xī", n[33765] = "xī", n[34032] = "xǐ", n[26585] = "xiá", n[31046] = "xiān", n[31557] = "xiǎn", n[33881] = "xiāng", n[34771] = "xiàng", n[39752] = "xiāo", n[36510] = "xiè", n[30729] = "xū", n[37265] = "xǔ", n[20743] = "xuān", n[23688] = "yá", n[30737] = "yà", n[29671] = "yáo", n[37199] = "yǐ", n[21139] = "yì", n[22553] = "yīn", n[25732] = "yīng", n[28486] = "yíng", n[33281] = "yú", n[34643] = "yú", n[29152] = "yù", n[30498] = "yuān", n[31650] = "yuān", n[25534] = "yuàn", n[21014] = "yuè", n[29377] = "yǔn", n[25334] = "zǎn", n[21795] = "zào", n[36846] = "zé", n[24123] = "zé", n[35886] = "zèn", n[21747] = "zhā", n[40772] = "zhā", n[33194] = "chuài", n[23260] = "zhāng", n[24558] = "zhì", n[39576] = "zhì", n[33187] = "zhì", n[36396] = "zhì", n[33646] = "zhòu", n[30211] = "zhú", n[40584] = "zhǔ", n[30128] = "zhù", n[20012] = "pán", n[27998] = "zhuó", n[31130] = "zhuó", n[35292] = "zuǐ", n[32788] = "zǐ", n[33113] = "zōng", n[37177] = "zōu", n[40112] = "zōu", n[36508] = "zuān", n[25753] = "zǔn", n[32985] = "zuò", n[37650] = "ā", n[23085] = "xī", n[28350] = "āi", n[37552] = "āi", n[22127] = "ài", n[35568] = "xǐ", n[37764] = "āi", n[21824] = "ái", n[23102] = "è", n[20946] = "ái", n[38545] = "qí", n[23910] = "kǎi", n[28336] = "ái", n[22026] = "ái", n[25969] = "zhú", n[25971] = "ái", n[30362] = "ái", n[30929] = "wèi", n[27600] = "ǎi", n[26169] = "ǎi", n[27448] = "èi", n[32096] = "gǎi", n[36535] = "ǎi", n[28653] = "kè", n[34297] = "ǎi", n[35690] = "ǎi", n[38724] = "ǎi", n[20236] = "ài", n[27436] = "kài", n[30795] = "ài", n[22568] = "yè", n[28965] = "wò", n[22631] = "ài", n[24859] = "ài", n[21446] = "ài", n[20734] = "ài", n[22738] = "ài", n[23329] = "ài", n[25043] = "ài", n[34182] = "ài", n[40241] = "ài", n[25053] = "yì", n[26326] = "ài", n[29862] = "ài", n[36089] = "ài", n[39218] = "ài", n[30375] = "ài", n[30649] = "ài", n[39332] = "ài", n[31001] = "ài", n[35706] = "ài", n[37952] = "ài", n[40043] = "ài", n[38729] = "ài", n[20370] = "ān", n[23766] = "ān", n[20579] = "ān", n[33780] = "ān", n[21885] = "án", n[23189] = "ān", n[33851] = "ān", n[33866] = "ān", n[30199] = "yè", n[33124] = "ān", n[35066] = "yǎn", n[34029] = "ān", n[35485] = "ān", n[38796] = "ān", n[30438] = "ān", n[35571] = "ān", n[39331] = "ān", n[39839] = "ān", n[30443] = "ān", n[40298] = "ān", n[38909] = "ān", n[40341] = "ān", n[29621] = "gān", n[38648] = "án", n[20753] = "àn", n[22453] = "ǎn", n[21813] = "ǎn", n[26235] = "yǎn", n[32623] = "ǎn", n[37544] = "ǎn", n[21384] = "hàn", n[23669] = "àn", n[23677] = "hàn", n[21689] = "è", n[27933] = "yàn", n[33612] = "àn", n[35963] = "àn", n[22547] = "àn", n[38540] = "àn", n[35979] = "àn", n[37644] = "àn", n[38343] = "àn", n[39599] = "āng", n[21356] = "yǎng", n[23687] = "áng", n[26171] = "áng", n[26506] = "àng", n[37280] = "àng", n[27857] = "yòu", n[26602] = "ào", n[30481] = "yǎo", n[26766] = "yòu", n[36586] = "ào", n[29085] = "lù", n[29194] = "āo", n[21419] = "áo", n[38558] = "áo", n[22008] = "áo", n[23941] = "ào", n[24928] = "ào", n[28406] = "áo", n[29523] = "áo", n[34076] = "áo", n[25710] = "qiáo", n[29832] = "áo", n[30941] = "qiāo", n[22717] = "qiāo", n[32758] = "áo", n[35639] = "áo", n[35640] = "áo", n[32762] = "áo", n[37845] = "lù", n[39986] = "áo", n[40404] = "áo", n[40711] = "áo", n[25245] = "niù", n[33466] = "ǎo", n[37097] = "xiáo", n[38266] = "ǎo", n[23228] = "ǎo", n[35158] = "ǎo", n[25207] = "bā", n[22407] = "ào", n[23728] = "ào", n[22881] = "ào", n[22887] = "yù", n[23279] = "ào", n[28570] = "yù", n[38569] = "yù", n[22714] = "ào", n[23988] = "ào", n[25817] = "ào", n[39489] = "ào", n[32631] = "pí", n[20023] = "bā", n[20168] = "bā", n[26419] = "bā", n[29584] = "bā", n[22847] = "bā", n[23751] = "kè", n[26605] = "pèi", n[21745] = "pò", n[21749] = "bā", n[32659] = "bā", n[34438] = "bā", n[37343] = "bā", n[35933] = "bā", n[40067] = "bà", n[39774] = "bà", n[21456] = "bá", n[29358] = "quǎn", n[25244] = "bá", n[22957] = "bá", n[28838] = "bá", n[30329] = "bá", n[32968] = "bá", n[35417] = "bá", n[36599] = "bá", n[39088] = "fú", n[40741] = "bá", n[37376] = "bǎ", n[24349] = "bà", n[30341] = "pā", n[22459] = "bà", n[36289] = "páo", n[40076] = "bó", n[39809] = "bà", n[39818] = "bó", n[35207] = "bà", n[30706] = "bà", n[22761] = "bà", n[27419] = "bà", n[25344] = "bāi", n[26658] = "bǎi", n[29944] = "wǎ", n[31457] = "bǎi", n[31912] = "bǎi", n[32084] = "mò", n[25850] = "bǎi", n[35180] = "bǎi", n[24205] = "tīng", n[25309] = "bài", n[21764] = "bei", n[25943] = "bài", n[29448] = "pí", n[31930] = "bài", n[34221] = "bài", n[36097] = "bài", n[38875] = "bài", n[25917] = "bān", n[26380] = "fén", n[32934] = "bān", n[26002] = "bān", n[38930] = "bān", n[25643] = "pó", n[40187] = "fén", n[34700] = "bān", n[35113] = "bān", n[36780] = "bān", n[23685] = "bǎn", n[26116] = "bǎn", n[29930] = "bǎn", n[31876] = "bǎn", n[37393] = "bǎn", n[34626] = "bǎn", n[39788] = "bǎn", n[38342] = "pàn", n[22370] = "pǎn", n[22981] = "bàn", n[24593] = "bàn", n[26568] = "pán", n[31194] = "bàn", n[28276] = "pán", n[32070] = "bàn", n[36312] = "pán", n[37473] = "bàn", n[38781] = "bàn", n[36774] = "bàn", n[22457] = "bāng", n[25440] = "bāng", n[37035] = "bāng", n[24135] = "bāng", n[24154] = "bāng", n[32269] = "bàng", n[24171] = "bāng", n[38820] = "bāng", n[32129] = "bǎng", n[29267] = "bǎng", n[39624] = "bǎng", n[29604] = "bàng", n[25399] = "péng", n[34436] = "fāng", n[26835] = "pǒu", n[30821] = "mǎng", n[22621] = "bàng", n[25618] = "péng", n[31254] = "bàng", n[34518] = "máng", n[34607] = "bàng", n[33365] = "bàng", n[35607] = "bàng", n[37770] = "bàng", n[20328] = "bāo", n[26553] = "fú", n[21085] = "bō", n[31523] = "bāo", n[35046] = "bāo", n[34132] = "bāo", n[35139] = "bāo", n[38337] = "bāo", n[40793] = "bāo", n[31367] = "báo", n[24585] = "bào", n[23474] = "shí", n[29668] = "bǎo", n[22562] = "bǎo", n[23212] = "bǎo", n[23514] = "bǎo", n[39161] = "bǎo", n[39165] = "bǎo", n[39362] = "bǎo", n[40181] = "bǎo", n[32229] = "bǎo", n[40199] = "bǎo", n[36082] = "bǎo", n[34293] = "bǎo", n[23539] = "bǎo", n[23542] = "bǎo", n[38732] = "bǎo", n[21245] = "bào", n[29363] = "zhuó", n[38087] = "páo", n[33762] = "bào", n[34475] = "bào", n[34956] = "pào", n[22577] = "bào", n[37451] = "páo", n[39602] = "bào", n[39665] = "bào", n[34403] = "bào", n[39825] = "bào", n[20772] = "bào", n[26323] = "bào", n[22167] = "pào", n[29350] = "bào", n[24513] = "bào", n[37988] = "bào", n[26616] = "pēi", n[30403] = "bēi", n[26734] = "bēi", n[25593] = "bēi", n[26897] = "bēi", n[31620] = "pái", n[35520] = "pǐ", n[38814] = "pí", n[34275] = "bēi", n[40303] = "bēi", n[37491] = "běi", n[35997] = "bèi", n[26113] = "bèi", n[26478] = "fèi", n[29292] = "bèi", n[33501] = "bèi", n[37093] = "bèi", n[20475] = "bèi", n[29437] = "bèi", n[20573] = "bèi", n[20601] = "bèi", n[26774] = "bèi", n[29692] = "bèi", n[37121] = "bèi", n[20633] = "bèi", n[20675] = "bèi", n[26833] = "pèi", n[29746] = "bèi", n[36592] = "bèi", n[24834] = "bèi", n[31129] = "bèi", n[34557] = "bèi", n[29333] = "bèi", n[35478] = "bó", n[38785] = "bèi", n[39603] = "mó", n[36649] = "bèi", n[37575] = "bèi", n[24970] = "bèi", n[31954] = "bèi", n[27853] = "bèn", n[26655] = "bīng", n[21935] = "pèn", n[29319] = "bēn", n[36033] = "bì", n[28464] = "pēng", n[37659] = "bēn", n[34790] = "fèi", n[22834] = "tāo", n[22873] = "běn", n[32713] = "běn", n[26957] = "běn", n[22347] = "fèn", n[28803] = "fén", n[20532] = "bèn", n[25465] = "bèn", n[26739] = "fàn", n[28160] = "bèn", n[36905] = "bèn", n[25770] = "bèn", n[20283] = "bēng", n[31050] = "fāng", n[22879] = "bēng", n[32099] = "pēng", n[38285] = "bēng", n[21977] = "pǎng", n[23917] = "bēng", n[30189] = "péng", n[32179] = "bèng", n[32323] = "bèng", n[29998] = "béng", n[22468] = "fēng", n[22514] = "běng", n[33782] = "běng", n[29731] = "pěi", n[29739] = "běng", n[38811] = "běng", n[36908] = "bèng", n[25596] = "bèng", n[36336] = "pián", n[22644] = "bèng", n[38234] = "bèng", n[37872] = "bèng", n[30336] = "jí", n[23620] = "bī", n[20586] = "bī", n[27636] = "bī", n[26949] = "bī", n[27020] = "pi", n[35917] = "bī", n[34709] = "pí", n[40278] = "bī", n[40126] = "bī", n[37790] = "pī", n[39951] = "bī", n[23350] = "bí", n[22838] = "bǐ", n[26428] = "bǐ", n[20298] = "bǐ", n[27800] = "bǐ", n[30101] = "bǐ", n[27614] = "bǐ", n[32950] = "pí", n[26560] = "bǐ", n[23069] = "pōu", n[31875] = "bǐ", n[32021] = "pí", n[21850] = "tú", n[23845] = "pí", n[31558] = "bǐ", n[32859] = "bǐ", n[35983] = "bǐ", n[38380] = "hàn", n[20310] = "bì", n[22354] = "bì", n[35792] = "bì", n[37042] = "bì", n[21639] = "bì", n[22972] = "bì", n[24621] = "bì", n[24630] = "pī", n[30017] = "qí", n[33534] = "bì", n[26610] = "bié", n[29644] = "bì", n[30032] = "fú", n[30122] = "bì", n[31061] = "mì", n[32967] = "fèi", n[30050] = "bì", n[31507] = "pí", n[31882] = "bì", n[34960] = "bì", n[26055] = "pī";n[26768] = "bì", n[32052] = "bō", n[32717] = "pō", n[33822] = "bì", n[38279] = "bì", n[38280] = "hàn", n[38281] = "bì", n[22555] = "bì", n[24379] = "bì", n[24842] = "bì", n[28258] = "bì", n[30357] = "bì", n[31110] = "pí", n[35414] = "bì", n[36017] = "bì", n[36177] = "bì", n[22006] = "bì", n[24387] = "bì", n[28397] = "bì", n[29007] = "bì", n[30202] = "bì", n[30564] = "bì", n[33143] = "bì", n[34045] = "bì", n[34572] = "bì", n[37453] = "bì", n[38303] = "bì", n[39158] = "bì", n[24163] = "bì", n[29082] = "bì", n[29529] = "bì", n[31275] = "pì", n[31622] = "bì", n[32188] = "bì", n[37162] = "bì", n[39325] = "bì", n[24164] = "bì", n[28535] = "bì", n[29528] = "bì", n[32636] = "bì", n[35141] = "bì", n[39388] = "bì", n[39666] = "pǒ", n[24294] = "bì", n[31731] = "bì", n[32298] = "bì", n[35313] = "bì", n[39813] = "bì", n[25987] = "bì", n[36437] = "bì", n[22896] = "bì", n[37160] = "bì", n[37838] = "bì", n[39238] = "bì", n[32372] = "bì", n[35171] = "bì", n[38840] = "bǐng", n[38880] = "bì", n[39763] = "bì", n[36483] = "bì", n[36484] = "bì", n[39494] = "bì", n[40349] = "fú", n[26375] = "pí", n[36116] = "bì", n[37940] = "bì", n[40413] = "bì", n[40425] = "bì", n[40714] = "bì", n[36794] = "dào", n[28830] = "biān", n[29493] = "piàn", n[33849] = "biān", n[29265] = "miàn", n[29954] = "biān", n[31663] = "biān", n[31940] = "biǎn", n[32232] = "biān", n[33265] = "mián", n[38805] = "yìng", n[29553] = "piàn", n[37001] = "biān", n[37757] = "biān", n[37002] = "biān", n[39934] = "biān", n[39935] = "biān", n[31827] = "pān", n[31849] = "biān", n[30138] = "fá", n[36022] = "biǎn", n[24828] = "biǎn", n[25561] = "biǎn", n[31272] = "biǎn", n[40216] = "biǎn", n[34250] = "biǎn", n[35253] = "jiàn", n[40355] = "piān", n[25219] = "biàn", n[27763] = "biàn", n[37318] = "biàn", n[23749] = "biàn", n[29603] = "biàn", n[22793] = "biàn", n[26154] = "biàn", n[35213] = "biàn", n[24487] = "biàn", n[38302] = "guān", n[36769] = "biàn", n[32246] = "pián", n[33361] = "biàn", n[35546] = "biàn", n[36775] = "biàn", n[36782] = "biàn", n[36783] = "biàn", n[35722] = "biàn", n[39561] = "biāo", n[28146] = "hǔ", n[29451] = "biāo", n[33087] = "biāo", n[39081] = "diū", n[20676] = "piào", n[22658] = "biāo", n[24150] = "biāo", n[25725] = "biào", n[28398] = "biāo", n[34056] = "biāo", n[39086] = "biāo", n[27161] = "biāo", n[29083] = "biāo", n[33172] = "lù", n[40579] = "páo", n[30950] = "biāo", n[20774] = "biāo", n[27302] = "biǎo", n[31739] = "piǎo", n[39095] = "biāo", n[28684] = "biāo", n[34280] = "pāo", n[35620] = "biāo", n[29186] = "biāo", n[33237] = "biāo", n[36102] = "biāo", n[37858] = "biāo", n[31342] = "pāo", n[39112] = "biāo", n[39110] = "biāo", n[39114] = "biāo", n[39111] = "biāo", n[37987] = "biāo", n[39531] = "biāo", n[23249] = "biáo", n[35544] = "biǎo", n[35134] = "biǎo", n[37686] = "biǎo", n[20469] = "biào", n[34782] = "bié", n[30303] = "biě", n[40009] = "biē", n[40712] = "biē", n[34380] = "biē", n[40862] = "biē", n[21029] = "biè", n[33666] = "bié", n[34498] = "bié", n[24502] = "bié", n[35154] = "bié", n[24390] = "biè", n[27715] = "pà", n[37024] = "bīn", n[30735] = "pīn", n[26809] = "bīng", n[26901] = "bīn", n[29816] = "pián", n[35945] = "bīn", n[36051] = "bīn", n[36052] = "bīn", n[20752] = "bìn", n[38971] = "bīn", n[28657] = "bīn", n[28661] = "bīn", n[34408] = "bīn", n[27315] = "bīng", n[29880] = "pián", n[28693] = "bīn", n[38694] = "bīn", n[32381] = "bīn", n[37964] = "bīn", n[39022] = "bīn", n[39657] = "bìn", n[25839] = "bìn", n[39682] = "bìn", n[27567] = "bìn", n[33231] = "bìn", n[39637] = "bìn", n[39714] = "bìn", n[20172] = "bīng", n[20178] = "bīng", n[27703] = "bīng", n[24183] = "bìng", n[25508] = "bīng", n[34499] = "bīng", n[37618] = "bīng", n[38467] = "bǐng", n[24626] = "bǐng", n[25254] = "bǐng", n[33514] = "bǐng", n[26142] = "bǐng", n[26170] = "bǐng", n[30506] = "fǎng", n[20555] = "bìng", n[23643] = "pǐng", n[23502] = "bìng", n[26821] = "bǐng", n[29717] = "pín", n[31263] = "bǐng", n[37429] = "bǐng", n[37500] = "píng", n[38790] = "bǐng", n[39173] = "bǐng", n[39200] = "bǐng", n[20006] = "bìng", n[20341] = "bìng", n[22442] = "bìng", n[24240] = "píng", n[20482] = "bìng", n[26660] = "bìng", n[31369] = "bìng", n[31453] = "bìng", n[20641] = "bìng", n[35457] = "bìng", n[39849] = "bìng", n[38736] = "bìng", n[34068] = "bo", n[22083] = "fān", n[30326] = "bō", n[30327] = "bǒ", n[30411] = "bō", n[30773] = "bō", n[32573] = "bō", n[34992] = "bō", n[28298] = "bō", n[30854] = "bō", n[37474] = "bō", n[20704] = "bō", n[23955] = "bō", n[25765] = "bō", n[39185] = "bō", n[30971] = "pán", n[31009] = "bō", n[36467] = "bō", n[30378] = "luò", n[39499] = "bō", n[40013] = "bō", n[20194] = "bó", n[24436] = "zhuó", n[32913] = "dí", n[29403] = "bó", n[29917] = "bó", n[33513] = "pā", n[20412] = "bó", n[32969] = "bó", n[37091] = "bó", n[25388] = "bó", n[28001] = "bó", n[29919] = "páo", n[31201] = "bó", n[34991] = "bó", n[26738] = "bó", n[28159] = "bó", n[33825] = "bó", n[35001] = "mò", n[27541] = "fǒu", n[33895] = "bó", n[24893] = "bó", n[29500] = "pò", n[37457] = "bó", n[37432] = "bó", n[39310] = "bó", n[20720] = "bó", n[27025] = "fù", n[29055] = "bó", n[29268] = "bó", n[33354] = "bó", n[39323] = "bó", n[39361] = "bó", n[37581] = "bó", n[38216] = "bó", n[22726] = "xué", n[39326] = "bó", n[39406] = "bó", n[31323] = "zhuō", n[35151] = "bó", n[35592] = "bó", n[25066] = "bó", n[31769] = "bó", n[37787] = "bó", n[39226] = "bó", n[40275] = "bó", n[31978] = "bó", n[39622] = "bó", n[39625] = "jué", n[27394] = "bó", n[35182] = "bó", n[37998] = "bó", n[34494] = "pí", n[23417] = "bò", n[27288] = "píng", n[35666] = "bò", n[34327] = "bò", n[23788] = "bū", n[24239] = "bū", n[37437] = "bū", n[35495] = "bū", n[39188] = "bū", n[37691] = "bū", n[39878] = "pū", n[40271] = "bū", n[40170] = "bú", n[36688] = "bú", n[25452] = "fù", n[35036] = "bǔ", n[40468] = "bǔ", n[20296] = "bù", n[21541] = "bù", n[21656] = "bù", n[25258] = "pū", n[27497] = "bù", n[27496] = "bù", n[26600] = "pū", n[21199] = "bù", n[22487] = "bù", n[24721] = "bù", n[25431] = "zhì", n[33657] = "bù", n[23108] = "pǒu", n[37384] = "bù", n[24269] = "bù", n[34048] = "bù", n[31617] = "pú", n[36356] = "bù", n[37110] = "bù", n[31728] = "bù", n[39202] = "bù", n[25859] = "sǎ", n[31032] = "cǎ", n[36970] = "cà", n[22211] = "zá", n[20594] = "sī", n[25168] = "lì", n[36001] = "cái", n[32404] = "cái", n[27613] = "cǎi", n[20536] = "cǎi", n[21835] = "cǎi", n[22512] = "cài", n[23111] = "cǎi", n[23488] = "cài", n[25505] = "cǎi", n[26828] = "cǎi", n[36340] = "cǎi", n[32181] = "cǎi", n[32297] = "cài", n[21443] = "shēn", n[21444] = "shēn", n[39137] = "cān", n[21445] = "shēn", n[21936] = "sūn", n[28236] = "cān", n[20650] = "càn", n[23328] = "cān", n[29208] = "cān", n[39490] = "cān", n[22219] = "zàn", n[27544] = "cán", n[24922] = "cán", n[25714] = "chàn", n[34629] = "cán", n[24921] = "cán", n[34874] = "cán", n[34870] = "cán", n[26369] = "qián", n[24920] = "cǎn", n[25007] = "cǎn", n[31303] = "shān", n[31736] = "zān", n[40690] = "cǎn", n[22023] = "shān", n[25723] = "xiān", n[20751] = "càn", n[28591] = "càn", n[34194] = "càn", n[29158] = "càn", n[35634] = "càn", n[37842] = "sǎn", n[20218] = "cāng", n[29617] = "qiāng", n[40487] = "cāng", n[20489] = "cāng", n[20630] = "chen", n[20948] = "cāng", n[23906] = "cāng", n[28356] = "cāng", n[29514] = "cāng", n[33980] = "cāng", n[29810] = "qiāng", n[28664] = "cāng", n[31724] = "qiāng", n[33369] = "cāng", n[34725] = "cāng", n[40364] = "qiāng", n[21288] = "zāng", n[27404] = "cáng", n[38006] = "cáng", n[36086] = "càng", n[25761] = "cāo", n[26362] = "cáo", n[20654] = "zāo", n[23942] = "cáo", n[24914] = "cóng", n[34040] = "cáo", n[35135] = "cáo", n[37866] = "cáo", n[33400] = "cǎo", n[24890] = "cǎo", n[24901] = "sāo", n[25030] = "sào", n[39474] = "cǎo", n[32911] = "cào", n[37173] = "cào", n[35161] = "cào", n[40732] = "cào", n[22824] = "cè", n[20874] = "cè", n[25338] = "sè", n[33629] = "cè", n[25927] = "cè", n[30047] = "jì", n[20596] = "zhāi", n[21408] = "cè", n[31527] = "cè", n[31907] = "sè", n[33815] = "cè", n[24257] = "cè", n[24827] = "cè", n[28204] = "cè", n[33844] = "cè", n[31582] = "cè", n[31604] = "cè", n[34011] = "cè", n[31651] = "cè", n[24993] = "cè", n[31758] = "jí", n[23934] = "cēn", n[27765] = "hán", n[22465] = "cén", n[31506] = "jìn", n[26365] = "zēng", n[23652] = "céng", n[23954] = "céng", n[27239] = "zēng", n[31474] = "zēng", n[39507] = "céng", n[21616] = "zǐ", n[29628] = "cǐ", n[36224] = "cī", n[20584] = "cī", n[36304] = "cǐ", n[32274] = "suǒ", n[39604] = "cī", n[39626] = "cī", n[34816] = "cī", n[40825] = "cī", n[29633] = "cí", n[22416] = "cí", n[26572] = "cí", n[35422] = "cí", n[36765] = "cí", n[29958] = "cí", n[36772] = "cí", n[39162] = "cí", n[39176] = "cí", n[23336] = "cí", n[28648] = "cí", n[34187] = "zī", n[40220] = "cí", n[31008] = "cí", n[36781] = "cí", n[40384] = "cí", n[40383] = "cí", n[20300] = "cǐ", n[27866] = "cǐ", n[30345] = "cǐ", n[21849] = "zǐ", n[39814] = "jì", n[26431] = "cì", n[20349] = "cì", n[21054] = "cì", n[24219] = "cì", n[33574] = "cì", n[26664] = "cì", n[33727] = "cì", n[32088] = "cì", n[34515] = "cì", n[34694] = "cì", n[36060] = "cì", n[22250] = "cōng", n[24553] = "cōng", n[33552] = "cōng", n[24625] = "cōng", n[24740] = "cōng", n[26823] = "sōng", n[28967] = "zǒng", n[26980] = "sǒng", n[28439] = "cōng", n[32865] = "cōng", n[34031] = "cōng", n[34085] = "cōng", n[26288] = "cōng", n[27141] = "zōng", n[27180] = "cōng", n[28520] = "zòng", n[29084] = "zǒng", n[29821] = "cōng", n[32870] = "cōng", n[30619] = "cōng", n[31733] = "cōng", n[32880] = "cōng", n[34764] = "cōng", n[37743] = "cōng", n[32369] = "cōng", n[37843] = "cōng", n[37862] = "cōng", n[39448] = "cōng", n[39492] = "cōng", n[24468] = "cóng", n[24467] = "cóng", n[23107] = "cóng", n[23406] = "cóng", n[24470] = "cóng", n[24478] = "zòng", n[24752] = "cóng", n[30850] = "zòng", n[28430] = "sǒng", n[28480] = "zǒng", n[28488] = "zōng", n[35508] = "cóng", n[36072] = "cóng", n[36073] = "cóng", n[27191] = "cóng", n[37661] = "cóng", n[34242] = "cóng", n[21474] = "cóng", n[28743] = "cóng", n[27401] = "cóng", n[29212] = "cóng", n[24865] = "sōng", n[24961] = "còng", n[35621] = "còng", n[28234] = "còu", n[20662] = "qī", n[36659] = "còu", n[24602] = "zū", n[35285] = "cū", n[40577] = "cū", n[40580] = "cū", n[27259] = "chu", n[40582] = "zhù", n[40612] = "cū", n[30395] = "zhā", n[33064] = "cù", n[23208] = "cù", n[30212] = "cù", n[35470] = "cù", n[36247] = "cù", n[22088] = "zā", n[25009] = "cù", n[36391] = "cù", n[30255] = "cù", n[36415] = "cù", n[32300] = "cù", n[36264] = "qū", n[40704] = "cù", n[36469] = "cù", n[39011] = "cù", n[37585] = "juān", n[25883] = "cuān", n[36517] = "cuān", n[38009] = "cuān", n[28669] = "zàn", n[27349] = "cuán", n[24017] = "cuán", n[25890] = "zǎn", n[28754] = "zàn", n[27409] = "cuán", n[31347] = "zàn", n[27561] = "cuàn", n[29110] = "cuàn", n[31421] = "kuǎn", n[31422] = "kuǎn", n[31762] = "cuàn", n[31428] = "cuàn", n[33082] = "cuī", n[20951] = "cuī", n[23903] = "cuī", n[32542] = "shuāi", n[22676] = "cuī", n[24923] = "cuī", n[28476] = "cuǐ", n[27119] = "zhǐ", n[30954] = "cuī", n[32279] = "shuāi", n[37849] = "cuī", n[29091] = "suī", n[36257] = "cuǐ", n[30368] = "cuǐ", n[20252] = "cuì", n[24560] = "cuì", n[30121] = "cuì", n[20485] = "zú", n[31883] = "cuì", n[32035] = "cuì", n[32710] = "cuì", n[33027] = "cuì", n[21851] = "cuì", n[23826] = "zú", n[26890] = "zú", n[28960] = "cuì", n[29719] = "sè", n[32183] = "cuì", n[33205] = "cuì", n[33196] = "cuì", n[28642] = "zuǐ", n[31425] = "cuì", n[35146] = "cuì", n[38983] = "cuì", n[33230] = "cuì", n[37032] = "cūn", n[36358] = "cūn", n[28554] = "cún", n[31476] = "cūn", n[33189] = "cūn", n[20383] = "jiàn", n[25333] = "zùn", n[22783] = "cún", n[21004] = "cǔn", n[21515] = "dòu", n[31871] = "cùn", n[29811] = "cuō", n[36979] = "cuō", n[37277] = "cuō", n[37768] = "chā", n[34392] = "cuó", n[23923] = "cuó", n[30537] = "zhuài", n[33963] = "cuó", n[34070] = "cuó", n[37186] = "zàn", n[40570] = "cuó", n[37191] = "zàn", n[21065] = "cuò", n[21074] = "cuò", n[22798] = "cuò", n[33697] = "cuò", n[33693] = "cuò", n[24244] = "jī", n[36906] = "cuò", n[33996] = "cuò", n[35534] = "zhǎ", n[37564] = "cuò", n[37679] = "cuò", n[25184] = "chā", n[25201] = "xī", n[33414] = "chāi", n[33279] = "chā", n[25407] = "chā", n[20571] = "chā", n[21967] = "chā", n[25591] = "chā", n[37535] = "chā", n[33366] = "chā", n[30080] = "chā", n[37732] = "chā", n[39223] = "chā", n[31173] = "ná", n[22430] = "chá", n[26619] = "zhā", n[25416] = "tú", n[26764] = "tú", n[23894] = "chá", n[38763] = "chá", n[35431] = "chá", n[25686] = "qì", n[32001] = "chà", n[36421] = "chǎ", n[37972] = "chǎ", n[20187] = "tuō", n[22908] = "chà", n[20376] = "chà", n[21070] = "shā", n[35435] = "chà", n[32926] = "chāi", n[37365] = "chāi", n[29362] = "chái", n[31073] = "chái", n[21901] = "chái", n[20757] = "chái", n[33565] = "chǎi", n[34947] = "chài", n[35341] = "chài", n[34822] = "chài", n[22214] = "chài", n[36799] = "chān", n[26804] = "yán", n[35224] = "chān", n[35047] = "chān", n[32194] = "tián", n[37587] = "chān", n[24168] = "chàn", n[35164] = "chān", n[25881] = "chān", n[33474] = "yín", n[21934] = "shàn", n[26830] = "chán", n[28281] = "chán", n[29016] = "chán", n[20701] = "zhuàn", n[23939] = "zhǎn", n[23940] = "zhǎn", n[29521] = "chán", n[35479] = "chán", n[37579] = "chán", n[20739] = "tǎn", n[23307] = "chán", n[28537] = "chán", n[32254] = "chán", n[30939] = "chán", n[31146] = "shàn", n[27610] = "chán", n[34745] = "jiàn", n[34768] = "chán", n[37181] = "chán", n[28685] = "chán", n[32351] = "chǎn", n[34796] = "chán", n[20787] = "chàn", n[21142] = "chán", n[32373] = "tán", n[37185] = "chán", n[22197] = "chán", n[22757] = "chán", n[24009] = "chán", n[28730] = "chán", n[27395] = "zhàn", n[32399] = "chán", n[32402] = "chán", n[38261] = "chán", n[33388] = "chán", n[35730] = "chán", n[38001] = "chán", n[39262] = "chán", n[21036] = "chàn", n[26101] = "chǎn", n[20019] = "chǎn", n[26042] = "jiè", n[27984] = "chǎn", n[21079] = "chàn", n[21876] = "tuō", n[29986] = "chǎn", n[29987] = "chǎn", n[21111] = "chǎn", n[23932] = "chǎn", n[25676] = "sùn", n[28411] = "chǎn", n[22077] = "tān", n[24157] = "chàn", n[34118] = "chǎn", n[35522] = "chǎn", n[38323] = "chǎn", n[29120] = "dǎn", n[31749] = "chǎn", n[37286] = "chěn", n[35650] = "chǎn", n[37855] = "chǎn", n[38369] = "chǎn", n[22213] = "chǎn", n[28763] = "chǎn", n[35719] = "chǎn", n[30815] = "chàn", n[25076] = "chàn", n[25082] = "chàn", n[38850] = "chàn", n[39019] = "chàn", n[20480] = "chāng", n[28112] = "chāng", n[26905] = "chāng", n[29737] = "chāng", n[35054] = "chāng", n[38176] = "chāng", n[37673] = "chāng", n[38326] = "chāng";n[38363] = "táng", n[39911] = "chāng", n[40730] = "chāng", n[20201] = "cháng", n[20199] = "zhǎng", n[20815] = "zhǎng", n[38264] = "cháng", n[38263] = "zhǎng", n[29946] = "cháng", n[33799] = "cháng", n[22580] = "chǎng", n[29982] = "cháng", n[33144] = "cháng", n[22039] = "cháng", n[22642] = "chǎng", n[29818] = "cháng", n[33171] = "cháng", n[20767] = "cháng", n[22160] = "cháng", n[40127] = "cháng", n[40040] = "cháng", n[20696] = "chǎng", n[21424] = "chǎng", n[24288] = "chǎng", n[37625] = "chǎng", n[29594] = "yáng", n[24757] = "chàng", n[28987] = "chàng", n[29778] = "yáng", n[26274] = "chàng", n[30076] = "chàng", n[35503] = "chàng", n[38868] = "chàng", n[24360] = "chāo", n[27433] = "chāo", n[35372] = "chāo", n[37396] = "chāo", n[21222] = "jiǎo", n[25719] = "jiǎo", n[32189] = "chuò", n[21131] = "jiǎo", n[27156] = "jiǎo", n[31420] = "kē", n[29258] = "cháo", n[24035] = "cháo", n[37147] = "cháo", n[40716] = "cháo", n[28421] = "cháo", n[31410] = "cháo", n[32634] = "cháo", n[40706] = "cháo", n[36680] = "cháo", n[35647] = "cháo", n[30503] = "chǎo", n[31878] = "shā", n[28963] = "jù", n[29052] = "chǎo", n[27121] = "yǒu", n[40616] = "chǎo", n[24016] = "chǎo", n[20198] = "chào", n[20207] = "miǎo", n[35288] = "chào", n[20257] = "jū", n[36554] = "jū", n[20453] = "jū", n[21779] = "chē", n[33687] = "chē", n[30824] = "chē", n[34556] = "chē", n[20566] = "chě", n[25766] = "chě", n[22898] = "duǒ", n[21611] = "tiè", n[36832] = "chè", n[28898] = "chè", n[28914] = "xiè", n[28942] = "xiè", n[32837] = "chè", n[25546] = "pì", n[30825] = "chè", n[38937] = "chè", n[24505] = "chè", n[25712] = "niè", n[21238] = "chè", n[30638] = "chè", n[29217] = "chè", n[25461] = "chēn", n[26877] = "shēn", n[32157] = "lín", n[30248] = "diān", n[30603] = "chēn", n[35523] = "chēn", n[36061] = "chēn", n[35603] = "chēn", n[36839] = "chén", n[33566] = "chén", n[26645] = "chén", n[33664] = "chén", n[33680] = "chén", n[38515] = "chén", n[25936] = "chén", n[26733] = "zhèn", n[26787] = "chén", n[35366] = "chén", n[36569] = "chén", n[24854] = "xìn", n[36296] = "jiàn", n[37378] = "chén", n[28993] = "chén", n[34095] = "chén", n[22645] = "chén", n[25974] = "chén", n[27140] = "chén", n[30222] = "chén", n[38659] = "chén", n[34740] = "chén", n[35574] = "chén", n[34236] = "chén", n[40590] = "chén", n[26335] = "chén", n[40400] = "chén", n[36283] = "chěn", n[30838] = "chěn", n[22667] = "chěn", n[22822] = "chěn", n[30947] = "chěn", n[36408] = "chěn", n[37718] = "chěn", n[36098] = "chěn", n[29231] = "chēng", n[30114] = "chèn", n[20545] = "chēng", n[36226] = "chèn", n[31281] = "chèng", n[40787] = "chèn", n[40788] = "chèn", n[20781] = "chèn", n[22187] = "chèn", n[31338] = "chèng", n[27372] = "chèn", n[35183] = "chèn", n[35734] = "chèn", n[26430] = "chéng", n[38455] = "chēng", n[27871] = "chēng", n[20936] = "jìng", n[26854] = "chēng", n[28030] = "chēng", n[29732] = "chēng", n[28136] = "jìng", n[30848] = "chēng", n[26239] = "chēng", n[29274] = "chèng", n[25654] = "qiǎng", n[36202] = "chēng", n[20700] = "dēng", n[24966] = "chēng", n[25690] = "chēng", n[38743] = "chēng", n[25744] = "chēng", n[32253] = "chēng", n[27222] = "táng", n[27221] = "chēng", n[36204] = "chēng", n[38963] = "chēng", n[27273] = "chēng", n[31424] = "chèng", n[32585] = "chēng", n[37783] = "qiāng", n[30659] = "nǐng", n[34806] = "chēng", n[37887] = "chēng", n[37923] = "chēng", n[39251] = "chēng", n[37946] = "dāng", n[27702] = "zhèng", n[37077] = "chéng", n[20055] = "shèng", n[22505] = "zhēng", n[23053] = "shèng", n[23468] = "chéng", n[23800] = "chéng", n[27910] = "chéng", n[33663] = "chéng", n[25392] = "chéng", n[28007] = "yǐng", n[29689] = "chéng", n[25473] = "chéng", n[29685] = "chéng", n[31386] = "chéng", n[33069] = "chéng", n[22552] = "chéng", n[25576] = "chéng", n[26838] = "chéng", n[26889] = "shèng", n[31596] = "chéng", n[32126] = "chéng", n[22614] = "chéng", n[28311] = "chéng", n[35488] = "chéng", n[30075] = "chéng", n[37614] = "chéng", n[24981] = "zhèng", n[25756] = "zhěng", n[28546] = "chéng", n[27289] = "chéng", n[39886] = "chéng", n[28691] = "dèng", n[25074] = "chéng", n[39468] = "chéng", n[20401] = "tǐng", n[24462] = "zhèng", n[24732] = "chěng", n[24241] = "chěng", n[30536] = "chěng", n[39425] = "chěng", n[40630] = "chi", n[22939] = "chī", n[24424] = "chī", n[33013] = "chī", n[29947] = "chī", n[31898] = "chī", n[21931] = "chī", n[35381] = "chī", n[25691] = "chī", n[32122] = "zhǐ", n[27142] = "lí", n[22084] = "chī", n[27558] = "chī", n[30621] = "chī", n[35514] = "lài", n[22125] = "qiào", n[40223] = "chī", n[40260] = "chī", n[30305] = "chī", n[40797] = "chī", n[25889] = "chī", n[24434] = "chī", n[40656] = "chī", n[27830] = "yí", n[29387] = "yí", n[36833] = "chí", n[31486] = "chí", n[33614] = "chí", n[20479] = "hǔ", n[27501] = "zhì", n[32795] = "sì", n[33773] = "zhī", n[34483] = "chí", n[36223] = "chí", n[31554] = "chí", n[36030] = "chí", n[36933] = "chí", n[36322] = "duò", n[36959] = "chí", n[39347] = "chí", n[31624] = "tái", n[31630] = "chí", n[24498] = "tí", n[28454] = "chí", n[36978] = "chí", n[35608] = "chí", n[37705] = "chí", n[37004] = "lí", n[40343] = "tí", n[40345] = "tí", n[21498] = "chǐ", n[20268] = "chǐ", n[25185] = "yǐ", n[21582] = "chǐ", n[32916] = "chǐ", n[21366] = "chǐ", n[22417] = "chǐ", n[22867] = "zhà", n[25336] = "yí", n[32995] = "chǐ", n[24677] = "chǐ", n[34439] = "chǐ", n[34995] = "qǐ", n[27452] = "chuài", n[27503] = "chǐ", n[34994] = "nuǒ", n[35053] = "chǐ", n[35459] = "yí", n[37497] = "chǐ", n[40786] = "chǐ", n[20289] = "yǐ", n[26456] = "chì", n[28795] = "chì", n[20377] = "chì", n[25270] = "chì", n[21189] = "chì", n[24668] = "chì", n[26565] = "nǐ", n[21201] = "chì", n[25415] = "huò", n[32708] = "chì", n[28926] = "chì", n[28225] = "chì", n[39149] = "chì", n[30200] = "chì", n[33119] = "chì", n[37459] = "chì", n[38644] = "chì", n[24975] = "chì", n[30216] = "zhì", n[32740] = "chì", n[36971] = "chì", n[37520] = "lì", n[24919] = "chì", n[24952] = "dì", n[32744] = "chì", n[29118] = "chì", n[25048] = "chì", n[36265] = "chì", n[40338] = "chì", n[40408] = "chì", n[27798] = "chōng", n[28026] = "chōng", n[29675] = "chōng", n[32704] = "chōng", n[22019] = "chōng", n[25679] = "chōng", n[24504] = "zhǒng", n[24963] = "chōng", n[34909] = "chōng", n[32639] = "chōng", n[36438] = "chōng", n[23816] = "chóng", n[30155] = "téng", n[38528] = "chóng", n[28468] = "zhuàng", n[35080] = "chóng", n[32223] = "zhòng", n[34665] = "chóng", n[34802] = "chóng", n[29214] = "chóng", n[22507] = "shǎng", n[23541] = "chǒng", n[25584] = "dǒng", n[37507] = "chòng", n[39832] = "dài", n[29296] = "yòu", n[23140] = "zhōu", n[25515] = "zhōu", n[32044] = "chóu", n[25610] = "zǒu", n[36350] = "shū", n[31704] = "chōu", n[37268] = "qiú", n[29352] = "chōu", n[29355] = "chōu", n[24606] = "yóu", n[35818] = "zhōu", n[26662] = "chóu", n[26812] = "táo", n[30052] = "zhì", n[33751] = "chóu", n[26886] = "zhòu", n[32082] = "chóu", n[30359] = "chóu", n[35055] = "dāo", n[35446] = "chóu", n[37223] = "chóu", n[32162] = "chóu", n[20756] = "chóu", n[38612] = "chóu", n[22155] = "zhōu", n[23334] = "chóu", n[24172] = "dào", n[25060] = "chóu", n[30441] = "zhōu", n[34229] = "zhòu", n[27310] = "táo", n[29181] = "chóu", n[30087] = "chóu", n[31820] = "chóu", n[36490] = "chóu", n[37307] = "chóu", n[35728] = "chóu", n[35726] = "chóu", n[38630] = "chóu", n[19986] = "chǒu", n[21532] = "chǒu", n[26493] = "chǒu", n[26491] = "niǔ", n[20578] = "qiào", n[37276] = "chǒu", n[30657] = "chǒu", n[39767] = "chǒu", n[33264] = "chòu", n[36954] = "chòu", n[27552] = "chòu", n[23680] = "chū", n[27019] = "chū", n[25698] = "hù", n[25716] = "chū", n[35993] = "chū", n[27350] = "lǜ", n[40803] = "chū", n[33467] = "chú", n[32797] = "qù", n[33954] = "chú", n[35936] = "chú", n[23216] = "zòu", n[32801] = "chú", n[33965] = "chú", n[36238] = "chú", n[37455] = "chú", n[29331] = "chú", n[24282] = "chú", n[31720] = "chú", n[37604] = "chú", n[24174] = "chú", n[27337] = "chú", n[34296] = "zhū", n[34805] = "chú", n[38619] = "chú", n[27365] = "chú", n[40373] = "chú", n[36501] = "chú", n[20966] = "chù", n[26904] = "chǔ", n[34389] = "chǔ", n[31111] = "chǔ", n[28619] = "chǔ", n[20786] = "chǔ", n[27290] = "chǔ", n[29876] = "chǔ", n[30990] = "chǔ", n[40813] = "chǔ", n[40828] = "chǔ", n[31436] = "chù", n[27855] = "shè", n[35926] = "chù", n[27434] = "xì", n[28842] = "zhuō", n[31440] = "qì", n[20470] = "tì", n[25930] = "shōu", n[22513] = "tòu", n[29695] = "chù", n[32064] = "chù", n[33734] = "zōu", n[20631] = "chù", n[37136] = "chù", n[24905] = "xù", n[28352] = "xù", n[38310] = "chù", n[20746] = "chù", n[22076] = "xù", n[35540] = "jí", n[26038] = "chù", n[27484] = "chù", n[33221] = "chù", n[35320] = "chù", n[27451] = "xū", n[33175] = "chuái", n[29485] = "chuàn", n[29775] = "chuān", n[33321] = "chuán", n[21110] = "chuán", n[22284] = "chuí", n[20659] = "zhuàn", n[26927] = "duǒ", n[27458] = "chuǎn", n[26295] = "chuán", n[31685] = "chuán", n[33182] = "zhuǎn", n[36658] = "chuán", n[33608] = "chuǎn", n[22590] = "chuǎn", n[20706] = "chuǎn", n[36403] = "chuǎn", n[27724] = "chuàn", n[29588] = "chuàn", n[37351] = "chuàn", n[36055] = "chuàn", n[40360] = "zhì", n[20997] = "chuāng", n[31379] = "chuāng", n[21109] = "chuàng", n[29262] = "chuāng", n[25680] = "chuāng", n[29269] = "chuāng", n[30241] = "chuāng", n[31419] = "chuāng", n[29248] = "chuáng", n[21920] = "zhǒng", n[22087] = "chuáng", n[26403] = "tóng", n[27238] = "tóng", n[20664] = "chuǎng", n[30946] = "chuǎng", n[38358] = "chuǎng", n[21041] = "chuàng", n[21071] = "chuàng", n[21081] = "chuàng", n[24884] = "chuàng", n[40865] = "chuī", n[20501] = "chuí", n[22464] = "chuí", n[26712] = "chuí", n[33753] = "chuí", n[25637] = "chuí", n[33092] = "chuí", n[30846] = "zhuì", n[31648] = "chuí", n[37656] = "chuí", n[37786] = "chuí", n[38976] = "chuí", n[24793] = "chuò", n[33434] = "tún", n[26110] = "chūn", n[26486] = "chūn", n[33797] = "chūn", n[23179] = "chūn", n[26265] = "chūn", n[27078] = "chūn", n[29763] = "chūn", n[31674] = "chūn", n[27201] = "chūn", n[36660] = "chūn", n[27332] = "chūn", n[39942] = "chūn", n[40350] = "chūn", n[38489] = "chún", n[28017] = "chún", n[32020] = "chún", n[33059] = "chún", n[28283] = "chún", n[29321] = "chún", n[28387] = "chún", n[33939] = "chún", n[28440] = "chún", n[34036] = "chún", n[37269] = "chún", n[37662] = "chún", n[39897] = "chún", n[40329] = "chún", n[20550] = "chǔn", n[33846] = "chǔn", n[24823] = "chǔn", n[30582] = "chǔn", n[36080] = "chǔn", n[36916] = "chuō", n[36256] = "zhuó", n[32347] = "chuò", n[21559] = "xuè", n[36789] = "chuò", n[21758] = "yuè", n[23062] = "chuò", n[23061] = "lài", n[23141] = "nào", n[23164] = "ruò", n[28080] = "chuò", n[37227] = "chuò", n[36352] = "chuò", n[31673] = "yuē", n[36639] = "chuò", n[37596] = "zhuó", n[25801] = "chuò", n[30957] = "chuò", n[39199] = "chuò", n[27488] = "chuò", n[37827] = "zú", n[22205] = "chuò", n[40810] = "chuò", n[37985] = "chuò", n[23374] = "zhú", n[32360] = "da", n[21649] = "dā", n[31514] = "xiá", n[22112] = "dā", n[22710] = "dā", n[25752] = "dā", n[37789] = "dā", n[37769] = "tà", n[36815] = "dá", n[36822] = "dá", n[36826] = "dá", n[21630] = "dàn", n[22447] = "dá", n[28831] = "dá", n[32653] = "dá", n[33605] = "dá", n[33625] = "dá", n[30039] = "fú", n[21107] = "zhá", n[21266] = "dá", n[30051] = "dá", n[36921] = "dá", n[28314] = "tǎ", n[35418] = "dá", n[36948] = "dá", n[36342] = "dá", n[24986] = "dàn", n[34200] = "dá", n[29173] = "dá", n[34813] = "dá", n[37949] = "dá", n[38851] = "dá", n[40854] = "dá", n[40856] = "dá", n[20131] = "dà", n[27727] = "tài", n[30484] = "dà", n[29507] = "dāi", n[25051] = "dāi", n[36714] = "dài", n[20386] = "dài", n[22408] = "dài", n[24082] = "dài", n[26571] = "dài", n[24111] = "dài", n[36003] = "dài", n[36561] = "dài", n[24118] = "dài", n[32063] = "dài", n[34478] = "dé", n[36570] = "dài", n[37361] = "dì", n[35410] = "yí", n[36024] = "dài", n[36585] = "dài", n[29767] = "dài", n[24279] = "dài", n[31625] = "guǎi", n[21447] = "dài", n[26307] = "dài", n[32255] = "dài", n[34675] = "dài", n[39384] = "tái", n[40207] = "dài", n[33372] = "dài", n[31780] = "dài", n[36443] = "dài", n[28731] = "dài", n[38708] = "dài", n[35190] = "dài", n[40689] = "dài", n[38726] = "dài", n[22921] = "dān", n[21336] = "dān", n[30723] = "dān", n[32828] = "dān", n[36525] = "dān", n[37206] = "dān", n[23173] = "dān", n[21296] = "dān", n[35101] = "dān", n[37170] = "dān", n[38933] = "dān", n[21231] = "dān", n[25812] = "dàn", n[27563] = "dān", n[29972] = "dān", n[30281] = "dàn", n[35148] = "dān", n[31774] = "dān", n[32888] = "dān", n[20244] = "dǎn", n[21008] = "dǎn", n[25228] = "shěn", n[29612] = "dǎn", n[29933] = "dǎn", n[34932] = "dǎn", n[32030] = "dǎn", n[20150] = "dàn", n[39358] = "dàn", n[25762] = "dǎn", n[25763] = "shàn", n[36071] = "dǎn", n[40661] = "dǎn", n[33213] = "dǎn", n[30397] = "zhāo", n[40693] = "zhǎn", n[24078] = "dàn", n[27786] = "dàn", n[27897] = "dàn", n[29402] = "dàn", n[21772] = "yán", n[26598] = "dàn", n[30093] = "dàn", n[35345] = "dàn", n[21847] = "dàn", n[24788] = "tán", n[21887] = "dàn", n[24382] = "tán", n[33093] = "dàn", n[34577] = "dàn", n[35291] = "dàn", n[31390] = "dàn", n[34014] = "dàn", n[35477] = "dàn", n[20708] = "dàn", n[22089] = "dàn", n[39655] = "dàn", n[22078] = "tán", n[24392] = "tán", n[37256] = "tán", n[25018] = "dàn", n[31147] = "dàn", n[39204] = "dàn", n[39411] = "dàn", n[40224] = "dàn", n[30298] = "dàn", n[22186] = "dàn", n[36105] = "dàn", n[38702] = "dàn", n[39247] = "dàn", n[40686] = "shèn", n[29680] = "dāng", n[31580] = "dāng", n[30070] = "dàng", n[20741] = "dàng", n[22137] = "dāng", n[28578] = "dāng", n[29867] = "dāng", n[35168] = "dāng", n[31801] = "dāng", n[33377] = "dāng", n[34807] = "dāng", n[38371] = "dàng", n[25803] = "dàng", n[35681] = "dǎng", n[40680] = "dǎng", n[25897] = "dǎng", n[28761] = "tǎng", n[27411] = "dǎng", n[35740] = "dǎng", n[27705] = "dàng", n[22325] = "dàng", n[22449] = "dàng", n[20562] = "tǎng", n[23160] = "yáng", n[23861] = "yáng", n[24851] = "yáng", n[29949] = "dàng", n[36927] = "dàng", n[23907] = "táng", n[38652] = "dàng", n[28498] = "xiàng", n[30893] = "dàng", n[30602] = "dàng", n[34153] = "dàng", n[36260] = "dàng", n[22731] = "dàng", n[27284] = "dàng", n[29847] = "dàng", n[30442] = "dàng", n[30993] = "dàng", n[31772] = "dàng", n[34351] = "dàng", n[26423] = "tiáo", n[33312] = "dāo", n[37334] = "dāo", n[40061] = "dāo", n[39771] = "dāo", n[34729] = "dāo", n[25455] = "dáo", n[38502] = "dǎo", n[23798] = "dǎo", n[31106] = "dǎo", n[25623] = "dǎo", n[38557] = "dǎo", n[22020] = "jiào", n[23947] = "dǎo", n[23948] = "dǎo", n[27101] = "dǎo", n[23566] = "dǎo", n[38575] = "dǎo", n[22740] = "dǎo", n[23993] = "dǎo", n[25827] = "dǎo", n[31153] = "dǎo", n[33791] = "dào", n[26913] = "dào", n[30428] = "dào", n[32105] = "tiào", n[31282] = "dào", n[31628] = "zhào", n[32738] = "zhōu", n[22133] = "dào", n[33364] = "dào", n[34908] = "dào", n[27300] = "dào", n[34911] = "dào", n[29182] = "dào", n[32767] = "dào", n[36551] = "dào", n[29913] = "dào", n[26099] = "dì", n[22042] = "dēi", n[24692] = "dé", n[28098] = "dé", n[24755] = "dé", n[24810] = "dé", n[26831] = "zhé";n[24499] = "dé", n[37696] = "dé", n[25189] = "dèn", n[25213] = "dèn", n[35915] = "dēng", n[23297] = "dēng", n[29128] = "dēng", n[29842] = "dēng", n[31475] = "dēng", n[33376] = "dēng", n[37159] = "dèng", n[38565] = "dèng", n[22705] = "dèng", n[27336] = "dèng", n[35252] = "dèng", n[37913] = "dèng", n[20222] = "dī", n[22851] = "tì", n[23739] = "dī", n[24445] = "dī", n[31210] = "dī", n[34971] = "dī", n[21874] = "dī", n[22494] = "dī", n[38532] = "dī", n[28199] = "tí", n[36230] = "dī", n[30894] = "tí", n[27136] = "dī", n[30974] = "dī", n[38830] = "dī", n[37841] = "dí", n[25178] = "yuē", n[24312] = "dí", n[33494] = "dí", n[21785] = "dí", n[27999] = "yōu", n[21831] = "dí", n[26769] = "dí", n[38766] = "dí", n[28364] = "dí", n[34023] = "tiáo", n[39344] = "dí", n[39650] = "dí", n[34059] = "dí", n[34064] = "dí", n[38932] = "dí", n[25973] = "dí", n[31732] = "zhú", n[22145] = "dí", n[34273] = "dí", n[35956] = "dí", n[36450] = "dí", n[31988] = "dí", n[35263] = "dí", n[40464] = "dí", n[21390] = "dǐ", n[22360] = "dǐ", n[38458] = "dǐ", n[21607] = "dǐ", n[24356] = "dǐ", n[25310] = "dǐ", n[26513] = "hù", n[29300] = "dǐ", n[25483] = "dǐ", n[33767] = "dǐ", n[35293] = "dǐ", n[35398] = "dǐ", n[36583] = "dǐ", n[26996] = "shì", n[32860] = "zhì", n[39923] = "dǐ", n[22356] = "làn", n[26453] = "duò", n[29587] = "dì", n[24607] = "dì", n[26532] = "duò", n[33488] = "tí", n[20452] = "dì", n[21707] = "diè", n[22469] = "fáng", n[22474] = "dì", n[36883] = "dì", n[20569] = "dì", n[26762] = "dì", n[28941] = "dì", n[29686] = "tí", n[30513] = "dì", n[31094] = "dì", n[33730] = "dì", n[23170] = "tí", n[25573] = "tì", n[36934] = "tí", n[20672] = "dì", n[31128] = "dì", n[33123] = "dì", n[36958] = "dì", n[37482] = "dì", n[22662] = "zhì", n[22673] = "dì", n[22700] = "dì", n[23933] = "dié", n[25685] = "zhí", n[30096] = "zhì", n[34069] = "dì", n[34627] = "dì", n[36976] = "dì", n[29963] = "dì", n[32224] = "dì", n[34669] = "dì", n[23987] = "dì", n[35558] = "dì", n[35551] = "shì", n[36406] = "dì", n[34734] = "dì", n[20308] = "zhàn", n[25921] = "diān", n[20622] = "diān", n[21415] = "diān", n[23918] = "diān", n[27079] = "diān", n[27097] = "zhěn", n[31412] = "yǎn", n[36430] = "diān", n[39002] = "diān", n[39003] = "diān", n[24019] = "diān", n[25895] = "diān", n[24020] = "diān", n[30322] = "diān", n[40827] = "diān", n[22860] = "diǎn", n[23152] = "diǎn", n[25951] = "diǎn", n[26915] = "diǎn", n[36309] = "tiē", n[33959] = "diǎn", n[34119] = "diǎn", n[40670] = "diǎn", n[22200] = "diǎn", n[25154] = "diàn", n[30145] = "shān", n[23133] = "diàn", n[29716] = "diàn", n[30198] = "tiǎn", n[34580] = "diàn", n[37439] = "diàn", n[38651] = "diàn", n[22666] = "diàn", n[22722] = "diàn", n[27202] = "diàn", n[27229] = "tán", n[28593] = "diàn", n[30969] = "diàn", n[39508] = "diàn", n[27720] = "diāo", n[21023] = "diāo", n[34413] = "diāo", n[22877] = "diāo", n[24372] = "diāo", n[24427] = "diāo", n[34497] = "diāo", n[29745] = "diāo", n[40173] = "zhāo", n[30615] = "dōu", n[37677] = "diāo", n[39817] = "diāo", n[31763] = "diāo", n[40742] = "diāo", n[39899] = "diāo", n[40304] = "diāo", n[23628] = "diǎo", n[40165] = "niǎo", n[24340] = "diào", n[20228] = "diào", n[30404] = "diào", n[31374] = "diào", n[35339] = "diào", n[37347] = "diào", n[37407] = "diào", n[31464] = "diào", n[35458] = "tiǎo", n[37530] = "yáo", n[37553] = "diào", n[38655] = "diào", n[39777] = "diào", n[35519] = "tiáo", n[30265] = "diào", n[31413] = "diào", n[37629] = "diào", n[34251] = "zhuó", n[37955] = "diào", n[35130] = "diē", n[24610] = "tū", n[27846] = "yì", n[33525] = "dié", n[21669] = "xī", n[23756] = "dié", n[24654] = "dié", n[25365] = "shè", n[26163] = "yì", n[26595] = "zhì", n[32470] = "dié", n[32965] = "dié", n[30499] = "tì", n[32778] = "dié", n[21841] = "tì", n[25116] = "dié", n[30512] = "zhì", n[23868] = "shì", n[24137] = "dié", n[24821] = "dié", n[30067] = "dié", n[32112] = "dié", n[33271] = "zhí", n[35396] = "dié", n[36227] = "tú", n[36604] = "yì", n[38267] = "dié", n[26986] = "yè", n[27548] = "dié", n[29251] = "dié", n[36334] = "dié", n[34600] = "dié", n[35083] = "dié", n[27106] = "xí", n[33363] = "dié", n[30082] = "dié", n[35548] = "dié", n[40233] = "dié", n[34738] = "zhì", n[38818] = "xiè", n[26337] = "dié", n[30089] = "dié", n[39944] = "dié", n[30090] = "dié", n[27662] = "dié", n[22901] = "tiǎn", n[24068] = "dīng", n[30012] = "tǐng", n[34416] = "dīng", n[37336] = "dìng", n[38762] = "dīng", n[33404] = "dǐng", n[38914] = "dǐng", n[23935] = "dǐng", n[40721] = "dǐng", n[28622] = "tìng", n[34209] = "dǐng", n[37924] = "dǐng", n[24522] = "tìng", n[39268] = "dìng", n[30708] = "dìng", n[35330] = "dìng", n[39139] = "dìng", n[25503] = "zhěng", n[33827] = "dìng", n[26903] = "dìng", n[30880] = "dìng", n[32866] = "dìng", n[34634] = "dìng", n[37580] = "tǐng", n[37664] = "dìng", n[30968] = "dìng", n[38977] = "dìng", n[19999] = "diū", n[37545] = "diū", n[26481] = "dōng", n[33523] = "dōng", n[26168] = "dōng", n[20530] = "dōng", n[22508] = "dōng", n[23099] = "dòng", n[23852] = "dōng", n[23840] = "dòng", n[28087] = "dōng", n[31511] = "dōng", n[33732] = "dōng", n[24474] = "dōng", n[27693] = "dōng", n[34624] = "dōng", n[39831] = "dōng", n[40725] = "dōng", n[39903] = "dōng", n[40327] = "dōng", n[40363] = "dōng", n[22693] = "tuǎn", n[23326] = "dǒng", n[31677] = "dǒng", n[34155] = "dǒng", n[35532] = "dǒng", n[23003] = "dòng", n[25359] = "dòng", n[29418] = "tóng", n[36853] = "dòng", n[20941] = "dòng", n[25113] = "dòng", n[28884] = "tóng", n[21205] = "dòng", n[26847] = "dòng", n[28265] = "dòng", n[32103] = "tóng", n[33110] = "dòng", n[20685] = "dòng", n[21229] = "tóng", n[29137] = "tóng", n[39399] = "dòng", n[38680] = "dòng", n[21562] = "rú", n[26515] = "dōu", n[20408] = "shù", n[21783] = "dōu", n[20832] = "dōu", n[27255] = "dōu", n[21790] = "dóu", n[20071] = "dǒu", n[38439] = "dǒu", n[37380] = "dǒu", n[37078] = "dòu", n[28002] = "dòu", n[29429] = "máng", n[33651] = "dòu", n[39294] = "dòu", n[39717] = "dòu", n[26794] = "dòu", n[27629] = "nuò", n[33072] = "dòu", n[37208] = "dòu", n[38295] = "dòu", n[39718] = "dòu", n[37568] = "tù", n[39190] = "dòu", n[26019] = "dòu", n[28678] = "dú", n[38360] = "dòu", n[31431] = "dòu", n[39722] = "dòu", n[39724] = "dòu", n[39725] = "dòu", n[21438] = "dū", n[21090] = "zhuó", n[38407] = "shé", n[37263] = "dū", n[38349] = "shé", n[28060] = "dú", n[35067] = "dú", n[35501] = "dú", n[29544] = "dú", n[37654] = "dú", n[20959] = "dú", n[21301] = "dú", n[23355] = "dú", n[27357] = "dú", n[27568] = "dú", n[29272] = "dú", n[29346] = "dú", n[29892] = "dú", n[30398] = "dú", n[39475] = "dú", n[35712] = "dú", n[35908] = "dú", n[36117] = "dú", n[38883] = "dú", n[37983] = "dú", n[38855] = "dú", n[38885] = "dú", n[40695] = "dú", n[35743] = "dú", n[26255] = "shǔ", n[29757] = "dǔ", n[35241] = "dǔ", n[36077] = "dǔ", n[31716] = "dǔ", n[22956] = "dù", n[23012] = "gòu", n[33648] = "dù", n[31226] = "dù", n[26229] = "qǐ", n[38767] = "dù", n[34713] = "dù", n[25985] = "yì", n[27564] = "dù", n[37709] = "dù", n[34855] = "dù", n[32785] = "zhuān", n[20595] = "duān", n[21100] = "zhì", n[23183] = "duān", n[35085] = "duān", n[37748] = "duān", n[22597] = "duàn", n[33902] = "duàn", n[29782] = "duàn", n[33142] = "duàn", n[30891] = "duàn", n[32222] = "duàn", n[27592] = "duàn", n[37723] = "duàn", n[26039] = "duàn", n[36502] = "duàn", n[31850] = "duàn", n[22422] = "duī", n[22624] = "duī", n[30205] = "duī", n[30931] = "duī", n[40237] = "duī", n[37907] = "duī", n[37916] = "duī", n[21837] = "zhūn", n[38951] = "duǐ", n[20810] = "yuè", n[20812] = "yuè", n[23550] = "duì", n[26488] = "shū", n[31051] = "duì", n[38510] = "duì", n[25939] = "duó", n[25946] = "duó", n[38538] = "zhuì", n[32144] = "duì", n[23565] = "duì", n[24990] = "tūn", n[28647] = "duì", n[28667] = "wěi", n[34225] = "duì", n[25055] = "duì", n[28706] = "wěi", n[28713] = "duì", n[35656] = "duì", n[35701] = "duì", n[36699] = "duì", n[24775] = "dūn", n[34611] = "dūn", n[22698] = "dūn", n[22699] = "zūn", n[25780] = "dūn", n[29540] = "dūn", n[22136] = "dūn", n[25737] = "dūn", n[27220] = "tuí", n[29340] = "dūn", n[36478] = "dūn", n[39504] = "dūn", n[36489] = "dǔn", n[20229] = "dùn", n[22345] = "tún", n[24201] = "tún", n[24563] = "zhūn", n[36871] = "dùn", n[37389] = "dùn", n[26991] = "shǔn", n[38931] = "dùn", n[30903] = "dùn", n[36975] = "dùn", n[28513] = "dùn", n[29129] = "dùn", n[36402] = "dùn", n[22811] = "duō", n[30035] = "duō", n[21087] = "duō", n[25952] = "què", n[25962] = "què", n[27634] = "duō", n[22153] = "duō", n[27824] = "tuō", n[21099] = "duó", n[21925] = "zhà", n[30181] = "duó", n[37420] = "duó", n[22890] = "duó", n[20953] = "duó", n[37944] = "duó", n[26422] = "duǒ", n[22428] = "duò", n[25350] = "duò", n[22517] = "duǒ", n[23836] = "duǒ", n[36243] = "duǒ", n[36529] = "duǒ", n[32158] = "duǒ", n[20152] = "duǒ", n[36547] = "duǒ", n[39692] = "duǒ", n[22194] = "duǒ", n[26461] = "yí", n[21044] = "duò", n[38474] = "duò", n[38479] = "duò", n[39283] = "duò", n[23598] = "duò", n[25349] = "duò", n[26562] = "yí", n[26606] = "zuó", n[26711] = "duò", n[23200] = "tuó", n[38547] = "huī", n[36325] = "duò", n[39167] = "duò", n[39345] = "tuó", n[22702] = "huī", n[24988] = "duò", n[39364] = "tuó", n[22703] = "duò", n[40317] = "duò", n[22968] = "ē", n[22975] = "ē", n[23103] = "ě", n[30206] = "kē", n[21546] = "huā", n[22254] = "é", n[36823] = "é", n[23753] = "é", n[23785] = "é", n[28048] = "é", n[29684] = "é", n[35355] = "é", n[30354] = "é", n[30539] = "é", n[37387] = "é", n[30912] = "é", n[35472] = "é", n[37608] = "é", n[38943] = "é", n[39780] = "é", n[38989] = "é", n[40286] = "é", n[40285] = "é", n[35660] = "é", n[26521] = "è", n[30760] = "ě", n[24801] = "wù", n[38923] = "ě", n[22081] = "ě", n[39424] = "ě", n[40264] = "ě", n[25145] = "è", n[27514] = "è", n[23691] = "è", n[38440] = "è", n[38456] = "è", n[21597] = "è", n[30736] = "è", n[21666] = "è", n[23030] = "yà", n[30728] = "è", n[21262] = "è", n[25931] = "guó", n[34437] = "è", n[20564] = "è", n[21374] = "è", n[22538] = "è", n[24746] = "è", n[30790] = "è", n[36571] = "è", n[22574] = "è", n[23871] = "è", n[28226] = "è", n[35935] = "è", n[36598] = "è", n[36940] = "è", n[37418] = "è", n[24261] = "è", n[25621] = "kē", n[25636] = "è", n[25657] = "è", n[29735] = "è", n[20715] = "wù", n[34625] = "è", n[34138] = "è", n[36987] = "è", n[38942] = "è", n[39187] = "è", n[25820] = "è", n[35240] = "è", n[35556] = "è", n[38332] = "yān", n[39209] = "è", n[37716] = "è", n[27486] = "è", n[38990] = "è", n[31e3] = "qì", n[27374] = "è", n[39952] = "è", n[40346] = "è", n[39978] = "è", n[35725] = "è", n[40771] = "è", n[37993] = "è", n[40822] = "è", n[40055] = "è", n[35474] = "xī", n[22848] = "ēn", n[29054] = "yūn", n[23758] = "ěn", n[38821] = "ēng", n[20816] = "ér", n[26450] = "rèn", n[20373] = "ér", n[20818] = "ér", n[38481] = "ér", n[23759] = "ér", n[27919] = "ér", n[32783] = "nài", n[33611] = "ér", n[26669] = "ér", n[33017] = "ér", n[21810] = "wā", n[26773] = "rèn", n[35003] = "ér", n[31915] = "ér", n[32847] = "nǜ", n[36608] = "ér", n[38573] = "ér", n[39669] = "ér", n[39838] = "ér", n[40239] = "ér", n[36700] = "ér", n[23570] = "ěr", n[23571] = "ěr", n[26670] = "ěr", n[27622] = "ěr", n[34888] = "ěr", n[29246] = "ěr", n[37498] = "ěr", n[39180] = "ěr", n[39404] = "ěr", n[34238] = "ěr", n[36999] = "ěr", n[36272] = "ěr", n[24333] = "èr", n[24336] = "èr", n[21045] = "èr", n[21665] = "èr", n[36014] = "èr", n[36019] = "èr", n[35456] = "èr", n[27186] = "èr", n[39670] = "èr", n[20921] = "fā", n[27831] = "fā", n[30330] = "fā", n[30332] = "fā", n[24386] = "fā", n[37271] = "pō", n[37297] = "pō", n[22978] = "fá", n[22394] = "fá", n[27980] = "fá", n[33591] = "fá", n[26672] = "fá", n[31529] = "fá", n[20640] = "fá", n[30594] = "fá", n[32624] = "fá", n[38309] = "fá", n[22690] = "fá", n[32632] = "fá", n[27203] = "fèi", n[34245] = "fá", n[20337] = "fǎ", n[23772] = "fǎ", n[37701] = "fǎ", n[28747] = "fǎ", n[29754] = "fà", n[39658] = "fà", n[34143] = "fà", n[39662] = "fà", n[24539] = "fān", n[29375] = "huān", n[30056] = "pān", n[21227] = "fān", n[23311] = "fān", n[24995] = "fān", n[26073] = "fān", n[26075] = "fān", n[32345] = "fān", n[36691] = "fān", n[39103] = "fān", n[39132] = "fān", n[40021] = "fān", n[20962] = "fán", n[20963] = "fán", n[21285] = "fán", n[26443] = "fán", n[26569] = "fán", n[31861] = "fán", n[33316] = "fán", n[33319] = "fán", n[31538] = "fán", n[37353] = "fán", n[26853] = "fán", n[29033] = "fán", n[32208] = "fán", n[22694] = "fán", n[29856] = "fán", n[33200] = "pán", n[34208] = "fán", n[35150] = "fán", n[32691] = "fán", n[28735] = "fán", n[31020] = "fán", n[37895] = "fán", n[37922] = "fán", n[34844] = "fán", n[40429] = "fán", n[25173] = "fú", n[20206] = "fǎn", n[27214] = "fǎn", n[27710] = "fàn", n[22911] = "fàn", n[27726] = "fàn", n[35337] = "fàn", n[36563] = "guǐ", n[23119] = "fù", n[30421] = "fàn", n[31541] = "fàn", n[36009] = "fàn", n[36588] = "fàn", n[39152] = "fàn", n[39151] = "fàn", n[28412] = "fàn", n[23310] = "fàn", n[31684] = "fàn", n[36669] = "fàn", n[28714] = "fàn", n[27768] = "pāng", n[29285] = "fāng", n[28115] = "fāng", n[22543] = "fāng", n[36285] = "páng", n[37377] = "fāng", n[37690] = "fāng", n[40203] = "fāng", n[39796] = "fáng", n[26121] = "fǎng", n[26136] = "fǎng", n[29932] = "fǎng", n[30470] = "fǎng", n[20515] = "fǎng", n[26058] = "fǎng", n[32033] = "fǎng", n[35370] = "fǎng", n[39651] = "fǎng", n[40365] = "fǎng", n[39131] = "fēi", n[23123] = "fēi", n[23124] = "fēi", n[28164] = "fēi", n[26243] = "fēi", n[29446] = "fēi", n[38751] = "fēi", n[35062] = "fēi", n[32203] = "fēi", n[39205] = "fēi", n[39329] = "fēi", n[39441] = "fēi", n[39451] = "fēi", n[39905] = "fēi", n[39133] = "fēi", n[30143] = "fèi", n[34608] = "féi", n[26383] = "kū", n[32976] = "kū", n[22876] = "fěi", n[26832] = "fěi", n[34140] = "fěi", n[35513] = "fěi", n[29371] = "pèi", n[26617] = "shì", n[32975] = "zǐ", n[26162] = "fèi", n[20471] = "fèi", n[21077] = "fèi", n[21406] = "fèi", n[38507] = "fèi", n[23645] = "fèi", n[31536] = "fú", n[33801] = "fèi", n[24259] = "fèi", n[36027] = "fèi", n[24290] = "fèi", n[26314] = "fèi", n[27240] = "fèn", n[30280] = "fèi", n[40739] = "fèi", n[28663] = "fèi", n[27360] = "fèi", n[37928] = "fèi", n[38725] = "fèi", n[24073] = "fēn", n[26128] = "fēn", n[31445] = "fēn", n[34927] = "fēn", n[32027] = "fēn", n[32706] = "fēn", n[26788] = "fēn", n[26875] = "fēn", n[35356] = "fēn", n[36526] = "fēn", n[37398] = "fēn";n[38640] = "fēn", n[39322] = "fēn", n[26374] = "fēn", n[39220] = "fēn", n[39257] = "fēn", n[22342] = "méi", n[22946] = "fén", n[23694] = "fén", n[26508] = "fén", n[32658] = "fén", n[34464] = "fén", n[34465] = "fén", n[33974] = "fén", n[38571] = "fén", n[22707] = "fén", n[24169] = "fén", n[28614] = "pēn", n[29526] = "fèn", n[34145] = "fén", n[39797] = "fén", n[29132] = "fén", n[29139] = "fén", n[35950] = "fén", n[32693] = "fén", n[40726] = "fén", n[35958] = "fén", n[36690] = "fén", n[37948] = "fén", n[39337] = "fén", n[40642] = "fén", n[40698] = "fěn", n[24325] = "fèn", n[31182] = "fèn", n[20712] = "fèn", n[24996] = "fèn", n[30611] = "fèn", n[22894] = "fèn", n[33209] = "fèn", n[31966] = "fèn", n[40029] = "fèn", n[20217] = "fēng", n[20968] = "fēng", n[20972] = "fēng", n[22790] = "páng", n[22950] = "fēng", n[27816] = "fēng", n[20974] = "fēng", n[28816] = "pàng", n[30461] = "fēng", n[39080] = "fěng", n[23791] = "fēng", n[33681] = "péng", n[20561] = "fēng", n[26747] = "fèng", n[29714] = "fēng", n[22588] = "fēng", n[23862] = "fēng", n[28194] = "fēng", n[29478] = "fēng", n[26963] = "fēng", n[29326] = "fēng", n[29090] = "péng", n[30219] = "fēng", n[30904] = "fēng", n[20732] = "fēng", n[31688] = "fēng", n[37175] = "fēng", n[37586] = "fēng", n[27282] = "fēng", n[35920] = "fēng", n[37821] = "fēng", n[37856] = "fēng", n[23543] = "fēng", n[28739] = "fēng", n[34356] = "fēng", n[38715] = "fēng", n[34861] = "fēng", n[38730] = "fēng", n[39116] = "fēng", n[40631] = "fēng", n[28018] = "hóng", n[22584] = "féng", n[28292] = "hóng", n[39342] = "píng", n[25683] = "pěng", n[28456] = "péng", n[32152] = "féng", n[33346] = "féng", n[32299] = "fèng", n[35202] = "fěng", n[35575] = "fěng", n[28247] = "fèng", n[28968] = "fèng", n[29e3] = "fèng", n[36183] = "fèng", n[40175] = "fèng", n[40179] = "fèng", n[40204] = "fèng", n[36085] = "fèng", n[20175] = "fó", n[20216] = "yǎo", n[22386] = "fó", n[26811] = "fó", n[32017] = "fóu", n[22938] = "pī", n[28848] = "páo", n[32569] = "fǒu", n[32571] = "fǒu", n[38636] = "fǒu", n[40192] = "fǒu", n[20245] = "fū", n[37022] = "fū", n[22923] = "yōu", n[25241] = "póu", n[22983] = "fú", n[26510] = "fú", n[29598] = "fū", n[24612] = "fū", n[26574] = "fù", n[30726] = "fū", n[32981] = "zhǒu", n[33602] = "fū", n[34925] = "fū", n[23056] = "fū", n[23555] = "fū", n[25418] = "póu", n[33652] = "fū", n[26057] = "fū", n[29704] = "fú", n[32040] = "fù", n[37212] = "fū", n[37383] = "fū", n[31583] = "fū", n[32146] = "fū", n[37148] = "fū", n[31920] = "fú", n[34034] = "xū", n[33178] = "fū", n[40186] = "guī", n[40617] = "fū", n[31952] = "fū", n[40620] = "fū", n[40625] = "fū", n[25071] = "fū", n[29879] = "lú", n[20032] = "fú", n[24063] = "fú", n[30006] = "fú", n[21020] = "fú", n[33443] = "fú", n[21640] = "fú", n[23722] = "fú", n[24087] = "fú", n[27885] = "fú", n[33536] = "fú", n[22424] = "fú", n[26603] = "fú", n[27921] = "fù", n[28837] = "fú", n[29624] = "fú", n[30025] = "fú", n[38888] = "fú", n[40172] = "fú", n[21753] = "fú", n[22458] = "póu", n[26687] = "fú", n[34970] = "fú", n[28912] = "páo", n[32049] = "fú", n[32060] = "fú", n[32711] = "fú", n[34393] = "fú", n[26868] = "sù", n[32101] = "fú", n[32614] = "fú", n[33869] = "fú", n[32141] = "fú", n[33344] = "fú", n[37464] = "fú", n[37468] = "fú", n[39083] = "fú", n[40167] = "fú", n[31274] = "fú", n[31641] = "fú", n[35092] = "fù", n[35943] = "fú", n[38861] = "fú", n[28563] = "fú", n[39668] = "fú", n[40212] = "fú", n[35560] = "fú", n[36414] = "fú", n[36667] = "fú", n[39812] = "fú", n[30273] = "fú", n[35142] = "fú", n[39858] = "fú", n[35173] = "fú", n[40297] = "fú", n[32384] = "pú", n[20086] = "fǔ", n[24355] = "fǔ", n[20428] = "fǔ", n[20443] = "fǔ", n[37081] = "fǔ", n[34469] = "fù", n[37345] = "fǔ", n[26920] = "fǔ", n[28964] = "fǔ", n[30425] = "fǔ", n[34565] = "fǔ", n[36628] = "fǔ", n[22072] = "fǔ", n[25771] = "fǔ", n[38955] = "fǔ", n[39732] = "fǔ", n[31776] = "fǔ", n[22399] = "fù", n[24447] = "fù", n[31438] = "fù", n[23754] = "niè", n[31060] = "fù", n[35331] = "fù", n[36e3] = "fù", n[34973] = "fù", n[20585] = "fù", n[20904] = "fù", n[23142] = "fù", n[34489] = "fù", n[23181] = "fù", n[24489] = "fù", n[31231] = "pū", n[33839] = "fù", n[34519] = "fù", n[35204] = "fù", n[35394] = "fù", n[26929] = "fù", n[31139] = "fù", n[35079] = "fù", n[32238] = "fù", n[34151] = "fù", n[34652] = "fù", n[36070] = "fù", n[39385] = "fù", n[23316] = "fù", n[32283] = "fù", n[36665] = "fù", n[39826] = "fù", n[36091] = "fù", n[37713] = "fù", n[37730] = "fù", n[39954] = "fù", n[22846] = "jiá", n[22048] = "gǎ", n[36555] = "zhá", n[37331] = "gá", n[37687] = "gá", n[29581] = "gǎ", n[26386] = "nǜ", n[39744] = "gà", n[20357] = "gāi", n[37058] = "hái", n[23007] = "gāi", n[23760] = "gāi", n[33604] = "gāi", n[26192] = "gāi", n[30049] = "gāi", n[31092] = "gāi", n[32111] = "hài", n[35442] = "gāi", n[35941] = "gāi", n[36037] = "gāi", n[36044] = "gāi", n[24523] = "gǎi", n[20066] = "gài", n[21252] = "gài", n[21251] = "gài", n[26458] = "gū", n[25697] = "xì", n[33890] = "gài", n[37411] = "gài", n[27113] = "gài", n[33995] = "hé", n[28433] = "gài", n[27114] = "gài", n[29890] = "gài", n[24531] = "hàn", n[36800] = "gān", n[25916] = "hàn", n[29589] = "gān", n[21633] = "xián", n[31891] = "gān", n[20978] = "gān", n[23602] = "gān", n[31608] = "gān", n[28455] = "gān", n[40177] = "yàn", n[23606] = "gān", n[23607] = "gān", n[39760] = "gān", n[20192] = "hàn", n[33417] = "gǎn", n[30383] = "gǎn", n[34918] = "gǎn", n[26751] = "gǎn", n[31240] = "gǎn", n[36245] = "gǎn", n[28600] = "gǎn", n[31714] = "lǒng", n[31795] = "gàn", n[40161] = "gǎn", n[40036] = "gǎn", n[20292] = "hān", n[30448] = "gàn", n[20509] = "gàn", n[20942] = "gàn", n[32058] = "gàn", n[35404] = "gàn", n[39597] = "gàn", n[24185] = "gàn", n[27046] = "gàn", n[27274] = "gàn", n[36113] = "gàn", n[36123] = "gàn", n[28776] = "gàn", n[20910] = "gāng", n[23713] = "gāng", n[29288] = "gāng", n[30104] = "gāng", n[30716] = "qiāng", n[21083] = "gāng", n[22536] = "gāng", n[23831] = "gǎng", n[25478] = "gāng", n[37357] = "gāng", n[26849] = "gāng", n[29317] = "gāng", n[22589] = "gāng", n[25667] = "gāng", n[30873] = "náo", n[32177] = "gāng", n[32577] = "gāng", n[37628] = "gàng", n[37792] = "gāng", n[29370] = "kàng", n[28981] = "gàng", n[28985] = "gàng", n[27091] = "gàng", n[25093] = "zhuàng", n[25095] = "zhuàng", n[32665] = "měi", n[30352] = "yáo", n[39641] = "gāo", n[33263] = "gāo", n[30570] = "zé", n[27129] = "gāo", n[29515] = "háo", n[27248] = "gāo", n[39227] = "gāo", n[27356] = "gāo", n[38879] = "gāo", n[40398] = "gāo", n[40731] = "gāo", n[40433] = "gāo", n[22832] = "gǎo", n[33746] = "gǎo", n[31233] = "gǎo", n[27072] = "gǎo", n[31294] = "gǎo", n[32286] = "gǎo", n[27322] = "gǎo", n[34291] = "gǎo", n[37804] = "hào", n[21567] = "gào", n[21186] = "gào", n[23804] = "gào", n[31086] = "gào", n[31088] = "gào", n[31606] = "gào", n[31134] = "gào", n[35493] = "gào", n[37615] = "gào", n[25186] = "xì", n[29365] = "gē", n[25107] = "gē", n[32912] = "gē", n[29291] = "qiú", n[32007] = "hé", n[39289] = "le", n[24385] = "gē", n[28370] = "gē", n[25128] = "gē", n[40218] = "gē", n[25841] = "gé", n[35596] = "gē", n[40255] = "gē", n[37814] = "gē", n[21572] = "gé", n[20334] = "gé", n[20331] = "gé", n[21260] = "gé", n[25356] = "gé", n[24837] = "gé", n[29490] = "xiē", n[33269] = "gé", n[34514] = "luò", n[35027] = "jiē", n[28358] = "gé", n[35297] = "gé", n[27077] = "gé", n[38307] = "gé", n[38308] = "hé", n[29542] = "xiē", n[38792] = "tà", n[38864] = "gé", n[33224] = "là", n[35581] = "gé", n[36661] = "gé", n[39845] = "luò", n[39855] = "gé", n[27338] = "gé", n[37777] = "yè", n[37784] = "lì", n[38874] = "gé", n[36693] = "gé", n[38839] = "gé", n[39444] = "gé", n[20491] = "gè", n[31540] = "gě", n[22021] = "kǎi", n[22e3] = "gě", n[40068] = "hé", n[20103] = "mā", n[21540] = "jiè", n[33558] = "gè", n[31623] = "gè", n[37499] = "gè", n[32102] = "jǐ", n[20121] = "gèn", n[25583] = "gèn", n[25604] = "gèn", n[21039] = "gēng", n[30026] = "gēng", n[28013] = "gēng", n[33774] = "gēng", n[26921] = "gēng", n[28991] = "gēng", n[32089] = "huán", n[32090] = "gēng", n[40530] = "gēng", n[32234] = "gèng", n[32262] = "gèng", n[32686] = "gēng", n[36065] = "gēng", n[40330] = "gēng", n[37088] = "gěng", n[23802] = "gěng", n[25389] = "gěng", n[33668] = "gěng", n[32134] = "gěng", n[39614] = "gěng", n[39873] = "gěng", n[22569] = "gèng", n[21431] = "hóng", n[26459] = "gōng", n[20362] = "gōng", n[31999] = "gōng", n[31996] = "gōng", n[32005] = "hóng", n[23470] = "gōng", n[21265] = "gōng", n[22632] = "gōng", n[24138] = "gōng", n[24873] = "hǒng", n[36531] = "gōng", n[24912] = "hǒng", n[21268] = "gōng", n[30909] = "gōng", n[39672] = "gōng", n[35317] = "gōng", n[40847] = "wò", n[40852] = "gōng", n[21789] = "hǒng", n[25330] = "gǒng", n[26673] = "gǒng", n[21962] = "hǒng", n[36609] = "gǒng", n[28562] = "hòng", n[37566] = "hòng", n[38799] = "gǒng", n[32702] = "hóng", n[36002] = "gòng", n[29077] = "gòng", n[33462] = "gǒu", n[30144] = "gōu", n[34983] = "gōu", n[37390] = "gōu", n[28317] = "gōu", n[37476] = "gōu", n[32241] = "gōu", n[35104] = "gōu", n[31804] = "gōu", n[38877] = "gōu", n[29629] = "gǒu", n[32777] = "gǒu", n[32775] = "gǒu", n[32776] = "gǒu", n[34492] = "xù", n[35967] = "gǒu", n[21620] = "xǔ", n[22392] = "gòu", n[20883] = "gòu", n[21826] = "gòu", n[22816] = "gòu", n[20619] = "jiǎng", n[35389] = "gòu", n[25606] = "gòu", n[35436] = "gòu", n[38602] = "gòu", n[27083] = "gòu", n[29049] = "gòu", n[25728] = "gòu", n[31955] = "gǔ", n[35247] = "gòu", n[36092] = "gòu", n[27858] = "gū", n[33533] = "gū", n[24045] = "gū", n[24044] = "gū", n[26599] = "gū", n[21763] = "gū", n[21762] = "gū", n[32603] = "gū", n[31519] = "gū", n[33991] = "gū", n[36593] = "gū", n[36594] = "gū", n[31250] = "gū", n[37426] = "gū", n[30918] = "kě", n[31643] = "gū", n[23284] = "gū", n[31696] = "gū", n[27245] = "gū", n[39829] = "gū", n[40227] = "gū", n[22787] = "yíng", n[25223] = "hú", n[32662] = "gǔ", n[36903] = "gǔ", n[20646] = "gǔ", n[21842] = "gǔ", n[28104] = "gǔ", n[33077] = "gǔ", n[21975] = "wā", n[23603] = "gǔ", n[24882] = "gǔ", n[35393] = "gǔ", n[39305] = "gǔ", n[36040] = "jià", n[37431] = "gǔ", n[40724] = "gǔ", n[27030] = "gǔ", n[30391] = "gǔ", n[31296] = "gǔ", n[32270] = "hú", n[34211] = "gǔ", n[28658] = "gǔ", n[30396] = "gǔ", n[36674] = "gǔ", n[39222] = "gǔ", n[27342] = "huǎng", n[28692] = "gǔ", n[30444] = "gǔ", n[40379] = "hú", n[34865] = "gǔ", n[24600] = "hù", n[20933] = "gù", n[22540] = "gù", n[23827] = "gù", n[26845] = "gù", n[31099] = "gù", n[27070] = "gù", n[20721] = "gù", n[37678] = "gù", n[39901] = "gù", n[39015] = "gù", n[26736] = "guā", n[38118] = "xiān", n[27460] = "guā", n[29041] = "guā", n[39082] = "guā", n[36239] = "huó", n[21120] = "guā", n[32250] = "wō", n[37531] = "xiān", n[35555] = "huà", n[36411] = "guā", n[37565] = "xiān", n[39091] = "guā", n[40240] = "guā", n[39463] = "guā", n[20878] = "guǎ", n[21479] = "guǎ", n[21692] = "wǒ", n[21102] = "guǎ", n[22380] = "guà", n[21865] = "guà", n[25499] = "guà", n[32611] = "guà", n[35007] = "guī", n[32083] = "kuā", n[32619] = "guǎi", n[35455] = "guà", n[21455] = "guái", n[26548] = "guǎi", n[26618] = "guǎi", n[22828] = "guài", n[24672] = "guài", n[35212] = "guàn", n[30685] = "qín", n[33924] = "guān", n[31396] = "guān", n[32184] = "lún", n[38306] = "guān", n[30237] = "guān", n[30287] = "guān", n[35251] = "guàn", n[38359] = "guān", n[38364] = "guān", n[39973] = "guān", n[35264] = "guàn", n[40030] = "guān", n[29743] = "guǎn", n[30191] = "guǎn", n[31590] = "guǎn", n[36648] = "guǎn", n[29869] = "guǎn", n[33304] = "guǎn", n[37671] = "guǎn", n[39208] = "guǎn", n[40164] = "guǎn", n[21341] = "kuàng", n[27596] = "wān", n[20017] = "kuàng", n[27892] = "guàn", n[24762] = "guàn", n[28105] = "guǒ", n[36011] = "guàn", n[24761] = "guàn", n[31100] = "guàn", n[24931] = "guàn", n[25692] = "guàn", n[28485] = "guàn", n[36966] = "guàn", n[27148] = "guàn", n[32582] = "guàn", n[38618] = "huán", n[36480] = "guàn", n[37830] = "guàn", n[29215] = "guàn", n[29912] = "guàn", n[30676] = "quán", n[31030] = "guàn", n[38005] = "guàn", n[27423] = "guàn", n[40057] = "guàn", n[40475] = "guàn", n[28782] = "guāng", n[28826] = "guāng", n[28827] = "guāng", n[28823] = "guāng", n[22425] = "guāng", n[23023] = "guāng", n[25348] = "kuò", n[27960] = "guāng", n[33578] = "guāng", n[28897] = "guāng", n[29654] = "guāng", n[30788] = "kuāng", n[20697] = "guāng", n[36612] = "guāng", n[37543] = "guāng", n[40646] = "guāng", n[24195] = "guǎng", n[24291] = "guǎng", n[29559] = "guǎng", n[33257] = "jiǒng", n[20423] = "guàng", n[33254] = "jiǒng", n[25751] = "héng", n[37053] = "guī", n[33573] = "guī", n[24112] = "guī", n[29674] = "guī", n[33023] = "kuì", n[20096] = "guī", n[31376] = "wā", n[35215] = "guī", n[23215] = "guī", n[24262] = "wěi", n[26909] = "guī", n[37068] = "guī", n[23266] = "guī", n[25707] = "guī", n[38312] = "guī", n[23296] = "guī", n[23986] = "xī", n[27107] = "jī", n[27131] = "guī", n[27132] = "guī", n[29853] = "guī", n[30625] = "guī", n[40860] = "qiū", n[39853] = "xié", n[24002] = "xī", n[27512] = "guī", n[38623] = "xī", n[39734] = "guī", n[39465] = "guī", n[27376] = "huái", n[27383] = "guī", n[29900] = "guī", n[34348] = "guī", n[39737] = "guī", n[27711] = "jiǔ", n[26425] = "qiú", n[20345] = "guǐ", n[38482] = "guǐ", n[22429] = "guǐ", n[23037] = "guǐ", n[24657] = "guǐ", n[25905] = "guì", n[36556] = "guǐ", n[24234] = "guǐ", n[31082] = "guǐ", n[21293] = "guǐ", n[28224] = "guǐ", n[34539] = "guǐ", n[35300] = "guǐ", n[35437] = "guǐ", n[21420] = "guǐ", n[34785] = "guǐ", n[25904] = "guì", n[26123] = "guì", n[30794] = "wěi", n[36281] = "jué", n[26914] = "guì", n[29476] = "guì", n[31552] = "guì", n[36020] = "guì", n[28302] = "yàn", n[34005] = "guì", n[21297] = "kuì", n[30598] = "wèi", n[21130] = "guì", n[21132] = "guì", n[23969] = "jué", n[25740] = "guì", n[27126] = "guì", n[34717] = "huǐ", n[27195] = "guì", n[27292] = "huì", n[30646] = "kuì", n[31148] = "guì", n[31746] = "guó", n[27331] = "guì", n[30288] = "wēi", n[35160] = "guì", n[37888] = "guì", n[38844] = "guì", n[37966] = "guì", n[40022] = "guì", n[40037] = "guì", n[24771] = "gǔn", n[30797] = "yǐn", n[34974] = "gǔn", n[34008] = "gǔn", n[35063] = "yuān", n[28414] = "gǔn", n[32196] = "gǔn", n[34057] = "gǔn", n[32247] = "yùn", n[36645] = "gǔn", n[39820] = "gǔn", n[39872] = "gǔn", n[30548] = "gùn", n[35636] = "gùn", n[21686] = "shì", n[21871] = "guō", n[22557] = "guō", n[28198] = "wō", n[26951] = "kuǎ", n[37403] = "guō", n[22670] = "guō", n[30225] = "guō", n[22035] = "guō", n[24393] = "guō", n[28612] = "wō", n[37707] = "guō";n[24397] = "guō", n[34760] = "guō", n[25046] = "guō", n[30668] = "kuàng", n[22255] = "guó", n[22262] = "guó", n[22267] = "guó", n[22272] = "guó", n[21904] = "xù", n[22283] = "guó", n[33112] = "guó", n[25681] = "guó", n[24151] = "guó", n[24918] = "guó", n[28429] = "guó", n[32861] = "guó", n[34094] = "guó", n[33173] = "guó", n[24776] = "guǒ", n[33747] = "guǒ", n[39299] = "guǒ", n[35073] = "guǒ", n[27112] = "guǒ", n[31935] = "guǒ", n[32182] = "guǒ", n[36640] = "guǒ", n[39196] = "guǒ", n[36942] = "guò", n[33090] = "guò", n[37945] = "guò", n[32038] = "hā", n[37503] = "kē", n[34662] = "xiā", n[22884] = "tǎi", n[21645] = "hāi", n[36996] = "huán", n[22177] = "xié", n[28920] = "hǎi", n[22640] = "hǎi", n[37244] = "hǎi", n[22926] = "jiè", n[21968] = "hài", n[39168] = "hài", n[39405] = "hài", n[39412] = "hài", n[39258] = "hài", n[20847] = "han", n[29235] = "han", n[21755] = "hān", n[38919] = "hān", n[23272] = "nǎn", n[35901] = "hān", n[39328] = "hān", n[39805] = "hān", n[27483] = "liǎn", n[32931] = "qín", n[20990] = "hán", n[34423] = "hán", n[21765] = "hàn", n[22277] = "hán", n[23074] = "hán", n[27995] = "hán", n[23841] = "hán", n[26770] = "hán", n[29696] = "hán", n[23877] = "hán", n[26935] = "jiān", n[29981] = "hán", n[31592] = "hán", n[39343] = "hàn", n[34604] = "hán", n[28559] = "hán", n[37601] = "hán", n[38867] = "hán", n[19974] = "hǎn", n[28011] = "hǎn", n[35907] = "hǎn", n[38366] = "kàn", n[25182] = "hàn", n[22462] = "hàn", n[28038] = "hàn", n[29442] = "hàn", n[33695] = "hàn", n[26200] = "hàn", n[37356] = "hàn", n[30356] = "hàn", n[30533] = "hàn", n[20668] = "hàn", n[34559] = "hàn", n[28450] = "hàn", n[34058] = "hàn", n[34605] = "hàn", n[26293] = "hàn", n[29103] = "rǎn", n[36634] = "hàn", n[37554] = "hàn", n[37582] = "hàn", n[34706] = "hàn", n[38967] = "hàn", n[38980] = "hàn", n[39419] = "hàn", n[35648] = "hàn", n[38615] = "hàn", n[40382] = "hàn", n[37023] = "kàng", n[22932] = "kēng", n[33472] = "háng", n[36818] = "háng", n[26043] = "háng", n[22451] = "háng", n[31504] = "hàng", n[34466] = "háng", n[35012] = "háng", n[36005] = "háng", n[31573] = "háng", n[32078] = "háng", n[38927] = "háng", n[39783] = "háng", n[24572] = "kāng", n[33568] = "hāo", n[34215] = "kǎo", n[20058] = "yǐ", n[27612] = "háo", n[21626] = "xiāo", n[31443] = "háo", n[26883] = "háo", n[29510] = "háo", n[34399] = "hào", n[22097] = "háo", n[29524] = "háo", n[22071] = "háo", n[35541] = "xià", n[20779] = "háo", n[31815] = "háo", n[34836] = "háo", n[35705] = "háo", n[20404] = "hào", n[26150] = "hào", n[31183] = "mào", n[21728] = "hào", n[24655] = "hào", n[24718] = "jiào", n[26215] = "hào", n[28111] = "hào", n[20624] = "hào", n[37143] = "hào", n[28360] = "xuè", n[28380] = "zé", n[32853] = "hào", n[26272] = "hào", n[26276] = "hào", n[26285] = "hào", n[28564] = "hào", n[30364] = "hào", n[30366] = "hào", n[26317] = "hào", n[30369] = "hào", n[34179] = "hào", n[30373] = "hào", n[34243] = "xiāo", n[39013] = "hào", n[39965] = "hào", n[28765] = "hào", n[25266] = "qiā", n[27441] = "hē", n[35382] = "hē", n[34842] = "hē", n[21642] = "hè", n[22976] = "hé", n[37059] = "hé", n[23750] = "hé", n[26567] = "hé", n[29410] = "mò", n[30407] = "hé", n[31866] = "hé", n[39288] = "hé", n[25926] = "hé", n[30409] = "hé", n[37339] = "hé", n[21853] = "hé", n[28206] = "hé", n[33794] = "hé", n[40833] = "hé", n[21915] = "yuán", n[24786] = "hè", n[31917] = "hé", n[35384] = "hé", n[26945] = "hé", n[27644] = "hé", n[28565] = "hé", n[35429] = "hé", n[35976] = "mò", n[37452] = "hé", n[26373] = "qiè", n[29062] = "hé", n[38305] = "hé", n[39172] = "hé", n[40534] = "hé", n[40615] = "hé", n[38940] = "hé", n[31701] = "hé", n[34715] = "xiá", n[39802] = "hé", n[30985] = "qiào", n[38356] = "hé", n[38824] = "hé", n[40789] = "hé", n[35208] = "hé", n[40353] = "jiè", n[30380] = "hé", n[37961] = "hé", n[40866] = "hé", n[22414] = "hè", n[21740] = "hè", n[34964] = "kè", n[38586] = "hú", n[23497] = "hè", n[28931] = "hè", n[36032] = "hè", n[21955] = "xiào", n[28994] = "hè", n[30859] = "hè", n[29063] = "xiāo", n[32751] = "hè", n[22151] = "xià", n[30283] = "hè", n[35614] = "hè", n[29178] = "hè", n[29184] = "hè", n[40366] = "hú", n[40372] = "hè", n[38733] = "hè", n[38734] = "hè", n[40470] = "hè", n[38735] = "hè", n[40658] = "hēi", n[28534] = "hēi", n[25323] = "hén", n[38798] = "hén", n[20343] = "hěn", n[35434] = "hěn", n[22135] = "xīn", n[24729] = "hèng", n[28069] = "hēng", n[33053] = "hēng", n[23022] = "héng", n[24646] = "héng", n[28870] = "héng", n[33019] = "héng", n[40507] = "héng", n[27243] = "hèng", n[40244] = "héng", n[40262] = "héng", n[37957] = "héng", n[21832] = "hèng", n[21503] = "hóng", n[21565] = "hōng hǒu ōu", n[21581] = "hōng", n[28788] = "hōng", n[36579] = "hōng", n[25544] = "hōng", n[28217] = "qìng", n[28962] = "hōng", n[30817] = "hōng", n[35902] = "hōng", n[36663] = "hōng", n[22173] = "hōng", n[37735] = "hōng", n[24006] = "yíng", n[36703] = "hōng", n[20188] = "hóng", n[22917] = "hóng", n[23672] = "lóng", n[21552] = "hóng", n[27759] = "hóng", n[29586] = "hóng", n[29928] = "xiáng", n[32430] = "hóng", n[23446] = "hóng", n[29596] = "hóng", n[33520] = "hóng", n[22444] = "hóng", n[23042] = "hóng", n[27799] = "pāng", n[31441] = "hóng", n[28004] = "hóng", n[32024] = "hóng", n[32707] = "hóng", n[32830] = "hóng", n[30804] = "hóng", n[32045] = "hóng", n[35897] = "hóng", n[28209] = "hóng", n[31460] = "hóng", n[31904] = "hóng", n[33875] = "hóng", n[33874] = "hóng", n[37404] = "hóng", n[38286] = "hóng", n[32139] = "hóng", n[32733] = "hóng", n[35900] = "hóng", n[28482] = "hóng", n[37495] = "hóng", n[38787] = "hóng", n[39775] = "hóng", n[31690] = "hóng", n[37584] = "hóng", n[24395] = "hóng", n[38672] = "hóng", n[38687] = "hóng", n[40251] = "hóng", n[40652] = "hóng", n[26190] = "hǒng", n[35340] = "hòng", n[38311] = "xiàng", n[25748] = "hòng", n[38338] = "xiàng", n[39720] = "hòng", n[38336] = "hòng", n[40769] = "hōu", n[30694] = "hòu", n[37127] = "hóu", n[24127] = "hóu", n[33876] = "hóu", n[30586] = "hóu", n[37527] = "xiàng", n[32749] = "hóu", n[32757] = "qú", n[37741] = "hóu", n[39217] = "hóu", n[39928] = "hóu", n[29372] = "hǒu", n[37064] = "hòu", n[22421] = "hòu", n[27913] = "hòu", n[33577] = "hòu", n[35934] = "hòu", n[40088] = "hòu", n[39836] = "hòu", n[40031] = "hòu", n[20079] = "hū", n[21282] = "hū", n[22400] = "hū", n[26130] = "hū", n[26358] = "hù", n[27864] = "hū", n[33528] = "hū", n[24663] = "kuā", n[33428] = "huì", n[21291] = "hū", n[28148] = "hū", n[34390] = "hū", n[36580] = "hū", n[38653] = "hù", n[22033] = "hū", n[23523] = "hū", n[38608] = "hū", n[24160] = "hū", n[25135] = "xì", n[27473] = "hū", n[25137] = "xì", n[33204] = "wǔ", n[25138] = "xì", n[35644] = "hū", n[29939] = "hú", n[22775] = "hú", n[28928] = "hú", n[21910] = "hú", n[22778] = "hú", n[23209] = "hú", n[25648] = "hú", n[32087] = "hú", n[26972] = "hú", n[29921] = "zhí", n[22045] = "hú", n[34075] = "hú", n[31670] = "hú", n[34906] = "hú", n[39793] = "hú", n[32288] = "hú", n[34716] = "hú", n[38966] = "hú", n[37752] = "hú", n[39212] = "hú", n[30992] = "què", n[40288] = "hú", n[28715] = "hú", n[39693] = "hú", n[39959] = "hú", n[40344] = "hú", n[40358] = "hú", n[20053] = "hǔ", n[27771] = "huǎng", n[33792] = "hǔ", n[34397] = "hǔ", n[28408] = "xǔ", n[37695] = "hǔ", n[39921] = "hǔ", n[24342] = "hù", n[25142] = "hù", n[25144] = "hù", n[33424] = "xià", n[24077] = "hù", n[27789] = "hù", n[26120] = "hù", n[23025] = "kuā", n[31888] = "hù", n[23135] = "hù", n[26971] = "kǔ", n[21952] = "hù", n[32148] = "hù", n[37152] = "hù", n[23277] = "hù", n[23278] = "hù", n[28396] = "hù", n[34096] = "hù", n[27124] = "hù", n[29097] = "hù", n[40184] = "hù", n[28649] = "huò", n[31748] = "hù", n[35952] = "hù", n[37721] = "hù", n[22171] = "hù", n[35319] = "xué", n[35703] = "hù", n[40160] = "hù", n[38912] = "hù", n[40047] = "hù", n[40460] = "hù", n[33458] = "lún", n[22486] = "huā", n[23154] = "huā", n[33775] = "huà", n[26907] = "huā", n[30836] = "huā", n[33930] = "huā", n[22057] = "huá", n[31936] = "huā", n[35502] = "huā", n[37685] = "huā", n[34340] = "huā", n[21594] = "qì", n[23009] = "huó", n[37354] = "yú", n[37355] = "wū", n[25651] = "huá", n[25782] = "huá", n[21123] = "huà", n[34128] = "huá", n[34710] = "huá", n[37592] = "wú", n[35649] = "huá", n[37877] = "huá", n[39498] = "huá", n[40424] = "huá", n[22843] = "huà", n[26489] = "huà", n[26528] = "huà", n[23819] = "huà", n[23155] = "huà", n[30059] = "huà", n[23301] = "huà", n[30069] = "huà", n[35295] = "xiè", n[35441] = "huà", n[25702] = "huà", n[27194] = "huà", n[23295] = "huà", n[27116] = "huà", n[28549] = "huà", n[35545] = "huà", n[40650] = "huà", n[32355] = "huà", n[33305] = "huà", n[35694] = "huà", n[20330] = "huí", n[35106] = "huái", n[25040] = "huái", n[35121] = "huái", n[25079] = "huái", n[28708] = "wāi", n[32818] = "huái", n[34361] = "huái", n[22730] = "huài", n[22750] = "huài", n[34366] = "huài", n[29407] = "huán", n[35974] = "huán", n[27475] = "huān", n[40197] = "huān", n[25025] = "xuān", n[40269] = "huān", n[37188] = "huān", n[22206] = "huàn", n[23369] = "quán", n[25085] = "huān", n[27489] = "huān", n[35737] = "huān", n[35995] = "huān", n[39529] = "huān", n[23768] = "huán", n[33601] = "huán", n[33800] = "huán", n[22554] = "huán", n[23503] = "huán", n[38600] = "huán", n[29506] = "huán", n[32132] = "wàn", n[32678] = "huán", n[33949] = "yuán", n[30607] = "qióng", n[23323] = "xuān", n[28596] = "huán", n[38427] = "huán", n[29872] = "huán", n[35954] = "huán", n[37744] = "huán", n[38254] = "huán", n[40558] = "huán", n[31979] = "huán", n[32367] = "huán", n[37942] = "huán", n[38372] = "huán", n[29915] = "yè", n[30534] = "huǎn", n[32233] = "huǎn", n[32914] = "huàn", n[22864] = "huàn", n[28873] = "huàn", n[26777] = "huàn", n[21914] = "huàn", n[23880] = "huàn", n[24844] = "huàn", n[25563] = "huàn", n[28185] = "huàn", n[29029] = "huàn", n[29773] = "huàn", n[30227] = "huàn", n[27125] = "huàn", n[28579] = "huàn", n[34279] = "huàn", n[39879] = "huàn", n[25868] = "huàn", n[36696] = "huàn", n[39926] = "huàn", n[39936] = "huàn", n[24031] = "huāng", n[34881] = "huāng", n[23482] = "huǎng", n[26394] = "wáng", n[22595] = "huāng", n[20575] = "huáng", n[21924] = "huáng", n[22573] = "huáng", n[23187] = "huáng", n[23858] = "huáng", n[25560] = "yóng", n[33887] = "huáng", n[40643] = "huáng", n[27003] = "huáng", n[29789] = "huáng", n[22708] = "huáng", n[29530] = "huáng", n[38205] = "huáng", n[29119] = "huǎng", n[33358] = "huáng", n[31316] = "huáng", n[35579] = "huáng", n[37728] = "huáng", n[39213] = "huáng", n[36266] = "huáng", n[38905] = "huáng", n[37892] = "huáng", n[39452] = "huáng", n[39945] = "huáng", n[40017] = "huáng", n[40428] = "huáng", n[24627] = "huǎng", n[28862] = "huǎng", n[26180] = "huǎng", n[22875] = "huǎng", n[35428] = "huǎng", n[29056] = "huǎng", n[32296] = "huǎng", n[35594] = "huǎng", n[20836] = "huǎng", n[29196] = "kuàng", n[24880] = "huàng", n[28361] = "huàng", n[27045] = "huàng", n[26306] = "huàng", n[30365] = "huàng", n[37796] = "huàng", n[30377] = "huàng", n[28787] = "huī", n[25339] = "huī", n[27907] = "huī", n[34950] = "huī", n[28899] = "huī", n[35927] = "huī", n[23118] = "huī", n[23176] = "huī", n[25582] = "huī", n[32730] = "huī", n[26249] = "huī", n[26930] = "wěi", n[26958] = "huī", n[28999] = "yùn", n[29759] = "hún", n[31112] = "huī", n[35452] = "huī", n[24145] = "huī", n[30579] = "huī", n[35096] = "huī", n[22085] = "huī", n[22101] = "huī", n[25757] = "wéi", n[32748] = "huī", n[36637] = "huī", n[28680] = "huī", n[34355] = "huī", n[23368] = "xié", n[39988] = "huī", n[22232] = "huí", n[22252] = "huí", n[24315] = "huí", n[24317] = "huí", n[24667] = "huí", n[36852] = "huí", n[28896] = "huǐ", n[34456] = "huí", n[36901] = "huí", n[30160] = "huí", n[34517] = "huí", n[34582] = "huí", n[34289] = "huì", n[39856] = "huí", n[32354] = "huì", n[27584] = "huǐ", n[27591] = "huǐ", n[27283] = "huǐ", n[29164] = "huǐ", n[35693] = "huǐ", n[23671] = "huì", n[23670] = "huì", n[27851] = "huì", n[24693] = "huì", n[28239] = "xū", n[32117] = "huì", n[32729] = "huì", n[38419] = "huì", n[21295] = "huì", n[24410] = "huì", n[24409] = "huì", n[26371] = "kuài", n[28377] = "huì", n[35439] = "huì", n[36036] = "huì", n[39058] = "huì", n[20705] = "huì", n[22034] = "huì", n[30243] = "lěi", n[34087] = "huì", n[35496] = "huì", n[37514] = "xù", n[22298] = "huì", n[23533] = "huì", n[24979] = "huì", n[26291] = "huì", n[27109] = "huì", n[28499] = "huì", n[28528] = "kuì", n[22118] = "yuě", n[23314] = "huì", n[24507] = "huì", n[27230] = "huì", n[27560] = "kuì", n[28590] = "kuài", n[28618] = "huò", n[29545] = "huì", n[29860] = "huì", n[34184] = "huì", n[34185] = "huì", n[35569] = "huì", n[38958] = "huì", n[27269] = "huì", n[29172] = "huì", n[29871] = "kuài", n[31730] = "huì", n[39215] = "huì", n[22166] = "huì", n[25075] = "huì", n[30650] = "huì", n[31330] = "huì", n[27352] = "huì", n[32362] = "huì", n[32765] = "huì", n[35667] = "huì", n[20790] = "xié", n[37880] = "suì", n[38368] = "huì", n[37932] = "huì", n[38759] = "huì", n[35711] = "huì", n[39018] = "huì", n[26156] = "hūn", n[24795] = "mèn", n[28093] = "hūn", n[28932] = "xūn", n[26836] = "hūn", n[27545] = "mèi", n[28259] = "mǐn", n[33911] = "hūn", n[30567] = "hūn", n[30575] = "hūn", n[34066] = "hūn", n[38333] = "hūn", n[36683] = "hūn", n[24566] = "hún", n[28222] = "hún", n[28279] = "zhuāng", n[39195] = "hún", n[40754] = "hún", n[20434] = "hùn", n[30467] = "yún", n[20529] = "hùn", n[22274] = "hùn", n[23147] = "kūn", n[25485] = "hùn", n[28957] = "hùn", n[23585] = "hùn", n[24897] = "hùn", n[30580] = "hùn", n[35304] = "hùn", n[35554] = "hùn", n[21529] = "huō", n[31220] = "huō", n[39454] = "huō", n[20344] = "huó", n[31214] = "kuò", n[31219] = "kuò", n[37033] = "huǒ", n[37413] = "huǒ", n[28471] = "kuò", n[29047] = "huǒ", n[27790] = "huò", n[21663] = "huò", n[20464] = "huò", n[30483] = "huò", n[38276] = "shǎn", n[21096] = "huò", n[25501] = "xù", n[36008] = "huò", n[26084] = "huò", n[28273] = "huò", n[31117] = "huò", n[31394] = "huò", n[33958] = "huò", n[22148] = "ǒ", n[22895] = "huò", n[25837] = "huò", n[29554] = "huò", n[31719] = "zhuó", n[37699] = "huò", n[27316] = "huò", n[35595] = "huò", n[38616] = "huò", n[30662] = "yuè", n[30986] = "kè", n[31339] = "huò", n[24415] = "huò", n[28694] = "huò", n[32815] = "huò", n[33383] = "huò", n[22207] = "huò", n[26340] = "huò", n[33243] = "huò", n[30312] = "huò", n[30672] = "huò", n[37962] = "huò", n[38852] = "huò", n[38723] = "huò", n[24416] = "huò", n[21001] = "jī", n[21007] = "jī", n[26501] = "jī", n[33497] = "lì", n[39138] = "jī", n[21918] = "jī", n[23878] = "jī", n[24190] = "jǐ", n[25906] = "yǐ", n[25959] = "yǐ", n[26398] = "jī", n[31571] = "jī", n[21976] = "jī", n[31256] = "qí", n[40174] = "jī";n[20703] = "jī", n[27588] = "jī", n[32168] = "qí", n[32193] = "jī", n[37512] = "jī", n[22064] = "jī", n[25731] = "jī", n[27181] = "jī", n[32221] = "qī", n[35309] = "qí", n[35525] = "jì", n[36075] = "jī", n[36369] = "jī", n[36536] = "jī", n[25789] = "yāo", n[27231] = "jī", n[29859] = "jī", n[31144] = "jì", n[31309] = "jī", n[37668] = "jī", n[38574] = "jī", n[25056] = "qí", n[25802] = "jī", n[30959] = "jī", n[31754] = "jī", n[36087] = "jī", n[27333] = "jì", n[32813] = "jī", n[38622] = "jī", n[35663] = "jī", n[38898] = "jī", n[40335] = "jī", n[35684] = "jī", n[37910] = "jī", n[39249] = "jī", n[30314] = "jī", n[36491] = "jī", n[38847] = "jī", n[39765] = "jī", n[40378] = "jī", n[40388] = "jī", n[32647] = "jī", n[34368] = "jī", n[37959] = "jī", n[35209] = "jī", n[37977] = "jī", n[40783] = "jī", n[32648] = "jī", n[40452] = "jī", n[35210] = "jī", n[20033] = "yí", n[20157] = "jí", n[20156] = "jí", n[23568] = "jié", n[20235] = "jí", n[24438] = "jí", n[24547] = "jí", n[37062] = "jí", n[21373] = "jí", n[21469] = "jí", n[23006] = "jí", n[30349] = "jí", n[32026] = "jí", n[22578] = "jí", n[25572] = "jí", n[35289] = "jí", n[20590] = "jí", n[21337] = "jí", n[21814] = "zé", n[26966] = "zhì", n[28097] = "qiè", n[28943] = "qì", n[35899] = "jí", n[26997] = "jí", n[28242] = "jí", n[22601] = "jí", n[24881] = "jí", n[34637] = "jí", n[36236] = "jié", n[27081] = "jí", n[32804] = "jiè", n[33164] = "jí", n[37537] = "jí", n[23983] = "jí", n[28503] = "jí", n[28616] = "shà", n[31679] = "jí", n[34112] = "jí", n[36254] = "què", n[36374] = "jí", n[38794] = "jié", n[40545] = "jí", n[27293] = "jí", n[34703] = "jí", n[36655] = "jí", n[30972] = "shé", n[35147] = "jí", n[36432] = "jí", n[37715] = "jí", n[33381] = "jí", n[36698] = "jí", n[37878] = "jí", n[38709] = "jí", n[40782] = "jí", n[36516] = "jí", n[38631] = "jí", n[20014] = "jǐ", n[22912] = "jǐ", n[23664] = "nì", n[29361] = "jǐ", n[27890] = "jǐ", n[28168] = "jì", n[40062] = "jǐ", n[39778] = "jǐ", n[25760] = "jǐ", n[25023] = "jiǎo", n[27254] = "jǐ", n[25824] = "jǐ", n[28639] = "jì", n[31318] = "jì", n[34787] = "jǐ", n[24401] = "jì", n[26081] = "jì", n[22358] = "jì", n[27749] = "zhī", n[22413] = "jì", n[32e3] = "jì", n[33549] = "jì", n[33572] = "jì", n[35336] = "jì", n[21092] = "jì", n[32018] = "jiè", n[35352] = "jì", n[24122] = "qí", n[24475] = "jì", n[26083] = "jì", n[26782] = "jì", n[22600] = "jì", n[24782] = "jì", n[33262] = "jì", n[33898] = "jì", n[34055] = "jì", n[20862] = "jì", n[21219] = "jì", n[30197] = "jì", n[32153] = "jì", n[35034] = "jì", n[36321] = "jì", n[38555] = "jì", n[39742] = "jì", n[39773] = "jì", n[28419] = "jì", n[28424] = "jì", n[31133] = "jì", n[31273] = "jì", n[31306] = "jì", n[35467] = "jì", n[39781] = "jì", n[26281] = "jì", n[30601] = "kòu", n[21137] = "jì", n[26305] = "jì", n[31300] = "jì", n[34186] = "jì", n[35136] = "jì", n[22156] = "zhāi", n[27285] = "jì", n[32318] = "jì", n[32331] = "jì", n[32637] = "jì", n[34234] = "qí", n[35244] = "jì", n[27317] = "jì", n[27373] = "jué", n[29886] = "zī", n[36447] = "jì", n[39933] = "jì", n[40267] = "jì", n[40780] = "jì", n[24301] = "jì", n[25083] = "jì", n[30304] = "jì", n[31335] = "jì", n[32363] = "xì", n[34318] = "jì", n[39898] = "jì", n[28721] = "jì", n[32380] = "jì", n[34350] = "jì", n[4e4] = "jì", n[34363] = "jì", n[38717] = "jì", n[39990] = "jì", n[39999] = "jì", n[40401] = "jì", n[40045] = "jì", n[39525] = "jì", n[20075] = "jiā", n[23434] = "tū", n[25272] = "jiā", n[25281] = "yá", n[27847] = "jiā", n[24461] = "wàng", n[27616] = "jiā", n[22473] = "xiá", n[25406] = "xié", n[28025] = "jiā", n[26780] = "jiā", n[32798] = "jiā", n[20642] = "jiā", n[29491] = "jiā", n[26933] = "jiǎ", n[29324] = "jiā", n[33141] = "jiā", n[37483] = "jiā", n[25814] = "yè", n[31960] = "jiā", n[35949] = "jiā", n[35985] = "jiā", n[40208] = "jiā", n[37813] = "jiā", n[40602] = "jiā", n[22335] = "jiá", n[24550] = "jiá", n[25204] = "jiá", n[37087] = "jiá", n[21770] = "qiǎn", n[33698] = "jiá", n[33061] = "jiá", n[25118] = "jiá", n[29488] = "yà", n[35020] = "jiá", n[34554] = "jiá", n[37583] = "jiá", n[38956] = "jiá", n[38960] = "jiá", n[40246] = "jiá", n[40266] = "jiá", n[21466] = "jiǎ", n[29630] = "jiǎ", n[26010] = "jiǎ", n[23165] = "jiǎ", n[24486] = "xiá", n[26013] = "jiǎ", n[37440] = "jiǎ", n[27022] = "jiǎ", n[27098] = "jiǎ", n[27295] = "jiǎ", n[24143] = "jià", n[27042] = "jià", n[20729] = "jie", n[39381] = "jià", n[24181] = "jiān", n[20927] = "jiān", n[25108] = "jiān", n[29610] = "qián", n[23015] = "jiān", n[23014] = "jiān", n[22533] = "jiān", n[24116] = "sàn", n[24804] = "jiān", n[29455] = "yàn", n[33786] = "jiān", n[35932] = "jiān", n[20628] = "qiàn", n[25539] = "jiǎn", n[29259] = "jiān", n[33868] = "jiān", n[38290] = "xián", n[38291] = "jiàn", n[38595] = "jiān", n[38764] = "jiān", n[26942] = "jiān", n[29770] = "jiān", n[30583] = "jiān", n[30858] = "zhàn", n[35939] = "yàn", n[28472] = "jiàn", n[30435] = "jiàn", n[31627] = "jiān", n[34090] = "jiān", n[27179] = "jiān", n[29086] = "jiān", n[31284] = "xián", n[32216] = "jiān", n[34129] = "jiān", n[34163] = "jiān", n[40189] = "zhān", n[29112] = "jiān", n[31727] = "jiǎn", n[32273] = "jiān", n[37627] = "jiàn", n[33393] = "jiān", n[38828] = "jiàn", n[39216] = "jiān", n[39330] = "jiān", n[40585] = "jiān", n[28688] = "jiān", n[28666] = "jiàn", n[40146] = "jiān", n[40273] = "jiān", n[27569] = "jiān", n[31003] = "jiān", n[31816] = "zhēn", n[40307] = "jiān", n[25877] = "xiān", n[28728] = "jiān", n[39956] = "jiān", n[27388] = "jiān", n[27570] = "jiān", n[35708] = "jiān", n[39964] = "jiān", n[40380] = "jiān", n[31031] = "jiān", n[31835] = "jiǎn", n[38848] = "jiān", n[39993] = "jiān", n[22223] = "jiān", n[34371] = "jiān", n[37999] = "jiān", n[38857] = "jiān", n[20537] = "jiǎn", n[25400] = "jiǎn", n[25589] = "qián", n[26776] = "jiǎn", n[28245] = "jiǎn", n[22591] = "jiǎn", n[25536] = "jiǎn", n[26908] = "jiǎn", n[28187] = "jiǎn", n[35395] = "jiǎn", n[24383] = "jiǎn", n[26261] = "lán", n[29776] = "jiǎn", n[31591] = "jiǎn", n[32120] = "jiǎn", n[24389] = "jiǎn", n[25129] = "jiǎn", n[20745] = "jiǎn", n[37572] = "wàn", n[25791] = "jiǎn", n[27215] = "zhǎn", n[27298] = "jiǎn", n[34246] = "jiǎn", n[35143] = "jiǎn", n[35145] = "jiǎn", n[30652] = "jiǎn", n[30982] = "jiǎn", n[31777] = "jiǎn", n[32365] = "jiǎn", n[35629] = "jiǎn", n[37803] = "wàn", n[39691] = "jiǎn", n[39950] = "jiǎn", n[40568] = "jiǎn", n[28733] = "jiǎn", n[34834] = "jiǎn", n[37911] = "jiǎn", n[37927] = "jiǎn", n[40571] = "jiǎn", n[35710] = "jiǎn", n[35194] = "jiǎn", n[40572] = "jiǎn", n[35211] = "xiàn", n[27914] = "jiàn", n[20468] = "jiàn", n[21091] = "jiàn", n[26667] = "zùn", n[29652] = "jiàn", n[21105] = "jiàn", n[24484] = "jiàn", n[35e3] = "zùn", n[37360] = "rì", n[37372] = "rì", n[23499] = "jiàn", n[26068] = "jiàn", n[33270] = "jiàn", n[36046] = "jiàn", n[20707] = "tiě", n[27031] = "jìn", n[21134] = "jiàn", n[21133] = "jiàn", n[22713] = "jiàn", n[28567] = "jiàn", n[31947] = "jiàn", n[35539] = "jiàn", n[36068] = "jiàn", n[36253] = "jiàn", n[36368] = "jiàn", n[21138] = "jiàn", n[21140] = "jiàn", n[34214] = "jiàn", n[35563] = "jiàn", n[37749] = "jiàn", n[39198] = "jiàn", n[30647] = "jiàn", n[30639] = "xián", n[30965] = "jiàn", n[30976] = "jiàn", n[37747] = "jiàn", n[25846] = "jiàn", n[27323] = "kǎn", n[32349] = "jiàn", n[28723] = "zùn", n[35256] = "jiàn", n[35675] = "jiàn", n[37865] = "zàn", n[32891] = "nǐ", n[33382] = "jiàn", n[36702] = "jiàn", n[37937] = "jiàn", n[37970] = "jiàn", n[37969] = "jiàn", n[37996] = "jiàn", n[38003] = "jiàn", n[30037] = "jiāng", n[23559] = "jiàng", n[33857] = "jiāng", n[30074] = "jiàng", n[25706] = "qiàng", n[32734] = "jiāng", n[28479] = "jiàng", n[34688] = "jiāng", n[22723] = "jiāng", n[34193] = "jiāng", n[27263] = "jiāng", n[27565] = "jiāng", n[34751] = "jiāng", n[40137] = "jiāng", n[30085] = "jiāng", n[32366] = "jiāng", n[38849] = "jiāng", n[40002] = "jiāng", n[22594] = "jiǎng", n[22888] = "jiǎng", n[22892] = "jiǎng", n[34083] = "jiǎng", n[27123] = "jiǎng", n[29518] = "jiǎng", n[33177] = "jiǎng", n[35611] = "jiǎng", n[39004] = "jiǎng", n[21278] = "jiàng", n[22789] = "xiáng", n[24348] = "jiàng", n[24374] = "jiàng", n[24375] = "qiǎng", n[32115] = "jiàng", n[21221] = "jiàng", n[28400] = "jiàng", n[23929] = "jiàng", n[25726] = "jiàng", n[24394] = "qiǎng", n[31969] = "jiàng", n[37284] = "jiàng", n[37292] = "jiàng", n[27364] = "jiàng", n[35645] = "jiàng", n[23783] = "jiāo", n[33582] = "jiāo", n[25934] = "jiào", n[21932] = "qiáo", n[22032] = "xiāo", n[34400] = "jiāo", n[23308] = "jiāo", n[23957] = "jiāo", n[23971] = "jiāo", n[24973] = "jiāo", n[24994] = "xiāo", n[28550] = "jiāo", n[33184] = "jiāo", n[29131] = "zhuó", n[33202] = "jiāo", n[31322] = "jiāo", n[39851] = "jiāo", n[40257] = "jiāo", n[31781] = "jiāo", n[34797] = "jiāo", n[36679] = "jiāo", n[37902] = "jiāo", n[39509] = "jiāo", n[40422] = "jiāo", n[40430] = "jiāo", n[30703] = "jiǎo", n[33259] = "jiǎo", n[24660] = "xiào", n[25409] = "kù", n[26184] = "jiǎo", n[28868] = "yào", n[31493] = "jiào", n[37349] = "qiǎo", n[31562] = "jiào", n[32094] = "jiǎo", n[28268] = "qiū", n[29005] = "qiāo", n[33139] = "jiǎo", n[36043] = "jiǎo", n[20709] = "yáo", n[25678] = "náo", n[26270] = "jiǎo", n[36363] = "jiǎo", n[37496] = "jiǎo", n[39171] = "jiǎo", n[20748] = "jiǎo", n[24506] = "yáo", n[25759] = "jiǎo", n[25785] = "jiǎo", n[25981] = "jiǎo", n[25983] = "jiǎo", n[29150] = "jiǎo", n[26322] = "jiǎo", n[29868] = "jiǎo", n[30374] = "jiǎo", n[34780] = "jiǎo", n[32371] = "zhuó", n[35665] = "jiǎo", n[23362] = "jiǎo", n[32400] = "jiǎo", n[25898] = "jiǎo", n[28762] = "jiǎo", n[40014] = "jiǎo", n[40867] = "jiǎo", n[21580] = "jiào", n[25357] = "jiào", n[35334] = "jiào", n[29651] = "jiào", n[31372] = "liù", n[25997] = "jué", n[35216] = "jué", n[35226] = "jué", n[28376] = "jiào", n[36611] = "jiào", n[22018] = "jiào", n[22054] = "jiào", n[26016] = "jiào", n[28438] = "jiào", n[23968] = "qiáo", n[28496] = "qiáo", n[23315] = "jiào", n[29541] = "jiào", n[30276] = "qiáo", n[34272] = "jiào", n[36269] = "jiào", n[36686] = "jiào", n[28738] = "zhuó", n[35258] = "jué", n[35685] = "jiào", n[30381] = "jiào", n[37314] = "jiào", n[34963] = "jù", n[25522] = "jiē", n[30158] = "jiē", n[33768] = "shà", n[38542] = "jiē", n[21948] = "jiē", n[22566] = "jiē", n[23192] = "jiē", n[23237] = "suǒ", n[26884] = "qiè", n[28253] = "jiē", n[32080] = "jié", n[33083] = "jiē", n[26988] = "jiē", n[29039] = "jiē", n[29774] = "xié", n[31277] = "jiē", n[38786] = "jiē", n[25809] = "jiē", n[34644] = "jiē", n[30308] = "jiē", n[35631] = "jiē", n[40347] = "jiē", n[21354] = "jié", n[21031] = "jié", n[21030] = "jié", n[23690] = "jié", n[26117] = "jié", n[26466] = "jié", n[21052] = "jié", n[21180] = "jié", n[30092] = "qiè", n[34929] = "jié", n[29412] = "jié", n[36860] = "jié", n[20514] = "jié", n[26717] = "jié", n[27951] = "qiè", n[33709] = "jié", n[35344] = "jié", n[20604] = "jié", n[23848] = "jié", n[25526] = "jié", n[35002] = "jié", n[20625] = "jié", n[23211] = "jié", n[23889] = "kě", n[32092] = "xié", n[34531] = "jié", n[23909] = "jié", n[25641] = "zhé", n[26998] = "jié", n[28368] = "jié", n[31680] = "jié", n[34576] = "jié", n[35440] = "jié", n[36338] = "jié", n[37475] = "jié", n[27044] = "jié", n[34037] = "jié", n[23985] = "kě", n[28500] = "jié", n[35505] = "jié", n[36373] = "jié", n[38268] = "jié", n[38945] = "jié", n[24175] = "jié", n[25843] = "zhì", n[23995] = "jié", n[25838] = "jié", n[30989] = "jié", n[37755] = "jié", n[39834] = "jié", n[24e3] = "jié", n[34846] = "jié", n[34840] = "jié", n[34877] = "jié", n[27601] = "jiě", n[23182] = "jiě", n[35303] = "xiè", n[39159] = "jiě", n[27294] = "jiě", n[20015] = "jiè", n[23701] = "jiè", n[24206] = "jiè", n[23622] = "jiè", n[29600] = "jiè", n[30029] = "jiè", n[30734] = "jiè", n[34936] = "jiè", n[24712] = "kè", n[24483] = "jiè", n[22586] = "jiè", n[26960] = "jiè", n[29758] = "jiè", n[34550] = "jiè", n[29335] = "jiè", n[35489] = "jiè", n[35119] = "jiè", n[39786] = "jiè", n[23984] = "xiè", n[37765] = "jiè", n[20176] = "sǎn", n[31483] = "lè", n[37330] = "jīn", n[30747] = "jīn", n[33621] = "jīn", n[35284] = "jīn", n[22480] = "qín", n[29650] = "jīn", n[32031] = "jìn", n[24781] = "jīn", n[29710] = "jīn", n[33779] = "qín", n[22587] = "jīn", n[29755] = "jīn", n[37375] = "jīn", n[29857] = "jīn", n[40566] = "jīn", n[40645] = "jīn", n[20397] = "jǐn", n[24057] = "jǐn", n[23132] = "qiān", n[33771] = "jǐn", n[20677] = "jìn", n[21418] = "jǐn", n[23268] = "jìn", n[24940] = "qín", n[28428] = "jǐn", n[32202] = "jǐn", n[34035] = "jǐn", n[20760] = "jǐn", n[37670] = "jǐn", n[35641] = "jǐn", n[39241] = "jǐn", n[20242] = "yín", n[21156] = "jìng", n[26499] = "jìn", n[21185] = "jìng", n[27989] = "jìn", n[26185] = "jìn", n[21803] = "yín", n[31090] = "jìn", n[36914] = "jìn", n[29025] = "jìn", n[33272] = "zhī", n[23510] = "qǐn", n[25634] = "jìn", n[28301] = "jìn", n[22672] = "jìn", n[29800] = "jìn", n[30433] = "jìn", n[39352] = "xìn", n[20728] = "jìn", n[20954] = "jìn", n[27471] = "qūn", n[27555] = "jìn", n[23312] = "yǎn", n[28613] = "jìn", n[32265] = "jìn", n[36078] = "jìn", n[22157] = "jìn", n[22743] = "jìn", n[23335] = "jìn", n[28636] = "jìn", n[34254] = "jìn", n[29180] = "jìn", n[29878] = "jìn", n[35250] = "jìn", n[36112] = "jìn", n[40829] = "jìn", n[22357] = "jīng", n[22361] = "jīng", n[24032] = "xíng", n[20144] = "jīng", n[31188] = "jīng", n[33610] = "jīng", n[28039] = "jīng", n[31879] = "kāng", n[23131] = "jīng", n[26061] = "jīng", n[29444] = "jīng", n[32076] = "jīng", n[31241] = "jīng", n[33871] = "jīng", n[32147] = "jīng", n[32161] = "jīng", n[32857] = "jīng", n[37598] = "xìng", n[27256] = "jīng", n[39912] = "jīng", n[40321] = "jīng", n[40324] = "jīng", n[40598] = "jīng", n[40753] = "jīng", n[39514] = "jīng", n[40608] = "jīng", n[20028] = "jǐng", n[22355] = "jǐng", n[23441] = "jǐng", n[27755] = "jǐng", n[27756] = "jǐng", n[21060] = "jǐng", n[31357] = "jǐng", n[27532] = "jǐng", n[38938] = "jǐng", n[24156] = "jǐng", n[25807] = "qíng", n[28555] = "jǐng", n[29828] = "jǐng", n[25020] = "jìng", n[26299] = "jǐng", n[29855] = "jǐng", n[29861] = "jǐng", n[38968] = "jǐng", n[34812] = "jǐng", n[22924] = "jìng", n[20435] = "jìng", n[23129] = "jìng", n[27972] = "jìng", n[20510] = "liàng", n[24371] = "jìng", n[24465] = "jìng", n[33686] = "jìng", n[36885] = "jìng", n[26737] = "jìng", n[26807] = "jìng", n[27537] = "qíng", n[31467] = "jìng", n[33051] = "jìng", n[30169] = "jìng", n[31463] = "zhěn", n[20665] = "jìng", n[35497] = "jìng", n[36353] = "jìng", n[38746] = "jìng", n[26324] = "jìng", n[38748] = "jìng", n[28702] = "jìng", n[40283] = "jìng", n[37857] = "jìng", n[31478] = "jìng", n[31480] = "jìng", n[20875] = "jiōng", n[22384] = "jiōng", n[22491] = "jiōng", n[25156] = "shǎng", n[28027] = "jiǒng", n[32069] = "jiǒng", n[37508] = "xiǎng", n[39369] = "jiōng";n[39403] = "jiōng", n[34319] = "jiōng", n[34324] = "jiōng", n[20879] = "jiǒng", n[22247] = "jiǒng", n[27842] = "jiǒng", n[20400] = "jiǒng", n[36872] = "jiǒng", n[28913] = "jiǒng", n[29018] = "jiǒng", n[39054] = "jiǒng", n[32151] = "jiǒng", n[20690] = "jiǒng", n[29019] = "jiǒng", n[29106] = "jiǒng", n[28547] = "jiǒng", n[35111] = "jiǒng", n[29147] = "jiǒng", n[38984] = "jiǒng", n[20009] = "jiū", n[21244] = "jiū", n[26427] = "jiū", n[29278] = "lè", n[31994] = "jiǔ", n[31998] = "jiū", n[33819] = "jiū", n[25538] = "yóu", n[21113] = "lù", n[25579] = "jiū", n[40169] = "jiū", n[31285] = "zī", n[27163] = "liáo", n[39726] = "jiū", n[20038] = "jiǔ", n[20067] = "jiǔ", n[22906] = "jiǔ", n[27747] = "jiǔ", n[26470] = "jiǔ", n[33295] = "jiǔ", n[32036] = "jiǔ", n[38265] = "jiǔ", n[38894] = "jiǔ", n[21275] = "jiù", n[26622] = "jiù", n[20483] = "jiù", n[25412] = "jiù", n[21267] = "jiù", n[24260] = "jiù", n[24272] = "jiù", n[24271] = "jiù", n[24934] = "jiù", n[27559] = "jiù", n[33290] = "jiù", n[21302] = "jiù", n[39910] = "jiù", n[40596] = "jiù", n[27405] = "jiù", n[40808] = "jiù", n[40434] = "jiù", n[20965] = "jū", n[25221] = "jū", n[21258] = "jū", n[23720] = "jǔ", n[27843] = "jū", n[27625] = "jū", n[30487] = "xū", n[30752] = "jū", n[32605] = "jū", n[38513] = "jū", n[23093] = "jū", n[23150] = "jū", n[23820] = "jū", n[26798] = "jū", n[28090] = "jū", n[25567] = "xū", n[27633] = "jū", n[33106] = "jū", n[36308] = "jū", n[36313] = "qiè", n[33357] = "jū", n[34587] = "jū", n[35530] = "jū", n[36376] = "jū", n[36537] = "jū", n[37606] = "jú", n[39378] = "jū", n[25818] = "jù", n[37624] = "jù", n[39816] = "jū", n[40225] = "jū", n[27275] = "jū", n[40331] = "jū", n[27878] = "jú", n[20407] = "jú", n[29386] = "jú", n[25398] = "jú", n[21881] = "jú", n[23109] = "jú", n[28119] = "jú", n[28951] = "jú", n[37113] = "jú", n[26888] = "jú", n[28264] = "jú", n[29329] = "jú", n[36610] = "jú", n[20714] = "yù", n[31927] = "jú", n[34043] = "zí", n[36348] = "jú", n[38320] = "jú", n[36252] = "jú", n[39414] = "jú", n[32344] = "jué", n[40281] = "jú", n[36459] = "jú", n[40308] = "jú", n[24008] = "jú", n[34332] = "jú", n[40362] = "jú", n[40752] = "jú", n[40755] = "jú", n[39527] = "jú", n[24326] = "jǔ", n[25369] = "jǔ", n[26887] = "jǔ", n[31589] = "jǔ", n[33951] = "jǔ", n[32869] = "jǔ", n[33289] = "jǔ", n[25831] = "jǔ", n[27384] = "jǔ", n[40799] = "jǔ", n[27397] = "jǔ", n[35191] = "jǔ", n[20076] = "jù", n[24042] = "jù", n[22998] = "jù", n[23712] = "jù", n[24583] = "jù", n[27952] = "jù", n[37037] = "jù", n[24592] = "kòu", n[25312] = "jù", n[26139] = "jù", n[27499] = "jù", n[29639] = "zǔ", n[31212] = "jù", n[20534] = "jù", n[28901] = "jù", n[31892] = "jù", n[32799] = "jù", n[34487] = "jù", n[22503] = "jù", n[22526] = "jù", n[35406] = "jù", n[37445] = "jù", n[33961] = "zū", n[34401] = "jù", n[35942] = "jù", n[23520] = "lóu", n[24883] = "jù", n[39375] = "jù", n[21127] = "jù", n[21230] = "jù", n[39828] = "jù", n[22729] = "jù", n[25029] = "jù", n[28605] = "jù", n[31414] = "jù", n[34742] = "qú", n[23656] = "jù", n[39094] = "jù", n[35991] = "lóu", n[31796] = "jù", n[36486] = "jù", n[24514] = "qú", n[25084] = "jù", n[37947] = "jù", n[23010] = "juān", n[21196] = "juàn", n[26392] = "zuī", n[26763] = "xuān", n[28934] = "yè", n[29945] = "juàn", n[33063] = "juān", n[22287] = "quān", n[35024] = "juān", n[21228] = "juān", n[37591] = "xuān", n[38809] = "xuān", n[37816] = "juān", n[37931] = "juān", n[21599] = "juǎn", n[24059] = "juàn", n[24099] = "juàn", n[22477] = "juǎn", n[25458] = "quán", n[33764] = "juǎn", n[33223] = "juǎn", n[37640] = "juǎn", n[22854] = "juàn", n[21173] = "juàn", n[22861] = "quān", n[24366] = "quān", n[24705] = "yuān", n[23128] = "quán", n[24787] = "quán", n[28099] = "juàn", n[26860] = "quān", n[26918] = "quán", n[30538] = "juàn", n[32109] = "juàn", n[32613] = "juàn", n[33091] = "juàn", n[38603] = "jùn", n[30560] = "juàn", n[32121] = "juàn", n[39148] = "yǎng", n[24955] = "juàn", n[34088] = "juàn", n[39179] = "juàn", n[29543] = "juàn", n[32307] = "zhuàn", n[32642] = "juàn", n[35714] = "xuān", n[25767] = "juē", n[23657] = "juē", n[23659] = "juē", n[20101] = "jué", n[23378] = "jué", n[21012] = "jué", n[27666] = "jué", n[22940] = "yuè", n[24353] = "zhāng", n[27770] = "jué", n[33461] = "jué", n[21461] = "zhuó", n[27884] = "xuè", n[29608] = "jué", n[29606] = "jué", n[25367] = "jué", n[30118] = "xuè", n[30724] = "jué", n[34419] = "jué", n[22470] = "què", n[25428] = "zhuó", n[27438] = "jué", n[34455] = "quē", n[34982] = "nà", n[23851] = "jué", n[35363] = "jué", n[36221] = "jué", n[20629] = "què", n[28979] = "jué", n[30686] = "yù", n[32085] = "jué", n[32118] = "jué", n[36233] = "jué", n[37388] = "jué", n[29812] = "jué", n[39363] = "kuài", n[22090] = "jué", n[23973] = "jué", n[25008] = "jué", n[29094] = "jué", n[29236] = "jué", n[30234] = "jué", n[34141] = "jué", n[35310] = "jué", n[40194] = "jué", n[40195] = "jué", n[24992] = "jué", n[27228] = "jué", n[29850] = "qióng", n[33220] = "jué", n[34792] = "jué", n[34793] = "jué", n[29201] = "jué", n[35662] = "jué", n[36471] = "jué", n[21303] = "jué", n[37901] = "jué", n[37917] = "jué", n[28749] = "jué", n[35324] = "jué", n[31345] = "zhuō", n[24399] = "jué", n[25092] = "jué", n[29571] = "jué", n[40418] = "jué", n[30689] = "jué", n[35996] = "jué", n[36521] = "jué", n[38017] = "jué", n[35507] = "qū", n[27758] = "jūn", n[23024] = "xún", n[34944] = "jūn", n[36557] = "jūn", n[33689] = "jūn", n[34448] = "jūn", n[26750] = "jūn", n[37406] = "jūn", n[30853] = "jūn", n[30392] = "jūn", n[30393] = "jūn", n[35232] = "jūn", n[37505] = "jūn", n[37534] = "jūn", n[40106] = "jūn", n[38965] = "jūn", n[37717] = "jūn", n[39862] = "jūn", n[40591] = "jūn", n[40597] = "jūn", n[21569] = "jùn", n[38486] = "jùn", n[22472] = "jùn", n[39298] = "jùn", n[26201] = "jùn", n[28940] = "qū", n[29690] = "jùn", n[26846] = "jùn", n[30063] = "jùn", n[33904] = "jùn", n[20737] = "jùn", n[31640] = "qūn", n[31647] = "jùn", n[34592] = "jùn", n[36048] = "jùn", n[23535] = "jùn", n[25039] = "jùn", n[39189] = "jùn", n[29127] = "jùn", n[28652] = "xùn", n[39423] = "jùn", n[40280] = "jùn", n[40276] = "jùn", n[40277] = "jùn", n[25864] = "pèi", n[25887] = "jùn", n[22448] = "kǎ", n[35011] = "kǎ", n[37490] = "kǎ", n[22866] = "kāi", n[38283] = "kāi", n[37926] = "kāi", n[38399] = "kǎi", n[35912] = "qǐ", n[20977] = "kǎi", n[21108] = "kǎi", n[22607] = "kǎi", n[24887] = "kǎi", n[36614] = "kǎi", n[26271] = "kǎi", n[37703] = "kǎi", n[37799] = "kǎi", n[38355] = "kǎi", n[39101] = "kǎi", n[28812] = "kài", n[27439] = "xì", n[28887] = "kài", n[21203] = "kài", n[24850] = "qì", n[24894] = "xì", n[37774] = "kài", n[26654] = "kān", n[23873] = "zhàn", n[40853] = "kān", n[20890] = "kǎn", n[25211] = "zhì", n[20568] = "kǎn", n[22515] = "xiàn", n[24770] = "kǎn", n[27455] = "qiàn", n[27457] = "kè", n[36641] = "kǎn", n[38993] = "kǎn", n[31479] = "kàn", n[36695] = "kǎn", n[34894] = "kàn", n[23809] = "kàn", n[22664] = "kàn", n[30945] = "kàn", n[39723] = "kàn", n[30681] = "kàn", n[30730] = "kāng", n[38284] = "kàng", n[23261] = "kāng", n[23931] = "kāng", n[28462] = "kāng", n[27130] = "kāng", n[31301] = "kāng", n[36543] = "kāng", n[37870] = "kāng", n[40007] = "kāng", n[21279] = "kàng", n[22245] = "kàng", n[37415] = "kàng", n[23914] = "qiāo", n[39643] = "kāo", n[19970] = "yú", n[25911] = "kǎo", n[27928] = "kào", n[37548] = "kào", n[40083] = "kào", n[39859] = "kào", n[39884] = "kào", n[21308] = "qià", n[29249] = "kē", n[29297] = "kē", n[30754] = "luǒ", n[36279] = "kē", n[23897] = "kē", n[33834] = "kē", n[36603] = "kě", n[29328] = "kē", n[37427] = "kē", n[27068] = "kē", n[34198] = "kē", n[27158] = "kē", n[38950] = "kē", n[37272] = "kē", n[38982] = "kē", n[31002] = "kē", n[27579] = "qiào", n[25570] = "qiā", n[27580] = "qiào", n[32727] = "ké", n[28835] = "kě", n[28167] = "kě", n[25956] = "kě", n[38300] = "xiǎ", n[21067] = "kēi", n[21184] = "kè", n[21194] = "kè", n[23060] = "kè", n[23557] = "kēi", n[22529] = "kè", n[24856] = "qià", n[30814] = "què", n[34889] = "kè", n[24857] = "kè", n[30886] = "kè", n[32217] = "kè", n[33360] = "kè", n[35506] = "kè", n[37633] = "kè", n[39437] = "kè", n[32910] = "kěn", n[32955] = "kěn", n[40834] = "yín", n[35940] = "kěn", n[35975] = "kūn", n[22718] = "kěn", n[37689] = "kěn", n[25031] = "kěn", n[29666] = "yín", n[25519] = "kèn", n[35075] = "kèn", n[21157] = "kēng", n[38444] = "kēng", n[22344] = "rǒng", n[25395] = "qiān", n[30785] = "kēng", n[27576] = "shēng", n[29308] = "kēng", n[25537] = "zhēng", n[30812] = "kēng", n[30843] = "kěng", n[25724] = "qiān", n[35481] = "kēng", n[37557] = "kēng", n[37726] = "kēng", n[37847] = "kēng", n[22506] = "kōng", n[24766] = "kǒng", n[28083] = "náng", n[26892] = "qiāng", n[30847] = "kōng", n[36539] = "kōng", n[37651] = "kōng", n[40316] = "kōng", n[32683] = "qiāng", n[38810] = "kòng", n[21118] = "kōu", n[24388] = "kōu", n[25715] = "kōu", n[30616] = "kōu", n[21174] = "kǒu", n[31448] = "qǔ", n[25922] = "kòu", n[20902] = "kòu", n[23484] = "kòu", n[37350] = "kòu", n[31387] = "kòu", n[28401] = "kòu", n[34098] = "kòu", n[31750] = "kòu", n[40391] = "kòu", n[25181] = "yū", n[30715] = "kū", n[37056] = "kū", n[26701] = "kū", n[31193] = "kù", n[31371] = "zhú", n[22288] = "kū", n[36301] = "kū", n[39852] = "kū", n[29404] = "kǔ", n[20424] = "kù", n[24235] = "kù", n[28933] = "kù", n[34996] = "kù", n[32093] = "kù", n[30228] = "kù", n[24292] = "kù", n[35122] = "kù", n[22195] = "kù", n[21685] = "kuā", n[26183] = "xù", n[33343] = "kuā", n[35463] = "kuà", n[37529] = "kuǎ", n[36278] = "wù", n[39611] = "kuà", n[25811] = "kuǎi", n[24028] = "kuài", n[20983] = "kuài", n[22310] = "kuài", n[27443] = "kuài", n[22602] = "kuài", n[40089] = "kuài", n[20744] = "kuài", n[22692] = "tuí", n[37174] = "kuài", n[22130] = "kuài", n[24293] = "kuài", n[29546] = "kuài", n[33214] = "kuài", n[26077] = "kuài", n[31977] = "kuài", n[40032] = "kuài", n[23515] = "kuān", n[23532] = "kuān", n[33239] = "kuān", n[37991] = "kuān", n[39638] = "kuān", n[26785] = "kuǎn", n[27445] = "kuǎn", n[27456] = "kuǎn", n[36811] = "wàng", n[21179] = "kuāng", n[37052] = "kuāng", n[21289] = "kuāng", n[24647] = "kuāng", n[27949] = "kuāng", n[31610] = "kuāng", n[35462] = "kuāng", n[36589] = "kuāng", n[24569] = "wǎng", n[25218] = "zài", n[29381] = "kuáng", n[36566] = "kuáng", n[36576] = "kuáng", n[35473] = "kuáng", n[40287] = "kuáng", n[20771] = "kuǎng", n[25069] = "kuǎng", n[23730] = "kuàng", n[27841] = "kuàng", n[26175] = "kuàng", n[30486] = "kuàng", n[30783] = "kuàng", n[32075] = "kuàng", n[32086] = "kuàng", n[36026] = "kuàng", n[36582] = "kuàng", n[37489] = "kuàng", n[37595] = "kuàng", n[37178] = "kuàng", n[22745] = "kuàng", n[40651] = "kuàng", n[25068] = "kuàng", n[26336] = "kuàng", n[31014] = "kuàng", n[31340] = "kuàng", n[32394] = "kuàng", n[37979] = "kuàng", n[21042] = "kuī", n[32871] = "kuī", n[31418] = "kuī", n[34407] = "kuī", n[39005] = "kuī", n[38362] = "kuī", n[24011] = "kuī", n[26182] = "kuí", n[37128] = "kuí", n[39577] = "kuí", n[25123] = "kuí", n[26959] = "kuí", n[26961] = "kuí", n[38959] = "kuí", n[27334] = "kuí", n[34248] = "kuí", n[37736] = "kuí", n[37751] = "kuí", n[39460] = "kuí", n[34359] = "kuí", n[24025] = "kuí", n[34369] = "kuí", n[29354] = "kuí", n[36520] = "kuí", n[23599] = "kuì", n[28995] = "kuǐ", n[38925] = "kuǐ", n[30920] = "wěi", n[36446] = "kuǐ", n[23231] = "kuì", n[22067] = "kuì", n[23303] = "kuì", n[24978] = "kuì", n[32877] = "kuì", n[34146] = "kuì", n[33197] = "kuì", n[35593] = "kuì", n[39229] = "kuì", n[31779] = "kuì", n[32885] = "kuì", n[31812] = "kuì", n[39243] = "kuì", n[22531] = "kūn", n[22546] = "kūn", n[23825] = "kūn", n[23824] = "kūn", n[26204] = "kūn", n[29457] = "kūn", n[33742] = "kūn", n[35016] = "kūn", n[28956] = "kūn", n[39648] = "kūn", n[35049] = "kūn", n[40525] = "kūn", n[28489] = "kūn", n[34603] = "kūn", n[35084] = "kūn", n[39656] = "kūn", n[29108] = "kūn", n[29819] = "kūn", n[37653] = "kūn", n[39433] = "kūn", n[39908] = "kūn", n[40318] = "kūn", n[40356] = "kūn", n[22776] = "kǔn", n[26801] = "kǔn", n[31093] = "kǔn", n[30833] = "kǔn", n[31239] = "kǔn", n[35021] = "kǔn", n[22780] = "kǔn", n[31259] = "kǔn", n[32145] = "kǔn", n[38315] = "kǔn", n[38328] = "kǔn", n[28035] = "kùn", n[30543] = "kùn", n[25313] = "kuò", n[31560] = "kuò", n[33855] = "kuò", n[33856] = "kuò", n[22091] = "tūn", n[38946] = "kuò", n[39674] = "yuè", n[25844] = "kuò", n[28662] = "kuò", n[38346] = "kuò", n[38815] = "kuò", n[38869] = "kuò", n[38697] = "kuò", n[38841] = "kuò", n[39712] = "kuò", n[38817] = "la", n[26566] = "lā", n[33736] = "lā", n[25626] = "xié", n[30934] = "lá", n[25574] = "là", n[22201] = "lá", n[34270] = "lǎ", n[32715] = "là", n[28290] = "là", n[25575] = "là", n[26955] = "là", n[34635] = "là", n[36770] = "là", n[34674] = "là", n[25848] = "liè", n[25867] = "lài", n[29193] = "liè", n[33240] = "là", n[39694] = "là", n[27380] = "lài", n[29902] = "là", n[38260] = "là", n[39931] = "là", n[34847] = "là", n[37982] = "là", n[20358] = "lái", n[20459] = "lái", n[20488] = "lái", n[37106] = "lái", n[23137] = "lài", n[23821] = "lái", n[24242] = "lái", n[24480] = "lài", n[26814] = "lái", n[28150] = "lái", n[29453] = "lái", n[33802] = "lái", n[36904] = "lái", n[26870] = "lái", n[29724] = "lái", n[31577] = "lái", n[31618] = "lái", n[37688] = "lái", n[39435] = "lái", n[39904] = "lái", n[40326] = "lái", n[40627] = "lái", n[35184] = "lǎi", n[21819] = "lài", n[30558] = "lài", n[36058] = "lài", n[36084] = "lài", n[38972] = "lài", n[30296] = "lì", n[38978] = "lài", n[40291] = "lài", n[28712] = "lài", n[28716] = "lài", n[34302] = "lài", n[30313] = "lài", n[31839] = "lài", n[24783] = "lín", n[23888] = "lán", n[33915] = "lán", n[21425] = "qiān", n[20758] = "lán", n[25058] = "xiàn", n[29155] = "lán", n[29175] = "lán", n[34253] = "lán", n[35157] = "lán", n[38348] = "lán", n[29884] = "lán", n[24177] = "lán", n[35172] = "lán", n[35659] = "lán", n[25876] = "lán", n[28734] = "lán", n[28742] = "lán", n[31811] = "lán", n[32383] = "lán", n[34347] = "lán", n[34349] = "lán", n[26005] = "lán", n[27396] = "lán", n[35188] = "lán", n[22226] = "lán", n[28769] = "lán", n[31843] = "lán", n[27415] = "lán", n[35733] = "lán", n[36509] = "lán", n[35197] = "lán", n[37997] = "lán", n[38858] = "lán", n[28008] = "lǎn", n[37250] = "lǎn", n[22728] = "lǎn", n[35239] = "lǎn", n[25829] = "lǎn", n[23358] = "lǎn", n[25078] = "lǎn", n[23364] = "lǎn", n[35261] = "lǎn", n[23375] = "lǎn", n[25900] = "lǎn", n[28768] = "lǎn", n[27414] = "lǎn", n[29222] = "làn", n[39026] = "lǎn", n[32412] = "lǎn", n[29143] = "làn", n[22146] = "làn", n[22735] = "xiàn", n[28651] = "làn", n[29185] = "làn", n[29211] = "làn";n[29907] = "làn", n[29220] = "làn", n[31991] = "làn", n[38020] = "làn", n[21190] = "láng", n[37086] = "láng", n[21748] = "liàng", n[27444] = "láng", n[23247] = "láng", n[25999] = "láng", n[26745] = "láng", n[33992] = "láng", n[29807] = "láng", n[30816] = "láng", n[31588] = "làng", n[33350] = "láng", n[34571] = "láng", n[37074] = "láng", n[27139] = "láng", n[36532] = "láng", n[37571] = "láng", n[37807] = "láng", n[39418] = "liáng", n[23808] = "lǎng", n[26390] = "lǎng", n[28922] = "lǎng", n[22641] = "lǎng", n[34018] = "lǎng", n[35471] = "làng", n[26404] = "lǎng", n[22476] = "làng", n[38316] = "làng", n[31913] = "lāo", n[25736] = "lāo", n[21172] = "láo", n[31362] = "láo", n[21744] = "láo", n[28022] = "láo", n[21214] = "láo", n[20695] = "láo", n[22062] = "lào", n[23959] = "láo", n[24998] = "lào", n[24997] = "láo", n[26405] = "láo", n[30278] = "láo", n[30961] = "luò", n[31785] = "láo", n[34791] = "liáo", n[37906] = "láo", n[39007] = "láo", n[39645] = "láo", n[32770] = "lǎo", n[21694] = "lǎo", n[24645] = "lǎo", n[29419] = "lǎo", n[33622] = "lǎo", n[29679] = "lǎo", n[30803] = "lǎo", n[34543] = "lǎo", n[37536] = "lǎo", n[39857] = "lǎo", n[36689] = "lǎo", n[32097] = "luò", n[21984] = "lào", n[23274] = "lào", n[27138] = "yuè", n[28551] = "lào", n[36540] = "lào", n[27247] = "lào", n[32814] = "lào", n[36546] = "lào", n[38430] = "lè", n[24519] = "lè", n[27707] = "lè", n[33403] = "lè", n[29583] = "lè", n[30771] = "lè", n[27005] = "yuè", n[38903] = "lè", n[39182] = "lè", n[31765] = "lè", n[39987] = "lè", n[40051] = "lè", n[32107] = "lèi", n[34050] = "léi", n[27151] = "lěi", n[30078] = "léi", n[30949] = "lěi", n[32306] = "léi", n[25858] = "lèi", n[30988] = "lěi", n[27345] = "lěi", n[29891] = "léi", n[31015] = "lèi", n[32397] = "léi", n[32589] = "léi", n[34354] = "léi", n[37939] = "léi", n[36704] = "léi", n[20797] = "léi", n[37976] = "léi", n[38721] = "léi", n[34374] = "léi", n[40041] = "léi", n[27417] = "léi", n[32413] = "léi", n[40762] = "léi", n[21437] = "lěi", n[27937] = "lèi", n[22593] = "lěi", n[20651] = "lěi", n[35460] = "lěi", n[34124] = "lěi", n[22744] = "lěi", n[30295] = "lěi", n[34271] = "lěi", n[27344] = "lěi", n[30667] = "lěi", n[31016] = "lěi", n[28741] = "lěi", n[34845] = "lěi", n[34365] = "lěi", n[35716] = "lěi", n[22760] = "lěi", n[38008] = "lěi", n[40467] = "lěi", n[28057] = "lèi", n[28122] = "lèi", n[31089] = "shuì", n[37511] = "lèi", n[38939] = "lèi", n[38954] = "lèi", n[37649] = "lèi", n[39075] = "lèi", n[39006] = "lèi", n[32391] = "lèi", n[34353] = "lèi", n[31159] = "lèi", n[31260] = "líng", n[21797] = "léng", n[23834] = "líng", n[30864] = "léng", n[34192] = "léng", n[20528] = "lèng", n[22542] = "lèng", n[30550] = "lèng", n[36380] = "lèng", n[21013] = "lí", n[21075] = "lí", n[33650] = "lí", n[24737] = "lí", n[26808] = "lí", n[29709] = "lí", n[33758] = "lí", n[26819] = "lí", n[29314] = "lí", n[21114] = "lí", n[30557] = "lí", n[31587] = "lí", n[33347] = "lí", n[23415] = "lí", n[30432] = "lí", n[31472] = "lí", n[35981] = "lí", n[29339] = "máo", n[31950] = "lí", n[34110] = "lí", n[35125] = "lí", n[37611] = "lí", n[32301] = "lí", n[37637] = "lí", n[34765] = "lí", n[35623] = "lí", n[37288] = "lí", n[22175] = "lí", n[37328] = "xǐ", n[38626] = "lí", n[39887] = "lí", n[25988] = "tái", n[29896] = "lí", n[34808] = "lí", n[37867] = "lí", n[39916] = "lí", n[40313] = "lí", n[40599] = "lì", n[22212] = "lí", n[28757] = "lí", n[34362] = "lí", n[34859] = "lí", n[23371] = "lì", n[24306] = "lí", n[21145] = "lí", n[37975] = "lí", n[31346] = "lí", n[31852] = "lí", n[32410] = "xǐ", n[39530] = "lí", n[40058] = "lí", n[40477] = "lí", n[23771] = "lǐ", n[23778] = "lǐ", n[23794] = "lǐ", n[28012] = "lǐ", n[35041] = "lǐ", n[31924] = "lǐ", n[35023] = "lǐ", n[35914] = "lǐ", n[37616] = "lǐ", n[31150] = "lǐ", n[39881] = "lǐ", n[37008] = "lǐ", n[40039] = "lǐ", n[27418] = "lǐ", n[40049] = "lǐ", n[23668] = "lì", n[26424] = "lì", n[21459] = "lì", n[23718] = "lì", n[27828] = "lì", n[27829] = "mǐ", n[36835] = "zhì", n[26627] = "lì", n[30725] = "lì", n[33560] = "lì", n[36210] = "lì", n[21774] = "lì", n[23091] = "lì", n[24743] = "lì", n[26651] = "lì", n[28016] = "lì", n[28054] = "lì", n[29653] = "lì", n[31197] = "lì", n[23151] = "lì", n[24759] = "lì", n[33079] = "lì", n[34488] = "lì", n[20947] = "lì", n[21412] = "lì", n[26841] = "liè", n[34528] = "lì", n[21423] = "lì", n[22619] = "lì", n[24900] = "lì", n[25646] = "lì", n[30553] = "lì", n[33950] = "lì", n[33946] = "lì", n[37469] = "lì", n[40168] = "lì", n[21426] = "lì", n[26278] = "lì", n[27508] = "lì", n[29806] = "lì", n[32159] = "liè", n[34599] = "lì", n[34679] = "lì", n[21237] = "lì", n[26310] = "lì", n[27511] = "lì", n[38583] = "lì", n[40215] = "lì", n[24001] = "liè", n[27306] = "lì", n[28671] = "lì", n[30975] = "lì", n[38584] = "lì", n[39681] = "lì", n[20782] = "lì", n[25853] = "yuè", n[26334] = "lì", n[27348] = "lì", n[29188] = "liè", n[29345] = "lì", n[31154] = "lì", n[34823] = "lì", n[22182] = "lì", n[22754] = "lì", n[25866] = "luò", n[27359] = "yuè", n[28701] = "lì", n[29893] = "lì", n[31018] = "lì", n[34294] = "lì", n[27370] = "lì", n[29199] = "lì", n[29905] = "lì", n[30445] = "lì", n[31019] = "lì", n[31986] = "lì", n[34851] = "lì", n[20791] = "lì", n[30311] = "lì", n[31024] = "lì", n[32389] = "yào", n[37192] = "lì", n[40389] = "lì", n[40604] = "lì", n[22215] = "lì", n[25894] = "shài", n[35323] = "lù", n[36498] = "luò", n[36706] = "lì", n[27408] = "lì", n[35720] = "lì", n[36707] = "lì", n[25901] = "luǒ", n[29925] = "lì", n[38722] = "lì", n[38731] = "lì", n[20486] = "liǎng", n[36899] = "lián", n[26815] = "liǎn", n[20151] = "lián", n[22009] = "lián", n[24937] = "liǎn", n[28307] = "xiàn", n[28451] = "lián", n[34030] = "lián", n[21298] = "lián", n[22889] = "lián", n[27087] = "xiàn", n[27108] = "liǎn", n[29073] = "lián", n[35229] = "lián", n[21126] = "lián", n[21299] = "lián", n[22098] = "lián", n[23294] = "lián", n[24976] = "lián", n[30927] = "qiān", n[32872] = "lián", n[32875] = "lián", n[35123] = "lián", n[28627] = "lián", n[32314] = "lián", n[32756] = "lián", n[32878] = "lián", n[34197] = "lián", n[34698] = "lián", n[27363] = "liǎn", n[29163] = "lián", n[32879] = "lián", n[35632] = "lián", n[36453] = "lián", n[27318] = "qiān", n[37772] = "lián", n[28718] = "lián", n[31806] = "lián", n[39697] = "lián", n[37934] = "lián", n[39985] = "lián", n[31842] = "lián", n[31848] = "lián", n[25689] = "liàn", n[29833] = "liǎn", n[23322] = "liǎn", n[34207] = "xiān", n[25986] = "liǎn", n[33225] = "liǎn", n[37179] = "liǎn", n[35165] = "liǎn", n[32695] = "liǎn", n[34334] = "liǎn", n[34333] = "liǎn", n[37302] = "yàn", n[20678] = "liàn", n[22556] = "liàn", n[23201] = "liàn", n[28229] = "liàn", n[33840] = "liàn", n[29001] = "liàn", n[29779] = "liàn", n[32244] = "liàn", n[28592] = "liàn", n[37676] = "liàn", n[27566] = "liàn", n[37706] = "liàn", n[37832] = "liàn", n[28722] = "liàn", n[39946] = "liàn", n[25088] = "liàn", n[32414] = "liàn", n[20429] = "liáng", n[28092] = "liàng", n[36748] = "liáng", n[27153] = "liáng", n[36652] = "liáng", n[31975] = "liáng", n[20001] = "liǎng", n[20841] = "liǎng", n[21793] = "liǎng", n[21858] = "liǎng", n[25498] = "liǎng", n[33084] = "liǎng", n[35058] = "liǎng", n[32201] = "liǎng", n[34621] = "liǎng", n[39758] = "liǎng", n[24738] = "liàng", n[21928] = "liàng", n[28280] = "liàng", n[36620] = "liàng", n[35538] = "liàng", n[36635] = "liàng", n[37700] = "liàng", n[36477] = "liāo", n[23582] = "liáo", n[23930] = "liáo", n[24960] = "liáo", n[28475] = "liú", n[33163] = "liáo", n[23293] = "liáo", n[23962] = "liáo", n[23963] = "liáo", n[25005] = "liǎo", n[25977] = "liáo", n[36988] = "liáo", n[26296] = "liáo", n[27217] = "liáo", n[29849] = "liáo", n[33195] = "liáo", n[30274] = "liáo", n[31426] = "liáo", n[23658] = "liáo", n[24299] = "liáo", n[31773] = "liáo", n[32346] = "liáo", n[34260] = "liáo", n[34783] = "liáo", n[35906] = "liáo", n[36095] = "liáo", n[36440] = "liáo", n[29198] = "liǎo", n[29202] = "liǎo", n[39106] = "liù", n[39630] = "liáo", n[39113] = "liáo", n[40431] = "liáo", n[37333] = "liào", n[37149] = "liǎo", n[32326] = "mù", n[26338] = "liǎo", n[38269] = "liǎo", n[23590] = "liào", n[28819] = "liào", n[31415] = "liào", n[37904] = "liào", n[24538] = "xī", n[27615] = "liě", n[25368] = "liě", n[21158] = "xié", n[21181] = "liè", n[23028] = "liè", n[25362] = "liè", n[33570] = "liè", n[36862] = "liè", n[21751] = "lǜ", n[22483] = "liè", n[26677] = "liè", n[27990] = "liè", n[28910] = "liè", n[29471] = "liè", n[33055] = "liè", n[34522] = "liè", n[29037] = "liè", n[32855] = "liè", n[24036] = "liè", n[39090] = "liè", n[29156] = "tài", n[20768] = "liè", n[39844] = "liè", n[40247] = "liè", n[29557] = "liè", n[29347] = "liè", n[39707] = "liè", n[40050] = "liè", n[21432] = "miǎo", n[38462] = "lín", n[20903] = "lín", n[23818] = "lín", n[26237] = "lín", n[31910] = "lín", n[30852] = "lín", n[31638] = "lǐn", n[37168] = "lín", n[38563] = "lín", n[28542] = "lín", n[29532] = "lìn", n[26036] = "lín", n[26301] = "lín", n[29136] = "lín", n[29848] = "lín", n[30084] = "lìn", n[33256] = "lín", n[32343] = "lín", n[32759] = "lín", n[40592] = "lín", n[36692] = "lín", n[22755] = "lín", n[28726] = "lín", n[37883] = "lín", n[39502] = "lín", n[40023] = "lín", n[33787] = "má", n[20099] = "lìn", n[20719] = "lǐn", n[20956] = "lǐn", n[25755] = "lǐn", n[24297] = "lǐn", n[25037] = "lǐn", n[28575] = "lǐn", n[27265] = "lǐn", n[30301] = "lǐn", n[30299] = "lǐn", n[24673] = "lìn", n[24715] = "lìn", n[28955] = "lìn", n[30195] = "má", n[36035] = "lìn", n[27209] = "lìn", n[29968] = "lìn", n[38325] = "lìn", n[34298] = "lìn", n[36472] = "lìn", n[36505] = "lìn", n[36522] = "lìn", n[36709] = "lìn", n[21026] = "líng", n[22397] = "líng", n[22796] = "líng", n[22984] = "líng", n[23738] = "lǐng", n[24446] = "líng", n[29393] = "líng", n[26148] = "líng", n[26382] = "líng", n[12295] = "líng", n[30346] = "líng", n[30769] = "líng", n[31202] = "líng", n[31451] = "líng", n[32656] = "líng", n[34954] = "lǐng", n[40496] = "líng", n[23112] = "líng", n[25493] = "líng", n[28137] = "líng", n[29708] = "líng", n[31533] = "líng", n[32055] = "líng", n[33330] = "líng", n[34897] = "líng", n[31102] = "líng", n[35397] = "líng", n[36297] = "líng", n[36584] = "líng", n[34020] = "líng", n[35052] = "líng", n[37428] = "líng", n[38301] = "líng", n[32190] = "líng", n[34054] = "líng", n[36632] = "líng", n[38666] = "líng", n[39382] = "líng", n[28586] = "líng", n[34166] = "líng", n[37634] = "líng", n[38679] = "líng", n[39807] = "líng", n[40210] = "líng", n[40567] = "líng", n[29167] = "líng", n[38685] = "líng", n[38683] = "líng", n[40802] = "líng", n[39914] = "líng", n[23361] = "líng", n[40801] = "líng", n[27386] = "líng", n[37309] = "líng", n[38728] = "líng", n[27422] = "líng", n[29223] = "líng", n[40610] = "líng", n[40855] = "líng", n[38936] = "lǐng", n[23994] = "lǐng", n[28841] = "lìng", n[34342] = "lìng", n[28561] = "liù", n[36435] = "liū", n[30020] = "liú", n[26047] = "yóu", n[26056] = "liú", n[30065] = "liú", n[35031] = "liú", n[23225] = "liú", n[23911] = "liú", n[33957] = "liú", n[33989] = "liú", n[29792] = "liú", n[39127] = "liú", n[21129] = "liú", n[29804] = "liú", n[30914] = "liù", n[39392] = "liú", n[40544] = "liú", n[27210] = "liú", n[29858] = "liú", n[30081] = "liú", n[38240] = "liú", n[30277] = "liú", n[34761] = "liú", n[39413] = "liú", n[22176] = "liú", n[25072] = "liǔ", n[28687] = "liú", n[34288] = "liǔ", n[37798] = "liù", n[40589] = "liú", n[37840] = "liú", n[39104] = "liú", n[37890] = "liú", n[39470] = "liú", n[39109] = "liú", n[39969] = "liú", n[40377] = "liú", n[39505] = "liú", n[26625] = "liǔ", n[26718] = "liǔ", n[29643] = "liǔ", n[26746] = "liǔ", n[32185] = "liǔ", n[29102] = "liǔ", n[32630] = "liǔ", n[37622] = "liǔ", n[27246] = "liǔ", n[23356] = "liǔ", n[32640] = "liǔ", n[32719] = "liù", n[22639] = "liù", n[24263] = "liù", n[30943] = "liù", n[38692] = "liù", n[39230] = "liù", n[38625] = "liù", n[39736] = "liù", n[40410] = "liù", n[23592] = "páng", n[26173] = "lóng", n[30508] = "lóng", n[31452] = "lóng", n[28272] = "lóng", n[28381] = "lóng", n[23952] = "lóng", n[27102] = "lóng", n[28427] = "lóng", n[31725] = "lǒng", n[40845] = "lǒng", n[20785] = "lòng", n[34338] = "lóng", n[37863] = "lóng", n[38707] = "lóng", n[22184] = "lóng", n[24003] = "lóng", n[24004] = "lóng", n[28711] = "shuāng", n[26344] = "lóng", n[26407] = "lóng", n[27379] = "lóng", n[29206] = "lóng", n[29903] = "lóng", n[35185] = "lóng", n[30675] = "lóng", n[31026] = "lóng", n[31025] = "lóng", n[34860] = "lóng", n[34858] = "lóng", n[40851] = "lǒng", n[40850] = "lóng", n[31840] = "lǒng", n[32894] = "lóng", n[35909] = "lóng", n[36504] = "lǒng", n[38727] = "lóng", n[37992] = "lóng", n[39521] = "lóng", n[40471] = "lóng", n[38580] = "lǒng", n[24511] = "lòng", n[22751] = "lǒng", n[22752] = "lǒng", n[25871] = "lǒng", n[31433] = "lǒng", n[21730] = "lòng", n[26759] = "lòng", n[30822] = "luò", n[36122] = "lòng", n[22029] = "lóu", n[30620] = "lǘ", n[25695] = "lǒu", n[21061] = "lóu", n[23105] = "lóu", n[28295] = "lóu", n[20674] = "lǚ", n[24276] = "lóu", n[24954] = "lǚ", n[28426] = "lóu", n[34078] = "lóu", n[36977] = "lóu", n[27155] = "lóu", n[29089] = "lóu", n[32812] = "lóu", n[33371] = "lóu", n[34747] = "lóu", n[35633] = "lóu", n[36545] = "lóu", n[38843] = "lóu", n[39631] = "lóu", n[40412] = "lǚ", n[22655] = "lǒu", n[23937] = "lǒu", n[29962] = "lǒu", n[31757] = "lǒu", n[23642] = "lòu", n[30267] = "lòu", n[30266] = "lòu", n[37860] = "lòu", n[35618] = "lū", n[22165] = "lū", n[25852] = "lū", n[26534] = "lú", n[33326] = "lú", n[29576] = "lú", n[37417] = "lú", n[39359] = "lú", n[39794] = "lú", n[30439] = "lú", n[22183] = "lú", n[22746] = "lú", n[24300] = "lú", n[25870] = "luó", n[28696] = "lú", n[29561] = "lú", n[34310] = "lú", n[26341] = "lú", n[27368] = "lú", n[29200] = "lú", n[29904] = "lú", n[33242] = "lú", n[30673] = "lú", n[31834] = "lú", n[32401] = "lú", n[32591] = "lú", n[33387] = "lú", n[34854] = "lú", n[36708] = "lú", n[37994] = "lú", n[39025] = "lú", n[39639] = "lú", n[40056] = "lú", n[40469] = "lú", n[40696] = "lú", n[40565] = "lǔ", n[30837] = "lǔ", n[34396] = "lǔ", n[22647] = "lǔ", n[28407] = "lǔ", n[34046] = "lǔ", n[27152] = "lǔ", n[28571] = "lǔ", n[39791] = "lǔ", n[25796] = "lǔ", n[30944] = "lǔ", n[31326] = "lǔ", n[28674] = "lǔ", n[27347] = "lǔ", n[27660] = "lǔ", n[33379] = "lǔ", n[37824] = "lǔ", n[33386] = "lǔ", n[37930] = "lǔ", n[37989] = "lǔ", n[22309] = "lù", n[29994] = "lù", n[20371] = "lù", n[22388] = "lù", n[24404] = "lù", n[23757] = "lù", n[21198] = "lù", n[38520] = "lù", n[23101] = "lù", n[28117] = "lù", n[28133] = "lù", n[30793] = "lù", n[33737] = "lù", n[26882] = "lù";n[29741] = "lù", n[31103] = "lù", n[20679] = "lù", n[21216] = "lù", n[30429] = "lù", n[30569] = "lù", n[31249] = "lù", n[36034] = "lù", n[36613] = "lù", n[22646] = "lù", n[24280] = "lù", n[25693] = "lù", n[31635] = "lù", n[31926] = "lù", n[32209] = "lǜ", n[34061] = "lù", n[27162] = "lù", n[36258] = "lù", n[36379] = "lù", n[37249] = "lù", n[31307] = "lù", n[34135] = "lù", n[37636] = "lù", n[37684] = "lù", n[37682] = "lù", n[34736] = "lù", n[40252] = "lù", n[31798] = "lù", n[36439] = "lù", n[36678] = "lù", n[39428] = "lù", n[31788] = "lù", n[31797] = "lù", n[39909] = "lù", n[40294] = "lù", n[40305] = "lù", n[37876] = "lù", n[39484] = "lù", n[31833] = "lù", n[34370] = "lù", n[40442] = "lù", n[40265] = "luán", n[22301] = "luán", n[22897] = "luán", n[23372] = "luán", n[23423] = "luán", n[24018] = "luán", n[25891] = "luán", n[26347] = "luán", n[27410] = "luán", n[28755] = "luàn", n[32649] = "luán", n[33249] = "ní", n[33248] = "luán", n[22302] = "luán", n[28772] = "luán", n[34378] = "luán", n[38014] = "luán", n[30324] = "luán", n[30325] = "luán", n[40478] = "luán", n[35254] = "luó", n[37344] = "luàn", n[20095] = "zhì", n[20098] = "luàn", n[34189] = "wàn", n[25476] = "lún", n[20374] = "lún", n[20523] = "lún", n[38511] = "lún", n[22279] = "lún", n[23144] = "lún", n[23832] = "lún", n[23833] = "lún", n[28138] = "lún", n[33749] = "lún", n[26822] = "lún", n[33088] = "lún", n[30870] = "lùn", n[32803] = "lǔn", n[34598] = "lún", n[35542] = "lùn", n[36378] = "lún", n[36650] = "lún", n[30958] = "lún", n[37632] = "lún", n[39913] = "lún", n[22504] = "lǔn", n[24768] = "lùn", n[31248] = "lǔn", n[28323] = "lùn", n[22217] = "luó", n[22230] = "luó", n[38961] = "luō", n[23549] = "lüè", n[33121] = "luó", n[32645] = "luó", n[37837] = "luó", n[20792] = "luó", n[35260] = "luó", n[39486] = "luó", n[25886] = "luó", n[29568] = "luó", n[34367] = "luó", n[37007] = "luó", n[27407] = "luó", n[39512] = "luó", n[40449] = "luó", n[31854] = "luó", n[38012] = "luó", n[39264] = "luó", n[21062] = "luǒ", n[25456] = "wǒ", n[33999] = "luǒ", n[36534] = "luǒ", n[33245] = "luǒ", n[26346] = "luǒ", n[30323] = "luǒ", n[23752] = "luò", n[27932] = "luò", n[28163] = "ruò", n[31551] = "luò", n[35451] = "luò", n[29334] = "luò", n[39409] = "luò", n[40261] = "luò", n[28668] = "pō", n[32409] = "luò", n[38317] = "lǘ", n[27648] = "lǘ", n[33186] = "lǘ", n[27354] = "lǘ", n[34264] = "lǘ", n[39522] = "lǘ", n[21570] = "lǚ", n[37080] = "lǚ", n[20406] = "lǚ", n[25364] = "lǚ", n[25435] = "lǚ", n[26784] = "lǚ", n[28946] = "lǚ", n[31075] = "lǚ", n[32125] = "lǚ", n[23650] = "lǚ", n[37569] = "lǚ", n[33168] = "lǚ", n[35128] = "lǚ", n[20770] = "lǚ", n[32311] = "lǚ", n[31341] = "lǚ", n[22415] = "lǜ", n[23874] = "lǜ", n[33870] = "lǜ", n[32160] = "lǜ", n[24942] = "lǜ", n[31675] = "lǜ", n[33183] = "lǜ", n[21236] = "lǜ", n[32322] = "lǜ", n[28670] = "lǜ", n[29192] = "lǜ", n[21339] = "shuài", n[37986] = "lǜ", n[30055] = "lüè", n[31268] = "lüè", n[22297] = "lüè", n[37602] = "lüè", n[37597] = "lüè", n[21966] = "mǎ", n[23382] = "zī", n[24197] = "mó", n[23229] = "mā", n[23282] = "má", n[27050] = "mà", n[34718] = "mà", n[30194] = "má", n[34100] = "má", n[29336] = "má", n[34759] = "má", n[39340] = "mǎ", n[28324] = "mǎ", n[29505] = "mǎ", n[36964] = "mǎ", n[29802] = "mǎ", n[30908] = "mǎ", n[37815] = "mǎ", n[39970] = "mǎ", n[40396] = "mǎ", n[31043] = "mà", n[38273] = "mà", n[20620] = "mà", n[30576] = "mà", n[22044] = "mà", n[31137] = "mà", n[32629] = "mà", n[39393] = "mà", n[39701] = "mà", n[34230] = "wō", n[36023] = "mǎi", n[22058] = "mǎi", n[34130] = "mǎi", n[40438] = "mǎi", n[20293] = "mài", n[22770] = "mài", n[33032] = "mài", n[40613] = "mài", n[34887] = "mài", n[21233] = "mài", n[36067] = "mài", n[36993] = "mài", n[38689] = "mài", n[38690] = "mài", n[39010] = "mān", n[22991] = "mán", n[24727] = "mèn", n[32123] = "wèn", n[24946] = "mán", n[25713] = "màn", n[27168] = "mán", n[30622] = "mén", n[35646] = "mán", n[39237] = "mán", n[39704] = "mán", n[39703] = "mán", n[39995] = "mán", n[30677] = "mǎn", n[34875] = "mán", n[23080] = "mǎn", n[23640] = "mǎn", n[28288] = "mǎn", n[28415] = "mǎn", n[35156] = "mǎn", n[34766] = "mǎn", n[37835] = "mǎn", n[20680] = "màn", n[37156] = "màn", n[23258] = "màn", n[29516] = "màn", n[34052] = "màn", n[27134] = "wàn", n[28587] = "wàn", n[28599] = "màn", n[32309] = "màn", n[37853] = "màn", n[34352] = "màn", n[29284] = "māng", n[21506] = "máng", n[27730] = "máng", n[26455] = "máng", n[26471] = "máng", n[30451] = "wàng", n[21398] = "máng", n[24702] = "máng", n[31488] = "máng", n[21732] = "máng", n[23055] = "máng", n[24236] = "páng", n[27997] = "máng", n[29307] = "máng", n[37359] = "máng", n[38099] = "máng", n[30173] = "máng", n[37609] = "máng", n[39417] = "máng", n[34313] = "máng", n[33726] = "mǎng", n[33595] = "mǎng", n[22782] = "mǎng", n[34830] = "mǎng", n[35987] = "máo", n[33468] = "mào", n[26502] = "máo", n[32606] = "máo", n[28213] = "máo", n[36574] = "máo", n[37205] = "máo", n[22565] = "wǔ", n[23885] = "wù", n[26969] = "máo", n[32226] = "miáo", n[37502] = "máo", n[27650] = "máo", n[39667] = "méng", n[37672] = "máo", n[40348] = "máo", n[20871] = "mǎo", n[22808] = "wǎn", n[20078] = "mǎo", n[25148] = "mǎo", n[31543] = "mǎo", n[34025] = "mǎo", n[37466] = "mǎo", n[20867] = "mào", n[30339] = "mào", n[20880] = "mào", n[26581] = "mào", n[30474] = "mào", n[35218] = "mào", n[23202] = "mào", n[33850] = "mào", n[36031] = "mào", n[37146] = "mào", n[24855] = "mào", n[26259] = "mào", n[27639] = "mào", n[37166] = "mào", n[34640] = "mào", n[40636] = "mó", n[22172] = "mò", n[22162] = "mē", n[28665] = "mè", n[22192] = "mè", n[27794] = "mò", n[33530] = "méi", n[26626] = "méi", n[33028] = "méi", n[29691] = "méi", n[33058] = "méi", n[37119] = "méi", n[22579] = "méi", n[28232] = "méi", n[30530] = "méi", n[33919] = "méi", n[26995] = "méi", n[29762] = "méi", n[31126] = "méi", n[33116] = "méi", n[22650] = "méi", n[27089] = "méi", n[37570] = "méng", n[31304] = "mén", n[24510] = "méi", n[37767] = "méi", n[25879] = "méi", n[40357] = "méi", n[40692] = "méi", n[27598] = "měi", n[20930] = "měi", n[25396] = "měi", n[23172] = "měi", n[23876] = "měi", n[28220] = "měi", n[23226] = "měi", n[23309] = "měi", n[29144] = "měi", n[36542] = "měi", n[37762] = "měi", n[40675] = "měi", n[25274] = "mèi", n[27820] = "mèi", n[26048] = "mèi", n[31065] = "mèi", n[30491] = "mèi", n[30167] = "mèi", n[36298] = "mèi", n[39741] = "mèi", n[29021] = "mèi", n[30584] = "mèi", n[38862] = "wà", n[31683] = "mèi", n[34654] = "mèi", n[27351] = "miè", n[24758] = "mèn", n[26906] = "mēn", n[24587] = "mín", n[29607] = "yǔn", n[38272] = "mén", n[20497] = "mén", n[38277] = "mén", n[25451] = "mén", n[33755] = "mén", n[29834] = "mén", n[37702] = "mén", n[20153] = "wěi", n[26006] = "wěi", n[34379] = "mén", n[26282] = "mèn", n[29148] = "mèn", n[25059] = "mèn", n[25529] = "mēng", n[25821] = "mēng", n[30663] = "mēng", n[30015] = "méng", n[33684] = "méng", n[28309] = "méng", n[38650] = "wù", n[37171] = "méng", n[20762] = "méng", n[27223] = "méng", n[34116] = "méng", n[34673] = "méng", n[37176] = "méng", n[24170] = "méng", n[25052] = "mèng", n[25054] = "měng", n[28635] = "méng", n[29556] = "méng", n[26330] = "méng", n[27659] = "méng", n[39885] = "méng", n[40562] = "méng", n[30674] = "měng", n[38720] = "méng", n[38719] = "méng", n[39259] = "méng", n[39021] = "méng", n[40463] = "méng", n[20897] = "měng", n[40701] = "mǐn", n[37683] = "měng", n[39917] = "měng", n[40710] = "měng", n[22818] = "mèng", n[22819] = "mèng", n[38693] = "mèng", n[30310] = "mèng", n[30599] = "mí", n[20894] = "shēn", n[34990] = "mí", n[33982] = "mí", n[35448] = "mí", n[25717] = "sù", n[35598] = "mí", n[24396] = "mǐ", n[25823] = "mí", n[30644] = "wǔ", n[34252] = "mí", n[40586] = "mí", n[40639] = "mí", n[27319] = "nǐ", n[31152] = "mí", n[28720] = "mí", n[29564] = "mí", n[34346] = "mí", n[40603] = "mí", n[38270] = "mí", n[25090] = "mó", n[25888] = "mó", n[29909] = "xǐ", n[29218] = "mí", n[37310] = "mí", n[37311] = "mí", n[40461] = "mí", n[37316] = "mí", n[20366] = "mǐ", n[32651] = "mǐ", n[27939] = "mǐ", n[31886] = "mǐ", n[28211] = "mǐ", n[33886] = "mǐ", n[34077] = "mǐ", n[37540] = "mǐ", n[28628] = "nǐ", n[23370] = "mǐ", n[28758] = "mǐ", n[27797] = "wù", n[24637] = "mì", n[26504] = "pī", n[23770] = "mì", n[23483] = "mì", n[28135] = "mì", n[35220] = "mì", n[35219] = "mì", n[22611] = "mì", n[24142] = "mì", n[35227] = "mì", n[27027] = "mì", n[28405] = "mì", n[28446] = "mì", n[29072] = "mì", n[34084] = "mì", n[40719] = "mì", n[20906] = "mì", n[27154] = "mì", n[24166] = "mì", n[28631] = "mì", n[35600] = "mì", n[27329] = "mì", n[31770] = "miè", n[32643] = "mì", n[33415] = "mián", n[26467] = "mián", n[23106] = "mián", n[23188] = "miǎn", n[32191] = "mián", n[32220] = "mián", n[34642] = "mián", n[23349] = "mián", n[27312] = "mián", n[27339] = "mián", n[30664] = "mián", n[30666] = "mián", n[30671] = "mián", n[19983] = "miǎn", n[27717] = "miǎn", n[33708] = "wèn", n[20589] = "miǎn", n[21204] = "miǎn", n[21909] = "miǎn", n[24848] = "miǎn", n[30540] = "miǎn", n[33858] = "miǎn", n[28576] = "shéng", n[32236] = "miǎn", n[38758] = "miǎn", n[39864] = "miǎn", n[38755] = "miàn", n[31942] = "miàn", n[40619] = "miàn", n[40618] = "miàn", n[40634] = "miàn", n[40629] = "miàn", n[23180] = "miáo", n[23289] = "miáo", n[40339] = "miáo", n[21168] = "miǎo", n[31694] = "miǎo", n[32242] = "miǎo", n[29573] = "miào", n[31447] = "miào", n[24255] = "miào", n[24287] = "miào", n[21504] = "miē", n[21750] = "miē", n[23405] = "miē", n[28885] = "miè", n[30492] = "mò", n[35221] = "piē", n[25635] = "miè", n[28357] = "miè", n[34190] = "miè", n[40211] = "miè", n[24173] = "miè", n[25073] = "miè", n[28686] = "mò", n[31011] = "miè", n[34890] = "miè", n[37974] = "miè", n[40052] = "miè", n[24543] = "wěn", n[22410] = "mín", n[22980] = "mín", n[24542] = "wěn", n[26107] = "mín", n[26108] = "mín", n[30463] = "mín", n[30727] = "mín", n[32608] = "mín", n[23823] = "mín", n[25450] = "mín", n[28162] = "wèn", n[29720] = "mín", n[29725] = "mín", n[26251] = "mǐn", n[29769] = "mín", n[30203] = "mín", n[30856] = "mín", n[37425] = "mín", n[32205] = "mín", n[32225] = "mín", n[36079] = "xiōng", n[37641] = "mín", n[40214] = "mín", n[37746] = "mín", n[20922] = "mǐn", n[21025] = "mǐn", n[21601] = "wěn", n[21188] = "mǐn", n[25923] = "mǐn", n[31522] = "mǐn", n[31549] = "mǐn", n[24829] = "mǐn", n[38292] = "mǐn", n[25967] = "mǐn", n[20726] = "mǐn", n[38313] = "mǐn", n[24924] = "mǐn", n[25003] = "mǐn", n[28515] = "mǐn", n[31778] = "mǐn", n[34848] = "mǐn", n[39989] = "mǐn", n[27962] = "míng", n[30464] = "míng", n[26393] = "míng", n[30515] = "míng", n[37133] = "míng", n[23239] = "mǐng", n[29501] = "míng", n[33986] = "míng", n[35450] = "míng", n[27040] = "míng", n[37528] = "míng", n[40180] = "míng", n[35245] = "míng", n[20338] = "mǐng", n[23027] = "mǐng", n[20949] = "mǐng", n[24911] = "mǐng", n[25525] = "mìng", n[35628] = "miù", n[22180] = "mō", n[23579] = "mó", n[39801] = "mó", n[27205] = "mó", n[31970] = "mó", n[23332] = "mó", n[35624] = "mó", n[35625] = "mó", n[25845] = "mó", n[39235] = "mó", n[39629] = "mó", n[21144] = "mó", n[39261] = "mó", n[25057] = "mǒ", n[22333] = "mò", n[22970] = "mò", n[24083] = "wà", n[27519] = "mò", n[27518] = "wěn", n[24094] = "mò", n[26153] = "mò", n[26554] = "mò", n[30348] = "mò", n[30527] = "mò", n[30750] = "mò", n[33672] = "mò", n[30525] = "mò", n[32072] = "mò", n[34536] = "mò", n[35971] = "mò", n[22012] = "mò", n[22651] = "mò", n[29519] = "mò", n[37510] = "mò", n[38778] = "mò", n[23292] = "mò", n[30608] = "mò", n[30617] = "mò", n[39785] = "mò", n[40665] = "mò", n[32312] = "mù", n[34278] = "mò", n[34772] = "mò", n[37836] = "mò", n[29189] = "mò", n[39488] = "mò", n[31027] = "mò", n[32390] = "mò", n[21178] = "móu", n[21603] = "móu", n[24648] = "móu", n[25924] = "wù", n[26713] = "yú", n[36366] = "móu", n[35584] = "móu", n[40254] = "móu", n[40624] = "móu", n[38826] = "mù", n[27649] = "mú", n[30018] = "mǔ", n[23764] = "mǔ", n[29299] = "mǔ", n[30022] = "mǔ", n[30034] = "mǔ", n[32991] = "mǔ", n[23058] = "wǔ", n[30045] = "mǔ", n[30046] = "mǔ", n[30762] = "mǔ", n[30062] = "mǔ", n[37479] = "mǔ", n[36359] = "mǔ", n[20969] = "mù", n[29383] = "mù", n[28817] = "mù", n[27619] = "mù", n[33711] = "mù", n[34462] = "mù", n[38638] = "mù", n[24153] = "mù", n[24916] = "mù", n[26968] = "mù", n[37484] = "mù", n[26287] = "mù", n[27170] = "niǎo", n[33362] = "mù", n[38658] = "mù", n[25295] = "ná", n[25360] = "rú", n[22001] = "ná", n[33944] = "rú", n[25659] = "nuò", n[35517] = "nì", n[37823] = "ná", n[20088] = "nǎ", n[38635] = "nǎ", n[21558] = "nè", n[22944] = "nàn", n[25232] = "ruì", n[37069] = "nà", n[32013] = "nà", n[31517] = "nà", n[35965] = "nà", n[36572] = "nà", n[35968] = "nà", n[37385] = "nà", n[33971] = "nà", n[38777] = "nà", n[39798] = "nà", n[33097] = "nái", n[25649] = "zhì", n[25704] = "zhì", n[23419] = "nái", n[30099] = "nǎi", n[22963] = "nǐ", n[24316] = "nǎi", n[36858] = "nǎi", n[20535] = "nǎi", n[37346] = "nǎi", n[23341] = "nǎi", n[28223] = "nài", n[35110] = "nài", n[34714] = "něng", n[37692] = "nài", n[25257] = "nán", n[26511] = "nán", n[20413] = "nán", n[26591] = "nán", n[23066] = "nán", n[30040] = "nán", n[33710] = "nán", n[36950] = "nán", n[26260] = "nán", n[35573] = "nàn", n[38627] = "nuó", n[25543] = "nǎn", n[28275] = "nǎn", n[33843] = "nǎn", n[29045] = "nǎn", n[25089] = "nǎn", n[23163] = "nàn", n[20798] = "nàng", n[20074] = "náng", n[25617] = "róng", n[25017] = "nǎo", n[22178] = "náng", n[34864] = "náng", n[39263] = "xiǎng", n[27420] = "náng", n[39266] = "náng", n[25795] = "nǎng", n[28732] = "ráng", n[28770] = "nǎng", n[40777] = "nàng", n[24595] = "niú", n[23793] = "náo", n[35401] = "náo", n[25747] = "náo", n[23977] = "náo", n[27208] = "ráo", n[29558] = "yōu", n[34799] = "náo", n[22802] = "náo", n[35658] = "náo", n[37891] = "náo", n[24014] = "náo", n[29567] = "yōu", n[24745] = "nǎo", n[21272] = "nǎo", n[33075] = "nǎo", n[22550] = "nǎo", n[24817] = "nǎo", n[23248] = "nǎo", n[33126] = "nǎo", n[30895] = "nǎo", n[38297] = "nào", n[39719] = "nào", n[33233] = "nào", n[30514] = "nè", n[35365] = "nè", n[23070] = "suī", n[28029] = "suī", n[33070] = "něi", n[33095] = "něi", n[39186] = "něi", n[39870] = "něi", n[39896] = "něi", n[20839] = "nèi", n[27677] = "nèi", n[27678] = "nèi", n[37655] = "nèi", n[23174] = "ruǎn", n[23280] = "nèn", n[25267] = "nǐ", n[31870] = "ní", n[23636] = "ní", n[31196] = "nì", n[37107] = "ní", n[22527] = "ní";n[23127] = "nǐ", n[28131] = "ní", n[34477] = "ní", n[26879] = "nǐ", n[34538] = "qiè", n[36316] = "ní", n[37422] = "ní", n[32867] = "ní", n[34618] = "ní", n[39324] = "ní", n[35308] = "ní", n[35982] = "ní", n[36631] = "ní", n[39906] = "ní", n[40593] = "ní", n[40815] = "ní", n[20273] = "nǐ", n[29396] = "nǐ", n[33512] = "nǐ", n[25500] = "yì", n[26226] = "nǐ", n[23412] = "nǐ", n[20766] = "nǐ", n[20759] = "yì", n[38572] = "nǐ", n[25836] = "nǐ", n[34239] = "nǐ", n[27708] = "nì", n[32978] = "nì", n[30500] = "nì", n[22532] = "nì", n[24772] = "nì", n[23263] = "nì", n[24885] = "nì", n[26289] = "nì", n[32268] = "nì", n[33193] = "nì", n[23354] = "nì", n[31178] = "nián", n[21718] = "nián", n[23017] = "niàn", n[31205] = "nián", n[39822] = "nián", n[40263] = "nián", n[39920] = "nián", n[28042] = "niǎn", n[28144] = "shěn", n[28990] = "niǎn", n[27024] = "zhèn", n[25754] = "niǎn", n[36646] = "niǎn", n[31760] = "niǎn", n[36429] = "niǎn", n[25862] = "niǎn", n[36456] = "niǎn", n[36494] = "niǎn", n[21316] = "niàn", n[21816] = "niàn", n[24741] = "yì", n[24791] = "niàn", n[33356] = "niàn", n[23330] = "niáng", n[23363] = "niáng", n[37312] = "niàng", n[37304] = "niàng", n[23243] = "niǎo", n[35018] = "niǎo", n[34086] = "niǎo", n[23325] = "niǎo", n[35117] = "niǎo", n[25553] = "niē", n[33526] = "nié", n[24071] = "niè", n[22332] = "niè", n[26559] = "niè", n[30150] = "niè", n[33741] = "rěn", n[38537] = "niè", n[25948] = "niè", n[28284] = "niè", n[23922] = "niè", n[36354] = "niè", n[22107] = "niè", n[27127] = "niè", n[36375] = "niè", n[36377] = "niè", n[37560] = "zhé", n[23981] = "niè", n[31710] = "niè", n[33266] = "niè", n[37623] = "zuì", n[37660] = "niè", n[22169] = "niè", n[32886] = "niè", n[37811] = "niè", n[38353] = "niè", n[23420] = "niè", n[27377] = "niè", n[31819] = "niè", n[22209] = "niè", n[25885] = "shè", n[40807] = "niè", n[24021] = "niè", n[31985] = "niè", n[31989] = "niè", n[34853] = "niè", n[37960] = "niè", n[22224] = "zá", n[22227] = "niè", n[35736] = "niè", n[36513] = "niè", n[38007] = "niè", n[39027] = "niè", n[38016] = "niè", n[22236] = "nín", n[33036] = "nín", n[25328] = "nǐn", n[33511] = "zhù", n[23501] = "nìng", n[23509] = "nìng", n[23511] = "nìng", n[23516] = "nìng", n[23527] = "nìng", n[20764] = "níng", n[27235] = "níng", n[22144] = "níng", n[23331] = "níng", n[25840] = "nìng", n[29552] = "níng", n[34228] = "níng", n[27320] = "níng", n[32889] = "níng", n[37967] = "níng", n[39713] = "níng", n[40459] = "níng", n[20395] = "nìng", n[20543] = "nìng", n[28573] = "nìng", n[28632] = "nìng", n[23399] = "yòu", n[29276] = "niú", n[27772] = "yóu", n[27793] = "nǜ", n[28804] = "niǔ", n[32016] = "niǔ", n[33701] = "niǔ", n[37397] = "niǔ", n[38773] = "niǔ", n[31230] = "nóng", n[36786] = "nóng", n[20738] = "nóng", n[36787] = "nóng", n[22117] = "nóng", n[28611] = "nóng", n[34173] = "nóng", n[27266] = "nóng", n[29174] = "nóng", n[31151] = "nóng", n[33215] = "nóng", n[30289] = "nòng", n[31328] = "nóng", n[35163] = "nóng", n[35688] = "nóng", n[37298] = "nóng", n[27393] = "nóng", n[39710] = "nóng", n[32375] = "nǒng", n[25354] = "nòng", n[25397] = "nòng", n[40776] = "nòng", n[32698] = "nóu", n[25625] = "nuò", n[27080] = "nòu", n[29555] = "rú", n[27325] = "ruǎn", n[37778] = "nòu", n[37918] = "nòu", n[20270] = "nǔ", n[31535] = "nú", n[39377] = "nú", n[30766] = "nǔ", n[20617] = "nù", n[22907] = "nuán", n[28188] = "nuǎn", n[28266] = "tuàn", n[29014] = "nuǎn", n[29015] = "nuǎn", n[39210] = "nuǎn", n[26779] = "nuó", n[27232] = "nuó", n[20794] = "nuó", n[32782] = "ruǎn", n[25535] = "nuò", n[36925] = "nuò", n[24862] = "nuò", n[27026] = "nuò", n[31276] = "nuò", n[35582] = "nuò", n[36419] = "nuò", n[31953] = "nuò", n[37737] = "nuò", n[25063] = "nuò", n[31973] = "nuò", n[31332] = "nuò", n[31865] = "nǚ", n[37369] = "nǚ", n[34882] = "nǜ", n[23145] = "nüè", n[30840] = "nüè", n[30247] = "yào", n[31613] = "o", n[21312] = "qū", n[22036] = "òu", n[22648] = "qiū", n[28442] = "òu", n[27472] = "ōu", n[27590] = "ōu", n[29104] = "ǒu", n[29964] = "ōu", n[33170] = "ōu", n[40206] = "ōu", n[27353] = "ōu", n[34290] = "ōu", n[35635] = "ōu", n[37826] = "ōu", n[40407] = "ōu", n[21528] = "ǒu", n[33122] = "ǒu", n[34117] = "ǒu", n[24938] = "òu", n[22929] = "pā", n[33317] = "pā", n[25521] = "pá", n[28502] = "pá", n[24074] = "pà", n[34969] = "pà", n[29445] = "pái", n[36651] = "pái", n[31794] = "pái", n[31792] = "pái", n[29348] = "pái", n[24313] = "pò", n[27808] = "pài", n[28178] = "pài", n[37763] = "pài", n[30469] = "pān", n[33824] = "pān", n[32936] = "pàng", n[27904] = "pán", n[30507] = "pàng", n[23227] = "pán", n[24139] = "pán", n[33968] = "pán", n[27075] = "pán", n[30436] = "pán", n[32271] = "pán", n[28682] = "pán", n[36451] = "pán", n[37788] = "pán", n[38838] = "pán", n[30459] = "xì", n[20920] = "pàn", n[27804] = "pàn", n[28813] = "pàn", n[29257] = "pàn", n[32833] = "pàn", n[35402] = "pàn", n[28351] = "pàn", n[38934] = "pàn", n[37612] = "pàn", n[40293] = "pàn", n[38011] = "pàn", n[33006] = "pāng", n[38641] = "pāng", n[33174] = "pāng", n[38710] = "pāng", n[21392] = "páng", n[33341] = "páng", n[23246] = "páng", n[24492] = "páng", n[31715] = "péng", n[40145] = "páng", n[40846] = "páng", n[40848] = "páng", n[39967] = "páng", n[35243] = "pǎng", n[25291] = "pāo", n[33826] = "pāo", n[22409] = "páo", n[29230] = "páo", n[36595] = "páo", n[38788] = "páo", n[35100] = "páo", n[40581] = "páo", n[22853] = "pào", n[30384] = "pào", n[30770] = "pào", n[38756] = "pào", n[40621] = "pào", n[31007] = "pào", n[31022] = "pào", n[24588] = "pēi", n[25271] = "pī", n[32935] = "pēi", n[34883] = "pēi", n[38443] = "péi", n[27632] = "péi", n[35061] = "péi", n[36064] = "péi", n[37639] = "péi", n[20438] = "pěi", n[20226] = "pèi", n[23029] = "pèi", n[26046] = "pèi", n[28031] = "pèi", n[29678] = "pèi", n[23184] = "yí", n[34012] = "pèi", n[39351] = "pèi", n[23951] = "pǐ", n[36705] = "pèi", n[22132] = "pèn", n[27477] = "pēn", n[29931] = "pén", n[33872] = "pén", n[21600] = "pěn", n[32760] = "pěn", n[21257] = "pēng", n[27865] = "píng", n[24690] = "pēng", n[32979] = "píng", n[26760] = "pēng", n[30801] = "píng", n[36591] = "pēng", n[21115] = "pēng", n[38299] = "pèng", n[39373] = "pēng", n[30942] = "pèng", n[33411] = "péng", n[31484] = "péng", n[20503] = "péng", n[25408] = "péng", n[24376] = "péng", n[28124] = "píng", n[34998] = "péng", n[26902] = "péng", n[20656] = "péng", n[22620] = "péng", n[22643] = "péng", n[31261] = "péng", n[27173] = "péng", n[24969] = "péng", n[36643] = "péng", n[37643] = "péng", n[38904] = "péng", n[39676] = "péng", n[34778] = "péng", n[39685] = "péng", n[32388] = "péng", n[34325] = "péng", n[38908] = "péng", n[40300] = "péng", n[39471] = "péng", n[39700] = "péng", n[37981] = "péng", n[28110] = "pěng", n[30351] = "pěng", n[25533] = "pèng", n[26922] = "pèng", n[27120] = "pèng", n[36395] = "pèng", n[20243] = "pī", n[20286] = "pī", n[23727] = "pī", n[28811] = "pī", n[29385] = "pī", n[29395] = "pī", n[24706] = "pǐ", n[31195] = "pī", n[31200] = "pī", n[32794] = "pī", n[35966] = "pī", n[37373] = "zhāo", n[37402] = "pī", n[37471] = "pī", n[37524] = "pī", n[30919] = "pī", n[39379] = "pī", n[39660] = "pī", n[37635] = "pī", n[37645] = "pī", n[39806] = "pī", n[25013] = "pī", n[30997] = "pī", n[30996] = "pī", n[38448] = "pí", n[27608] = "pí", n[34493] = "pí", n[35964] = "pí", n[28983] = "pí", n[33111] = "pí", n[37433] = "pí", n[40079] = "pí", n[33165] = "pí", n[38566] = "pí", n[39790] = "pí", n[22720] = "pí", n[39821] = "pí", n[31738] = "pí", n[34743] = "pí", n[40295] = "pí", n[32646] = "pí", n[34863] = "pí", n[33481] = "pǐ", n[33076] = "pǐ", n[37538] = "pǐ", n[40196] = "pǐ", n[22141] = "pǐ", n[22189] = "pǐ", n[23251] = "pì", n[28494] = "piē", n[28604] = "pì", n[22154] = "xiù", n[30088] = "pì", n[38370] = "pì", n[40447] = "pì", n[40458] = "pì", n[22248] = "piān", n[23205] = "piān", n[26948] = "piān", n[37698] = "piān", n[33089] = "pián", n[26985] = "pián", n[36038] = "pián", n[39615] = "pián", n[39394] = "pián", n[39432] = "pián", n[35217] = "piǎn", n[36021] = "piǎn", n[35550] = "piǎn", n[39800] = "piàn", n[39447] = "piàn", n[39449] = "piàn", n[21217] = "piāo", n[24431] = "piào", n[24915] = "piāo", n[26074] = "piāo", n[32313] = "piǎo", n[32754] = "piāo", n[29349] = "piāo", n[39107] = "piāo", n[39108] = "piāo", n[39762] = "piāo", n[34232] = "piáo", n[38365] = "piáo", n[37285] = "piǎo", n[30379] = "piǎo", n[39008] = "piǎo", n[24497] = "piào", n[39491] = "piào", n[39998] = "piào", n[25734] = "piē", n[26300] = "piē", n[37893] = "piě", n[23283] = "piè", n[30999] = "pīn", n[31334] = "pīn", n[39338] = "pīn", n[39518] = "pīn", n[29613] = "pín", n[23078] = "pín", n[36007] = "pín", n[23338] = "pín", n[34226] = "pín", n[22188] = "pín", n[30665] = "pín", n[34315] = "píng", n[34841] = "pín", n[39024] = "pín", n[27734] = "pìn", n[30009] = "pīng", n[28036] = "pīng", n[30767] = "pīng", n[32864] = "pīng", n[33397] = "pīng", n[38953] = "pīng", n[21615] = "píng", n[23740] = "píng", n[37105] = "píng", n[24097] = "píng", n[27956] = "píng", n[29622] = "píng", n[33619] = "píng", n[24114] = "píng", n[34482] = "píng", n[22592] = "píng", n[24136] = "píng", n[28969] = "píng", n[29953] = "píng", n[32574] = "píng", n[34033] = "píng", n[34530] = "píng", n[35413] = "píng", n[36607] = "píng", n[20980] = "píng", n[31470] = "píng", n[24959] = "píng", n[31667] = "píng", n[36647] = "píng", n[24977] = "píng", n[39811] = "píng", n[31752] = "píng", n[23717] = "pō", n[37337] = "pō", n[28300] = "pō", n[37222] = "pō", n[38935] = "pō", n[28497] = "pō", n[37882] = "pō", n[22041] = "pó", n[34082] = "pó", n[27335] = "pó", n[22185] = "pó", n[23552] = "pǒ", n[37461] = "pǒ", n[31653] = "pǒ", n[39370] = "pǒ", n[23734] = "pò", n[25920] = "pò", n[26146] = "pò", n[27942] = "pò", n[28894] = "pò", n[30774] = "pò", n[28240] = "pò", n[33962] = "pò", n[25236] = "póu", n[21637] = "pǒu", n[21731] = "pǒu", n[29315] = "pǒu", n[28807] = "pū", n[38496] = "pū", n[30177] = "pù", n[25778] = "pū", n[28541] = "pū", n[37610] = "pù", n[22308] = "pú", n[33744] = "pú", n[33969] = "pú", n[20693] = "pú", n[37242] = "pú", n[22691] = "pú", n[29531] = "pú", n[30632] = "pú", n[31321] = "pú", n[36108] = "pú", n[37879] = "pú", n[28915] = "pǔ", n[22289] = "pǔ", n[26268] = "pǔ", n[35561] = "pǔ", n[25800] = "pǔ", n[27192] = "pǔ", n[27279] = "pǔ", n[35676] = "pǔ", n[37920] = "pǔ", n[33303] = "pù", n[33302] = "pù", n[36809] = "qī", n[24659] = "xù", n[20507] = "qī", n[37098] = "qī", n[23096] = "qī", n[24765] = "qī", n[25471] = "qī", n[26748] = "qī", n[28114] = "qī", n[26866] = "qī", n[32042] = "qī", n[35076] = "qī", n[20699] = "qī", n[22660] = "qī", n[24957] = "qī", n[27071] = "qī", n[32192] = "qī", n[24956] = "qī", n[35526] = "qī", n[36390] = "qī", n[34695] = "xī", n[38667] = "qī", n[39756] = "qī", n[37850] = "qī", n[40328] = "qī", n[23699] = "qí", n[24559] = "shì", n[20125] = "zhāi", n[25993] = "qí", n[31047] = "zhǐ", n[32949] = "qí", n[30119] = "qí", n[21080] = "qí", n[25994] = "qí", n[26050] = "qí", n[31442] = "qí", n[34452] = "zhǐ", n[34449] = "qí", n[34458] = "qí", n[38509] = "qí", n[22524] = "qí", n[25489] = "qí", n[29449] = "qí", n[33813] = "qí", n[36290] = "qǐ", n[36573] = "qí", n[37358] = "qí", n[23900] = "qí", n[26826] = "qí", n[24877] = "qí", n[30849] = "qí", n[30869] = "qí", n[35072] = "qí", n[38172] = "qí", n[38926] = "qí", n[39743] = "qí", n[31928] = "qí", n[32165] = "qí", n[34589] = "qí", n[40778] = "zhāi", n[29826] = "qí", n[31141] = "qí", n[34727] = "qí", n[37665] = "qí", n[40111] = "qí", n[28637] = "qí", n[34244] = "qí", n[37183] = "qí", n[27313] = "qí", n[27328] = "qí", n[31791] = "qí", n[31793] = "qí", n[33229] = "qí", n[39438] = "qí", n[39439] = "qí", n[34308] = "qí", n[39893] = "qí", n[40312] = "qí", n[40320] = "qí", n[31823] = "qí", n[33385] = "qí", n[34832] = "qí", n[39696] = "qí", n[39481] = "qí", n[39981] = "qí", n[29570] = "qí", n[40609] = "qí", n[37012] = "qǐ", n[21575] = "qǐ", n[29592] = "qǐ", n[30400] = "qǐ", n[21784] = "qǐ", n[21844] = "qǐ", n[21843] = "qǐ", n[21855] = "qǐ", n[23117] = "qǐ", n[26793] = "sì", n[26856] = "qǐ", n[32186] = "qǐ", n[35564] = "qǐ", n[38361] = "qǐ", n[24532] = "yì", n[27671] = "qì", n[30709] = "qì", n[33438] = "qì", n[21614] = "zhī", n[28801] = "qì", n[30453] = "qì", n[21664] = "qì", n[27923] = "zì", n[26644] = "qiè", n[27435] = "qì", n[27683] = "qì", n[35350] = "qì", n[21805] = "qì", n[22817] = "qì", n[26820] = "qì", n[28230] = "qì", n[28231] = "qì", n[28362] = "xiē", n[26275] = "qì", n[29960] = "qì", n[30902] = "qì", n[22096] = "qì", n[24967] = "qì", n[30940] = "qì", n[30951] = "qì", n[30953] = "zhú", n[34258] = "qì", n[32586] = "qì", n[34815] = "qì", n[37905] = "qì", n[25316] = "qiǎ", n[23776] = "qiǎ", n[36306] = "qiǎ", n[37216] = "qiǎ", n[38800] = "qiǎ", n[22326] = "qià", n[20926] = "qià", n[24098] = "qià", n[32994] = "qià", n[27534] = "qià", n[30792] = "qià", n[30925] = "yà", n[22321] = "sú", n[22322] = "qiān", n[22903] = "qiān", n[27736] = "qiān", n[26436] = "qiān", n[27751] = "qiān", n[33598] = "qiān", n[27430] = "xiān", n[31439] = "qiān", n[33252] = "xián", n[25322] = "qiān", n[31873] = "qiān", n[34440] = "qiān", n[35896] = "qiān", n[23407] = "qiān", n[29309] = "qiān", n[37370] = "qiān", n[25492] = "wàn", n[37382] = "qiān", n[20681] = "qiān", n[37467] = "qiān", n[40528] = "qiān", n[24947] = "qiān", n[25729] = "qiān", n[35536] = "qiān", n[36983] = "qiān", n[35609] = "qiān", n[38981] = "qiān", n[25872] = "qiān", n[25873] = "qiān", n[27343] = "qiān", n[31805] = "qiān", n[37874] = "qiān", n[40302] = "qiān", n[23365] = "xiān", n[25875] = "qiān", n[39467] = "qiān", n[31830] = "qiān", n[39708] = "qiān", n[39709] = "qiān", n[31844] = "qiān", n[38854] = "qiān", n[20209] = "qián", n[23698] = "qián", n[24564] = "qín", n[25202] = "qín", n[25297] = "qián", n[20089] = "qián", n[28854] = "shǎn", n[27500] = "qián", n[34457] = "qín", n[20546] = "qián", n[36577] = "qián", n[20097] = "qián", n[23178] = "qián", n[33893] = "qián", n[37392] = "qián", n[29012] = "shǎn", n[37463] = "qián", n[22680] = "qián", n[27049] = "qián", n[37549] = "qián", n[25741] = "zēn", n[28507] = "qián", n[32684] = "yán", n[34113] = "xún", n[27244] = "qián", n[37666] = "qián", n[37766] = "qián", n[40666] = "qián", n[39453] = "qián", n[28659] = "qián", n[39450] = "qián", n[28746] = "qián", n[39980] = "qián", n[28154] = "qiǎn", n[23920] = "qīn", n[33153] = "qiǎn", n[34616] = "qiǎn", n[32382] = "qiǎn", n[35700] = "qiǎn", n[37971] = "qiǎn", n[21003] = "qiàn", n[20259] = "qiàn", n[20436] = "qiàn", n[24723] = "qiàn", n[25477] = "qìng", n[26824] = "qiàn", n[21979] = "xián";n[30360] = "qiàn", n[33960] = "qiàn", n[22649] = "qiàn", n[32170] = "zhēng", n[34099] = "qiàn", n[20761] = "qiàn", n[27111] = "qiàn", n[31695] = "qiàn", n[36644] = "qiàn", n[31711] = "qiàn", n[22733] = "qiàn", n[23345] = "qiàn", n[32308] = "qiàn", n[26024] = "qiāng", n[32663] = "qiāng", n[29456] = "qiāng", n[21836] = "qiāng", n[22004] = "qiāng", n[28332] = "qiāng", n[29511] = "qiāng", n[21958] = "qiàng", n[23944] = "qiāng", n[25127] = "qiàng", n[25700] = "qiāng", n[27085] = "qiāng", n[29252] = "qiāng", n[35602] = "qiāng", n[36428] = "qiāng", n[36449] = "qiāng", n[37848] = "qiāng", n[37881] = "qiǎng", n[28434] = "qiáng", n[34051] = "qiáng", n[22715] = "qiáng", n[23321] = "qiáng", n[24295] = "sè", n[34196] = "sè", n[27299] = "qiáng", n[29254] = "qiáng", n[33378] = "qiáng", n[34336] = "qiáng", n[32677] = "qiǎng", n[22671] = "qiǎng", n[32328] = "qiǎng", n[32358] = "qiǎng", n[21812] = "qiàng", n[29079] = "qiàng", n[32699] = "qiàng", n[24105] = "qiāo", n[37115] = "qiāo", n[21951] = "zào", n[37157] = "qiāo", n[37153] = "qiāo", n[21226] = "qiāo", n[24147] = "shēn", n[27587] = "qiāo", n[36365] = "qiāo", n[22685] = "qiāo", n[30907] = "què", n[38941] = "qiāo", n[39609] = "xiāo", n[24167] = "qiāo", n[29126] = "qiāo", n[27262] = "shū", n[30973] = "qiāo", n[37740] = "qiāo", n[37739] = "qiāo", n[32337] = "qiāo", n[32368] = "sāo", n[36268] = "qiāo", n[36474] = "qiāo", n[36475] = "qiāo", n[37936] = "qiāo", n[33613] = "qiáo", n[30810] = "qiáo", n[33772] = "zhǎo", n[30532] = "xiāo", n[20689] = "qiáo", n[27095] = "qiáo", n[22074] = "qiào", n[22695] = "què", n[23286] = "qiáo", n[34126] = "qiáo", n[27211] = "qiáo", n[29342] = "qiáo", n[30980] = "qiáo", n[32761] = "qiào", n[27381] = "qiáo", n[34286] = "qiáo", n[35673] = "qiáo", n[36267] = "qiáo", n[37896] = "qiáo", n[38845] = "qiáo", n[39014] = "qiáo", n[39644] = "qiǎo", n[38487] = "qiào", n[35482] = "qiào", n[39642] = "qiào", n[20730] = "qiào", n[31678] = "xiāo", n[38866] = "qiào", n[31429] = "qiào", n[38825] = "qiào", n[36488] = "qiào", n[33478] = "qiē", n[30335] = "qié", n[32890] = "qié", n[21394] = "qiè", n[21287] = "qiè", n[24719] = "qiè", n[24121] = "shà", n[31521] = "qiè", n[24860] = "qiè", n[31271] = "xì", n[31691] = "qiè", n[36389] = "qiè", n[31317] = "qiè", n[37733] = "qiè", n[39900] = "qiè", n[31434] = "qiè", n[31841] = "qiè", n[20819] = "qīn", n[39566] = "qīn", n[23175] = "qīn", n[23898] = "qīn", n[27453] = "qīn", n[32133] = "xiān", n[35483] = "qīn", n[23956] = "qīn", n[35242] = "qìng", n[38985] = "qīn", n[39416] = "qīn", n[39868] = "qīn", n[23540] = "qìn", n[24200] = "qín", n[29665] = "qín", n[32825] = "qín", n[33766] = "qín", n[25446] = "qín", n[29753] = "qín", n[37401] = "qín", n[37419] = "qín", n[38594] = "qín", n[23232] = "shēn", n[38770] = "qín", n[23964] = "qín", n[26035] = "qín", n[40185] = "qín", n[25028] = "qín", n[28607] = "qín", n[30269] = "qín", n[25027] = "qín", n[34820] = "qín", n[40301] = "qín", n[22341] = "qǐn", n[26129] = "qǐn", n[31497] = "qǐn", n[26795] = "qǐn", n[36222] = "qǐn", n[23505] = "qǐn", n[23522] = "qǐn", n[37599] = "qǐn", n[34748] = "qǐn", n[21538] = "qìn", n[25227] = "qìn", n[21786] = "qìn", n[33763] = "qìn", n[25607] = "qìn", n[25779] = "qìn", n[28697] = "qìn", n[34301] = "qìn", n[38737] = "qīng", n[37100] = "qīng", n[22501] = "zhēng", n[23496] = "qīng", n[27691] = "qīng", n[28152] = "qīng", n[36605] = "qīng", n[20670] = "qīng", n[36629] = "qīng", n[37638] = "qīng", n[39894] = "qīng", n[37963] = "qīng", n[22813] = "qíng", n[29984] = "qíng", n[21088] = "qíng", n[21197] = "qíng", n[21864] = "yīng", n[30808] = "qíng", n[26878] = "qíng", n[33885] = "qíng", n[26258] = "qíng", n[27144] = "qíng", n[24252] = "qǐng", n[38915] = "qǐng", n[24270] = "qǐng", n[28416] = "qǐng", n[35531] = "qǐng", n[27326] = "qǐng", n[20938] = "qìng", n[30851] = "qìng", n[38744] = "qìng", n[24950] = "qìng", n[20780] = "qìng", n[28650] = "qìng", n[27366] = "qìng", n[21357] = "qióng", n[23430] = "qióng", n[26703] = "qióng", n[24824] = "qióng", n[29697] = "xuán", n[31547] = "qióng", n[36217] = "qióng", n[28970] = "qióng", n[28973] = "qióng", n[33340] = "qióng", n[34540] = "qióng", n[29026] = "qióng", n[29069] = "qióng", n[30552] = "qióng", n[31406] = "qióng", n[20765] = "qióng", n[24972] = "qióng", n[27241] = "qióng", n[34257] = "qióng", n[29898] = "qióng", n[31430] = "qióng", n[34285] = "qióng", n[29911] = "wèi", n[2e4] = "qiū", n[22389] = "qiū", n[24664] = "qiū", n[31180] = "qiū", n[24695] = "qiū", n[23197] = "qiū", n[33833] = "qiū", n[40537] = "qiū", n[31693] = "qiū", n[32231] = "qiū", n[34677] = "qiū", n[31312] = "qiū", n[36261] = "qiū", n[27226] = "sù", n[34775] = "qiū", n[38822] = "qiū", n[38823] = "qiū", n[34322] = "qiū", n[39948] = "qiū", n[39949] = "qiū", n[40342] = "qiū", n[34852] = "qiū", n[40861] = "qiū", n[21433] = "róu", n[21492] = "qiú", n[25167] = "qiú", n[29580] = "qiú", n[33409] = "qiú", n[27731] = "qiú", n[32909] = "qiú", n[34415] = "qiú", n[35283] = "qiú", n[35333] = "qiú", n[35332] = "qiú", n[21778] = "qiú", n[27991] = "qiú", n[32012] = "qiú", n[33677] = "qiú", n[36878] = "qiú", n[37338] = "qiú", n[26754] = "qiú", n[27535] = "qiú", n[27628] = "qiú", n[37371] = "qiú", n[38916] = "qiú", n[23863] = "qiú", n[28190] = "wù", n[28269] = "qiú", n[30387] = "qiú", n[30426] = "qiú", n[29034] = "qiú", n[32127] = "qiú", n[34551] = "qiú", n[24048] = "qiú", n[35305] = "qiú", n[36053] = "qiú", n[29830] = "qiú", n[37558] = "qiú", n[39810] = "qiú", n[39876] = "qiú", n[39997] = "qiú", n[25629] = "qiǔ", n[20281] = "qū", n[20297] = "qū", n[21284] = "qū", n[38457] = "qū", n[21631] = "qū", n[22373] = "qū", n[23732] = "qū", n[25278] = "qū", n[27968] = "qū", n[32992] = "qū", n[34986] = "qū", n[32054] = "qǔ", n[28992] = "qū", n[31553] = "qū", n[31916] = "qū", n[35416] = "qū", n[36237] = "qū", n[23943] = "qū", n[24968] = "qū", n[39366] = "qū", n[25978] = "qū", n[39368] = "qū", n[40633] = "qū", n[39671] = "qū", n[39804] = "qū", n[40623] = "qū", n[35248] = "qù", n[35255] = "qù", n[36544] = "qū", n[40332] = "qū", n[35259] = "qù", n[39493] = "qū", n[39992] = "qū", n[40011] = "qū", n[20322] = "qú", n[26026] = "qú", n[32970] = "qú", n[33731] = "qú", n[34896] = "qú", n[28141] = "qú", n[32071] = "qú", n[32721] = "yù", n[33867] = "qú", n[36581] = "qú", n[29846] = "qú", n[40221] = "qú", n[34781] = "qú", n[40745] = "qú", n[28744] = "qú", n[25141] = "qú", n[27403] = "qú", n[29216] = "qú", n[31847] = "qú", n[33246] = "qú", n[27412] = "qú", n[34871] = "qú", n[36515] = "qú", n[38010] = "qú", n[40476] = "qú", n[35411] = "qǔ", n[31468] = "qǔ", n[34682] = "qǔ", n[40818] = "qǔ", n[21434] = "qù", n[21022] = "qù", n[38324] = "qù", n[40622] = "qù", n[38339] = "qù", n[40705] = "qù", n[31646] = "quān", n[37897] = "quān", n[20346] = "quán", n[23038] = "quán", n[23761] = "quán", n[24686] = "zhuān", n[27940] = "quán", n[29303] = "quán", n[21875] = "quán", n[22498] = "quán", n[30786] = "quán", n[28278] = "quán", n[29320] = "quán", n[32095] = "shuān", n[33906] = "quán", n[25660] = "quán", n[27006] = "quán", n[29780] = "quán", n[35296] = "quán", n[35438] = "quán", n[36327] = "quán", n[36615] = "quán", n[37523] = "quán", n[27115] = "tuán", n[27177] = "quán", n[36385] = "quán", n[32275] = "quán", n[39401] = "quán", n[38350] = "quán", n[40136] = "quán", n[39457] = "quán", n[24015] = "quán", n[39937] = "quán", n[27402] = "quán", n[40804] = "quán", n[34872] = "quán", n[39028] = "quán", n[28773] = "xún", n[28871] = "quǎn", n[32163] = "quǎn", n[34375] = "quǎn", n[29302] = "quàn", n[21223] = "quàn", n[38863] = "quàn", n[21240] = "quàn", n[32572] = "quē", n[33947] = "quē", n[38357] = "què", n[27723] = "zhuó", n[21371] = "què", n[23813] = "què", n[29751] = "què", n[26852] = "què", n[22617] = "què", n[25609] = "què", n[30389] = "què", n[30863] = "xī", n[24872] = "què", n[24932] = "què", n[30906] = "què", n[29161] = "què", n[38347] = "què", n[40306] = "què", n[31021] = "què", n[22795] = "qūn", n[22263] = "qūn", n[23469] = "qún", n[23790] = "qún", n[24108] = "qún", n[32675] = "qún", n[35040] = "qún", n[21605] = "rán", n[32944] = "rán", n[34939] = "rán", n[34951] = "rán", n[34470] = "rán", n[34977] = "rán", n[39653] = "rán", n[22059] = "rán", n[32334] = "rán", n[20868] = "rǎn", n[22988] = "rǎn", n[29635] = "rǎn", n[23203] = "rǎn", n[33925] = "rǎn", n[27242] = "yān", n[31331] = "ráng", n[20788] = "xiāng", n[21239] = "xiāng", n[29565] = "ráng", n[34328] = "ráng", n[36511] = "ráng", n[39716] = "ráng", n[22732] = "rǎng", n[29209] = "rǎng", n[32405] = "xiāng", n[25081] = "ràng", n[35698] = "ràng", n[35731] = "ràng", n[23304] = "rǎo", n[34136] = "ráo", n[35155] = "ráo", n[39250] = "ráo", n[38562] = "rǎo", n[25854] = "rǎo", n[36982] = "rào", n[31320] = "xiāo", n[32350] = "rào", n[25468] = "wěi", n[29105] = "rè", n[24520] = "rén", n[26418] = "rén", n[24526] = "rén", n[31170] = "rén", n[33442] = "rén", n[39772] = "rén", n[37515] = "rěn", n[40256] = "rén", n[26656] = "rěn", n[26659] = "rěn", n[33653] = "rěn", n[31225] = "rěn", n[26863] = "shěn", n[32155] = "rěn", n[36533] = "rěn", n[20996] = "rèn", n[20205] = "rèn", n[35761] = "rèn", n[23675] = "rèn", n[23683] = "rèn", n[25192] = "rèn", n[29283] = "rèn", n[32436] = "rèn", n[32917] = "rèn", n[31053] = "rèn", n[23001] = "rèn", n[32009] = "rèn", n[32029] = "rèn", n[35346] = "rèn", n[36564] = "rèn", n[34997] = "rèn", n[32077] = "rèn", n[33101] = "rèn", n[37395] = "rèn", n[38769] = "rèn", n[38765] = "rèn", n[38860] = "rèn", n[39146] = "rèn", n[35469] = "rèn", n[39169] = "rèn", n[36792] = "réng", n[31037] = "réng", n[33471] = "réng", n[38526] = "réng", n[39538] = "rì", n[22264] = "rì", n[27676] = "yáng", n[34933] = "rì", n[37412] = "rì", n[39353] = "rì", n[26628] = "róng", n[33561] = "róng", n[23797] = "róng", n[27623] = "róng", n[28927] = "róng", n[20635] = "róng", n[23222] = "róng", n[32104] = "róng", n[32674] = "róng", n[23238] = "róng", n[23908] = "yíng", n[25608] = "róng", n[27061] = "róng", n[27054] = "róng", n[29794] = "róng", n[31297] = "róng", n[27110] = "yōng", n[32281] = "ròng", n[35107] = "róng", n[38229] = "róng", n[34702] = "róng", n[39397] = "róng", n[23339] = "róng", n[23992] = "róng", n[29187] = "yíng", n[37780] = "róng", n[28700] = "róng", n[26343] = "róng", n[34833] = "róng", n[23426] = "rǒng", n[20615] = "rǒng", n[36597] = "rǒng", n[27652] = "rǒng", n[31299] = "ròng", n[31160] = "róu", n[31880] = "róu", n[33052] = "róu", n[23171] = "róu", n[28184] = "róu", n[33863] = "róu", n[27002] = "ròu", n[29027] = "róu", n[29768] = "róu", n[33132] = "róu", n[34650] = "róu", n[36654] = "róu", n[37714] = "róu", n[29895] = "róu", n[39461] = "róu", n[39943] = "róu", n[40340] = "róu", n[38870] = "rǒu", n[23437] = "ròu", n[35699] = "ròu", n[23999] = "rū", n[37018] = "rú", n[20382] = "rú", n[24100] = "rú", n[26695] = "rú", n[35005] = "rú", n[28202] = "rú", n[31566] = "rú", n[37539] = "rú", n[34144] = "rú", n[34657] = "rú", n[40209] = "rú", n[23340] = "rú", n[40253] = "rú", n[26328] = "rú", n[32379] = "rú", n[37305] = "rú", n[39020] = "rú", n[40044] = "rú", n[32919] = "rǔ", n[37135] = "rǔ", n[25833] = "rǔ", n[25174] = "rù", n[26433] = "rù", n[21973] = "rù", n[23223] = "rù", n[40176] = "rù", n[32287] = "rù", n[22567] = "ruán", n[25739] = "ruán", n[22742] = "ruán", n[20548] = "ruǎn", n[36575] = "ruǎn", n[29772] = "ruǎn", n[33117] = "ruǎn", n[30877] = "ruǎn", n[32219] = "ruàn", n[36653] = "ruǎn", n[29888] = "ruǎn", n[31005] = "ruǎn", n[33532] = "shēng", n[26741] = "ruí", n[29988] = "ruí", n[32204] = "ruí", n[24802] = "suǒ", n[34123] = "ruǐ", n[27236] = "ruǐ", n[32352] = "ruǐ", n[22753] = "ruǐ", n[34307] = "ruǐ", n[34306] = "ruǐ", n[27757] = "ruì", n[31501] = "zhuì", n[34617] = "ruì", n[37555] = "ruì", n[37613] = "ruì", n[21473] = "ruì", n[30628] = "shùn", n[38287] = "rùn", n[38304] = "rùn", n[28516] = "rùn", n[27213] = "rùn", n[33206] = "rùn", n[25404] = "ruó", n[21458] = "ruò", n[37120] = "ruò", n[28971] = "ruò", n[26953] = "ruò", n[23926] = "ruò", n[33979] = "ruò", n[31707] = "ruò", n[29191] = "ruò", n[39961] = "ruò", n[39983] = "ruò", n[40376] = "ruò", n[35375] = "sǎ", n[38776] = "sǎ", n[28533] = "sàn", n[28753] = "sǎ", n[36512] = "xiè", n[27879] = "yuè", n[38033] = "xì", n[37394] = "sà", n[25675] = "shǎi", n[38561] = "sà", n[39354] = "sà", n[34159] = "sà", n[39087] = "sà", n[34217] = "sà", n[27346] = "sà", n[37886] = "xiàn", n[27618] = "sāi", n[24866] = "sǐ", n[25548] = "sāi", n[27640] = "suī", n[22053] = "sāi", n[38987] = "sāi", n[39955] = "xǐ", n[21998] = "sǎi", n[20735] = "sài", n[36093] = "sài", n[31802] = "sài", n[22765] = "san", n[24334] = "sān", n[27638] = "sān", n[21377] = "sān", n[27647] = "sān", n[29337] = "sān", n[39702] = "sān", n[20632] = "sǎn", n[31965] = "shēn", n[31972] = "sǎn", n[31971] = "shēn", n[32342] = "sǎn", n[39242] = "sǎn", n[20437] = "sàn", n[38288] = "sàn", n[26706] = "sāng", n[21930] = "sàng", n[27105] = "sāng", n[35116] = "sǎng", n[37791] = "sǎng", n[39001] = "sǎng", n[25531] = "sāo", n[28318] = "sāo", n[34726] = "sāo", n[32325] = "sāo", n[39102] = "sōu", n[39442] = "sāo", n[39479] = "sāo", n[39968] = "sāo", n[40034] = "sāo", n[25475] = "sào", n[27657] = "sào", n[30658] = "sào", n[39646] = "sào", n[38314] = "xī", n[26652] = "sè", n[28171] = "sè", n[38637] = "xí", n[27502] = "sè", n[21959] = "sè", n[27504] = "shà", n[37547] = "sè", n[28545] = "sè", n[25038] = "sè", n[25804] = "sè", n[28615] = "sè", n[28623] = "sè", n[30263] = "sè", n[28544] = "sè", n[29873] = "sè", n[28690] = "sè", n[31329] = "sè", n[37773] = "suǒ", n[32364] = "sè", n[31343] = "sè", n[36694] = "sè", n[37884] = "sè", n[38367] = "xì", n[35653] = "sè", n[39115] = "sè", n[26926] = "sēn", n[27118] = "sēn", n[35138] = "sēn", n[39705] = "sēng", n[31993] = "sī", n[27840] = "sī", n[20460] = "sī", n[24662] = "sī", n[34386] = "sī", n[20610] = "zhì", n[23204] = "sī", n[32114] = "sī", n[26962] = "sī", n[31127] = "sī", n[37488] = "sī", n[39124] = "sī", n[20952] = "sī", n[31136] = "sī", n[32627] = "sī", n[34596] = "sī", n[37551] = "sī", n[22109] = "sī", n[24285] = "sī", n[30915] = "tí", n[32230] = "sī", n[34156] = "sī", n[37590] = "tuó", n[29133] = "sī", n[34692] = "sī", n[37750] = "sī", n[34774] = "sī", n[34804] = "sī", n[39096] = "sī", n[39462] = "sī", n[39907] = "yì", n[37889] = "sī", n[40421] = "sī", n[40758] = "sī", n[20118] = "sì", n[20288] = "sì", n[27876] = "sì", n[20385] = "sì", n[23392] = "sì", n[26475] = "zhǐ", n[23088] = "sì", n[26545] = "tái", n[26614] = "sì", n[27936] = "sì", n[29293] = "sì", n[27917] = "sì", n[28056] = "sì", n[32898] = "sì", n[39140] = "sì", n[37362] = "sì", n[31458] = "sì", n[35223] = "sì", n[35972] = "sì", n[37430] = "sì", n[37435] = "sì", n[39156] = "yí", n[39164] = "sì", n[27065] = "sì", n[37513] = "yù", n[31145] = "sì";n[39391] = "sì", n[34172] = "sì", n[20777] = "sì", n[39427] = "sì", n[28675] = "sì", n[26496] = "sōng", n[26537] = "sōng", n[23040] = "sōng", n[26583] = "sōng", n[20527] = "sōng", n[24250] = "sōng", n[26789] = "sōng", n[25556] = "zǒng", n[30841] = "sōng", n[25021] = "sōng", n[28621] = "sōng", n[27303] = "sōng", n[39686] = "sōng", n[25426] = "shù", n[20657] = "sǒng", n[24879] = "sǒng", n[23927] = "sǒng", n[25687] = "sōu", n[24939] = "sǒng", n[32883] = "sǒng", n[39415] = "sǒng", n[21509] = "xuān", n[35359] = "sòng", n[38924] = "sòng", n[35494] = "sòng", n[37817] = "sòng", n[39224] = "sòng", n[20929] = "sōu", n[25436] = "sōu", n[37131] = "sōu", n[24256] = "sōu", n[24267] = "sōu", n[29504] = "sōu", n[33936] = "sōu", n[33987] = "sǒu", n[25673] = "sōu", n[25768] = "xiāo", n[37273] = "sōu", n[37802] = "sōu", n[39231] = "sōu", n[39100] = "sōu", n[37833] = "shòu", n[39466] = "sōu", n[21468] = "sǒu", n[20609] = "sǒu", n[26871] = "zōu", n[25851] = "sòu", n[34282] = "sǒu", n[27362] = "sǒu", n[31828] = "shǔ", n[27446] = "shuò", n[30262] = "sòu", n[29990] = "sū", n[31265] = "zuì", n[31395] = "sū", n[31308] = "sū", n[39874] = "sū", n[34311] = "sū", n[34323] = "sū", n[27375] = "sū", n[22220] = "sū", n[29578] = "sù", n[27869] = "sù", n[27948] = "shuò", n[29663] = "sù", n[33700] = "yóu", n[22499] = "suì", n[26752] = "yìn", n[27536] = "sù", n[31899] = "sù", n[39573] = "sù", n[20611] = "sù", n[35380] = "sù", n[22608] = "sù", n[23242] = "sù", n[28344] = "sù", n[32901] = "sù", n[36961] = "sù", n[40532] = "sù", n[24876] = "shuò", n[27041] = "sù", n[33158] = "sù", n[36250] = "sù", n[36972] = "sù", n[24991] = "sù", n[27157] = "sù", n[27150] = "sù", n[28517] = "sù", n[30911] = "xiè", n[37577] = "sù", n[39191] = "sù", n[28506] = "sù", n[32292] = "sù", n[29851] = "sù", n[32302] = "suō", n[34263] = "sù", n[35606] = "sù", n[36444] = "sù", n[39500] = "sù", n[40016] = "sù", n[40427] = "sù", n[30176] = "suān", n[21300] = "suǎn", n[31737] = "zhuàn", n[31064] = "suàn", n[31495] = "suàn", n[31597] = "suàn", n[22794] = "suī", n[33429] = "suī", n[20512] = "suī", n[21752] = "suī", n[33662] = "suī", n[28374] = "suī", n[22010] = "zuī", n[38806] = "suī", n[38614] = "suī", n[36928] = "suí", n[32143] = "suí", n[38568] = "suí", n[29901] = "suí", n[39620] = "suí", n[33208] = "suǐ", n[28705] = "suǐ", n[20119] = "suì", n[30741] = "suì", n[23895] = "suì", n[27506] = "suì", n[27507] = "suì", n[29035] = "suì", n[30559] = "zuì", n[23320] = "suì", n[28603] = "suì", n[31298] = "suì", n[35510] = "suì", n[36069] = "suì", n[27286] = "suì", n[29874] = "suì", n[31149] = "suì", n[31327] = "suì", n[32320] = "suì", n[35162] = "suì", n[26078] = "suì", n[32336] = "suì", n[32376] = "suì", n[35682] = "suì", n[37894] = "suì", n[37929] = "suì", n[38882] = "suì", n[23403] = "xùn", n[39153] = "sūn", n[25614] = "sūn", n[29499] = "sūn", n[33984] = "sūn", n[27074] = "sūn", n[34165] = "sūn", n[34206] = "sūn", n[31565] = "sǔn", n[25613] = "sǔn", n[31664] = "sǔn", n[31784] = "zhuàn", n[37800] = "sǔn", n[40381] = "xùn", n[25393] = "shā", n[33679] = "suō", n[20638] = "suō", n[25677] = "suō", n[36246] = "suō", n[31761] = "suō", n[31764] = "suō", n[39867] = "suō", n[20090] = "suǒ", n[29713] = "suǒ", n[21993] = "suǒ", n[26267] = "suǒ", n[28305] = "suǒ", n[29525] = "suǒ", n[29795] = "suǒ", n[35112] = "suǒ", n[29829] = "zǎo", n[37782] = "suǒ", n[37819] = "suǒ", n[37825] = "suǒ", n[36900] = "suò", n[28345] = "suò", n[34614] = "suò", n[20087] = "shā", n[21798] = "shā", n[27578] = "shā", n[29440] = "shā", n[32023] = "shā", n[26732] = "shā", n[27630] = "shā", n[30832] = "shā", n[34097] = "shā", n[27037] = "xiè", n[27175] = "xiè", n[39782] = "shā", n[38327] = "shā", n[39679] = "shā", n[37801] = "shā", n[39882] = "shā", n[39883] = "shā", n[32378] = "shā", n[20749] = "shǎ", n[20541] = "shà", n[33808] = "shà", n[21922] = "shà", n[24264] = "xià", n[32732] = "shà", n[31633] = "shà", n[32739] = "shà", n[38319] = "shà", n[31721] = "shāi", n[31745] = "shāi", n[31771] = "shāi", n[31853] = "shāi", n[26348] = "shài", n[37014] = "shān", n[22328] = "shān", n[21034] = "shān", n[22989] = "shàn", n[25403] = "shān", n[26613] = "shān", n[29414] = "shān", n[33056] = "shān", n[36565] = "shān", n[31512] = "shān", n[37348] = "shàn", n[38282] = "shān", n[20627] = "shān", n[21116] = "shān", n[25639] = "shān", n[28568] = "shān", n[27270] = "shān", n[32319] = "shān", n[39877] = "shān", n[32692] = "shān", n[32694] = "shān", n[38493] = "shǎn", n[38275] = "shǎn", n[26225] = "shǎn", n[30546] = "shǎn", n[29068] = "shǎn", n[35234] = "shǎn", n[35349] = "shàn", n[36216] = "shàn", n[25502] = "yàn", n[26923] = "shàn", n[37519] = "shuò", n[20688] = "shàn", n[22689] = "shàn", n[22688] = "shàn", n[28524] = "tān", n[23974] = "zhān", n[25982] = "shàn", n[27199] = "shàn", n[27482] = "shàn", n[30960] = "shàn", n[35590] = "shàn", n[32341] = "shàn", n[34810] = "shàn", n[35697] = "shàn", n[36109] = "shàn", n[37925] = "shàn", n[39245] = "shàn", n[39480] = "shàn", n[40163] = "zhān", n[28759] = "shàn", n[40019] = "shàn", n[40020] = "shàn", n[28271] = "tāng", n[20663] = "shāng", n[31123] = "yáng", n[24943] = "shāng", n[28403] = "shāng", n[28449] = "shāng", n[34063] = "shāng", n[27556] = "shāng", n[34730] = "shāng", n[35316] = "shāng", n[35626] = "shāng", n[39738] = "shāng", n[27145] = "shǎng", n[36062] = "shǎng", n[37631] = "shǎng", n[37851] = "shǎng", n[36120] = "shǎng", n[37980] = "shǎng", n[19972] = "shàng", n[23577] = "shàng", n[24678] = "shàng", n[32212] = "shàng", n[38813] = "zhǎng", n[23051] = "shào", n[24368] = "shāo", n[33702] = "xiāo", n[28988] = "shāo", n[33847] = "shāo", n[26067] = "shāo", n[36622] = "shāo", n[34161] = "shāo", n[29138] = "shāo", n[39678] = "shāo", n[39865] = "shāo", n[26582] = "shào", n[29631] = "sháo", n[20299] = "zhāo", n[21362] = "shào", n[34961] = "shào", n[32057] = "shào", n[32164] = "shào", n[30061] = "shē", n[30060] = "yú", n[36619] = "shē", n[36050] = "shē", n[36054] = "shē", n[27304] = "shē", n[34421] = "shé", n[34533] = "shé", n[25448] = "shě", n[33294] = "shè", n[21401] = "shè", n[28091] = "shè", n[28169] = "shè", n[35373] = "shè", n[24381] = "shè", n[25666] = "shè", n[24948] = "shè", n[34062] = "shè", n[34818] = "shè", n[38872] = "xiè", n[39431] = "shè", n[25086] = "shè", n[28740] = "shè", n[27399] = "shè", n[35504] = "shuí", n[23678] = "shēn", n[25183] = "shēn", n[20353] = "shēn", n[22973] = "shēn", n[31862] = "shēn", n[32601] = "shēn", n[23034] = "xiān", n[26587] = "shēn", n[27680] = "shēn", n[29637] = "shēn", n[31356] = "shēn", n[31864] = "shēn", n[23799] = "shēn", n[29985] = "shēn", n[30482] = "shēn", n[22548] = "shēn", n[25938] = "shēn", n[32051] = "shēn", n[20831] = "shēn", n[33888] = "shēn", n[35025] = "shēn", n[35383] = "shēn", n[25655] = "tián", n[32615] = "shēn", n[34017] = "shēn", n[35445] = "shēn", n[29991] = "shēn", n[34072] = "shēn", n[31938] = "shēn", n[29130] = "shēn", n[34195] = "shēn", n[39402] = "shēn", n[40121] = "shēn", n[26321] = "shēn", n[39891] = "shēn", n[40290] = "shēn", n[39925] = "shēn", n[39994] = "shēn", n[27018] = "shén", n[37486] = "shén", n[39984] = "shén", n[37029] = "shěn", n[24350] = "shěn", n[30692] = "shěn", n[23479] = "shěn", n[35849] = "shěn", n[35360] = "shěn", n[23529] = "shěn", n[35543] = "shěn", n[38947] = "shěn", n[39787] = "shěn", n[26315] = "shěn", n[30635] = "shěn", n[23352] = "shěn", n[28683] = "shěn", n[35262] = "shěn", n[35717] = "shěn", n[20410] = "shèn", n[26138] = "shèn", n[28033] = "shèn", n[30488] = "shèn", n[31091] = "shèn", n[33060] = "shèn", n[33102] = "shèn", n[24892] = "shèn", n[30214] = "shèn", n[34564] = "shèn", n[28402] = "shèn", n[37600] = "shèn", n[30254] = "shèn", n[38441] = "shēng", n[21583] = "shēng", n[26008] = "shēng", n[26119] = "shēng", n[26529] = "shēng", n[27881] = "shēng", n[29388] = "xīng", n[27525] = "shēng", n[29636] = "shēng", n[31444] = "shēng", n[38494] = "shēng", n[26363] = "shēng", n[38521] = "shēng", n[28262] = "shēng", n[28986] = "shēng", n[37454] = "shēng", n[32882] = "shēng", n[37727] = "shēng", n[40746] = "shēng", n[40319] = "shēng", n[25012] = "shéng", n[32260] = "shéng", n[32329] = "shéng", n[32361] = "shéng", n[35677] = "shéng", n[20567] = "shěng", n[28219] = "shěng", n[26208] = "shèng", n[21104] = "shèng", n[21213] = "shèng", n[36025] = "shèng", n[29726] = "shèng", n[32854] = "shèng", n[22701] = "shèng", n[27066] = "shèng", n[34114] = "shèng", n[27251] = "shèng", n[36088] = "shèng", n[36795] = "shi", n[31810] = "shi", n[21396] = "zhì", n[21598] = "shī", n[37055] = "shī", n[40484] = "shī", n[23629] = "shī", n[27977] = "shī", n[24107] = "shī", n[32065] = "shī", n[37366] = "yí", n[28260] = "shī", n[33913] = "shī", n[28334] = "shī", n[28348] = "shī", n[29509] = "shī", n[33938] = "shī", n[35433] = "shī", n[37447] = "shī", n[29793] = "shī", n[40178] = "shī", n[22099] = "xū", n[31671] = "yí", n[34664] = "shī", n[40190] = "shī", n[35127] = "shī", n[28629] = "shī", n[37734] = "shī", n[39924] = "shī", n[39972] = "shī", n[40371] = "shī", n[35193] = "shī", n[37315] = "shī", n[20077] = "shí", n[31437] = "shí", n[23455] = "shí", n[26105] = "shí", n[39136] = "shí", n[23036] = "shí", n[23765] = "shí", n[31055] = "shí", n[26178] = "shí", n[23508] = "shí", n[28252] = "shí", n[36936] = "shí", n[22610] = "shí", n[23925] = "shí", n[28321] = "shí", n[33940] = "shì", n[37456] = "shí", n[23526] = "shí", n[27055] = "shí", n[30889] = "shuò", n[34645] = "shí", n[39830] = "shí", n[40747] = "shí", n[35672] = "shí", n[40749] = "shí", n[39971] = "shí", n[20072] = "shǐ", n[20824] = "shǐ", n[23465] = "shǐ", n[29430] = "xī", n[30161] = "tān", n[31542] = "shǐ", n[27009] = "shǐ", n[37442] = "shǐ", n[39387] = "shǐ", n[19991] = "shì", n[21323] = "shì", n[24533] = "tài", n[20106] = "shì", n[25146] = "shì", n[21609] = "shì", n[20895] = "shì", n[24640] = "shì", n[26160] = "shì", n[26558] = "shì", n[29415] = "tà", n[30466] = "shì", n[26683] = "shì", n[28882] = "shì", n[30478] = "shì", n[30497] = "shì", n[21867] = "zhě", n[22518] = "yì", n[31218] = "zhì", n[35222] = "shì", n[37320] = "shì", n[23867] = "zhì", n[24485] = "tǐ", n[24831] = "tí", n[25555] = "shì", n[36016] = "shì", n[21218] = "shì", n[24338] = "shì", n[29046] = "shì", n[30551] = "shì", n[35298] = "shì", n[35430] = "shì", n[36606] = "shì", n[37424] = "shì", n[37443] = "shì", n[39166] = "shì", n[33299] = "shì", n[36969] = "shì", n[37501] = "shì", n[39350] = "zhī", n[22893] = "shì", n[37556] = "zhì", n[39197] = "shì", n[39193] = "shì", n[23317] = "shì", n[28584] = "shì", n[28580] = "zé", n[35553] = "shì", n[36990] = "shì", n[27297] = "zhái", n[35610] = "shì", n[31789] = "shì", n[35179] = "shì", n[37299] = "yì", n[37323] = "shì", n[39960] = "shì", n[21454] = "shōu", n[22440] = "shǒu", n[28077] = "tāo", n[30185] = "shòu", n[33156] = "shòu", n[22781] = "shòu", n[22784] = "shòu", n[32172] = "shòu", n[29539] = "shòu", n[29560] = "shòu", n[24556] = "yù", n[38478] = "shū", n[20496] = "shū", n[26360] = "shū", n[32019] = "shū", n[23116] = "shū", n[24710] = "yù", n[25491] = "shū", n[28930] = "shū", n[36567] = "shū", n[37123] = "shū", n[29729] = "shū", n[30094] = "shū", n[27642] = "shū", n[32128] = "shū", n[29817] = "tú", n[36360] = "shū", n[27166] = "shū", n[32240] = "xū", n[36664] = "shū", n[39835] = "shū", n[20789] = "shū", n[25860] = "shū", n[28717] = "shū", n[40296] = "shū", n[26414] = "zhú", n[23575] = "shú", n[33955] = "xú", n[29881] = "shú", n[36118] = "shú", n[40737] = "shǔ", n[31244] = "tú", n[25976] = "shuò", n[28539] = "shǔ", n[34213] = "shǔ", n[30297] = "shǔ", n[34295] = "shǔ", n[35169] = "shǔ", n[31980] = "shǔ", n[35177] = "shǔ", n[23660] = "zhǔ", n[34868] = "shǔ", n[40042] = "shǔ", n[40048] = "shǔ", n[20842] = "yú", n[21680] = "xún", n[24632] = "xī", n[24631] = "shù", n[33623] = "shù", n[24251] = "shù", n[32073] = "shù", n[33921] = "shù", n[34899] = "shù", n[38531] = "yú", n[23564] = "zhù", n[35019] = "shù", n[31466] = "shù", n[37477] = "shù", n[28484] = "shù", n[35918] = "shù", n[27193] = "shù", n[28630] = "shù", n[37680] = "shù", n[38676] = "shù", n[37859] = "shù", n[40336] = "shù", n[34410] = "shù", n[35484] = "shuà", n[24101] = "shuài", n[38274] = "shuān", n[33128] = "shuàn", n[38617] = "shuāng", n[39590] = "shuāng", n[23367] = "shuāng", n[39483] = "shuāng", n[27398] = "shuāng", n[31029] = "shuāng", n[40414] = "shuāng", n[40564] = "shuāng", n[33389] = "shuāng", n[39526] = "shuāng", n[40472] = "shuāng", n[22653] = "shuǎng", n[24929] = "shuǎng", n[28474] = "shuǎng", n[32276] = "shuǎng", n[37871] = "shuǎng", n[28736] = "shuàng", n[33085] = "shuí", n[27706] = "shuǐ", n[38294] = "shuǐ", n[24104] = "shuì", n[25385] = "tuō", n[25437] = "tuō", n[28055] = "shuì", n[28058] = "shuì", n[23095] = "zhuì", n[31237] = "shuì", n[35038] = "shuì", n[35498] = "yuè", n[35500] = "yuè", n[30516] = "xún", n[38918] = "shùn", n[34147] = "shùn", n[27219] = "shùn", n[30618] = "shùn", n[39690] = "shùn", n[30687] = "shuò", n[29537] = "xī", n[37785] = "shuò", n[29197] = "shuò", n[37984] = "shuò", n[20388] = "ta", n[29280] = "tā", n[31042] = "tā", n[27033] = "tā", n[37448] = "tuó", n[35103] = "tā", n[38375] = "tā", n[22678] = "tǎ", n[39833] = "tǎ", n[29562] = "tǎ", n[39976] = "tǎ", n[31887] = "tà", n[23817] = "tà", n[28094] = "tà", n[20637] = "tàn", n[25640] = "tà", n[36957] = "tà", n[38424] = "tà", n[27646] = "tà", n[31138] = "tà", n[25787] = "tà", n[28606] = "tà", n[35515] = "tà", n[22147] = "tà", n[27261] = "tà", n[37652] = "tà", n[28620] = "tà", n[38812] = "tà", n[38354] = "tà", n[38835] = "tà", n[36473] = "tà", n[36482] = "tà", n[22202] = "tà", n[38373] = "tà", n[35702] = "tà", n[36514] = "tà", n[22268] = "tāi", n[23393] = "tāi", n[29638] = "yí", n[26098] = "yīng", n[22382] = "tái", n[28850] = "tái", n[33274] = "tái", n[39089] = "tái", n[20755] = "tái", n[39824] = "tái", n[23343] = "tái", n[25825] = "tái", n[27311] = "tái", n[31817] = "tái", n[20909] = "tài", n[22835] = "tài", n[24562] = "tài", n[27761] = "tài", n[33318] = "tài", n[37414] = "tài", n[28313] = "tài", n[24907] = "tài", n[24633] = "tān", n[33297] = "tān", n[36010] = "tān", n[25849] = "tān", n[25892] = "tān", n[28760] = "tān", n[30321] = "tān", n[20499] = "tàn", n[22510] = "tàn", n[23122] = "tán", n[27011] = "tán", n[22704] = "tán", n[22709] = "tán", n[24987] = "tán", n[35527] = "tán", n[22727] = "tán", n[26311] = "tán", n[29122] = "tán", n[37663] = "tán", n[38979] = "tán", n[32584] = "tán", n[34283] = "tán", n[22748] = "tán", n[35674] = "tán", n[35994] = "tán", n[37296] = "tán", n[35680] = "tán", n[32590] = "tán", n[33788] = "tǎn", n[20683] = "tàn", n[37485] = "tǎn", n[22015] = "tǎn", n[25011] = "tǎn", n[25019] = "tǎn", n[26298] = "tǎn", n[37267] = "tǎn", n[29870] = "tǎn", n[35170] = "tǎn", n[28256] = "tàn", n[22022] = "tàn", n[33301] = "tàn", n[27470] = "tàn", n[22049] = "tāng", n[21135] = "tāng", n[34666] = "tāng", n[34202] = "tāng", n[36442] = "tāng";n[37852] = "táng", n[38842] = "tāng", n[40734] = "tāng", n[22371] = "táng", n[20623] = "táng", n[21882] = "táng", n[37132] = "táng", n[33998] = "táng", n[38554] = "táng", n[27062] = "táng", n[28447] = "táng", n[29051] = "táng", n[31135] = "táng", n[33157] = "táng", n[30916] = "táng", n[31939] = "táng", n[31702] = "táng", n[36412] = "táng", n[31963] = "táng", n[36207] = "táng", n[37781] = "táng", n[39225] = "táng", n[39236] = "táng", n[40374] = "táng", n[20246] = "tǎng", n[38219] = "tǎng", n[37810] = "tǎng", n[20795] = "tǎng", n[25091] = "tǎng", n[26349] = "tǎng", n[29219] = "tǎng", n[30680] = "tǎng", n[38018] = "tǎng", n[25701] = "tàng", n[29145] = "tàng", n[37899] = "tàng", n[22837] = "yǎn", n[24354] = "tāo", n[25261] = "yǎo", n[32091] = "tāo", n[35420] = "tāo", n[23245] = "tāo", n[24141] = "tāo", n[24902] = "tāo", n[25647] = "tāo", n[27076] = "tāo", n[29803] = "tāo", n[39160] = "tāo", n[32282] = "tāo", n[32295] = "tāo", n[28644] = "tāo", n[35615] = "tāo", n[36673] = "tāo", n[38833] = "tāo", n[38876] = "tāo", n[21259] = "yáo", n[36847] = "táo", n[21687] = "táo", n[32505] = "táo", n[31097] = "táo", n[35050] = "táo", n[32175] = "táo", n[34602] = "táo", n[38784] = "táo", n[37252] = "táo", n[38793] = "táo", n[37630] = "táo", n[39395] = "táo", n[39232] = "táo", n[39434] = "táo", n[35342] = "tǎo", n[33062] = "tè", n[29318] = "zhí", n[37617] = "tè", n[34776] = "tè", n[29093] = "tēng", n[33199] = "tēng", n[40735] = "tēng", n[24144] = "téng", n[28443] = "téng", n[36998] = "téng", n[32290] = "téng", n[34723] = "téng", n[39398] = "téng", n[35588] = "téng", n[20783] = "téng", n[39472] = "téng", n[31824] = "téng", n[39975] = "téng", n[31832] = "téng", n[34373] = "téng", n[39523] = "téng", n[38703] = "tèng", n[37563] = "tī", n[25855] = "zhì", n[40393] = "tī", n[40392] = "tī", n[39636] = "tǐ", n[21399] = "tí", n[26699] = "yí", n[20557] = "tí", n[23198] = "tí", n[23865] = "tí", n[31242] = "tí", n[32612] = "tí", n[21953] = "tí", n[29765] = "tí", n[31124] = "zhǐ", n[32136] = "tì", n[30588] = "tí", n[35078] = "tí", n[28477] = "tí", n[32249] = "tí", n[34139] = "tí", n[36263] = "tí", n[35605] = "tí", n[36431] = "tí", n[37719] = "tí", n[40128] = "tí", n[38988] = "tí", n[39863] = "tí", n[40284] = "tí", n[39456] = "tí", n[39927] = "tí", n[31157] = "tí", n[40420] = "tí", n[25390] = "tì", n[36528] = "tǐ", n[39605] = "tǐ", n[36550] = "tǐ", n[25147] = "tì", n[26385] = "tì", n[23644] = "tì", n[24720] = "tì", n[25510] = "tì", n[31545] = "tì", n[36919] = "tì", n[23647] = "xiè", n[24790] = "tì", n[35077] = "tì", n[27474] = "tì", n[27554] = "tì", n[39664] = "tì", n[34201] = "tì", n[39680] = "tì", n[22164] = "tì", n[29899] = "tì", n[39684] = "tì", n[31818] = "tì", n[36271] = "yuè", n[20850] = "tiān", n[21585] = "tūn", n[23126] = "tiān", n[37215] = "tiān", n[38740] = "tiān", n[40647] = "tiān", n[38749] = "tiān", n[23623] = "tián", n[27834] = "tián", n[30033] = "tián", n[30455] = "xián", n[32971] = "tián", n[29979] = "tián", n[33790] = "tiàn", n[28233] = "tián", n[22625] = "tián", n[29809] = "zhèn", n[30901] = "tián", n[30924] = "tián", n[40235] = "tián", n[29875] = "tián", n[38352] = "tián", n[40390] = "tián", n[40399] = "tián", n[20494] = "tiǎn", n[21818] = "tiǎn", n[24767] = "tiǎn", n[28127] = "tiǎn", n[32062] = "zhěn", n[26218] = "tiǎn", n[29728] = "tiàn", n[35277] = "tiǎn", n[30547] = "tiǎn", n[39170] = "tiǎn", n[35237] = "tiǎn", n[36063] = "tiǎn", n[37674] = "tiǎn", n[33306] = "tiàn", n[26091] = "tiāo", n[24227] = "tiāo", n[24652] = "yáo", n[26781] = "tiáo", n[32846] = "tiāo", n[33408] = "tiáo", n[23719] = "tiáo", n[23737] = "tiáo", n[31058] = "tiáo", n[33812] = "tiáo", n[34010] = "tiáo", n[34024] = "tiáo", n[27172] = "tiáo", n[37594] = "tiáo", n[38807] = "tiáo", n[39880] = "tiáo", n[37797] = "tiáo", n[40800] = "tiáo", n[39991] = "tiáo", n[23464] = "tiǎo", n[26176] = "tiǎo", n[26387] = "tiǎo", n[33025] = "tiǎo", n[26018] = "tǒu", n[31409] = "tiǎo", n[23333] = "tiǎo", n[35228] = "tiào", n[36242] = "tiào", n[31990] = "tiào", n[24599] = "zhān", n[32849] = "zhé", n[36028] = "tiē", n[34504] = "tiě", n[37444] = "tiě", n[37525] = "tiě", n[37921] = "tiě", n[37941] = "tiě", n[39510] = "tiě", n[39163] = "tiè", n[24193] = "tīng", n[32787] = "tīng", n[21403] = "tīng", n[26735] = "yíng", n[28916] = "tīng", n[28191] = "tíng", n[32142] = "tīng", n[38803] = "tīng", n[32884] = "tīng", n[32892] = "tīng", n[24304] = "tīng", n[32893] = "tīng", n[24307] = "tīng", n[37010] = "tíng", n[23881] = "tíng", n[31603] = "tíng", n[26975] = "tíng", n[27059] = "tíng", n[38318] = "tǐng", n[32868] = "tíng", n[34639] = "tíng", n[35562] = "tíng", n[40750] = "tíng", n[22306] = "tǐng", n[20409] = "tǐng", n[23063] = "tǐng", n[28047] = "tǐng", n[28918] = "tǐng", n[29693] = "tǐng", n[33057] = "tǐng", n[39051] = "tǐng", n[35476] = "tǐng", n[38962] = "tǐng", n[22258] = "wéi", n[28853] = "tōng", n[30156] = "tóng", n[34026] = "tōng", n[27147] = "tōng", n[23746] = "tóng", n[24221] = "tóng", n[21699] = "tóng", n[23773] = "tóng", n[26189] = "tóng", n[28021] = "tóng", n[34450] = "tóng", n[20549] = "zhòng", n[30510] = "tóng", n[31217] = "tóng", n[30823] = "yǒng", n[31905] = "tóng", n[35447] = "tóng", n[36200] = "tóng", n[37462] = "tóng", n[37493] = "tóng", n[37509] = "tóng", n[39175] = "tóng", n[40086] = "tóng", n[29534] = "tóng", n[26312] = "tóng", n[27651] = "tóng", n[29341] = "tóng", n[33191] = "tóng", n[31324] = "zhǒng", n[39846] = "tóng", n[32113] = "tǒng", n[31593] = "tǒng", n[32130] = "tǒng", n[34901] = "tòng", n[24927] = "tòng", n[24965] = "tòng", n[20600] = "tōu", n[23166] = "yú", n[23214] = "yú", n[37742] = "tōu", n[38957] = "tóu", n[22965] = "tǒu", n[32015] = "tǒu", n[25960] = "tǒu", n[39155] = "zhù", n[40648] = "tǒu", n[34339] = "tǒu", n[27746] = "tu", n[31167] = "tū", n[28043] = "tū", n[25464] = "tū", n[22551] = "tū", n[28261] = "tū", n[30172] = "tū", n[33878] = "tū", n[23936] = "tū", n[37621] = "tū", n[40282] = "tū", n[40757] = "tū", n[22259] = "tú", n[20931] = "tú", n[23801] = "tú", n[24233] = "tú", n[24711] = "tú", n[33717] = "tù", n[25580] = "tú", n[22615] = "tú", n[23902] = "tú", n[30223] = "tú", n[31585] = "tú", n[33135] = "tú", n[33956] = "tú", n[37423] = "tú", n[22295] = "tú", n[22294] = "tú", n[24284] = "tú", n[28531] = "zhā", n[36351] = "tú", n[22719] = "yì", n[39327] = "tú", n[37710] = "tú", n[39420] = "tú", n[40268] = "tú", n[40351] = "tú", n[40395] = "tú", n[40437] = "tú", n[22305] = "tǔ", n[21771] = "tù", n[37367] = "tǔ", n[20814] = "tù", n[36812] = "tù", n[40309] = "tù", n[29487] = "tuàn", n[22293] = "tuān", n[29011] = "tuān", n[35986] = "tuàn", n[22243] = "tuán", n[21112] = "zhuān", n[22296] = "tuán", n[22652] = "zhuān", n[24945] = "tuán", n[25718] = "tuán", n[28441] = "zhuān", n[31743] = "zhuān", n[27314] = "tuán", n[37828] = "tuán", n[31984] = "tuán", n[40402] = "tuán", n[40443] = "tuán", n[30077] = "tuǎn", n[35094] = "tuàn", n[34039] = "tuī", n[34284] = "tuī", n[35721] = "yí", n[24346] = "tuí", n[20691] = "tuǐ", n[38564] = "tuí", n[23605] = "tuí", n[38970] = "tuí", n[38969] = "tuí", n[38973] = "tuí", n[39755] = "tuí", n[31336] = "tuí", n[34312] = "tuí", n[36458] = "tuí", n[20416] = "tuǐ", n[32841] = "zhuó", n[36422] = "tuǐ", n[39613] = "tuǐ", n[20411] = "tuó", n[23079] = "tuì", n[34555] = "tuì", n[34689] = "tuì", n[39422] = "tuì", n[26109] = "zhùn", n[28050] = "yūn", n[26396] = "tūn", n[28958] = "tūn", n[34508] = "tún", n[35928] = "tún", n[36568] = "tún", n[39145] = "tún", n[40064] = "tún", n[39784] = "tún", n[38677] = "tún", n[40663] = "tún", n[33227] = "tún", n[35756] = "tuō", n[27729] = "tuō", n[39270] = "tuō", n[26452] = "zhé", n[20354] = "tuō", n[21635] = "tuō", n[21660] = "tuō", n[25301] = "tuō", n[33676] = "tuō", n[34953] = "tuó", n[34981] = "tuō", n[35351] = "tuō", n[28086] = "tuò", n[33067] = "tuō", n[39141] = "tuō", n[39346] = "zhé", n[39776] = "tuō", n[39861] = "tuō", n[38436] = "tuó", n[38465] = "tuó", n[23726] = "tuó", n[29391] = "yí", n[30756] = "tuó", n[32061] = "tuó", n[22582] = "tuó", n[35409] = "tuó", n[30882] = "tuó", n[27094] = "tuó", n[39390] = "tuó", n[39389] = "tuó", n[39808] = "tuó", n[40213] = "tuó", n[40743] = "tuó", n[39464] = "tuó", n[39506] = "tuó", n[39517] = "tuó", n[40713] = "tuó", n[24437] = "yí", n[26965] = "tuǒ", n[23287] = "tuǒ", n[25777] = "wěi", n[27234] = "tuǒ", n[40270] = "tuǒ", n[39958] = "tuǒ", n[27620] = "tuò", n[33818] = "tuò", n[36293] = "tuò", n[27643] = "tuò", n[23966] = "tuò", n[34304] = "tuò", n[31836] = "tuò", n[23666] = "wā", n[31349] = "wā", n[21176] = "wā", n[30038] = "wā", n[31370] = "wā", n[21848] = "yuē", n[23207] = "wā", n[29950] = "wā", n[25650] = "wà", n[28315] = "wā", n[28453] = "wā", n[31402] = "wā", n[40707] = "wā", n[25896] = "wā", n[38856] = "wā", n[37047] = "wǎ", n[21651] = "wǎ", n[30745] = "wǎ", n[23136] = "wān", n[21986] = "wà", n[33155] = "wà", n[35178] = "wà", n[38884] = "wà", n[21902] = "wāi", n[31477] = "wāi", n[39009] = "wài", n[22807] = "yuàn", n[22502] = "wǎn", n[24117] = "wān", n[25445] = "yù", n[22598] = "wān", n[30549] = "wān", n[28523] = "wān", n[37626] = "yuǎn", n[24398] = "wān", n[22762] = "wān", n[28771] = "wān", n[21011] = "wán", n[27725] = "wán", n[23695] = "wán", n[24552] = "wán", n[25231] = "wán", n[26476] = "yuán", n[31490] = "wán", n[32008] = "wán", n[25430] = "wán", n[34454] = "yuán", n[29715] = "wán", n[36006] = "wán", n[38929] = "wán", n[32747] = "wán", n[20487] = "wǎn", n[21773] = "wǎn", n[30412] = "wǎn", n[26213] = "wǎn", n[26778] = "wǎn", n[28084] = "yuān", n[33814] = "wǎn", n[24780] = "yuān", n[26217] = "wǎn", n[26236] = "wǎn", n[26880] = "wǎn", n[32169] = "wǎn", n[32176] = "wǎn", n[36627] = "wǎn", n[36384] = "wǎn", n[37588] = "wǎn", n[21325] = "wàn", n[21328] = "wàn", n[22951] = "yuán", n[26468] = "wàn", n[33045] = "wàn", n[33836] = "wàn", n[36624] = "wàn", n[30627] = "wàn", n[37693] = "wàn", n[34755] = "wàn", n[36099] = "zhuàn", n[36110] = "wàn", n[23587] = "wāng", n[23595] = "wāng", n[23594] = "wāng", n[23593] = "wāng", n[28679] = "wǎng", n[20158] = "wáng", n[20838] = "wáng", n[20220] = "wáng", n[33699] = "wáng", n[34463] = "wáng", n[32595] = "wǎng", n[32594] = "wǎng", n[24442] = "wǎng", n[24451] = "wǎng", n[32598] = "wǎng", n[36844] = "zhù", n[33781] = "wǎng", n[26240] = "wàng", n[26850] = "wǎng", n[34535] = "wǎng", n[32178] = "wǎng", n[34628] = "wǎng", n[35511] = "wǎng", n[36638] = "wǎng", n[26402] = "wàng", n[21379] = "yán", n[28883] = "wēi", n[38535] = "wēi", n[21940] = "wēi", n[23193] = "wēi", n[23892] = "wěi", n[24836] = "wēi", n[25547] = "wēi", n[25595] = "wēi", n[33896] = "wēi", n[26931] = "wēi", n[26994] = "wēi", n[28326] = "wēi", n[35444] = "wēi", n[34610] = "wēi", n[32261] = "wēi", n[34651] = "wēi", n[35235] = "wēi", n[23990] = "wēi", n[29168] = "wēi", n[40130] = "wēi", n[30291] = "wēi", n[39939] = "wēi", n[39940] = "wēi", n[38714] = "wēi", n[23767] = "wéi", n[23774] = "wéi", n[27912] = "wéi", n[28858] = "wèi", n[38859] = "wéi", n[30809] = "wèi", n[21921] = "wèi", n[22285] = "wéi", n[23169] = "wěi", n[24131] = "wéi", n[28235] = "wéi", n[28296] = "wéi", n[29234] = "wèi", n[29727] = "yù", n[36949] = "wéi", n[32173] = "wéi", n[34038] = "wéi", n[37164] = "wéi", n[28505] = "wéi", n[28543] = "wéi", n[37248] = "wéi", n[28656] = "wéi", n[37711] = "wéi", n[38344] = "wéi", n[39840] = "wéi", n[22749] = "wéi", n[30656] = "wéi", n[35257] = "wéi", n[29353] = "wéi", n[27400] = "zuì", n[33435] = "wěi", n[23639] = "wěi", n[25444] = "wěi", n[27992] = "wěi", n[33649] = "wěi", n[20553] = "wěi", n[20605] = "wěi", n[21801] = "wō", n[23843] = "wěi", n[26806] = "wěi", n[30159] = "yù", n[39593] = "wěi", n[24491] = "wěi", n[24839] = "wěi", n[28200] = "wěi", n[33894] = "wěi", n[33933] = "wěi", n[39595] = "wěi", n[39594] = "wěi", n[26256] = "wěi", n[29010] = "wěi", n[29771] = "wěi", n[33138] = "wěi", n[20702] = "wěi", n[23945] = "wěi", n[30888] = "wèi", n[23530] = "wěi", n[32239] = "wěi", n[34111] = "wěi", n[35529] = "wěi", n[36371] = "wěi", n[38865] = "wěi", n[38944] = "wěi", n[34227] = "yuǎn", n[20784] = "wěi", n[37729] = "wěi", n[39850] = "wěi", n[38873] = "wěi", n[39097] = "wěi", n[38881] = "wěi", n[33535] = "wèi", n[21470] = "yù", n[29466] = "yá", n[33739] = "wèi", n[23206] = "wèi", n[29023] = "wèi", n[22683] = "wèi", n[34620] = "wèi", n[29101] = "wèi", n[29338] = "wèi", n[32237] = "wèi", n[34655] = "wèi", n[34907] = "wèi", n[25024] = "wèi", n[32635] = "wèi", n[34910] = "wèi", n[35586] = "wèi", n[39207] = "wèi", n[39815] = "wèi", n[34737] = "wèi", n[35133] = "wèi", n[39221] = "wèi", n[34287] = "wèi", n[36682] = "wèi", n[37839] = "wèi", n[38696] = "wèi", n[40154] = "wèi", n[34358] = "wèi", n[39254] = "wèi", n[35718] = "wèi", n[36503] = "wèi", n[35727] = "wèi", n[36507] = "wèi", n[26167] = "wēn", n[22637] = "wēn", n[32522] = "yùn", n[27013] = "yùn", n[27551] = "wēn", n[28331] = "wēn", n[29797] = "wēn", n[36754] = "wēn", n[27058] = "wēn", n[32252] = "yùn", n[32277] = "yùn", n[35953] = "wēn", n[36668] = "wēn", n[36672] = "wēn", n[37822] = "wēn", n[39234] = "wēn", n[40129] = "wēn", n[38832] = "yùn", n[39963] = "wēn", n[39982] = "wēn", n[24419] = "wén", n[33440] = "wén", n[28806] = "wén", n[32011] = "wèn", n[34441] = "wén", n[29683] = "wén", n[30226] = "wén", n[32862] = "wén", n[39356] = "wén", n[39367] = "wén", n[39792] = "wén", n[40188] = "wén", n[40205] = "wén", n[34721] = "wén", n[38330] = "wén", n[38335] = "wén", n[34753] = "wén", n[38341] = "wén", n[40740] = "wén", n[32359] = "wén", n[38374] = "wén", n[20230] = "wěn", n[21573] = "wěn", n[25222] = "wěn", n[32947] = "wěn", n[26749] = "wěn", n[33047] = "wěn", n[31311] = "wěn", n[31337] = "wěn", n[22927] = "wèn", n[21839] = "wèn", n[25598] = "wèn", n[25653] = "wèn", n[38992] = "wèn", n[28355] = "wěng", n[40543] = "wēng", n[32876] = "wēng", n[34697] = "wēng", n[37779] = "wēng", n[40370] = "wēng", n[21212] = "yǎng", n[22883] = "wěng", n[22613] = "wěng", n[23905] = "wěng", n[26273] = "wěng", n[30600] = "wěng", n[25882] = "wěng", n[29973] = "wèng", n[32587] = "wèng", n[40774] = "wèng", n[28089] = "wō", n[29479] = "wō", n[33845] = "wō", n[31401] = "wō", n[25790] = "zhuā", n[34680] = "wō", n[36370] = "wō", n[23121] = "wǒ", n[23120] = "wǒ", n[20212] = "wò", n[26498] = "yuè", n[33253] = "wò", n[20563] = "wò", n[25470] = "xiá", n[23177] = "wò", n[26947] = "wò", n[33115] = "wò", n[30595] = "wò", n[28643] = "wò", n[29889] = "wò", n[33234] = "yuè", n[39335] = "yūn", n[40823] = "wò", n[24345] = "wū", n[25180] = "yū", n[27738] = "wū", n[27737] = "wū", n[26437] = "yú", n[26439] = "wū", n[27967] = "wū", n[28879] = "wū", n[21101] = "wū", n[31375] = "wū", n[37140] = "wū", n[21978] = "wū", n[35464] = "wū", n[27469] = "wū", n[35491] = "wū", n[31676] = "wū";n[34704] = "wū", n[40238] = "wū", n[37794] = "wū", n[39966] = "wū", n[21555] = "wú", n[21577] = "wú", n[37082] = "wú", n[23082] = "yú", n[23807] = "wú", n[27926] = "wú", n[33571] = "wú", n[33665] = "wú", n[29688] = "wú", n[31078] = "wú", n[28961] = "wú", n[38139] = "wú", n[40512] = "wú", n[22706] = "wú", n[34154] = "wú", n[37593] = "wú", n[27206] = "wú", n[29841] = "wú", n[34801] = "wú", n[39875] = "wú", n[40272] = "wú", n[35669] = "wú", n[40417] = "wú", n[20036] = "wǔ", n[26111] = "wù", n[29597] = "wǔ", n[20533] = "wǔ", n[36892] = "wǔ", n[38490] = "wǔ", n[21838] = "wǔ", n[23084] = "wǔ", n[29687] = "wǔ", n[25664] = "wǔ", n[30868] = "wǔ", n[29075] = "wǔ", n[29798] = "wǔ", n[23285] = "wǔ", n[24289] = "wǔ", n[25006] = "wǔ", n[28501] = "wǔ", n[20763] = "wǔ", n[29970] = "wǔ", n[40289] = "wǔ", n[36492] = "wǔ", n[23676] = "wù", n[25188] = "wù", n[23689] = "wù", n[24546] = "wù", n[30713] = "wù", n[20425] = "wù", n[21372] = "wù", n[21209] = "wù", n[24734] = "wù", n[24750] = "wù", n[31877] = "wù", n[38550] = "wù", n[38768] = "wù", n[22626] = "wù", n[22886] = "wù", n[23912] = "wù", n[28329] = "wù", n[29059] = "wù", n[35492] = "wù", n[31417] = "wù", n[38682] = "wù", n[40767] = "wù", n[38695] = "wù", n[40768] = "wù", n[34305] = "wù", n[39446] = "wù", n[40361] = "wù", n[37020] = "xī", n[25208] = "zhé", n[21349] = "xī", n[32952] = "xī", n[32953] = "xī", n[20441] = "xī", n[24454] = "xī", n[39291] = "xī", n[23638] = "xī", n[24725] = "xī", n[27685] = "xī", n[33667] = "xī", n[21821] = "xī", n[26206] = "xī", n[26744] = "xī", n[28179] = "xī", n[28929] = "xī", n[28936] = "xī", n[29707] = "xī", n[32667] = "yì", n[36197] = "xī", n[37368] = "xī", n[20626] = "xì", n[24769] = "xī", n[26227] = "xī", n[28959] = "xī", n[28972] = "yì", n[30542] = "xī", n[32726] = "xī", n[37134] = "xī", n[21376] = "xī", n[23904] = "xī", n[24495] = "xī", n[29013] = "yí", n[33952] = "xī", n[27069] = "xī", n[29064] = "xī", n[32198] = "xī", n[35233] = "xī", n[35944] = "xī", n[39183] = "xī", n[22095] = "xī", n[23302] = "xī", n[24984] = "xǐ", n[28509] = "yà", n[30236] = "xī", n[30926] = "xī", n[20958] = "xī", n[26303] = "xǐ", n[27200] = "xī", n[29115] = "xī", n[29114] = "xī", n[31416] = "xī", n[37675] = "xī", n[29160] = "xī", n[29344] = "xī", n[30630] = "xī", n[30978] = "xī", n[35904] = "xī", n[35903] = "xī", n[35951] = "xī", n[35989] = "xī", n[31974] = "xī", n[32357] = "xī", n[39889] = "xī", n[40279] = "xī", n[35321] = "xī", n[35654] = "xī", n[37869] = "xī", n[37898] = "xī", n[38581] = "xī", n[22193] = "xī", n[24007] = "xī", n[29204] = "xī", n[29351] = "xī", n[37189] = "xī", n[39246] = "xī", n[35325] = "xī", n[34869] = "xī", n[40450] = "xī", n[35327] = "xī", n[38004] = "xī", n[37067] = "xí", n[32722] = "xí", n[21946] = "xí", n[26938] = "xí", n[33973] = "xì", n[33990] = "xí", n[23949] = "xí", n[28445] = "xí", n[36248] = "xí", n[34178] = "xiào", n[35637] = "xí", n[37812] = "xí", n[38699] = "xí", n[40155] = "xí", n[39105] = "xí", n[39473] = "xí", n[39485] = "xí", n[39996] = "xí", n[35186] = "xí", n[39528] = "xí", n[26546] = "xǐ", n[33864] = "xǐ", n[37410] = "xǐ", n[37481] = "xǐ", n[37480] = "xǐ", n[28423] = "xǐ", n[37521] = "xiǎn", n[24985] = "xǐ", n[27250] = "xǐ", n[27478] = "xǐ", n[22736] = "xǐ", n[32304] = "xǐ", n[35601] = "xǐ", n[34786] = "xǐ", n[36445] = "xǐ", n[29885] = "xǐ", n[40026] = "xǐ", n[22221] = "xǐ", n[30678] = "xǐ", n[36519] = "xǐ", n[21304] = "xì", n[21324] = "xì", n[23619] = "xì", n[21612] = "xì", n[24549] = "xì", n[24620] = "xì", n[20418] = "xì", n[24644] = "xì", n[37092] = "xì", n[23635] = "xì", n[32484] = "xì", n[32048] = "xì", n[37363] = "xì", n[26910] = "xì", n[33283] = "xì", n[36231] = "xì", n[24896] = "xié", n[32140] = "xì", n[36201] = "xì", n[38559] = "xì", n[22669] = "xì", n[29058] = "xì", n[29332] = "xì", n[28511] = "xì", n[28569] = "xì", n[34158] = "xì", n[35236] = "xì", n[32280] = "xì", n[40662] = "xì", n[30966] = "xì", n[34409] = "xì", n[39228] = "xì", n[39721] = "xì", n[38716] = "xì", n[23661] = "xì", n[34891] = "xì", n[34418] = "xiā", n[30120] = "yǎ", n[35898] = "xiā", n[20612] = "xiā", n[38293] = "xiǎ", n[28998] = "xiā", n[39084] = "xiā", n[39957] = "xiā", n[20448] = "xiá", n[28832] = "xiá", n[38492] = "xiá", n[23805] = "xiá", n[28890] = "xiá", n[29433] = "xiá", n[29672] = "xiá", n[31083] = "xiá", n[32712] = "xiá", n[33338] = "xiá", n[38527] = "xiá", n[30820] = "xiá", n[25966] = "xiá", n[31594] = "xiá", n[33309] = "xiá", n[30892] = "xiá", n[34168] = "xiá", n[32278] = "xiá", n[36206] = "xiá", n[39803] = "xiá", n[36676] = "xiá", n[37724] = "xiá", n[37771] = "xiá", n[39458] = "xiá", n[40375] = "xiá", n[19973] = "xià", n[20068] = "xià", n[22327] = "xià", n[30108] = "xià", n[26810] = "xià", n[30577] = "xià", n[25047] = "xià", n[22803] = "xià", n[37820] = "xià", n[37868] = "xià", n[20186] = "xiān", n[23667] = "xiān", n[22910] = "xiān", n[20321] = "xiān", n[24570] = "xiān", n[26484] = "xiān", n[31176] = "xiān", n[33518] = "xiān", n[26542] = "zhēn", n[29655] = "xiān", n[25631] = "xiǎn", n[20682] = "xiān", n[20722] = "xiān", n[22037] = "xiān", n[38895] = "xiān", n[25016] = "xiān", n[37697] = "xiān", n[32330] = "xiān", n[35132] = "xiān", n[38897] = "xiān", n[39854] = "xiǎn", n[36462] = "xiān", n[39334] = "xiān", n[24303] = "xiān", n[32398] = "xiān", n[40369] = "xiān", n[35187] = "xiān", n[36506] = "xiān", n[32406] = "xiān", n[40059] = "xiān", n[20269] = "xuán", n[21662] = "xiàn", n[22966] = "xuán", n[25382] = "xián", n[29625] = "xuán", n[32984] = "xián", n[23097] = "xián", n[23153] = "xián", n[32067] = "xián", n[34495] = "xián", n[21859] = "xián", n[28282] = "xián", n[34525] = "xián", n[38289] = "xián", n[34904] = "xián", n[29961] = "xián", n[37532] = "xián", n[23291] = "xián", n[23290] = "xián", n[25002] = "xiàn", n[25743] = "xián", n[28566] = "xián", n[35512] = "xián", n[36066] = "xián", n[35572] = "xián", n[36657] = "xián", n[37262] = "xián", n[30279] = "xián", n[30286] = "xián", n[34262] = "xián", n[31013] = "xín", n[40569] = "xián", n[40601] = "xián", n[36114] = "xián", n[37990] = "xián", n[40436] = "xián", n[40444] = "xián", n[40435] = "xián", n[29405] = "xiǎn", n[23812] = "xiǎn", n[27624] = "xiǎn", n[28877] = "xiǎn", n[38522] = "xiǎn", n[36219] = "xiǎn", n[23583] = "xiǎn", n[23584] = "xiǎn", n[31122] = "xiǎn", n[34566] = "xiǎn", n[31666] = "xiǎn", n[38570] = "xiǎn", n[23982] = "xiǎn", n[29547] = "xiǎn", n[29550] = "xiǎn", n[37708] = "xiǎn", n[38997] = "xiǎn", n[24176] = "xiǎn", n[25863] = "xiǎn", n[27382] = "xiǎn", n[34330] = "xiǎn", n[35683] = "xiǎn", n[29569] = "xiǎn", n[38853] = "xiǎn", n[39023] = "xiǎn", n[28774] = "xiǎn", n[33277] = "xiàn", n[23021] = "xiàn", n[30476] = "xiàn", n[38501] = "xiàn", n[21743] = "xiàn", n[22455] = "xiàn", n[23050] = "xiàn", n[23796] = "xiàn", n[28032] = "xiàn", n[33703] = "xiàn", n[36560] = "xìn", n[26203] = "xiàn", n[29694] = "xiàn", n[30541] = "xiàn", n[32100] = "xiàn", n[32150] = "yán", n[32528] = "xiàn", n[22634] = "xiàn", n[31919] = "xiàn", n[32680] = "xiàn", n[20713] = "xiàn", n[20724] = "xiàn", n[32171] = "xiàn", n[35490] = "xiàn", n[25738] = "xiàn", n[32218] = "xiàn", n[37607] = "xiàn", n[25010] = "xiàn", n[27212] = "xiàn", n[27258] = "xiàn", n[32291] = "xuán", n[37646] = "xiàn", n[39201] = "xiàn", n[35919] = "xiàn", n[40626] = "xiàn", n[28695] = "xiàn", n[33236] = "xiàn", n[29563] = "xiàn", n[31982] = "xiàn", n[40760] = "xiàn", n[37111] = "xiāng", n[37129] = "xiāng", n[37130] = "xiāng", n[24258] = "xiāng", n[33835] = "xiāng", n[37141] = "xiāng", n[27007] = "xiāng", n[31269] = "xiāng", n[34188] = "xiāng", n[32215] = "xiāng", n[33207] = "xiāng", n[24512] = "xiāng", n[40600] = "xiāng", n[27392] = "xiāng", n[29910] = "xiāng", n[40028] = "xiāng", n[38002] = "xiāng", n[39524] = "xiāng", n[20333] = "xiáng", n[32655] = "yáng", n[26649] = "xiáng", n[32116] = "xiáng", n[35443] = "xiáng", n[36333] = "xiáng", n[20143] = "xiǎng", n[34435] = "xiǎng", n[26193] = "xiǎng", n[39177] = "xiǎng", n[34817] = "xiǎng", n[39837] = "xiǎng", n[39895] = "xiǎng", n[38911] = "xiǎng", n[39255] = "xiǎng", n[40054] = "xiǎng", n[23008] = "xiàng", n[29670] = "xiàng", n[32575] = "xiàng", n[34902] = "xiàng", n[38917] = "xiàng", n[21224] = "xiàng", n[23953] = "xiàng", n[26319] = "xiàng", n[35152] = "xiàng", n[22190] = "xiàng", n[37900] = "xiàng", n[40012] = "xiàng", n[28786] = "xiāo", n[28785] = "xiāo", n[20414] = "xiāo", n[23471] = "xiāo", n[24232] = "xiāo", n[28875] = "xiū", n[34387] = "xiāo", n[40494] = "xiāo", n[23115] = "xiāo", n[26783] = "xiāo", n[28935] = "xiāo", n[29447] = "xiāo", n[30170] = "xiāo", n[30175] = "xiāo", n[30819] = "xiāo", n[31385] = "xiāo", n[32731] = "xiāo", n[25585] = "xiāo", n[32131] = "xiāo", n[27466] = "xiāo", n[36355] = "xiāo", n[22069] = "xiāo", n[29535] = "yào", n[29538] = "xiāo", n[37559] = "xiāo", n[24391] = "xiāo", n[33198] = "xiāo", n[34157] = "xiāo", n[39093] = "xiāo", n[40222] = "xiāo", n[31768] = "xiāo", n[34754] = "xiāo", n[34767] = "xiāo", n[40245] = "xiāo", n[28703] = "xiāo", n[31787] = "xiāo", n[34800] = "xiāo", n[39623] = "xiāo", n[27385] = "xiāo", n[22203] = "xiāo", n[22210] = "xiāo", n[39632] = "xiāo", n[40397] = "xiāo", n[34856] = "xiāo", n[39501] = "xiāo", n[27594] = "xiāo", n[34376] = "xiāo", n[27944] = "xiáo", n[35364] = "xiáo", n[27581] = "yáo", n[35509] = "xiáo", n[26241] = "xiǎo", n[31615] = "xiǎo", n[30363] = "xiǎo", n[26313] = "xiǎo", n[31712] = "xiǎo", n[35599] = "xiǎo", n[30370] = "xiǎo", n[21177] = "xiào", n[21682] = "xiào", n[20466] = "xiào", n[28045] = "xiào", n[20634] = "xiào", n[25961] = "xué", n[35432] = "xiào", n[22027] = "xiào", n[22056] = "xiào", n[35487] = "xiào", n[22063] = "xiào", n[27479] = "xiào", n[29117] = "xiào", n[25989] = "xiào", n[25990] = "xiào", n[23054] = "xiē", n[25587] = "xiē", n[34829] = "xiē", n[26090] = "xié", n[21332] = "xié", n[22437] = "xié", n[22858] = "xié", n[23787] = "yé", n[24650] = "xié", n[25337] = "xié", n[33031] = "xié", n[33029] = "xié", n[33035] = "xié", n[34938] = "xié", n[32723] = "xié", n[21963] = "xié", n[24886] = "xié", n[32138] = "xié", n[29057] = "xié", n[33166] = "xié", n[25813] = "xié", n[32243] = "xié", n[32256] = "xié", n[34658] = "xié", n[35559] = "xié", n[29170] = "xié", n[25847] = "xié", n[38837] = "xié", n[35181] = "xié", n[25884] = "xié", n[35735] = "xié", n[40868] = "xié", n[20905] = "xiě", n[23531] = "xiè", n[34267] = "xiě", n[20275] = "xiè", n[28794] = "xiè", n[31044] = "xiè", n[32567] = "xiè", n[26555] = "yì", n[27945] = "xiè", n[28840] = "xiè", n[28839] = "xiè", n[21352] = "xiè", n[26663] = "yì", n[20574] = "xiè", n[20592] = "xiè", n[24482] = "xiè", n[31164] = "xiè", n[32050] = "xiè", n[23199] = "xiè", n[32079] = "xiè", n[32108] = "xiè", n[20673] = "xiè", n[22638] = "xiè", n[35081] = "xiè", n[38782] = "xiè", n[22119] = "xiè", n[23655] = "xiè", n[26284] = "xiè", n[32228] = "yè", n[28581] = "xiè", n[31951] = "xiè", n[34210] = "xiè", n[38896] = "xiè", n[35131] = "xiè", n[35613] = "xiè", n[22801] = "xiè", n[28681] = "xiè", n[29205] = "xiè", n[32370] = "xiè", n[34831] = "xiè", n[40792] = "xiè", n[40795] = "xiè", n[32392] = "xiè", n[40805] = "xiè", n[40770] = "xiè", n[37028] = "xīn", n[22945] = "xīn", n[26490] = "xīn", n[30458] = "xīn", n[20477] = "xīn", n[24798] = "xīn", n[35362] = "xīn", n[37386] = "xīn", n[24286] = "xīn", n[37573] = "xīn", n[22138] = "xīn", n[23324] = "xīn", n[39339] = "xīn", n[26516] = "xín", n[35153] = "xín", n[37908] = "xín", n[20232] = "xǐn", n[38432] = "xìn", n[20265] = "xìn", n[23390] = "xìn", n[28824] = "xìn", n[33066] = "xìn", n[35371] = "xìn", n[28974] = "xìn", n[38998] = "xìn", n[33291] = "xìn", n[37313] = "xìn", n[22454] = "xīng", n[39565] = "xīng", n[29003] = "xīng", n[29766] = "xīng", n[35306] = "xīng", n[31669] = "xīng", n[31682] = "xīng", n[33288] = "xīng", n[35587] = "xīng", n[39823] = "xīng", n[26320] = "xīng", n[35314] = "xīng", n[39426] = "xīng", n[30376] = "xīng", n[39929] = "xīng", n[20352] = "xíng", n[37065] = "xíng", n[21720] = "xíng", n[27920] = "xíng", n[38040] = "xíng", n[38488] = "xíng", n[23065] = "xíng", n[38095] = "xíng", n[37379] = "xíng", n[34549] = "xíng", n[28366] = "yíng", n[37494] = "xíng", n[37522] = "xíng", n[39219] = "xíng", n[30578] = "xìng", n[20502] = "xìng", n[33685] = "xìng", n[23134] = "xìng", n[28076] = "xìng", n[33877] = "xìng", n[32200] = "xìng", n[23353] = "xìng", n[33238] = "xìng", n[21250] = "xiōng", n[20807] = "xiōng", n[35771] = "xiōng", n[24567] = "xiōng", n[21701] = "xiōng", n[24671] = "xiōng", n[27958] = "xiōng", n[33015] = "xiōng", n[35369] = "xiōng", n[35454] = "xiōng", n[29067] = "xióng", n[28989] = "yīng", n[28984] = "yīng", n[35783] = "xiòng", n[35415] = "xiòng", n[22800] = "xuàn", n[25979] = "xuàn", n[20450] = "xiū", n[28876] = "xiū", n[33065] = "xiū", n[33049] = "xiū", n[33273] = "xiū", n[27143] = "xiū", n[37533] = "xiū", n[39652] = "xiū", n[37760] = "xiū", n[39860] = "xiū", n[40258] = "xiū", n[37829] = "xiù", n[39240] = "xiū", n[40003] = "xiū", n[39117] = "xiū", n[33516] = "xiú", n[28395] = "xiǔ", n[28483] = "xiǔ", n[31956] = "xiǔ", n[23744] = "xiù", n[29659] = "xiù", n[29703] = "xiù", n[32137] = "xiù", n[29843] = "xiù", n[35087] = "xiù", n[35086] = "xiù", n[37561] = "xiù", n[34705] = "xiù", n[32333] = "xiù", n[32353] = "xiù", n[37861] = "xiù", n[37885] = "xiù", n[40773] = "xiù", n[26100] = "xù", n[22977] = "xǔ", n[30110] = "xū", n[27432] = "xū", n[35343] = "xū", n[20582] = "xū", n[34391] = "xū", n[35015] = "xū", n[35377] = "xū", n[35870] = "xū", n[23213] = "xū", n[28241] = "xǔ", n[34395] = "xū", n[38920] = "xū", n[26952] = "xū", n[32135] = "xū", n[38922] = "xū", n[31280] = "xǔ", n[39750] = "xū", n[23299] = "xū", n[27476] = "xū", n[32259] = "xū", n[34150] = "xū", n[34641] = "xū", n[27480] = "xū", n[34247] = "yù", n[35549] = "xū", n[29176] = "xū", n[35651] = "xū", n[39766] = "xū", n[39497] = "xū", n[37968] = "xū", n[39706] = "xū", n[20422] = "xú", n[20884] = "xú", n[31121] = "xú", n[29661] = "xǔ", n[21923] = "xǔ", n[34529] = "yì", n[26250] = "xǔ", n[35425] = "xǔ", n[37158] = "xǔ", n[35583] = "xǔ", n[30440] = "xǔ", n[20277] = "xù", n[27775] = "xù", n[33447] = "zhù", n[20368] = "xù", n[21369] = "xù", n[24628] = "xuè", n[27776] = "xù", n[26155] = "xù", n[22463] = "xù", n[27440] = "xù", n[27528] = "xù", n[28869] = "xù", n[29676] = "xù", n[21207] = "xù", n[24784] = "yù", n[25933] = "xù", n[25944] = "xù", n[28130] = "yù", n[28924] = "xù", n[22779] = "xù", n[26370] = "xù", n[32851] = "xù", n[35385] = "xù", n[32154] = "xù", n[36041] = "xù", n[27090] = "xù", n[28469] = "xù", n[28490] = "xù", n[30434] = "xù", n[30593] = "xù", n[32210] = "xù", n[32863] = "xù", n[29533] = "xù", n[31288] = "xù", n[32214] = "xù";n[34266] = "xù", n[32396] = "xù", n[40046] = "xù", n[26125] = "xuān", n[21690] = "xuǎn", n[24370] = "yuān", n[26181] = "xuān", n[36562] = "xuān", n[22599] = "xuān", n[23191] = "xuān", n[24835] = "xuān", n[24843] = "xuān", n[33842] = "xuān", n[29764] = "xuān", n[34002] = "xuān", n[30587] = "xuān", n[31140] = "xuān", n[31662] = "xuān", n[32743] = "xuān", n[34646] = "xuān", n[34175] = "xuān", n[35552] = "xuān", n[35580] = "xuān", n[39400] = "xún", n[37753] = "xuān", n[39421] = "xuān", n[30670] = "xuān", n[32766] = "xuān", n[34300] = "xuān", n[34320] = "xuān", n[34825] = "xuān", n[35678] = "xuān", n[39962] = "xuān", n[34561] = "xuán", n[23257] = "xuán", n[26294] = "xuán", n[27272] = "xuán", n[29887] = "xuán", n[25080] = "xuán", n[28892] = "xuǎn", n[26245] = "xuǎn", n[36984] = "xuǎn", n[30316] = "xuǎn", n[24624] = "xuàn", n[26145] = "xuàn", n[34984] = "xuàn", n[29700] = "xuàn", n[34898] = "xuàn", n[32098] = "xuàn", n[26981] = "yuán", n[37449] = "xuàn", n[34073] = "xuàn", n[39092] = "xuàn", n[32316] = "xuàn", n[32335] = "xuàn", n[37831] = "xuàn", n[36121] = "xuàn", n[30134] = "xuē", n[33926] = "xuē", n[36773] = "xuē", n[36778] = "xuē", n[38846] = "xuē", n[25992] = "xué", n[20084] = "xué", n[23747] = "xué", n[33555] = "xué", n[34965] = "xué", n[40500] = "xué", n[23416] = "xué", n[23976] = "xué", n[28585] = "xué", n[29154] = "xué", n[40445] = "xué", n[27184] = "xuě", n[33188] = "xuě", n[33373] = "xuě", n[36684] = "xuě", n[40008] = "xuě", n[22393] = "xuè", n[23716] = "xuè", n[29400] = "xuè", n[26710] = "xuè", n[36240] = "xuè", n[35604] = "xuè", n[30642] = "xuè", n[28709] = "xuè", n[22339] = "xūn", n[21211] = "xūn", n[22628] = "xūn", n[21234] = "xūn", n[21235] = "xūn", n[34219] = "xūn", n[22161] = "xūn", n[22734] = "xūn", n[29179] = "xūn", n[33232] = "xūn", n[30660] = "xūn", n[34317] = "xūn", n[22758] = "xūn", n[29195] = "xùn", n[32385] = "xūn", n[24309] = "xún", n[26442] = "xún", n[30019] = "xún", n[32003] = "xún", n[26642] = "xún", n[26730] = "xún", n[27621] = "xùn", n[29667] = "xún", n[20593] = "xún", n[23563] = "xún", n[25559] = "xún", n[35426] = "xún", n[37161] = "xún", n[22106] = "xún", n[28527] = "xún", n[25907] = "xún", n[27187] = "xún", n[29125] = "xún", n[29142] = "xún", n[29845] = "xún", n[34795] = "yín", n[34803] = "xún", n[29203] = "yàn", n[40024] = "xún", n[40015] = "xún", n[21314] = "xùn", n[20264] = "xùn", n[20378] = "xùn", n[24058] = "xùn", n[29413] = "xùn", n[36863] = "xùn", n[35338] = "xùn", n[35347] = "xùn", n[35353] = "xùn", n[22878] = "zhuì", n[27582] = "xùn", n[31236] = "zè", n[36956] = "xùn", n[39348] = "xùn", n[24891] = "xùn", n[22080] = "xùn", n[28512] = "xùn", n[39016] = "xùn", n[37954] = "xùn", n[22311] = "yā", n[20126] = "yà", n[24216] = "yā", n[26514] = "yā", n[21854] = "yǎ", n[23410] = "yā", n[38100] = "yà", n[26895] = "yā", n[40201] = "yā", n[37647] = "yā", n[40232] = "yā", n[22739] = "yà", n[40310] = "yā", n[37914] = "yā", n[21393] = "yá", n[21395] = "yá", n[31500] = "yá", n[22544] = "yá", n[23829] = "yá", n[37374] = "yé", n[28420] = "yá", n[40790] = "yá", n[21386] = "yǎ", n[24204] = "yǎ", n[25372] = "yà", n[21782] = "yǎ", n[25495] = "yà", n[30210] = "yǎ", n[34149] = "yǎ", n[21148] = "yà", n[22304] = "yà", n[20916] = "yà", n[35198] = "yà", n[35200] = "yà", n[20124] = "yà", n[29373] = "yà", n[29601] = "yà", n[20473] = "yà", n[22497] = "yà", n[23149] = "yà", n[35357] = "yà", n[27692] = "yà", n[32848] = "yà", n[22292] = "yà", n[26939] = "yàn", n[31247] = "yà", n[31403] = "yē", n[40830] = "yà", n[21094] = "yān", n[29658] = "yān", n[28106] = "yān", n[28945] = "yān", n[27543] = "yè", n[28208] = "yǎn", n[20671] = "yàn", n[27461] = "yīn", n[29017] = "yān", n[30845] = "yǎn", n[28473] = "yān", n[23958] = "yān", n[27182] = "yān", n[37251] = "yān", n[38329] = "yān", n[23342] = "yàn", n[25064] = "yān", n[31734] = "yān", n[25045] = "yān", n[33241] = "yān", n[40683] = "yān", n[40688] = "zhěn", n[35329] = "yán", n[26134] = "yán", n[28815] = "yán", n[37076] = "yán", n[23032] = "yán", n[23083] = "yán", n[29439] = "yán", n[33690] = "yán", n[23086] = "yán", n[21873] = "yán", n[29698] = "yán", n[30799] = "yàn", n[35374] = "yán", n[38278] = "yán", n[21926] = "yán", n[23891] = "yán", n[23890] = "yán", n[22633] = "yán", n[25541] = "yán", n[26956] = "yán", n[35453] = "yán", n[30878] = "yán", n[34053] = "yán", n[21427] = "yán", n[34404] = "yán", n[38331] = "yán", n[38991] = "yán", n[38996] = "yán", n[22196] = "yán", n[22747] = "yán", n[24012] = "yán", n[31799] = "yán", n[27369] = "yán", n[22759] = "yán", n[24022] = "yán", n[24023] = "yán", n[27413] = "yán", n[31033] = "yǎn", n[40573] = "yán", n[40611] = "yán", n[25217] = "yǎn", n[27783] = "yǎn", n[20085] = "yǎn", n[20823] = "yǎn", n[21309] = "yàn", n[24327] = "yǎn", n[33810] = "yǎn", n[37203] = "yǎn", n[38529] = "yàn", n[23875] = "yǎn", n[24861] = "yǎn", n[25162] = "yǎn", n[25564] = "yǎn", n[26858] = "yàn", n[28215] = "yǎn", n[36931] = "yǎn", n[38546] = "yǎn", n[26940] = "yǎn", n[35095] = "yǎn", n[25133] = "yǎn", n[34648] = "yǎn", n[22110] = "yǎn", n[36541] = "yǎn", n[32303] = "yǐn", n[27327] = "yǎn", n[40673] = "yǎn", n[21428] = "yǎn", n[29975] = "yǎn", n[39947] = "yǎn", n[40352] = "yǎn", n[40676] = "yǎn", n[20796] = "yǎn", n[40684] = "yǎn", n[40685] = "yǎn", n[40849] = "yǎn", n[23373] = "yǎn", n[39017] = "yǎn", n[40756] = "yǎn", n[24024] = "yǎn", n[24026] = "yǎn", n[26350] = "yǎn", n[39768] = "yǎn", n[40820] = "yǎn", n[40694] = "yǎn", n[22943] = "yàn", n[35267] = "yàn", n[29290] = "yàn", n[23026] = "yàn", n[24421] = "yàn", n[28923] = "yàn", n[35214] = "yàn", n[20560] = "yàn", n[28948] = "yàn", n[21933] = "yàn", n[25957] = "yàn", n[29458] = "yàn", n[30831] = "yàn", n[40171] = "yàn", n[21421] = "yàn", n[22677] = "yàn", n[26277] = "yàn", n[29078] = "yàn", n[23306] = "yàn", n[40200] = "yàn", n[29124] = "yàn", n[35578] = "yàn", n[39731] = "yàn", n[22152] = "yàn", n[26325] = "yàn", n[40243] = "yàn", n[37184] = "yàn", n[39440] = "yàn", n[39443] = "yàn", n[22181] = "yàn", n[23359] = "yàn", n[33398] = "yàn", n[36107] = "yàn", n[36549] = "yàn", n[26339] = "yàn", n[39476] = "yàn", n[40798] = "yàn", n[40387] = "yàn", n[28756] = "yàn", n[36119] = "yàn", n[35326] = "yàn", n[35724] = "yàn", n[37308] = "yàn", n[39260] = "yàn", n[39511] = "yàn", n[40432] = "yàn", n[33399] = "yàn", n[28750] = "yàn", n[37317] = "yàn", n[39520] = "yàn", n[28775] = "yàn", n[35742] = "yàn", n[35923] = "yàn", n[35924] = "yàn", n[28777] = "yàn", n[22990] = "yāng", n[25264] = "yāng", n[26573] = "yīng", n[32998] = "yāng", n[30479] = "yìng", n[37472] = "yāng", n[38645] = "yāng", n[37704] = "yāng", n[40230] = "yāng", n[38438] = "yáng", n[26104] = "yáng", n[39119] = "yáng", n[21175] = "yáng", n[38038] = "yáng", n[22431] = "yáng", n[26140] = "yáng", n[29660] = "yáng", n[30523] = "yáng", n[38525] = "yáng", n[23864] = "yáng", n[25562] = "yáng", n[25965] = "yáng", n[26264] = "yáng", n[26954] = "yáng", n[29036] = "yàng", n[30221] = "yáng", n[35577] = "yáng", n[36656] = "yáng", n[37722] = "yáng", n[40249] = "yáng", n[39098] = "yáng", n[39953] = "yáng", n[38711] = "yáng", n[40457] = "yáng", n[20306] = "yǎng", n[21641] = "yǎng", n[22385] = "yǎng", n[23711] = "yǎng", n[28852] = "yǎng", n[32059] = "yǎng", n[20639] = "yǎng", n[26983] = "yīng", n[36590] = "yǎng", n[24899] = "yǎng", n[27697] = "yǎng", n[34630] = "yǎng", n[39178] = "yǎng", n[39386] = "yǎng", n[25065] = "yǎng", n[25857] = "yǎng", n[28673] = "yàng", n[30306] = "yǎng", n[31010] = "yǎng", n[32661] = "yàng", n[35399] = "yàng", n[27096] = "yàng", n[27171] = "yàng", n[26518] = "yǎo", n[27520] = "yāo", n[31045] = "yāo", n[32004] = "yuē", n[35358] = "yāo", n[21907] = "yāo", n[33917] = "yāo", n[26950] = "yāo", n[40193] = "yāo", n[40226] = "yāo", n[23597] = "yáo", n[22426] = "yáo", n[23779] = "yáo", n[20484] = "yáo", n[28881] = "yáo", n[20636] = "yáo", n[22575] = "yáo", n[25594] = "yáo", n[36602] = "yáo", n[21954] = "yáo", n[23217] = "yáo", n[24878] = "yào", n[25622] = "yáo", n[28391] = "yáo", n[29498] = "yáo", n[36953] = "yáo", n[25727] = "yáo", n[26266] = "yáo", n[27043] = "yáo", n[29796] = "yáo", n[39126] = "yáo", n[39174] = "yáo", n[23970] = "yáo", n[23972] = "yáo", n[30936] = "yáo", n[31407] = "yáo", n[31408] = "yáo", n[39194] = "yáo", n[35617] = "yáo", n[35616] = "yáo", n[37776] = "zú", n[39099] = "yáo", n[34344] = "yáo", n[37006] = "yáo", n[39012] = "yáo", n[39977] = "yáo", n[40025] = "yáo", n[23438] = "yǎo", n[23686] = "yǎo", n[29397] = "yǎo", n[33517] = "yǎo", n[26620] = "yǎo", n[31365] = "yǎo", n[20576] = "yǎo", n[23161] = "yǎo", n[28308] = "yǎo", n[34004] = "zhuó", n[27034] = "yǎo", n[38340] = "yǎo", n[39445] = "yǎo", n[40809] = "yǎo", n[40405] = "yǎo", n[24622] = "yōu", n[31358] = "yào", n[34958] = "yào", n[31380] = "yào", n[31556] = "yào", n[33903] = "yào", n[35407] = "yào", n[29070] = "yào", n[35230] = "yào", n[38783] = "yào", n[34220] = "yào", n[40764] = "yào", n[29183] = "yào", n[33374] = "yào", n[34277] = "yào", n[30661] = "yào", n[40386] = "yào", n[35729] = "yào", n[20138] = "ye", n[21524] = "yē", n[20539] = "yē", n[26253] = "yē", n[27467] = "yē", n[28529] = "yē", n[25832] = "yē", n[34862] = "yē", n[25427] = "yú", n[29242] = "yé", n[29784] = "yé", n[37603] = "yé", n[37761] = "yé", n[22492] = "yě", n[22050] = "yě", n[28444] = "yě", n[22724] = "yě", n[26357] = "yè", n[25268] = "yè", n[20145] = "yè", n[26556] = "yè", n[27906] = "yè", n[38913] = "yè", n[25433] = "yè", n[26557] = "yè", n[33865] = "yè", n[22711] = "yè", n[26989] = "yè", n[29024] = "zhá", n[39308] = "yè", n[20727] = "yè", n[26309] = "yè", n[29121] = "yè", n[29837] = "yè", n[25819] = "yè", n[26308] = "yè", n[30371] = "yè", n[30641] = "yè", n[37172] = "yè", n[23978] = "yè", n[23979] = "yè", n[28594] = "yè", n[35585] = "yè", n[39203] = "yè", n[25835] = "yè", n[26327] = "yè", n[30648] = "yè", n[37745] = "yè", n[25834] = "yè", n[29207] = "yè", n[30991] = "yè", n[39233] = "yè", n[40314] = "yè", n[37943] = "yè", n[38760] = "yè", n[39516] = "yè", n[40456] = "yè", n[24364] = "yi", n[20042] = "yī", n[24332] = "yī", n[36791] = "yī", n[21530] = "yī", n[22769] = "yī", n[31054] = "yī", n[27938] = "yī", n[24728] = "yì", n[28175] = "yī", n[30057] = "yī", n[37116] = "yī", n[34524] = "yī", n[31125] = "yī", n[23259] = "yī", n[31270] = "yī", n[37541] = "yī", n[23300] = "yī", n[25742] = "yī", n[22785] = "yī", n[29823] = "yī", n[40549] = "yī", n[32324] = "yī", n[27321] = "yī", n[27593] = "yī", n[37291] = "yī", n[35689] = "yī", n[40406] = "yī", n[40691] = "yī", n[21276] = "yí", n[36806] = "yǐ", n[20893] = "yí", n[23440] = "yí", n[20359] = "yí", n[36849] = "yǐ", n[23763] = "yí", n[24670] = "yí", n[27935] = "yí", n[29941] = "yí", n[36859] = "yí", n[23463] = "yí", n[24056] = "yí", n[25157] = "yí", n[26648] = "yí", n[34968] = "yì", n[36004] = "yì", n[33811] = "yí", n[26924] = "yí", n[32672] = "yí", n[34534] = "yí", n[36029] = "yí", n[26246] = "yí", n[26936] = "yí", n[36320] = "yí", n[38921] = "yí", n[20736] = "yí", n[29098] = "yí", n[36986] = "yí", n[23980] = "yí", n[24411] = "yí", n[24412] = "yí", n[34708] = "yí", n[38949] = "yí", n[38948] = "yí", n[23538] = "yí", n[31747] = "yí", n[38986] = "yí", n[39847] = "yí", n[40250] = "yí", n[24414] = "yí", n[35643] = "yí", n[37844] = "yí", n[31822] = "yí", n[35322] = "yí", n[20059] = "yǐ", n[25914] = "yǐ", n[33506] = "yǐ", n[24225] = "yǐ", n[37332] = "yǐ", n[25158] = "yǐ", n[31510] = "yǐ", n[36888] = "yǐ", n[20591] = "yǐ", n[23866] = "yǐ", n[26065] = "yǐ", n[37400] = "yǐ", n[37487] = "yǐ", n[40166] = "yǐ", n[35071] = "yǐ", n[36642] = "yǐ", n[23327] = "yǐ", n[25980] = "yǐ", n[34712] = "yǐ", n[27301] = "yǐ", n[30994] = "yǐ", n[33380] = "yǐ", n[34811] = "yǐ", n[38999] = "yǐ", n[36697] = "yǐ", n[40814] = "yǐ", n[20034] = "yì", n[21255] = "yì", n[32906] = "yì", n[38435] = "yì", n[20231] = "yì", n[33413] = "yì", n[20287] = "yì", n[21166] = "yì", n[22340] = "yì", n[26457] = "yì", n[32820] = "yì", n[33477] = "yì", n[21613] = "yì", n[21625] = "yì", n[22967] = "zhí", n[24584] = "yì", n[26509] = "yì", n[27429] = "yù", n[28808] = "yì", n[31175] = "zhí", n[34922] = "yì", n[20427] = "yì", n[24095] = "yì", n[24096] = "yì", n[27970] = "yì", n[29620] = "yì", n[21768] = "yì", n[22460] = "yì", n[26682] = "zhī", n[27437] = "yīn", n[28005] = "yì", n[28019] = "yì", n[34979] = "yì", n[21210] = "yì", n[27577] = "yì", n[30064] = "yì", n[33823] = "yì", n[35379] = "yì", n[35378] = "yì", n[35929] = "yì", n[35931] = "yì", n[37364] = "yì", n[38591] = "yì", n[24134] = "yì", n[25953] = "yì", n[26233] = "yì", n[26861] = "yì", n[27540] = "yì", n[28249] = "yì", n[28978] = "yì", n[35405] = "yì", n[36295] = "yì", n[37139] = "yì", n[37408] = "yì", n[39598] = "yì", n[20100] = "yì", n[20863] = "yì", n[29512] = "yì", n[30188] = "yì", n[31465] = "yì", n[32681] = "yì", n[35035] = "yì", n[35427] = "yì", n[21225] = "yì", n[23253] = "yì", n[24281] = "yì", n[27023] = "yì", n[28521] = "yì", n[33161] = "yì", n[34042] = "yì", n[39365] = "yì", n[20740] = "yì", n[27128] = "yì", n[29092] = "yì", n[29116] = "yì", n[30238] = "yì", n[31698] = "yì", n[35516] = "yì", n[40541] = "yì", n[40546] = "yì", n[40659] = "yì", n[22299] = "yì", n[23313] = "yì", n[23975] = "yì", n[25014] = "yì", n[25036] = "yì", n[26304] = "yì", n[28602] = "yì", n[29146] = "yì", n[30257] = "yì", n[30614] = "yì", n[31315] = "yì", n[32266] = "yì", n[33367] = "yì", n[34720] = "yì", n[35129] = "yì", n[23537] = "yì", n[26318] = "yì", n[27277] = "yì", n[27485] = "yì", n[29153] = "yì", n[29169] = "yì", n[35990] = "yì", n[39848] = "yì", n[34269] = "yì", n[34265] = "yì", n[36096] = "yì", n[37808] = "yì", n[32374] = "yì", n[32377] = "yì", n[35959] = "yì", n[38700] = "yì", n[40323] = "yì", n[40322] = "yì", n[40333] = "yì", n[28727] = "yì", n[34329] = "yì", n[35696] = "yì", n[35695] = "yì", n[37303] = "yì", n[39248] = "yì", n[22216] = "yì", n[37951] = "yì", n[40385] = "yì", n[40394] = "yì", n[35196] = "yì", n[39515] = "yì", n[40423] = "yì", n[34377] = "yì", n[40451] = "yì", n[40446] = "yì", n[35739] = "yì", n[40824] = "yì", n[22233] = "yīn", n[38437] = "yīn", n[20364] = "yīn", n[22420] = "yīn", n[39555] = "yīn", n[26678] = "yīn", n[38512] = "yīn", n[20944] = "yīn", n[31221] = "yīn", n[35008] = "yīn", n[38523] = "yīn", n[38530] = "yīn", n[23139] = "yīn", n[24852] = "yīn", n[31555] = "yīn", n[32106] = "yīn", n[28341] = "yīn", n[31115] = "yīn", n[33937] = "yīn";n[34093] = "yīn", n[24903] = "yīn", n[30230] = "yīn", n[37542] = "yīn", n[30948] = "yǐn", n[32248] = "yīn", n[38791] = "yīn", n[35570] = "yīn", n[38674] = "yīn", n[39408] = "yīn", n[22142] = "yīn", n[28646] = "yīn", n[38345] = "yīn", n[38688] = "yīn", n[40791] = "yīn", n[38910] = "yīn", n[20888] = "yóu", n[20049] = "yín", n[29374] = "yín", n[26022] = "zhì", n[28878] = "yín", n[27903] = "yín", n[22273] = "yín", n[23806] = "yín", n[33654] = "yín", n[35348] = "yín", n[35354] = "yín", n[23148] = "yín", n[23839] = "yín", n[23855] = "yín", n[35361] = "yín", n[37405] = "yín", n[28379] = "yín", n[30866] = "yín", n[34089] = "yín", n[37504] = "yín", n[22102] = "yín", n[27557] = "yín", n[29836] = "yín", n[35518] = "yín", n[22170] = "yín", n[27309] = "yín", n[40806] = "yín", n[40419] = "yín", n[31884] = "yǐn", n[36218] = "yǐn", n[28158] = "yǐn", n[37391] = "yǐn", n[39154] = "yìn", n[38560] = "yìn", n[38775] = "yǐn", n[39150] = "yìn", n[26372] = "yǐn", n[36625] = "yǐn", n[36251] = "yǐn", n[27267] = "yǐn", n[38577] = "yìn", n[23998] = "yǐn", n[28645] = "yǐn", n[34750] = "yǐn", n[27324] = "yǐn", n[34335] = "yǐn", n[27389] = "yǐn", n[30318] = "yǐn", n[35732] = "yǐn", n[27925] = "yìn", n[22461] = "yìn", n[22583] = "yìn", n[28250] = "yìn", n[29452] = "yìn", n[24277] = "yìn", n[37235] = "yìn", n[24941] = "yìn", n[30282] = "yìn", n[24983] = "yìn", n[24982] = "yìn", n[39843] = "yìn", n[25050] = "yìn", n[24540] = "yìng", n[20544] = "yīng", n[26716] = "yīng", n[29681] = "yīng", n[23190] = "yīng", n[24869] = "yīng", n[28214] = "yīng", n[32492] = "yīng", n[26400] = "yīng", n[29008] = "yīng", n[23240] = "yīng", n[30884] = "yīng", n[38195] = "yīng", n[29959] = "yīng", n[32211] = "yīng", n[34663] = "yīng", n[36047] = "yīng", n[22111] = "yīng", n[32579] = "yīng", n[35118] = "yīng", n[38681] = "yīng", n[40236] = "yīng", n[23344] = "yīng", n[25033] = "yìng", n[38906] = "yīng", n[29974] = "yīng", n[40337] = "yīng", n[40359] = "yīng", n[22198] = "yīng", n[23366] = "yīng", n[23422] = "yīng", n[25878] = "yīng", n[28724] = "yìng", n[32588] = "yīng", n[34337] = "yīng", n[35661] = "yīng", n[27387] = "yīng", n[29908] = "yīng", n[31023] = "yīng", n[35707] = "yīng", n[40367] = "yīng", n[37965] = "yīng", n[32403] = "yīng", n[34867] = "yīng", n[40426] = "yīng", n[36552] = "yīng", n[40441] = "yīng", n[40462] = "yīng", n[40474] = "yīng", n[30401] = "yíng", n[32826] = "yún", n[21942] = "yíng", n[34509] = "yíng", n[28289] = "yíng", n[28299] = "yíng", n[33854] = "yíng", n[20684] = "yíng", n[22603] = "yíng", n[29074] = "yíng", n[29801] = "yíng", n[31132] = "yíng", n[34687] = "yíng", n[29151] = "yíng", n[32264] = "yíng", n[34722] = "yíng", n[28633] = "yíng", n[28634] = "yíng", n[28660] = "yíng", n[34240] = "yíng", n[35246] = "yǐng", n[35597] = "yíng", n[28677] = "yíng", n[34821] = "yíng", n[37795] = "yíng", n[25869] = "yíng", n[28704] = "yíng", n[28719] = "yíng", n[27391] = "yíng", n[36111] = "yíng", n[28752] = "yíng", n[31837] = "yíng", n[28764] = "yíng", n[31855] = "yíng", n[30696] = "yǐng", n[26796] = "yǐng", n[39061] = "yǐng", n[25708] = "yǐng", n[28481] = "yǐng", n[31310] = "yǐng", n[38964] = "yǐng", n[24010] = "yǐng", n[24302] = "yǐng", n[37915] = "yǐng", n[30317] = "yǐng", n[26254] = "yìng", n[33185] = "yìng", n[40038] = "yìng", n[21938] = "yō", n[20653] = "yōng", n[21960] = "yōng", n[37144] = "yōng", n[23262] = "yōng", n[28413] = "yōng", n[29253] = "yōng", n[29271] = "yǒu", n[37567] = "zhōng", n[22128] = "yǒng", n[25793] = "yōng", n[28589] = "yǒng", n[37114] = "yōng", n[30293] = "yōng", n[38621] = "yōng", n[37854] = "yōng", n[24305] = "yōng", n[28745] = "yōng", n[40005] = "yōng", n[40411] = "yōng", n[30320] = "yōng", n[39065] = "yóng", n[38994] = "yóng", n[39979] = "yóng", n[24634] = "yǒng", n[21192] = "yǒng", n[26640] = "yǒng", n[22471] = "yǒng", n[24704] = "yǒng", n[26593] = "yǒng", n[24805] = "yǒng", n[24849] = "yǒng", n[28263] = "yǒng", n[35424] = "yǒng", n[22606] = "yǒng", n[23921] = "yǒng", n[24430] = "yǒng", n[24889] = "yǒng", n[24898] = "yǒng", n[40108] = "yǒng", n[36404] = "yǒng", n[39890] = "yǒng", n[33498] = "yòng", n[30781] = "yòng", n[33935] = "yòng", n[37279] = "yòng", n[23795] = "yōu", n[36876] = "yōu", n[32682] = "yōu", n[40576] = "yōu", n[28410] = "yōu", n[24962] = "yōu", n[20778] = "yōu", n[37182] = "yōu", n[22168] = "yōu", n[25070] = "yǒu", n[28672] = "yōu", n[27340] = "yōu", n[32395] = "yōu", n[32816] = "yōu", n[30004] = "zhá", n[27787] = "yóu", n[32940] = "yóu", n[24611] = "yóu", n[24238] = "yóu", n[31198] = "yóu", n[37109] = "yóu", n[20580] = "yóu", n[35367] = "yóu", n[36912] = "yóu", n[29494] = "yóu", n[36938] = "yóu", n[26978] = "yǒu", n[37438] = "yóu", n[40073] = "yóu", n[36623] = "yóu", n[39360] = "yóu", n[34133] = "yóu", n[39799] = "yóu", n[36662] = "yóu", n[39819] = "yóu", n[27390] = "yòu", n[20003] = "yǒu", n[33475] = "yǒu", n[32657] = "yǒu", n[26671] = "yù", n[26756] = "yǒu", n[32840] = "yǒu", n[28277] = "yǒu", n[31113] = "yǒu", n[34575] = "yǒu", n[37546] = "yǒu", n[20326] = "yòu", n[29398] = "yòu", n[21706] = "yòu", n[23031] = "yòu", n[23775] = "yòu", n[31056] = "yòu", n[36854] = "yòu", n[21760] = "yòu", n[20148] = "yòu", n[35969] = "yòu", n[37229] = "yòu", n[35480] = "yòu", n[36796] = "yū", n[36803] = "yū", n[31355] = "yǔ", n[38483] = "yū", n[32006] = "yū", n[21817] = "yū", n[30419] = "yū", n[31626] = "yū", n[20112] = "yú", n[37016] = "yú", n[20227] = "yú", n[25205] = "yú", n[29591] = "yú", n[29593] = "yú", n[34919] = "yú", n[20091] = "yú", n[33584] = "yú", n[34422] = "yú", n[23067] = "yú", n[23087] = "yú", n[37201] = "yú", n[39770] = "yú", n[22563] = "yú", n[22572] = "yú", n[23168] = "yù", n[23859] = "yú", n[23886] = "yú", n[26992] = "yú", n[28257] = "yú", n[33838] = "yú", n[39596] = "yú", n[26977] = "yú", n[27464] = "yú", n[29263] = "yú", n[33349] = "yú", n[28417] = "yú", n[30574] = "yú", n[35093] = "yú", n[27510] = "yú", n[32685] = "yú", n[34125] = "yú", n[35547] = "yú", n[38611] = "yú", n[39192] = "yú", n[39779] = "yú", n[23337] = "yú", n[25049] = "yǔ", n[28574] = "yú", n[35238] = "yú", n[36400] = "yú", n[27487] = "yú", n[29877] = "yú", n[34744] = "yú", n[36671] = "yú", n[37725] = "yú", n[35619] = "yú", n[39619] = "yú", n[39869] = "yú", n[26079] = "yú", n[31813] = "yú", n[39455] = "yú", n[39922] = "yú", n[34331] = "yú", n[36701] = "yú", n[39941] = "yú", n[40416] = "yú", n[40454] = "yú", n[40821] = "yú", n[20417] = "yǔ", n[25383] = "yǔ", n[31076] = "yǔ", n[20554] = "yǔ", n[21292] = "yǔ", n[25940] = "yǔ", n[37125] = "yǔ", n[26014] = "yǔ", n[33837] = "yǔ", n[20660] = "yǔ", n[23513] = "yǔ", n[26944] = "yǔ", n[29760] = "yǔ", n[33287] = "yǔ", n[35486] = "yù", n[38952] = "yǔ", n[22131] = "yǔ", n[23996] = "yǔ", n[35984] = "yǔ", n[26004] = "zhōng", n[31333] = "yǔ", n[40588] = "yǔ", n[40812] = "yǔ", n[22315] = "zhūn", n[33420] = "yù", n[28793] = "zhà", n[31191] = "yù", n[33567] = "yù", n[20476] = "yù", n[24423] = "yù", n[30753] = "yù", n[22537] = "yù", n[28143] = "yù", n[31894] = "yù", n[34988] = "yù", n[36915] = "yù", n[21893] = "yù", n[21929] = "yù", n[24253] = "yù", n[26843] = "yù", n[26844] = "yù", n[26859] = "yù", n[28980] = "yù", n[29721] = "yù", n[30818] = "yù", n[30834] = "yù", n[39147] = "yù", n[39341] = "yù", n[28394] = "yù", n[31266] = "yù", n[32621] = "yù", n[33352] = "yù", n[33966] = "yù", n[37434] = "yù", n[38928] = "yù", n[23255] = "yù", n[23950] = "yù", n[25131] = "yù", n[29508] = "yù", n[30217] = "yù", n[32206] = "yù", n[34591] = "yù", n[36621] = "yù", n[24958] = "yù", n[28495] = "yù", n[31286] = "yù", n[34041] = "yù", n[34177] = "yù", n[36985] = "yù", n[37578] = "yù", n[40191] = "yù", n[28582] = "yù", n[29135] = "yù", n[34167] = "yù", n[35565] = "yù", n[37669] = "yù", n[38334] = "yù", n[40231] = "yù", n[40234] = "yù", n[40229] = "yù", n[20773] = "yù", n[30983] = "yù", n[31142] = "yù", n[39754] = "yù", n[30290] = "yù", n[30998] = "yù", n[31004] = "yù", n[31741] = "yù", n[37287] = "yù", n[40274] = "yù", n[27378] = "yù", n[39239] = "yù", n[34316] = "yù", n[35709] = "yù", n[37933] = "yù", n[38705] = "yù", n[38628] = "yù", n[27406] = "yù", n[39496] = "yù", n[31838] = "yù", n[40010] = "yù", n[40440] = "yù", n[40466] = "yù", n[27421] = "yù", n[36553] = "yù", n[39728] = "yù", n[39729] = "yù", n[28778] = "yù", n[31858] = "yù", n[29225] = "yù", n[22246] = "yuān", n[32921] = "yuān", n[21064] = "yuān", n[23491] = "yuān", n[28166] = "yuān", n[28161] = "yuān", n[28181] = "yuān", n[28149] = "yuān", n[33918] = "yuān", n[26857] = "yuān", n[33964] = "yuān", n[34574] = "yuān", n[40531] = "yuān", n[40182] = "yuān", n[34613] = "yuān", n[39372] = "yuān", n[40219] = "yuān", n[23357] = "yuān", n[40311] = "yuān", n[28737] = "yuān", n[40728] = "yuān", n[40733] = "yuān", n[20870] = "yuán", n[36128] = "yùn", n[37031] = "yuán", n[33554] = "yuán", n[35999] = "yùn", n[21729] = "yùn", n[31502] = "yuán", n[21409] = "yuán", n[37211] = "yuán", n[20614] = "yuàn", n[22286] = "yuán", n[28274] = "yuán", n[29480] = "yuán", n[37416] = "yuán", n[22290] = "yuán", n[22291] = "yuán", n[23220] = "yuán", n[23236] = "yuán", n[28306] = "yuán", n[27038] = "yuán", n[27052] = "yuán", n[32227] = "yuán", n[32257] = "yuán", n[34653] = "yuán", n[34671] = "yuán", n[35108] = "yuán", n[39789] = "yuán", n[32689] = "yuán", n[34199] = "yuán", n[40703] = "yuán", n[35612] = "yuán", n[36677] = "yuán", n[37809] = "yuán", n[27358] = "yuán", n[37005] = "yuán", n[39477] = "yuán", n[40354] = "yuán", n[40368] = "yuán", n[21429] = "yuán", n[30454] = "yuǎn", n[36922] = "yuǎn", n[36960] = "yuǎn", n[22964] = "yuàn", n[34895] = "yuàn", n[31120] = "yuàn", n[35051] = "yuàn", n[35089] = "yuàn", n[22126] = "yuàn", n[39e3] = "yuàn", n[26353] = "yuē", n[30705] = "yuē", n[25097] = "yuè", n[23684] = "yuè", n[25224] = "yuè", n[31039] = "yuè", n[29605] = "yuè", n[24689] = "yuè", n[24709] = "yuè", n[34447] = "yuè", n[34446] = "yuè", n[36559] = "yuè", n[25459] = "yuè", n[36288] = "yuè", n[37381] = "yuè", n[31925] = "yuè", n[37470] = "yuè", n[38322] = "yuè", n[38321] = "yuè", n[23347] = "yuè", n[31703] = "yuè", n[23997] = "yuè", n[31814] = "yuè", n[34341] = "yuè", n[40678] = "yuè", n[29210] = "yuè", n[31156] = "yuè", n[36493] = "yuè", n[31845] = "yuè", n[38e3] = "yuè", n[40465] = "yuè", n[31856] = "yuè", n[40473] = "yuè", n[33920] = "yūn", n[26248] = "yùn", n[29044] = "yǔn", n[33941] = "yūn", n[27699] = "yūn", n[29061] = "yǔn", n[22891] = "yūn", n[34681] = "yūn", n[36191] = "yūn", n[36103] = "yūn", n[21243] = "yún", n[20253] = "yún", n[22249] = "yún", n[22936] = "yún", n[25251] = "yún", n[27780] = "yún", n[30023] = "yún", n[31184] = "yún", n[28066] = "yún", n[32028] = "yún", n[37142] = "yún", n[38642] = "yún", n[24874] = "yún", n[28339] = "yún", n[31612] = "yún", n[33975] = "yún", n[29065] = "yún", n[28560] = "yún", n[34131] = "yún", n[37574] = "yún", n[27218] = "yún", n[31700] = "yún", n[32284] = "yún", n[38445] = "yǔn", n[22845] = "yǔn", n[25230] = "yǔn", n[33658] = "yǔn", n[21911] = "yǔn", n[37399] = "yǔn", n[38549] = "yǔn", n[27550] = "yǔn", n[39355] = "yǔn", n[30930] = "yǔn", n[36081] = "yǔn", n[38691] = "yǔn", n[40811] = "yǔn", n[40819] = "yǔn", n[26527] = "yùn", n[37126] = "yùn", n[20618] = "yùn", n[24818] = "yùn", n[36939] = "yùn", n[24909] = "yùn", n[33130] = "yùn", n[35102] = "yùn", n[34160] = "yùn", n[34176] = "yùn", n[37270] = "yùn", n[37278] = "yùn", n[39211] = "yùn", n[34292] = "yùn", n[38871] = "yùn", n[38878] = "yùn", n[34314] = "yùn", n[38907] = "yùn", n[24064] = "zā", n[27806] = "zā", n[36810] = "zā", n[26714] = "zǎn", n[32037] = "zhā", n[32046] = "zhā", n[37460] = "zā", n[39795] = "zā", n[33244] = "zā", n[33250] = "zā", n[27823] = "zá", n[20602] = "zán", n[21906] = "zán", n[38900] = "zá", n[38609] = "zá", n[35149] = "zá", n[38620] = "zá", n[38629] = "zá", n[28797] = "zāi", n[28886] = "zāi", n[30048] = "zī", n[33745] = "zì", n[28221] = "zāi", n[28328] = "zāi", n[30581] = "zāi", n[36083] = "zāi", n[25175] = "zài", n[27909] = "zài", n[20644] = "zài", n[36617] = "zài", n[37224] = "zài", n[20750] = "zài", n[32289] = "zēng", n[20802] = "zān", n[27253] = "zān", n[31790] = "zān", n[40292] = "zān", n[37909] = "zān", n[37919] = "zān", n[23489] = "zǎn", n[25565] = "zuàn", n[22086] = "zǎn", n[20775] = "zǎn", n[25861] = "zǎn", n[20793] = "zǎn", n[36274] = "zǎn", n[26283] = "zàn", n[36059] = "zàn", n[37180] = "zàn", n[36436] = "zàn", n[29897] = "zàn", n[36106] = "zàn", n[37864] = "zàn", n[35715] = "zàn", n[29914] = "zàn", n[31158] = "zàn", n[35192] = "zàn", n[35738] = "zàn", n[39265] = "zàn", n[29250] = "zāng", n[32664] = "zāng", n[36045] = "zāng", n[36056] = "zāng", n[36115] = "zāng", n[39634] = "zāng", n[36124] = "zāng", n[39380] = "zǎng", n[24329] = "zàng", n[22623] = "zàng", n[34101] = "zàng", n[37562] = "zàng", n[33235] = "zàng", n[33247] = "zàng", n[36455] = "zāo", n[37289] = "zāo", n[38015] = "záo", n[26630] = "zǎo", n[26839] = "zǎo", n[29866] = "zǎo", n[34235] = "zǎo", n[30337] = "zào", n[21781] = "zào", n[26765] = "zào", n[24933] = "zào", n[29040] = "zào", n[33345] = "zào", n[31753] = "zào", n[31427] = "zào", n[31432] = "zào", n[35679] = "zào", n[36270] = "zào", n[25246] = "zé", n[27810] = "zé", n[27854] = "zé", n[21063] = "zé", n[36012] = "zhài", n[28333] = "zé", n[30688] = "zé", n[39157] = "zhā", n[22038] = "zé", n[23271] = "zé", n[24152] = "zé", n[34102] = "zé", n[27149] = "zé", n[27509] = "zé", n[25799] = "zhái", n[30367] = "zé", n[30612] = "zé", n[31744] = "zé", n[32811] = "zhá", n[30987] = "zé", n[35159] = "zé", n[35630] = "zé", n[36094] = "zé", n[34828] = "zé", n[40794] = "zé", n[40816] = "zé", n[40453] = "zé", n[24194] = "zè", n[27716] = "zè", n[26135] = "zè", n[25425] = "zè", n[23857] = "zè", n[25117] = "zéi", n[36042] = "zéi", n[40087] = "zéi", n[34824] = "zéi", n[39938] = "zéi", n[40033] = "zéi", n[35670] = "zèn", n[22679] = "zēng", n[37163] = "zēng", n[29844] = "zēng", n[30704] = "zēng", n[30963] = "zēng", n[32338] = "zèng", n[35652] = "zēng", n[40027] = "zēng", n[32156] = "zōng", n[37605] = "zèng", n[29111] = "zèng", n[39733] = "zèng", n[36104] = "zèng", n[22222] = "zèng", n[21997] = "zi", n[33546] = "zī", n[22997] = "zī", n[33586] = "zī", n[26661] = "zī", n[29574] = "zī", n[32014] = "zī", n[23856] = "zī", n[31222] = "zī", n[36220] = "zī", n[21982] = "zī", n[26900] = "zī", n[28285] = "zī", n[33880] = "zī", n[37137] = "zī", n[23414] = "zī", n[31116] = "zī", n[36018] = "zī", n[36039] = "zī", n[32213] = "zī", n[32199] = "zī", n[37421] = "zī", n[38211] = "zī", n[36636] = "zī", n[40722] = "zī", n[28588] = "zī", n[35566] = "zī", n[36262] = "zī", n[36666] = "zī", n[37657] = "zī";n[37759] = "zī", n[37793] = "zī", n[38974] = "zī", n[38975] = "zī", n[39892] = "zī", n[40325] = "zī", n[40781] = "zī", n[32387] = "zī", n[39974] = "zī", n[40796] = "zī", n[21511] = "zǐ", n[33427] = "zì", n[22985] = "zǐ", n[26445] = "zǐ", n[27805] = "zhuǐ", n[30711] = "zǐ", n[31172] = "zì", n[34424] = "zǐ", n[37352] = "zǐ", n[35391] = "zǐ", n[27039] = "zǐ", n[27252] = "zǐ", n[33569] = "zì", n[33634] = "zì", n[20531] = "zì", n[21082] = "zì", n[29304] = "zì", n[30501] = "zì", n[32980] = "zì", n[33022] = "zì", n[28460] = "zì", n[20519] = "zōng", n[39572] = "zōng", n[22571] = "zōng", n[23887] = "zōng", n[23893] = "zōng", n[24830] = "zōng", n[29475] = "zōng", n[33916] = "zōng", n[26401] = "zōng", n[26934] = "zōng", n[31279] = "zǒng", n[32195] = "zōng", n[29095] = "zōng", n[32245] = "zòng", n[32746] = "zōng", n[34668] = "zōng", n[36392] = "zōng", n[30955] = "zōng", n[32332] = "zòng", n[37712] = "zōng", n[35957] = "zōng", n[36452] = "zōng", n[39436] = "zōng", n[39459] = "zōng", n[39689] = "zōng", n[39735] = "zōng", n[39918] = "zōng", n[39932] = "zōng", n[37953] = "zōng", n[20490] = "zǒng", n[25460] = "zǒng", n[24803] = "zǒng", n[25603] = "zǒng", n[20655] = "zǒng", n[34007] = "zǒng", n[23928] = "zǒng", n[25696] = "zǒng", n[32207] = "zǒng", n[32235] = "zǒng", n[32258] = "zǒng", n[29162] = "zǒng", n[32305] = "zòng", n[32317] = "zǒng", n[26158] = "zòng", n[30125] = "zòng", n[29460] = "zòng", n[31945] = "zòng", n[30258] = "zòng", n[32294] = "zòng", n[31981] = "zòng", n[37104] = "zōu", n[26872] = "zōu", n[37138] = "zōu", n[31619] = "zōu", n[32197] = "zōu", n[35535] = "zōu", n[39915] = "zōu", n[40640] = "zōu", n[39478] = "zōu", n[40817] = "zōu", n[40826] = "zōu", n[36209] = "zǒu", n[39888] = "zǒu", n[26596] = "zhā", n[33861] = "zū", n[21318] = "zú", n[21739] = "zú", n[23850] = "zú", n[31652] = "zú", n[36388] = "zú", n[29244] = "zǔ", n[21800] = "zǔ", n[32068] = "zǔ", n[35419] = "zǔ", n[38779] = "zǔ", n[37818] = "zǔ", n[37446] = "zuān", n[21143] = "zuān", n[37978] = "zuān", n[36518] = "zuān", n[38013] = "zuān", n[32356] = "zuǎn", n[32393] = "zuǎn", n[31851] = "zuǎn", n[32408] = "zuǎn", n[36090] = "zhuàn", n[21404] = "zuī", n[27190] = "zuī", n[34773] = "zuī", n[32407] = "zuī", n[23946] = "zuǐ", n[22143] = "zuǐ", n[29883] = "zuǐ", n[20899] = "zuì", n[26668] = "zuì", n[32074] = "zuì", n[37204] = "zuì", n[26220] = "zuì", n[31101] = "zuì", n[36768] = "zuì", n[27100] = "zuì", n[37243] = "zuì", n[23989] = "zuì", n[27271] = "zuì", n[37642] = "zuì", n[27276] = "zuì", n[22082] = "zūn", n[23967] = "zūn", n[32348] = "zǔn", n[32583] = "zūn", n[40334] = "zūn", n[37903] = "zūn", n[40018] = "zūn", n[40439] = "zūn", n[20692] = "zǔn", n[35664] = "zǔn", n[25432] = "zùn", n[37516] = "zùn", n[21655] = "zuo", n[31325] = "zuō", n[33522] = "zhǎ", n[31208] = "zuó", n[33675] = "zuó", n[25469] = "zuó", n[31251] = "zuó", n[31600] = "zuó", n[37436] = "zuó", n[32339] = "zuǒ", n[23709] = "zuò", n[23710] = "zuò", n[20403] = "zuò", n[34959] = "zuò", n[33860] = "zuò", n[33859] = "zuò", n[34009] = "zuò", n[31987] = "zuò", n[25263] = "zhā", n[25363] = "zhā", n[20583] = "zhā", n[21124] = "zhá", n[25699] = "zhā", n[30390] = "zhā", n[27165] = "zhā", n[35312] = "zhā", n[35655] = "zhā", n[40775] = "zhā", n[34491] = "zhá", n[29264] = "zhá", n[38296] = "zhá", n[31642] = "zhá", n[38661] = "zhá", n[37720] = "zhá", n[35671] = "zhá", n[21391] = "zhǎi", n[25283] = "zhǎ", n[40074] = "zhà", n[40093] = "zhǎ", n[39827] = "zhà", n[39866] = "zhǎ", n[23473] = "zhà", n[28320] = "zhà", n[35408] = "zhà", n[25662] = "zhà", n[37281] = "zhà", n[22792] = "zhāi", n[31874] = "zhāi", n[25434] = "zhāi", n[25998] = "zhāi", n[27064] = "zhāi", n[40779] = "zhāi", n[21383] = "zhé", n[25255] = "zhǐ", n[37465] = "zhǎi", n[20661] = "zhài", n[23742] = "zhān", n[26540] = "zhān", n[26676] = "zhān", n[34501] = "zhān", n[39142] = "zhān", n[24777] = "zhān", n[35392] = "zhān", n[36232] = "zhān", n[38298] = "zhān", n[22113] = "zhān", n[34205] = "zhān", n[36997] = "zhān", n[38673] = "zhān", n[27656] = "zhān", n[27658] = "zhān", n[35249] = "zhàn", n[40559] = "zhān", n[26076] = "zhān", n[35691] = "zhān", n[39256] = "zhān", n[39513] = "zhān", n[39769] = "zhān", n[40035] = "zhān", n[40455] = "zhān", n[35741] = "zhán", n[39120] = "zhǎn", n[26028] = "zhǎn", n[29718] = "zhǎn", n[30430] = "zhǎn", n[39085] = "zhǎn", n[23288] = "zhǎn", n[37254] = "zhǎn", n[36670] = "zhǎn", n[26719] = "zhàn", n[20577] = "zhàn", n[33754] = "zhàn", n[26855] = "zhàn", n[25126] = "zhàn", n[32187] = "zhàn", n[23960] = "zhàn", n[25136] = "zhàn", n[34405] = "zhàn", n[34406] = "zhàn", n[36687] = "zhàn", n[35687] = "zhàn", n[39503] = "zhàn", n[24373] = "zhāng", n[20669] = "zhāng", n[24926] = "zhāng", n[31931] = "zhāng", n[34049] = "zhāng", n[36967] = "zhāng", n[26290] = "zhāng", n[39206] = "zhāng", n[37873] = "zhāng", n[39487] = "zhāng", n[40006] = "zhāng", n[40606] = "zhāng", n[28466] = "zhàng", n[24165] = "zhǎng", n[30979] = "zhǎng", n[25177] = "zhàng", n[31872] = "zhàng", n[24115] = "zhàng", n[28081] = "zhàng", n[33081] = "zhàng", n[30190] = "zhàng", n[22663] = "zhàng", n[36076] = "zhàng", n[30252] = "zhàng", n[30613] = "zhàng", n[22961] = "zhāo", n[24054] = "zhāo", n[28836] = "zhào", n[37335] = "zhāo", n[37450] = "zhāo", n[39371] = "zhāo", n[37731] = "zhāo", n[29227] = "zhuǎ", n[29813] = "zhǎo", n[26523] = "zhào", n[22423] = "zhào", n[29411] = "zhào", n[32897] = "zhào", n[21829] = "zhuó", n[26064] = "zhào", n[32576] = "zhào", n[35412] = "zhào", n[32904] = "zhào", n[36249] = "zhào", n[26316] = "zhào", n[29171] = "zhào", n[39841] = "zhào", n[27330] = "zhào", n[30654] = "zhào", n[32644] = "zhào", n[22011] = "zhù", n[23276] = "zhē", n[27517] = "zhé", n[30714] = "zhé", n[30739] = "zhé", n[31863] = "zhé", n[34420] = "zhé", n[22481] = "zhé", n[31885] = "zhé", n[34985] = "zhé", n[21856] = "zhé", n[24714] = "zhé", n[26210] = "zhé", n[26211] = "zhé", n[21894] = "zhé", n[35423] = "zhé", n[36626] = "zhé", n[24953] = "zhí", n[36633] = "zhé", n[34756] = "zhé", n[22174] = "zhé", n[35627] = "zhé", n[35642] = "zhé", n[39871] = "zhé", n[36685] = "zhé", n[35713] = "zhé", n[35723] = "zhé", n[20093] = "zhě", n[36407] = "zhě", n[37754] = "zhě", n[35189] = "zhě", n[36889] = "zhè", n[28123] = "zhè", n[27164] = "zhè", n[34757] = "zhè", n[40403] = "zhè", n[20402] = "zhèn", n[29646] = "zhēn", n[35998] = "zhēn", n[24106] = "zhēn", n[30494] = "zhēn", n[37341] = "zhēn", n[20597] = "zhēn", n[37209] = "zhēn", n[23498] = "zhēn", n[24128] = "zhēn", n[25557] = "zhèn", n[28254] = "zhēn", n[33908] = "zhēn", n[36937] = "zhēn", n[23235] = "zhěn", n[25656] = "zhēn", n[26984] = "zhēn", n[29513] = "zhēn", n[31118] = "zhēn", n[33942] = "zhēn", n[37441] = "zhēn", n[27549] = "zhēn", n[29799] = "zhēn", n[30890] = "zhēn", n[31131] = "zhēn", n[28519] = "zhēn", n[27196] = "zhēn", n[28597] = "zhēn", n[34237] = "zhēn", n[37681] = "zhēn", n[36675] = "zhēn", n[37756] = "zhēn", n[40053] = "zhēn", n[25262] = "zhěn", n[23019] = "zhěn", n[24363] = "zhěn", n[26147] = "zhěn", n[23634] = "zhěn", n[30485] = "zhěn", n[34967] = "zhěn", n[32836] = "zhěn", n[33817] = "zhěn", n[35030] = "zhěn", n[35225] = "zhěn", n[35386] = "zhěn", n[36587] = "zhěn", n[39383] = "zhěn", n[32285] = "zhěn", n[32293] = "zhěn", n[36788] = "zhěn", n[39698] = "zhěn", n[32444] = "zhèn", n[30013] = "zhèn", n[25355] = "zhèn", n[38499] = "zhèn", n[26650] = "zhèn", n[32022] = "zhèn", n[30521] = "zhèn", n[22630] = "zhèn", n[32124] = "zhèn", n[35499] = "zhèn", n[36049] = "zhèn", n[37620] = "zhèn", n[40198] = "zhèn", n[37806] = "zhèn", n[37805] = "zhèn", n[20967] = "zhēng", n[20290] = "zhēng", n[22979] = "zhēng", n[29229] = "zhēng", n[31997] = "zhěng", n[28833] = "zhēng", n[28893] = "zhēng", n[30480] = "zhēng", n[33024] = "zhēng", n[23837] = "zhēng", n[23842] = "zhēng", n[25497] = "zhèng", n[29465] = "zhēng", n[32839] = "zhēng", n[23196] = "zhēng", n[24496] = "zhēng", n[30556] = "zhēng", n[36397] = "zhēng", n[37478] = "zhēng", n[24500] = "zhǐ", n[31631] = "zhēng", n[37658] = "zhēng", n[31708] = "zhēng", n[39687] = "zhēng", n[30309] = "zhēng", n[37875] = "zhēng", n[25229] = "zhěng", n[26232] = "zhěng", n[24888] = "zhěng", n[24129] = "zhèng", n[35388] = "zhèng", n[22627] = "zhèng", n[35533] = "zhèng", n[38741] = "zhèng", n[37165] = "zhèng", n[40202] = "zhèng", n[35657] = "zhèng", n[24053] = "zhī", n[27868] = "zhī", n[31187] = "zhī", n[32977] = "zhī", n[34940] = "zhī", n[20481] = "zhī", n[30135] = "zhī", n[31084] = "zhī", n[38587] = "zhī", n[26772] = "zhī", n[26917] = "zhī", n[25624] = "zhī", n[31257] = "zhī", n[32149] = "zhī", n[27056] = "zhī", n[24964] = "zhì", n[40183] = "zhī", n[40242] = "zhī", n[32340] = "zhì", n[40709] = "zhī", n[34357] = "zhī", n[23018] = "zhí", n[20516] = "zhí", n[32832] = "zhí", n[37342] = "zhí", n[22519] = "zhí", n[28116] = "zhí", n[25120] = "zhí", n[31107] = "zhí", n[39357] = "zhí", n[23298] = "zhí", n[28432] = "zhí", n[28522] = "zhì", n[27188] = "zhí", n[33201] = "zhí", n[32310] = "zhí", n[32887] = "zhí", n[34777] = "zhí", n[36448] = "zhí", n[36548] = "zhí", n[36497] = "zhí", n[20970] = "zhǐ", n[21159] = "zhǐ", n[38447] = "zhǐ", n[22337] = "zhì", n[24075] = "zhǐ", n[25210] = "zhǐ", n[27750] = "zhǐ", n[27802] = "zhǐ", n[22375] = "zhǐ", n[33547] = "zhǐ", n[24649] = "zhǐ", n[27924] = "zhǐ", n[30731] = "zhǐ", n[31190] = "zhǐ", n[34937] = "zhǐ", n[28157] = "zhǐ", n[30139] = "zhǐ", n[32025] = "zhǐ", n[35368] = "zhǐ", n[36601] = "zhǐ", n[31595] = "zhì", n[22668] = "zhuó", n[34274] = "zhǐ", n[35175] = "zhǐ", n[33430] = "zhì", n[22401] = "zhì", n[20455] = "zhì", n[24226] = "zhì", n[24228] = "zhì", n[25347] = "zhì", n[27959] = "zhì", n[31057] = "zhì", n[23073] = "zhì", n[24463] = "zhì", n[26186] = "zhì", n[29438] = "zhì", n[34975] = "zhì", n[20587] = "zhì", n[24477] = "zhì", n[26813] = "zhì", n[29464] = "zhì", n[30163] = "zhì", n[31223] = "zhì", n[32041] = "zhì", n[32720] = "zhì", n[34976] = "zhì", n[35287] = "zhì", n[36013] = "zhì", n[38106] = "zhì", n[23512] = "zhì", n[24268] = "zhì", n[28365] = "zhì", n[36337] = "zhì", n[36618] = "zhì", n[38183] = "zhì", n[28399] = "zhì", n[28492] = "zhì", n[35069] = "zhì", n[35231] = "zhì", n[35468] = "zhì", n[37517] = "zhì", n[24159] = "zhì", n[25711] = "zhì", n[29099] = "zhì", n[31290] = "zhì", n[36074] = "zhì", n[37589] = "zhì", n[26072] = "zhì", n[28676] = "zhì", n[29839] = "zhì", n[32251] = "zhì", n[38578] = "zhì", n[39396] = "zhì", n[40217] = "zhì", n[20776] = "zhì", n[21141] = "zhì", n[25061] = "zhì", n[25842] = "zhì", n[27355] = "zhì", n[31305] = "zhì", n[25067] = "zhì", n[36100] = "zhì", n[27341] = "zhì", n[29894] = "zhì", n[35318] = "zhì", n[39469] = "zhì", n[39919] = "zhì", n[31017] = "zhì", n[35921] = "zhì", n[39482] = "zhì", n[39495] = "zhì", n[36499] = "zhì", n[40409] = "zhì", n[37973] = "zhì", n[35922] = "zhì", n[20224] = "zhōng", n[27767] = "zhōng", n[21027] = "zhōng", n[22928] = "zhōng", n[24440] = "zhōng", n[27848] = "zhōng", n[28802] = "zhōng", n[26570] = "zhōng", n[34931] = "zhōng", n[32066] = "zhōng", n[37409] = "zhōng", n[24146] = "zhōng", n[34080] = "zhōng", n[34585] = "zhōng", n[34724] = "zhōng", n[40228] = "zhōng", n[37758] = "zhōng", n[40744] = "zhōng", n[36465] = "zhōng", n[37912] = "zhōng", n[31846] = "zhōng", n[23600] = "zhǒng", n[22618] = "zhǒng", n[27505] = "zhǒng", n[28996] = "zhǒng", n[33131] = "zhǒng", n[30215] = "zhǒng", n[31278] = "zhòng", n[22933] = "zhòng", n[29382] = "zhòng", n[31052] = "zhòng", n[33597] = "zhòng", n[34934] = "zhòng", n[34459] = "zhòng", n[30526] = "zhòng", n[22585] = "zhòng", n[23185] = "zhòng", n[31575] = "zhòng", n[34886] = "zhòng", n[35557] = "zhòng", n[20380] = "zhōu", n[28863] = "zhōu", n[28880] = "zhōu", n[29656] = "zhōu", n[36736] = "zhōu", n[37102] = "zhōu", n[24479] = "zhōu", n[28109] = "zhōu", n[30698] = "zhōu", n[36913] = "zhōu", n[40508] = "zhōu", n[21900] = "zhōu", n[36178] = "zhōu", n[36616] = "zhōu", n[37506] = "zhōu", n[36057] = "zhōu", n[36630] = "zhōu", n[38668] = "zhōu", n[39410] = "zhōu", n[35589] = "zhōu", n[40259] = "zhōu", n[39430] = "zhōu", n[35704] = "zhōu", n[36600] = "zhòu", n[30107] = "zhǒu", n[33783] = "zhǒu", n[26221] = "zhǒu", n[30573] = "zhǒu", n[31634] = "zhǒu", n[39902] = "zhǒu", n[20279] = "zhòu", n[21610] = "zhòu", n[20881] = "zhòu", n[21678] = "zhòu", n[32002] = "zhòu", n[26205] = "zhòu", n[31897] = "zhòu", n[33892] = "zhòu", n[35403] = "zhòu", n[29955] = "zhòu", n[20733] = "zhòu", n[30394] = "zhòu", n[39374] = "zhòu", n[22115] = "zhuó", n[32272] = "zhòu", n[31829] = "zhòu", n[31826] = "zhòu", n[39519] = "zhòu", n[30787] = "zhū", n[31228] = "zhū", n[35006] = "zhū", n[32081] = "zhū", n[35461] = "zhū", n[36326] = "zhū", n[34127] = "zhū", n[34667] = "zhū", n[37526] = "zhū", n[35576] = "zhū", n[35948] = "zhū", n[39407] = "zhū", n[39842] = "zhū", n[40248] = "zhū", n[28710] = "zhū", n[40708] = "zhū", n[27367] = "zhū", n[27371] = "zhū", n[39930] = "zhū", n[34857] = "zhū", n[28834] = "zhú", n[31489] = "zhú", n[33599] = "zhú", n[31516] = "zhú", n[36907] = "zhú", n[34027] = "zhú", n[31689] = "zhù", n[25984] = "zhuó", n[29165] = "zhú", n[34827] = "zhú", n[40001] = "zhú", n[21146] = "zhú", n[28767] = "zhú", n[26040] = "zhú", n[26351] = "zhú", n[27416] = "zhú", n[29221] = "zhú", n[34878] = "zhú", n[38019] = "zhú", n[21167] = "zhǔ", n[23444] = "zhǔ", n[30763] = "zhù", n[32604] = "zhǔ", n[38524] = "zhǔ", n[24126] = "zhǔ", n[29009] = "zhǔ", n[35421] = "zhǔ", n[28624] = "zhǔ", n[29149] = "zhǔ", n[22225] = "zhǔ", n[40448] = "zhǔ", n[30682] = "zhǔ", n[20295] = "zhù", n[32443] = "zhù", n[22398] = "zhù", n[25280] = "zhù", n[20092] = "zhù", n[22772] = "zhù", n[26615] = "zhù", n[27574] = "zhù", n[30493] = "zhù", n[31081] = "zhù", n[31450] = "zhù", n[33671] = "zhù", n[32053] = "zhù", n[32056] = "zhù", n[32668] = "zhù", n[23872] = "zhù", n[35387] = "zhù", n[36015] = "zhù", n[36307] = "zhù", n[36596] = "zhù", n[31599] = "zhù", n[37458] = "zhù", n[39349] = "zhù", n[22712] = "zhù", n[27174] = "zhù", n[37619] = "zhù", n[39376] = "zhù", n[31723] = "zhù", n[31767] = "zhù", n[27361] = "zhuó", n[37956] = "zhù", n[27291] = "zhuā", n[33212] = "zhuā", n[31803] = "zhuā", n[39677] = "zhuā", n[36329] = "zhuǎi", n[21440] = "zhuān", n[23554] = "zhuān", n[23560] = "zhuān", n[37151] = "zhuān", n[23269] = "zhuān", n[29820] = "zhuān", n[29966] = "zhuān", n[30935] = "zhuān", n[30938] = "zhuān", n[35567] = "zhuān", n[34788] = "zhuān", n[38995] = "zhuān", n[40004] = "zhuān", n[23400] = "zhuǎn", n[36578] = "zhuàn", n[31473] = "zhuǎn", n[36681] = "zhuǎn", n[28791] = "zhuàn", n[22559] = "zhuàn", n[33923] = "zhuàn", n[29777] = "zhuàn", n[33118] = "zhuàn", n[20686] = "zhuàn", n[35144] = "zhuàn", n[35668] = "zhuàn", n[39244] = "zhuàn", n[22208] = "zhuàn", n[31825] = "zhuàn", n[22941] = "zhuāng", n[24210] = "zhuāng", n[33624] = "zhuāng", n[23076] = "zhuāng", n[33674] = "zhuāng", n[26761] = "zhuāng", n[31911] = "zhuāng", n[35037] = "zhuāng", n[27137] = "zhuāng", n[31962] = "zhuāng", n[22767] = "zhuàng", n[29376] = "zhuàng", n[22773] = "zhuàng", n[28939] = "zhuàng", n[37648] = "zhuī", n[39429] = "zhuī", n[40315] = "zhuī", n[29952] = "zhuì", n[33103] = "zhuì", n[30071] = "zhuì";n[33159] = "zhuì", n[22684] = "zhuì", n[32180] = "zhuì", n[32267] = "zhuì", n[35528] = "zhuì", n[37258] = "zhuì", n[37667] = "zhuì", n[30984] = "zhuì", n[36101] = "zhuì", n[37958] = "zhuì", n[23442] = "zhūn", n[36813] = "zhūn", n[35524] = "zhūn", n[34912] = "zhūn", n[22523] = "zhǔn", n[20950] = "zhǔn", n[28310] = "zhǔn", n[31253] = "zhùn", n[32167] = "zhùn", n[35376] = "zhùn", n[26802] = "zhuō", n[26817] = "zhuō", n[26867] = "zhuō", n[31399] = "zhuō", n[27093] = "zhuō", n[37935] = "zhuō", n[22324] = "zhuó", n[22960] = "zhuó", n[20021] = "zhuó", n[28917] = "zhuó", n[23098] = "zhuó", n[26033] = "zhuó", n[26030] = "zhuó", n[26219] = "zhuó", n[26899] = "zhuó", n[29752] = "zhuó", n[30842] = "zhuó", n[31393] = "zhuó", n[32620] = "zhuó", n[25775] = "zhuó", n[25798] = "zhuó", n[26034] = "zhuó", n[21125] = "zhuó", n[35521] = "zhuó", n[35537] = "zhuó", n[28609] = "zhuó", n[26037] = "zhuó", n[35638] = "zhuó", n[40299] = "zhuó", n[34839] = "zhuó", n[37938] = "zhuó", n[31831] = "zhuó", n[40415] = "zhuó", n[34879] = "zhuó", n[31857] = "zhuó";var g = ["zh", "ch", "sh", "z", "c", "s", "b", "p", "m", "f", "d", "t", "n", "l", "g", "k", "h", "j", "q", "x", "r", "y", "w", ""],h = [{}, {}, { "阿爸": "ā bà", "阿鼻": "ā bí", "阿呆": "ā dāi", "阿弟": "ā dì", "阿爹": "ā diē", "阿斗": "ā dǒu", "阿飞": "ā fēi", "阿哥": "ā gē", "阿公": "ā gōng", "阿訇": "ā hōng", "阿姐": "ā jiě", "阿拉": "ā lā", "阿妈": "ā mā", "阿妹": "ā mèi", "阿曼": "ā màn", "阿门": "ā mēn", "阿蒙": "ā méng", "阿片": "ā piàn", "阿婆": "ā pó", "哎呀": "āi yā", "哎哟": "āi yō", "哀号": "āi háo", "哀矜": "āi jīn", "哀乐": "āi yuè", "嗳酸": "ǎi suān", "爱好": "ài hào", "安分": "ān fèn", "拗断": "ǎo duàn", "巴结": "bā jì", "扒糕": "pá gāo", "扒灰": "pá huī", "扒窃": "pá qiè", "扒手": "pá shǒu", "吧嗒": "bā dā", "吧唧": "bā jī", "吧女": "bā nǚ", "吧台": "bā tái", "把子": "bà zi", "白发": "bái fà", "白干": "bái qián", "白术": "bái zhú", "白相": "bái xiàng", "白血": "bái xuè", "白种": "bái zhǒng", "柏林": "bó lín", "败将": "bài jiàng", "败兴": "bài xìng", "败血": "bài xuè", "拜倒": "bài dǎo", "扳倒": "bān dǎo", "班禅": "bān chán", "班长": "bān zhǎng", "办差": "bàn chāi", "半拉": "bàn lǎ", "拌和": "bàn huò", "扮相": "bàn xiàng", "绊倒": "bàn dǎo", "拌种": "bàn zhǒng", "帮佣": "bāng yōng", "膀臂": "bǎng bì", "棒喝": "bàng hè", "磅秤": "bàng chèng", "包扎": "bāo zā", "宝藏": "bǎo zàng", "堡子": "bǔ zi", "报丧": "bào sāng", "暴晒": "pù shài", "暴行": "bào xíng", "陂塘": "bēi táng", "碑碣": "bēi jié", "悲咽": "bēi yān", "碑帖": "bēi tiè", "北朝": "běi cháo", "北曲": "běi qǔ", "备查": "bèi zhā", "背榜": "bēi bǎng", "背包": "bēi bāo", "背带": "bēi dài", "背负": "bēi fù", "背筐": "bēi kuāng", "背篓": "bēi lǒu", "背债": "bēi zhài", "背子": "bēi zi", "被难": "bèi nàn", "被子": "bèi zi", "奔命": "bèn mìng", "奔丧": "bēn sāng", "奔头": "bèn tóu", "贲门": "bēn mén", "本分": "běn fèn", "本相": "běn xiàng", "畚斗": "běn dòu", "绷脸": "běng liǎn", "逼肖": "bī xiào", "比干": "bǐ gàn", "吡啶": "bǐ dìng", "吡咯": "bǐ gē", "笔调": "bǐ diào", "笔削": "bǐ xuē", "鄙薄": "bǐ bó", "必得": "bì děi", "毕剥": "bì bāo", "毕肖": "bì xiào", "闭塞": "bì sè", "狴犴": "bì àn", "裨将": "pí jiàng", "裨益": "bì yì", "辟谷": "bì gǔ", "辟邪": "bì xié", "碧血": "bì xuè", "避难": "bì nàn", "臂膀": "bì bǎng", "璧还": "bì huán", "边卡": "biān qiǎ", "边塞": "biān sài", "扁担": "biǎn dàn", "扁舟": "piān zhōu", "拚命": "pàn mìng", "便了": "biàn liǎo", "便溺": "biàn niào", "便人": "pián rén", "便血": "biàn xuè", "便宜": "pián yí", "变调": "biàn diào", "变更": "biàn gēng", "变量": "biàn liàng", "变相": "biàn xiàng", "变种": "biàn zhǒng", "辩难": "biàn nàn", "标的": "biāo dì", "标量": "biāo liàng", "标识": "biāo zhì", "表率": "biǎo shuài", "憋闷": "biē mèn", "别传": "bié zhuàn", "别扭": "biè niǔ", "瘪三": "biē sān", "傧相": "bīn xiàng", "槟子": "bīn zǐ", "鬓发": "bìn fà", "兵差": "bīng chāi", "兵种": "bīng zhǒng", "饼铛": "bǐng chēng", "并处": "bìng chǔ", "并行": "bìng xíng", "剥除": "bāo chú", "剥剥": "bāo bāo", "剥壳": "bāo ké", "剥取": "bāo qǔ", "剥皮": "bāo pí", "剥脱": "bāo tuō", "剥削": "bō xuē", "脖颈": "bó gěng", "播种": "bō zhǒng", "伯伯": "bó bo", "驳倒": "bó dǎo", "泊车": "bó chē", "泊位": "bó wèi", "博得": "bó de", "搏斗": "bó dòu", "薄产": "bó chǎn", "薄待": "bó dài", "薄荷": "bò he", "薄技": "bó jì", "薄酒": "bó jiǔ", "薄利": "bó lì", "薄命": "bó mìng", "薄暮": "bó mù", "薄情": "bó qíng", "薄弱": "bó ruò", "薄田": "bó tián", "薄雾": "bó wù", "薄晓": "bó xiǎo", "薄幸": "bó xìng", "跛行": "bǒ xíng", "簸箕": "bò ji", "簸荡": "bǒ dàng", "簸动": "bǒ dòng", "簸弄": "bǒ nòng", "簸箩": "bǒ luó", "补给": "bǔ jǐ", "补假": "bǔ jià", "补血": "bǔ xuè", "不当": "bù dàng", "不到": "bú dào", "不对": "bú duì", "不干": "bù gàn", "不会": "bú huì", "不见": "bú jiàn", "不禁": "bù jīn", "不了": "bù liǎo", "不舍": "bù shě", "不是": "bú shì", "不遂": "bù suí", "不肖": "bù xiào", "不行": "bù xíng", "不要": "bú yào", "不义": "bú yì", "不只": "bù zhǐ", "不住": "bú zhù", "步调": "bù diào", "步行": "bù xíng", "部长": "bù zhǎng", "部分": "bù fèn", "部将": "bù jiàng", "簿册": "bù cè", "簿籍": "bù jí", "簿记": "bù jì", "簿子": "bù zǐ", "猜度": "cāi duó", "才分": "cái fèn", "才干": "cái gàn", "财会": "cái kuài", "裁度": "cái duó", "裁处": "cái chǔ", "裁缝": "cái féng", "裁量": "cái liàng", "采邑": "cài yì", "采种": "cǎi zhǒng", "参差": "cēn cī", "参禅": "cān chán", "参错": "cēn cuò", "参量": "cān liàng", "参商": "shēn shāng", "参校": "cān jiào", "参与": "cān yù", "蚕种": "cán zhǒng", "惭怍": "cán zuò", "仓颉": "cāng jié", "仓卒": "cāng cù", "伧俗": "cāng sú", "苍劲": "cāng jìng", "苍术": "cāng zhú", "藏蓝": "zàng lán", "藏历": "zàng lì", "藏青": "zàng qīng", "藏戏": "zàng xì", "藏族": "zàng zú", "操行": "cāo xíng", "草垛": "cǎo duǒ", "草率": "cǎo shuài", "测度": "cè duó", "插曲": "chā qǔ", "查查": "zhā zhā", "查处": "chá chǔ", "查岗": "zhā gǎng", "查核": "zhā hé", "查缉": "zhā jī", "查检": "zhā jiǎn", "查看": "zhā kàn", "查勤": "zhā qín", "查帐": "zhā zhàng", "查照": "zhā zhào", "茶几": "chá jī", "差别": "chā bié", "差池": "chā chí", "差错": "chā cuò", "差额": "chā é", "差价": "chā jià", "差可": "chā kě", "差距": "chā jù", "差使": "chāi shǐ", "差遣": "chāi qiǎn", "差事": "chāi shì", "差数": "chā shù", "差异": "chā yì", "差役": "chāi yì", "柴垛": "chái duǒ", "掺和": "chān huo", "搀和": "chān huo", "婵媛": "chán yuán", "禅定": "chán dìng", "禅房": "chán fáng", "禅机": "chán jī", "禅林": "chán lín", "禅门": "chán mén", "禅师": "chán shī", "禅堂": "chán táng", "禅悟": "chán wù", "禅心": "chán xīn", "禅学": "chán xué", "禅意": "chán yì", "禅院": "chán yuàn", "禅杖": "chán zhàng", "禅宗": "chán zōng", "产假": "chǎn jià", "产量": "chǎn liàng", "颤栗": "zhàn lì", "长辈": "zhǎng bèi", "长膘": "zhǎng biāo", "长大": "zhǎng dà", "长调": "cháng diào", "长发": "cháng fà", "长房": "zhǎng fáng", "长官": "zhǎng guān", "长假": "cháng jià", "长进": "zhǎng jìn", "长老": "zhǎng lǎo", "长吏": "zhǎng lì", "长亲": "zhǎng qīn", "长上": "zhǎng shàng", "长势": "zhǎng shì", "长孙": "zhǎng sūn", "长物": "zhàng wù", "长相": "zhǎng xiàng", "长兄": "zhǎng xiōng", "长者": "zhǎng zhě", "长子": "zhǎng zǐ", "偿还": "cháng huán", "厂长": "chǎng zhǎng", "场子": "chǎng zi", "场院": "cháng yuàn", "畅行": "chàng xíng", "唱和": "chàng hè", "抄查": "chāo zhā", "超载": "chāo zài", "朝拜": "cháo bài", "朝代": "cháo dài", "朝臣": "cháo chén", "朝服": "cháo fú", "朝纲": "cháo gāng", "朝贡": "cháo gòng", "朝见": "cháo jiàn", "朝觐": "cháo jìn", "朝日": "cháo rì", "朝上": "cháo shàng", "朝圣": "cháo shèng", "朝天": "cháo tiān", "朝廷": "cháo tíng", "朝阳": "zhāo cháo yáng", "朝向": "cháo xiàng", "朝野": "cháo yě", "朝政": "cháo zhèng", "朝着": "cháo zhe", "嘲哳": "zhāo zhā", "吵吵": "chāo chao", "车行": "chē xíng", "车载": "chē zài", "车子": "chē zi", "彻查": "chè zhā", "撤差": "chè chāi", "沉没": "chén mò", "沉闷": "chén mèn", "沉着": "chén zhuó", "闯将": "chuǎng jiàng", "称身": "chèn shēn", "称为": "chēng wéi", "称心": "chèn xīn", "称愿": "chèn yuàn", "称职": "chèn zhí", "趁空": "chèn kòng", "丞相": "chéng xiàng", "成长": "chéng zhǎng", "成分": "chéng fèn", "成为": "chéng wéi", "承载": "chéng zài", "诚朴": "chéng piáo", "城垛": "chéng duǒ", "乘兴": "chéng xìng", "惩处": "chéng chǔ", "澄沙": "dèng shā", "秤杆": "chèng gǎn", "吃相": "chī xiàng", "匙子": "chí zi", "尺子": "chǐ zi", "叱喝": "chì hè", "翅鞘": "chì qiào", "充分": "chōng fèn", "充塞": "chōng sè", "充血": "chōng xuè", "冲床": "chòng chuáng", "冲劲": "chòng jìn", "冲孔": "chòng kǒng", "冲量": "chōng liàng", "冲压": "chòng yā", "冲子": "chòng zi", "抽查": "chōu zhā", "抽调": "chōu diào", "绸缪": "chóu móu", "愁闷": "chóu mèn", "稠糊": "chóu hū", "酬和": "chóu hè", "丑角": "chǒu jué", "丑相": "chǒu xiàng", "丑行": "chǒu xíng", "出差": "chū chāi", "出落": "chū là", "出没": "chū mò", "出塞": "chū sài", "出丧": "chū sāng", "出行": "chū xíng", "出血": "chū xuè", "锄头": "chú tou", "储量": "chǔ liàng", "处罚": "chǔ fá", "处处": "chǔ chù", "处方": "chǔ fāng", "处分": "chǔ fèn", "处境": "chǔ jìng", "处理": "chǔ lǐ", "处决": "chǔ jué", "处女": "chǔ nǚ", "处士": "chǔ shì", "处身": "chǔ shēn", "处世": "chǔ shì", "处事": "chǔ shì", "处暑": "chǔ shǔ", "处死": "chǔ sǐ", "处刑": "chǔ xíng", "处于": "chǔ yú", "处治": "chǔ zhì", "处置": "chǔ zhì", "处子": "chǔ zǐ", "揣度": "chuǎi duó", "穿行": "chuān xíng", "传记": "zhuàn jì", "传略": "zhuàn lüè", "传种": "chuán zhǒng", "创痕": "chuāng hén", "创口": "chuāng kǒu", "创面": "chuāng miàn", "创伤": "chuāng shāng", "创痛": "chuāng tòng", "春假": "chūn jià", "春卷": "chūn juǎn", "纯朴": "chún piáo", "纯种": "chún zhǒng", "醇朴": "chún piáo", "词调": "cí diào", "词曲": "cí qǔ", "辞行": "cí xíng", "次长": "cì zhǎng", "刺啦": "cī lā", "刺溜": "cī liū", "刺痒": "cì yáng", "摧折": "cuī shé", "村长": "cūn zhǎng", "存查": "cún zhā", "忖度": "cǔn duó", "忖量": "cǔn liàng", "错处": "cuò chǔ", "搭载": "dā zài", "嗒嗒": "dā dā", "答理": "dā lǐ", "答腔": "dā qiāng", "答应": "dā yìng", "答允": "dā yǔn", "打杈": "dǎ chà", "打颤": "dǎ zhàn", "打场": "dǎ cháng", "打倒": "dǎ dǎo", "打斗": "dǎ dòu", "打呃": "dǎ e", "打更": "dǎ gēng", "打量": "dǎ liang", "打中": "dǎ zhòng", "大藏": "dà zàng", "大城": "dài chéng", "大调": "dà diào", "大夫": "dài fū", "大干": "dà gàn", "大亨": "dà hēng", "大黄": "dài huáng", "大将": "dà jiàng", "大嚼": "dà jué", "大量": "dà liàng", "大溜": "dà liù", "大率": "dà shuài", "大难": "dà nàn", "大王": "dài wáng", "大厦": "dà shà", "大雅": "dà yá", "大子": "tài zǐ", "代为": "dài wéi", "代行": "dài xíng", "待查": "dài zhā", "丹参": "dān shēn", "单薄": "dān bó", "单调": "dān diào", "单干": "dān gàn", "单行": "dān xíng", "单姓": "shàn xìng", "单于": "chán yú", "单子": "dān zi", "担子": "dàn zi", "胆量": "dǎn liàng", "旦角": "dàn jué", "弹腿": "dàn tuǐ", "弹丸": "dàn wán", "弹药": "dàn yào", "弹子": "dàn zǐ", "澹澹": "dàn dàn", "当差": "dāng chāi", "当朝": "dāng cháo", "当成": "dàng chéng", "当量": "dāng liàng", "当票": "dàng piào", "当铺": "dàng pù", "当天": "dàng tiān", "当晚": "dàng wǎn", "当夜": "dàng yè", "当月": "dàng yuè", "当真": "dàng zhēn", "当作": "dàng zuò", "当做": "dàng zuò", "党参": "dǎng shēn", "刀把": "dāo bà", "刀鞘": "dāo qiào", "叨叨": "dāo dao", "叨咕": "dáo gu", "叨唠": "dāo lao", "叨光": "tāo guāng", "叨扰": "tāo rǎo", "导弹": "dǎo dàn", "倒把": "dǎo bǎ", "倒班": "dǎo bān", "倒包": "dǎo bāo", "倒闭": "dǎo bì", "倒毙": "dǎo bì", "倒仓": "dǎo cāng", "倒茬": "dǎo chá", "倒垂": "dǎo chuí", "倒错": "dǎo cuò", "倒地": "dǎo dì", "倒反": "dǎo fǎn", "倒伏": "dǎo fú", "倒戈": "dǎo gē", "倒阁": "dǎo gé", "倒换": "dǎo huàn", "倒嚼": "dǎo jiào", "倒卖": "dǎo mài", "倒霉": "dǎo méi", "倒弄": "dǎo nòng", "倒嗓": "dǎo sǎng", "倒是": "dǎo shì", "倒手": "dǎo shǒu", "倒数": "dào shǔ", "倒算": "dǎo suàn", "倒塌": "dǎo tā", "倒台": "dǎo tái", "倒坍": "dǎo tān", "倒腾": "dǎo téng", "倒替": "dǎo tì", "倒头": "dǎo tóu", "倒下": "dǎo xià", "倒休": "dǎo xiū", "倒序": "dǎo xù", "倒牙": "dǎo yá", "倒爷": "dǎo yé", "倒运": "dǎo yùn", "倒灶": "dǎo zào", "倒账": "dǎo zhàng", "倒找": "dǎo zhǎo", "倒座": "dǎo zuò", "道藏": "dào zàng", "道观": "dào guàn", "道行": "dào héng", "得当": "dé dàng", "德行": "dé xíng", "的当": "dí dàng", "的确": "dí què", "的士": "dí shì", "等量": "děng liàng", "低调": "dī diào", "嘀嗒": "dī dā", "敌忾": "dí kài", "底子": "dǐ zi", "地磅": "dì bàng", "地堡": "dì pù", "地处": "dì chǔ", "地壳": "dì qiào", "弟弟": "dì di", "递解": "dì jiè", "棣棠": "dì táng", "颠簸": "diān bǒ", "颠倒": "diān dǎo", "典当": "diǎn dàng", "点将": "diǎn jiàng", "点着": "diǎn zháo", "电量": "diàn liàng", "垫圈": "diàn juàn", "刁横": "diāo hèng", "刁难": "diāo nàn", "刁钻": "diāo zuān", "吊丧": "diào sāng", "调包": "diào bāo", "调查": "diào chá", "调处": "tiáo chǔ", "调调": "tiáo diào", "调动": "diào dòng", "调度": "diào dù", "调防": "diào fáng", "调干": "diào gàn", "调函": "diào hán", "调号": "diào hào", "调回": "diào huí", "调换": "diào huàn", "调集": "diào jí", "调经": "diào jīng", "调卷": "diào juàn", "调离": "diào lí", "调令": "diào lìng", "调门": "diào mén", "调派": "diào pài", "调配": "diào pèi", "调遣": "diào qiǎn", "调取": "diào qǔ", "调人": "diào rén", "调任": "diào rèn", "调式": "diào shì", "调头": "diào tóu", "调温": "diào wēn", "调研": "diào yán", "调演": "diào yǎn", "调用": "diào yòng", "调阅": "diào yuè", "调运": "diào yùn", "调正": "diào zhèng", "调值": "diào zhí", "调职": "diào zhí", "调转": "diào zhuǎn", "调子": "diào zi", "跌倒": "diē dǎo", "喋喋": "dié dié", "喋血": "dié xuè", "钉子": "dīng zi", "酊剂": "dīng jì", "定当": "dìng dàng", "定调": "dìng diào", "定量": "dìng liàng", "碇泊": "dìng bó", "懂得": "dǒng de", "动弹": "dòng dàn", "动量": "dòng liàng", "侗族": "dòng zú", "恫吓": "dòng hè", "都督": "dū du", "都会": "dōu huì", "斗法": "dòu fǎ", "斗富": "dòu fù", "斗鸡": "dòu jī", "斗箕": "dòu ji", "斗牛": "dòu niú", "斗殴": "dòu ōu", "斗牌": "dòu pái", "斗气": "dòu qì", "斗士": "dòu shì", "斗眼": "dòu yǎn", "斗勇": "dòu yǒng", "斗艳": "dòu yàn", "斗争": "dòu zhēng", "斗志": "dòu zhì", "斗智": "dòu zhì", "斗子": "dǒu zi", "斗嘴": "dòu zuǐ", "抖搂": "dǒu lōu", "抖擞": "dǒu sǒu", "逗哏": "dòu gén", "督率": "dū shuài", "独处": "dú chǔ", "独行": "dú xíng", "笃行": "dǔ xíng", "堵塞": "dǔ sè", "肚量": "dù liàng", "肚子": "dǔ zi", "度量": "dù liàng", "度假": "dù jià", "度曲": "dù qǔ", "断种": "duàn zhǒng", "锻模": "duàn mú", "队长": "duì zhǎng", "对簿": "duì bù", "对称": "duì chèn", "对调": "duì diào", "敦朴": "dūn piáo", "多咱": "duō zá", "夺得": "duó de", "夺冠": "duó guàn", "垛口": "duǒ kǒu", "垛子": "duǒ zi", "蛾子": "é zi", "婀娜": "ē nuó", "厄难": "è nàn", "恶斗": "è dòu", "恶少": "è shào", "恶相": "è xiàng", "恶心": "ě xīn", "恶行": "è xíng", "二重": "èr chóng", "发辫": "fà biàn", "发鬓": "fà bìn", "发菜": "fà cài", "发还": "fā huán", "发髻": "fà jì", "发际": "fà jì", "发夹": "fā jiā", "发卡": "fà qiǎ", "发廊": "fà láng", "发闷": "fā mèn", "发蒙": "fā mēng", "发难": "fā nàn", "发妻": "fà qī", "发乳": "fà rǔ", "发丧": "fā sāng", "发式": "fà shì", "发屋": "fà wū", "发行": "fā xíng", "发型": "fà xíng", "发怔": "fā zhèng", "发指": "fà zhǐ", "法帖": "fǎ tiè", "番禺": "pān yú", "翻查": "fān zhā", "翻倒": "fān dǎo", "翻卷": "fān juǎn", "烦闷": "fán mèn", "反弹": "fǎn dàn", "反调": "fǎn diào", "反间": "fǎn jiàn", "反省": "fǎn xǐng", "返还": "fǎn huán", "饭量": "fàn liàng", "防弹": "fáng dàn", "仿佛": "fǎng fú", "仿行": "fǎng xíng", "访查": "fǎng zhā", "放倒": "fàng dǎo", "放假": "fàng jià", "放量": "fàng liàng", "放行": "fàng xíng", "放血": "fàng xuè", "飞弹": "fēi dàn", "飞行": "fēi xíng", "飞转": "fēi zhuàn", "妃嫔": "fēi pín", "妃子": "fēi zǐ", "非得": "fēi děi", "非分": "fēi fèn", "非难": "fēi nàn", "菲仪": "fěi yí", "菲薄": "fěi bó", "分叉": "fēn chà", "分当": "fèn dāng", "分得": "fēn de", "分量": "fèn liàng", "分内": "fèn nèi", "分散": "fēn sǎn", "分外": "fèn wài", "分为": "fēn wéi", "分子": "fèn zǐ", "粉坊": "fěn fáng", "份量": "fèn liàng", "份子": "fèn zi", "奋斗": "fèn dòu", "风量": "fēng liàng", "风靡": "fēng mǐ", "风头": "fēng tou", "风行": "fēng xíng", "缝补": "féng bǔ", "缝合": "féng hé", "缝纫": "féng rèn", "缝衣": "féng yī", "缝制": "féng zhì", "缝缀": "féng zhuì", "缝子": "fèng zi", "凤爪": "fèng zhǎo", "奉还": "fèng huán", "奉行": "fèng xíng", "伏帖": "fú tiē", "服丧": "fú sāng", "服帖": "fú tiē", "福相": "fú xiàng", "负载": "fù zài", "附和": "fù hè", "附识": "fù zhì", "附着": "fù zhuó", "复辟": "fù bì", "复查": "fù zhā", "复种": "fù zhǒng", "赴难": "fù nàn", "覆没": "fù mò", "嘎巴": "gā bā", "嘎噔": "gā dēng", "嘎嘎": "gā gā", "嘎啦": "gā lā", "嘎然": "gā rán", "嘎吱": "gā zhī", "该着": "gāi zháo", "改调": "gǎi diào", "改为": "gǎi wéi", "盖子": "gài zi", "干白": "gàn bái", "干部": "gàn bù", "干才": "gàn cái", "干道": "gàn dào", "干点": "gàn diǎn", "干掉": "gàn diào", "干粉": "gàn fěn", "干干": "gàn gàn", "干号": "gān háo", "干活": "gàn huó", "干架": "gàn jià", "干将": "gàn jiàng", "干结": "gàn jié", "干劲": "gàn jìn", "干警": "gàn jǐng", "干练": "gàn liàn", "干流": "gàn liú", "干路": "gàn lù", "干吗": "gàn má", "干嘛": "gàn ma", "干么": "gàn mǒ", "干渠": "gàn qú", "干事": "gàn shì", "干松": "gàn sōng", "干线": "gàn xiàn", "干校": "gàn xiào", "干硬": "gàn yìng", "干预": "gàn yù", "干员": "gàn yuán", "干政": "gàn zhèng", "干仗": "gàn zhàng", "杆秤": "gǎn chèng", "杆菌": "gǎn jūn", "杆塔": "gǎn tǎ", "杆子": "gān zi", "刚劲": "gāng jìng", "钢种": "gāng zhǒng", "杠杆": "gàng gǎn", "杠子": "gàng zi", "皋兰": "gāo lán", "高调": "gāo diào", "高干": "gāo gàn", "高丽": "gāo lí", "高挑": "gāo tiǎo", "高兴": "gāo xìng", "高知": "gāo zhì", "膏血": "gāo xuè", "膏泽": "gào zé", "篙头": "gāo tou", "镐头": "gǎo tóu", "告倒": "gào dǎo", "告假": "gào jià", "疙瘩": "gē dā", "胳臂": "gē bei", "胳膊": "gē bo", "割切": "gē qiē", "歌曲": "gē qǔ", "歌行": "gē xíng", "格调": "gé diào", "格斗": "gé dòu", "葛布": "gé bù", "葛粉": "gé fěn", "葛根": "gé gēn", "葛藤": "gé téng", "蛤粉": "gé fěn", "蛤蚧": "gé jiè", "蛤蜊": "gé lí", "蛤蟆": "há má", "隔扇": "gé shān", "个子": "gè zi", "各种": "gè zhǒng", "给水": "jǐ shuǐ", "给养": "jǐ yǎng", "给予": "jǐ yǔ", "跟差": "gēn chāi", "跟头": "gēn tou", "更次": "gēng cì", "更迭": "gēng dié", "更动": "gēng dòng", "更番": "gēng fān", "更夫": "gēng fū", "更改": "gēng gǎi", "更鼓": "gēng gǔ", "更换": "gēng huàn", "更名": "gēng míng", "更深": "gēng shēn", "更生": "gēng shēng", "更始": "gēng shǐ", "更替": "gēng tì", "更为": "gèng wéi", "更新": "gēng xīn", "更衣": "gēng yī", "更易": "gēng yì", "更张": "gēng zhāng", "更正": "gēng zhèng", "更卒": "gēng zú", "哽塞": "gěng sè", "梗塞": "gěng sè", "工尺": "gōng chě", "工种": "gōng zhǒng", "公差": "gōng chāi", "公干": "gōng gàn", "公假": "gōng jià", "公转": "gōng zhuàn", "供电": "gōng diàn", "供给": "gōng jǐ", "供料": "gōng liào", "供气": "gōng qì", "供求": "gōng qiú", "供销": "gōng xiāo", "供需": "gōng xū", "供应": "gōng yìng", "宫调": "gōng diào", "躬行": "gōng xíng", "拱券": "gǒng xuàn", "共处": "gòng chǔ", "勾当": "gòu dàng", "佝偻": "gōu lóu", "枸橘": "gōu jú", "枸杞": "gǒu qǐ", "购得": "gòu de", "够呛": "gòu qiāng", "估量": "gū liang", "估衣": "gù yī", "孤行": "gū xíng", "古朴": "gǔ piáo", "汩汩": "gǔ gǔ", "汩没": "gǔ mò", "谷坊": "gǔ fáng", "股长": "gǔ zhǎng", "骨朵": "gū duǒ", "骨干": "gǔ gàn", "骨碌": "gū lù", "骨头": "gú tou", "骨血": "gǔ xuè", "骨殖": "gǔ shi", "骨子": "gǔ zi", "榾柮": "gǔ duò", "鼓乐": "gǔ yuè", "故伎": "gù jì", "固着": "gù zhuó", "雇佣": "gù yōng", "瓜蔓": "guā wàn", "瓜葛": "guā gé", "呱嗒": "guā dā", "呱唧": "guā jī", "呱呱": "gū gū", "怪相": "guài xiàng", "关卡": "guān qiǎ", "官差": "guān chāi", "官长": "guān zhǎng", "官倒": "guān dǎo", "冠军": "guàn jūn", "冠礼": "guàn lǐ", "冠子": "guàn zi", "管乐": "guǎn yuè", "光杆": "guāng gǎn", "光晕": "guāng yùn", "光栅": "guāng shān", "桄榔": "guāng láng", "广厦": "guǎng shà", "归还": "guī huán", "归降": "guī xiáng", "归省": "guī xǐng", "龟甲": "guī jiá", "龟裂": "jūn liè", "鲑鱼": "guī yú", "柜子": "guì zi", "贵处": "guì chǔ", "贵妃": "guì fēi", "贵干": "guì gàn", "跪倒": "guì dǎo", "棍子": "gùn zi", "国难": "guó nàn", "国丧": "guó sāng", "果干": "guǒ gàn", "过磅": "guò bàng", "过分": "guò fèn", "过量": "guò liàng", "过载": "guò zài", "哈达": "hǎ dá", "哈罗": "hā luo", "嗨哟": "hāi yō", "海参": "hǎi shēn", "海量": "hǎi liàng", "海难": "hǎi nàn", "含糊": "hán hu", "含量": "hán liàng", "含血": "hán xuè", "寒颤": "hán zhàn", "寒假": "hán jià", "悍将": "hàn jiàng", "航行": "háng xíng", "豪横": "háo hèng", "豪兴": "háo xìng", "好动": "hào dòng", "好斗": "hào dòu", "好恶": "hào wù", "好古": "hào gǔ", "好客": "hào kè", "好奇": "hào qí", "好强": "hào qiáng", "好色": "hào sè", "好胜": "hào shèng", "好学": "hào xué", "好战": "hào zhàn", "号叫": "háo jiào", "号丧": "háo sāng", "号啕": "háo táo", "呵喝": "hē hè", "呵责": "hē zé", "喝采": "hè cǎi", "喝彩": "hè cǎi", "喝道": "hè dào", "喝令": "hè lìng", "喝问": "hè wèn", "禾场": "hé cháng", "何处": "hé chǔ", "何曾": "hé zēng", "和面": "huó miàn", "和弄": "huò nòng", "和诗": "hè shī", "核查": "hé zhā", "核弹": "hé dàn", "核儿": "hú ér", "荷载": "hè zǎi", "貉绒": "háo róng", "貉子": "háo zi", "黑种": "hēi zhǒng", "恒量": "héng liàng", "亨通": "hēng tōng", "横暴": "hèng bào", "横财": "hèng cái", "横祸": "hèng huò", "横逆": "hèng nì", "横蛮": "hèng mán", "横事": "hèng shì", "横死": "hèng sǐ", "横行": "héng xíng", "哄传": "hōng chuán", "哄动": "hōng dòng", "哄闹": "hōng nào", "哄抢": "hōng qiǎng", "哄然": "hōng rán", "哄抬": "hōng tái", "哄堂": "hōng táng", "哄笑": "hōng xiào", "红曲": "hóng qǔ", "红苕": "hóng sháo", "红晕": "hóng yùn", "宏量": "hóng liàng", "洪量": "hóng liàng", "鸿爪": "hóng zhǎo", "后妃": "hòu fēi", "后头": "hòu tou", "厚朴": "hòu pò", "呼号": "hū háo", "呼喝": "hū hè", "呼啦": "hū lā", "呼吁": "hū yù", "狐臊": "hú sāo", "胡同": "hú tòng", "糊糊": "hū hū", "糊弄": "hù nòng", "虎贲": "hǔ bēn", "虎将": "hǔ jiàng", "互见": "hù xiàn", "户调": "hù diào", "花卷": "huā juǎn", "花呢": "huā ní", "华发": "huá fà", "华山": "huà shān", "华佗": "huà tuó", "哗啦": "huā lā", "哗哗": "huā huā", "滑行": "huá xíng", "划船": "huá chuán", "划过": "huá guò", "划划": "huá huá", "划桨": "huá jiǎng", "划拉": "huá lā", "划拳": "huá quán", "划算": "huá suàn", "划艇": "huá tǐng", "划行": "huá xíng", "划子": "huá zǐ", "画夹": "huà jiā", "画片": "huà piān", "画帖": "huà tiè", "坏种": "huài zhǒng", "还本": "huán běn", "还击": "huán jī", "还魂": "huán hún", "还价": "huán jià", "还口": "huán kǒu", "还清": "huán qīng", "还礼": "huán lǐ", "还手": "huán shǒu", "还俗": "huán sú", "还席": "huán xí", "还乡": "huán xiāng", "还阳": "huán yáng", "还原": "huán yuán", "还愿": "huán yuàn", "还债": "huán zhài", "还账": "huán zhàng", "还嘴": "huán zuǐ", "环行": "huán xíng", "缓行": "huǎn xíng", "唤头": "huàn tou", "皇朝": "huáng cháo", "皇妃": "huáng fēi", "晃眼": "huǎng yǎn", "晃晃": "huàng huǎng", "徽调": "huī diào", "回还": "huí huán", "回帖": "huí tiē", "会儿": "huì er", "会计": "kuài jì", "浑朴": "hún piáo", "混血": "hùn xuè", "豁出": "huō chū", "豁口": "huō kǒu", "豁拳": "huó quán", "豁子": "huō zǐ", "豁嘴": "huō zuǐ", "活血": "huó xuè", "火种": "huǒ zhǒng", "击中": "jī zhòng", "机长": "jī zhǎng", "积累": "jī lěi", "缉捕": "jī bǔ", "缉查": "jī zhā", "缉获": "jī huò", "缉拿": "jī ná", "缉凶": "jī xiōng", "缉私": "jī sī", "箕斗": "jī dòu", "稽查": "jī zhā", "稽首": "qǐ shǒu", "激将": "jī jiàng", "即兴": "jí xìng", "即行": "jí xíng", "极量": "jí liàng", "极为": "jí wéi", "亟亟": "jí jí", "急难": "jí nàn", "疾行": "jí xíng", "籍没": "jí mò", "几案": "jī àn", "几乎": "jī hū", "几率": "jī lǜ", "几微": "jī wēi", "几希": "jī xī", "几曾": "jǐ zēng", "几至": "jī zhì", "记得": "jì de", "伎俩": "jì liǎng", "纪行": "jì xíng", "剂量": "jì liàng", "济南": "jǐ nán", "偈语": "jì yǔ", "夹板": "jiā bǎn", "夹层": "jiā céng", "夹持": "jiā chí", "夹带": "jiā dài", "夹道": "jiā dào", "夹缝": "jiā fèng", "夹攻": "jiā gōng", "夹棍": "jiā gùn", "夹击": "jiā jī", "夹剪": "jiā jiǎn", "夹角": "jiā jiǎo", "夹紧": "jiā jǐn", "夹具": "jiā jù", "夹批": "jiā pī", "夹钳": "jiā qián", "夹墙": "jiā qiáng", "夹生": "jiā shēng", "夹馅": "jiā xiàn", "夹心": "jiā xīn", "夹杂": "jiā zá", "夹峙": "jiā zhì", "夹子": "jiā zi", "夹注": "jiā zhù", "家长": "jiā zhǎng", "家当": "jiā dàng", "家伙": "jiā huo", "家累": "jiā lěi", "家雀": "jiā qiǎo", "家什": "jiā shí", "甲壳": "jiǎ qiào", "贾祸": "gǔ huò", "贾人": "gǔ rén", "间谍": "jiàn dié", "间断": "jiàn duàn", "间隔": "jiàn gé", "间或": "jiàn huò", "间接": "jiàn jiē", "间量": "jiān liàng", "间苗": "jiàn miáo", "间色": "jiàn sè", "间隙": "jiàn xì", "间歇": "jiàn xiē", "间种": "jiàn zhòng", "间奏": "jiàn zòu", "间作": "jiàn zuò", "兼差": "jiān chāi", "犍牛": "jiān niú", "犍为": "qián wéi", "剪发": "jiǎn fà", "简朴": "jiǎn piáo", "简帖": "jiǎn tiē", "见长": "jiàn zhǎng", "见得": "jiàn de", "饯行": "jiàn xíng", "健将": "jiàn jiàng", "践行": "jiàn xíng", "腱鞘": "jiàn qiào", "箭垛": "jiàn duǒ", "将官": "jiàng guān", "将将": "qiāng qiāng", "将令": "jiàng lìng", "将领": "jiàng lǐng", "将门": "jiàng mén", "将士": "jiàng shì", "将帅": "jiàng shuài", "将尉": "jiàng wèi", "将校": "jiàng xiào", "降调": "jiàng diào", "降伏": "xiáng fú", "糨糊": "jiàng hù", "交差": "jiāo chāi", "交恶": "jiāo wù", "交还": "jiāo huán", "姣好": "jiāo hǎo", "姣丽": "jiāo lì", "姣美": "jiāo měi", "娇娆": "jiāo ráo", "浇薄": "jiāo bó", "骄横": "jiāo hèng", "浇头": "jiāo tou", "骄矜": "jiāo jīn", "胶卷": "jiāo juǎn", "角斗": "jué dòu", "角力": "jué lì", "角色": "jué sè", "角逐": "jué zhú", "搅和": "jiǎo huo", "搅混": "jiǎo gǔn", "湫隘": "jiǎo ài", "剿袭": "chāo xí", "徼幸": "jiǎo xìng", "较量": "jiào liàng", "较为": "jiào wéi", "节子": "jiē zǐ", "劫难": "jié nàn", "诘责": "jié zé", "拮据": "jié jū", "结巴": "jiē bā", "结发": "jié fà", "结实": "jiē shi", "结扎": "jié zā", "碣石": "jié shí", "她们": "tā men", "解差": "jiè chāi", "解法": "xiè fǎ", "解款": "jiè kuǎn", "解闷": "jiě mèn", "解数": "xiè shù", "解送": "jiè sòng", "解元": "jiè yuán", "芥蓝": "gài lán", "借调": "jiè diào", "金弹": "jīn dàn", "金相": "jīn xiàng", "矜持": "jīn chí", "矜贵": "jīn guì", "矜夸": "jīn kuā", "尽管": "jǐn guǎn", "尽快": "jǐn kuài", "尽量": "jǐn liàng", "尽先": "jǐn xiān", "尽兴": "jìn xìng", "尽责": "jìn zé", "尽自": "jǐn zì", "劲草": "jìng cǎo", "劲吹": "jìng chuī", "劲敌": "jìng dí", "劲风": "jìng fēng", "劲旅": "jìng lǚ", "劲射": "jìng shè", "劲直": "jìng zhí", "进给": "jìn jǐ", "浸没": "jìn mò", "浸种": "jìn zhǒng", "禁脔": "jìn jī", "禁受": "jīn shòu", "禁用": "jīn yòng", "经传": "jīng zhuàn", "经血": "jīng xuè", "茎干": "jīng gàn", "惊倒": "jīng dǎo", "精当": "jīng dàng", "精干": "jīng gàn", "精血": "jīng xuè", "景行": "jǐng xíng", "警种": "jǐng zhǒng", "净得": "jìng de", "径行": "jìng xíng", "靓妆": "jìng zhuāng", "纠葛": "jiū gé", "窘相": "jiǒng xiàng", "揪斗": "jiū dòu", "酒吧": "jiǔ bā", "酒量": "jiǔ liàng", "酒兴": "jiǔ xìng", "居处": "jū chǔ", "居丧": "jū sāng", "拘泥": "jū nì", "局量": "jú liàng", "桔槔": "jié gāo", "桔梗": "jié gěng", "咀嚼": "jǔ jué", "沮洳": "jù rù", "举行": "jǔ xíng", "句读": "jù dòu", "句子": "jù zi", "巨量": "jù liàng", "巨贾": "jù gǔ", "巨阙": "jù quē", "剧曲": "jù qǔ", "剧种": "jù zhǒng", "卷尺": "juǎn chǐ", "卷发": "juǎn fà", "卷曲": "juǎn qū", "卷舌": "juǎn shé", "卷逃": "juǎn táo", "卷烟": "juǎn yān", "卷云": "juǎn yún", "卷扬": "juǎn yáng", "卷子": "juǎn zi", "隽永": "juàn yǒng", "撅嘴": "juē zuǐ", "决斗": "jué dòu", "绝倒": "jué dǎo", "绝种": "jué zhǒng", "觉得": "jué de", "倔强": "jué jiàng", "噱头": "xué tou", "军长": "jūn zhǎng", "军乐": "jūn yuè", "军种": "jūn zhǒng", "咔嚓": "kā chā", "咔嗒": "kā dā", "咖啡": "kā fēi", "卡具": "qiǎ jù", "卡壳": "qiǎ ké", "卡子": "qiǎ zi", "开豁": "kāi huō", "开行": "kāi xíng", "剀切": "kǎi qiē", "刊行": "kān xíng", "勘查": "kān zhā", "勘校": "kān jiào", "坎坷": "kǎn kě", "看管": "kān guǎn", "看护": "kān hù", "看家": "kān jiā", "看门": "kān mén", "看守": "kān shǒu", "看头": "kàn tou", "看相": "kàn xiàng", "看押": "kān yā", "看中": "kàn zhòng", "扛鼎": "gāng dǐng", "考查": "kǎo zhā", "靠泊": "kào bó", "苛责": "kē zé", "科长": "kē zhǎng", "咳喘": "ké chuǎn", "咳嗽": "ké sòu", "咳血": "ké xuè", "可恶": "kě wù", "可汗": "kè hán", "可行": "kě xíng", "可曾": "kě zēng", "刻薄": "kè bó", "刻划": "kè huá", "空白": "kòng bái", "空地": "kòng dì", "空儿": "kòng ér", "空额": "kòng é", "空难": "kōng nàn", "空缺": "kòng quē", "空隙": "kòng xì", "空暇": "kòng xiá", "空闲": "kòng xián", "空余": "kòng yú", "空转": "kōng zhuàn", "空子": "kòng zi", "倥侗": "kōng tóng", "恐吓": "kǒng hè", "口角": "kǒu jué", "哭丧": "kū sang", "苦参": "kǔ shēn", "苦差": "kǔ chāi", "苦斗": "kǔ dòu", "苦处": "kǔ chǔ", "苦干": "kǔ gàn", "苦闷": "kǔ mèn", "苦难": "kǔ nàn", "苦行": "kǔ xíng", "快行": "kuài xíng", "宽绰": "kuān chuo", "款曲": "kuǎn qǔ", "款识": "kuǎn zhì", "亏得": "kuī de", "窥度": "kuī duó", "愧怍": "kuì zuò", "昆曲": "kūn qǔ", "困处": "kùn chǔ", "困觉": "kùn jiào", "阔少": "kuò shào", "拉倒": "lā dǎo", "拉杆": "lā gǎn", "拉纤": "lā qiàn", "喇嘛": "lǎ ma", "来得": "lái de", "来头": "lái tou", "兰若": "lán rě", "栏干": "lán gàn", "栏栅": "lán shān", "懒得": "lǎn de", "懒散": "lǎn sǎn", "滥调": "làn diào", "狼藉": "láng jí", "莨菪": "làng dàng", "榔头": "láng tou", "浪头": "làng tou", "唠扯": "lào chě", "唠嗑": "lào kè", "唠唠": "lào lào", "老调": "lǎo diào", "老将": "lǎo jiàng", "老区": "lǎo ōu", "老少": "lǎo shào", "姥姥": "lǎo lao", "潦倒": "liáo dǎo", "乐池": "yuè chí", "乐得": "lè de", "乐都": "lè dōu", "乐队": "yuè duì", "乐府": "yuè fǔ", "乐感": "yuè gǎn", "乐歌": "yuè gē", "乐工": "yuè gōng", "乐官": "yuè guān", "乐户": "yuè hù", "乐律": "yuè lǜ", "乐迷": "yuè mí", "乐谱": "yuè pǔ", "乐器": "yuè qì", "乐曲": "yuè qǔ", "乐师": "yuè shī", "乐坛": "yuè tán", "乐团": "yuè tuán", "乐舞": "yuè wǔ", "乐音": "yuè yīn", "乐章": "yuè zhāng", "擂鼓": "léi gǔ", "楞伽": "léng jiā", "冷颤": "lěng zhàn", "离间": "lí jiàn", "罹难": "lí nàn", "礼乐": "lǐ yuè", "里弄": "lǐ lòng", "里头": "lǐ tou", "俚曲": "lǐ qǔ", "力量": "lì liàng", "历朝": "lì cháo", "力行": "lì xíng", "历数": "lì shǔ", "厉行": "lì xíng", "丽水": "lí shuǐ", "利得": "lì de", "励行": "lì xíng", "例假": "lì jià", "例行": "lì xíng", "栎木": "lì mù", "栎树": "lì shù", "连杆": "lián gǎn", "连累": "lián lěi", "良将": "liáng jiàng", "良种": "liáng zhǒng", "亮相": "liàng xiàng", "量变": "liàng biàn", "量词": "liàng cí", "量纲": "liàng gāng", "量力": "liàng lì", "量能": "liàng néng", "量刑": "liàng xíng", "量子": "liàng zǐ", "了当": "liǎo dàng", "了得": "liǎo de", "了断": "liǎo duàn", "了结": "liǎo jié", "了解": "liǎo jiě", "了局": "liǎo jú", "了了": "liǎo liǎo", "了却": "liǎo què", "了然": "liǎo rán", "了事": "liǎo shì", "了无": "liǎo wú", "了悟": "liǎo wù", "了账": "liǎo zhàng", "料量": "liào liàng", "咧嘴": "liě zuǐ", "列传": "liè zhuàn", "劣种": "liè zhǒng", "趔趄": "liè qie", "临朝": "lín cháo", "临难": "lín nàn", "临帖": "lín tiè", "临行": "lín xíng", "淋病": "lìn bìng", "鳞爪": "lín zhǎo", "铃铛": "líng dang", "零散": "líng sǎn", "令狐": "líng hú", "另行": "lìng xíng", "流弹": "liú dàn", "流量": "liú liàng", "流行": "liú xíng", "留空": "liú kòng", "留难": "liú nàn", "留种": "liú zhǒng", "榴弹": "liú dàn", "馏分": "liú fèn", "柳荫": "liǔ yīn", "六朝": "liù cháo", "咯噔": "gē dēng", "咯咯": "gē gē", "咯血": "kǎ xiě", "咯吱": "gē zhī", "龙卷": "lóng juǎn", "露白": "lòu bái", "露丑": "lòu chǒu", "露底": "lòu dǐ", "露风": "lòu fēng", "露富": "lòu fù", "露骨": "lòu gǔ", "露脸": "lòu liǎn", "露面": "lòu miàn", "露苗": "lòu miáo", "露怯": "lòu qiè", "露馅": "lòu xiàn", "露相": "lòu xiàng", "碌碡": "liù zhou", "路卡": "lù qiǎ", "履行": "lǚ xíng", "旅行": "lǚ xíng", "率领": "shuài lǐng", "率然": "shuài rán", "率性": "shuài xìng", "率真": "shuài zhēn", "率直": "shuài zhí", "沦没": "lún mò", "纶巾": "guān jīn", "轮转": "lún zhuàn", "论处": "lùn chǔ", "论调": "lùn diào", "论难": "lùn nàn", "论语": "lún yǔ", "螺杆": "luó gǎn", "络子": "lào zi", "落泊": "luò bó", "落得": "luò de", "落发": "luò fà", "落价": "lào jià", "落难": "luò nàn", "落魄": "luò tuò", "落下": "là xià", "落枕": "lào zhěn", "落子": "lào zǐ", "漯河": "luò tà hé", "马圈": "mǎ juàn", "马尾": "mǎ yǐ", "马扎": "mǎ zhá", "码垛": "mǎ duǒ", "蚂螂": "mā láng", "蚂蚱": "mà zhà", "唛头": "mà tóu", "吗啡": "mǎ fēi", "埋没": "mái mò", "埋怨": "mán yuàn", "卖相": "mài xiàng", "脉脉": "mò mò", "蛮干": "mán gàn", "蛮横": "mán hèng", "馒头": "mán tou", "满处": "mǎn chǔ", "满载": "mǎn zài", "蟒袍": "mǎng páo", "蟒蛇": "mǎng shé", "毛发": "máo fà", "毛呢": "máo ní", "锚泊": "máo bó", "没齿": "mò chǐ", "没空": "méi kòng", "没落": "mò luò", "没入": "mò rù", "没世": "mò shì", "没收": "mò shōu", "没药": "mò yào", "美差": "měi chāi", "门把": "mén bà", "闷酒": "mèn jiǔ", "闷棍": "mèn gùn", "闷倦": "mèn juàn", "闷头": "mèn tóu", "蒙尘": "meng chen", "蒙难": "méng nàn", "蒙事": "mēng shì", "弥缝": "mí féng", "迷糊": "mí hu", "靡丽": "mǐ lì", "糜子": "méi zǐ", "泌阳": "bì yáng", "秘鲁": "bì lǔ", "免得": "miǎn de", "勉强": "miǎn qiǎng", "面朝": "miàn cháo", "面糊": "miàn hù", "灭种": "miè zhǒng", "民乐": "mín yuè", "泯没": "mǐn mò", "名簿": "míng bù", "名将": "míng jiàng", "名角": "míng jué", "名刹": "míng shā", "明朝": "míng cháo", "明了": "míng liǎo", "命薄": "mìng bó", "命中": "mìng zhòng", "谬种": "miù zhǒng", "模板": "mú bǎn", "模糊": "mó hu", "模具": "mú jù", "模样": "mú yàng", "模子": "mú zǐ", "摩挲": "mā sā", "磨叨": "mò dāo", "磨烦": "mò fán", "磨坊": "mò fáng", "磨难": "mó nàn", "磨盘": "mò pán", "磨子": "mò zǐ", "魔爪": "mó zhǎo", "抹布": "mā bù", "抹灰": "mò huī", "抹脸": "mā liǎn", "抹胸": "mò xiōng", "末了": "mò liǎo", "牟利": "móu lì", "牟取": "móu qǔ", "木杆": "mù gǎn", "木模": "mù mú", "木头": "mù tou", "木栅": "mù shān", "目的": "mù dì", "墓碣": "mù jié", "哪个": "něi gè", "哪些": "něi xiē", "哪吒": "né zhā", "内传": "nèi zhuàn", "内省": "nèi xǐng", "那些": "nèi xiē", "纳降": "nà xiáng", "纳闷": "nà mèn", "南朝": "nán cháo", "难胞": "nàn bāo", "难处": "nán chǔ", "难倒": "nán dǎo", "难得": "nán de", "难民": "nàn mín", "难侨": "nàn qiáo", "难为": "nán wéi", "难友": "nàn yǒu", "难属": "nàn shǔ", "孬种": "nāo zhǒng", "闹哄": "nào hōng", "闹嚷": "nào rāng", "呢喃": "ní nán", "呢绒": "ní róng", "呢子": "ní zǐ", "能干": "néng gàn", "能量": "néng liàng", "泥古": "nì gǔ", "泥淖": "ní nào", "泥子": "nì zǐ", "霓裳": "ní cháng", "逆行": "nì xíng", "年长": "nián zhǎng", "年假": "nián jià", "年少": "nián shào", "碾坊": "niǎn fáng", "念头": "niàn tou", "袅娜": "niǎo nuó", "尿脬": "suī pāo", "尿泡": "suī pào", "尿血": "niào xuè", "孽种": "niè zhǒng", "宁可": "nìng kě", "宁肯": "nìng kěn", "宁帖": "níng tiē", "宁愿": "nìng yuàn", "浓荫": "nóng yīn", "脓血": "nóng xuè", "弄口": "lòng kǒu", "弄堂": "lòng táng", "怒号": "nù háo", "怒喝": "nù hè", "女红": "nǚ gōng", "女将": "nǚ jiàng", "疟子": "yào zǐ", "暖和": "nuǎn huo", "殴斗": "ōu dòu", "呕血": "ǒu xuè", "呕哑": "ōu yā", "啪嗒": "pā dā", "爬行": "pá xíng", "耙地": "bà dì", "排长": "pái zhǎng", "排场": "pái chang", "判处": "pàn chǔ", "盼头": "pàn tou", "刨冰": "bào bīng", "刨床": "bào chuáng", "刨刀": "bào dāo", "刨削": "páo xuē", "刨子": "bào zǐ", "炮弹": "pào dàn", "炮烙": "páo luò", "炮制": "páo zhì", "跑调": "pǎo diào", "泡货": "pāo huò", "泡桐": "pāo tóng", "泡子": "pāo zǐ", "赔还": "péi huán", "配称": "pèi chèn", "配调": "pèi diào", "配给": "pèi jǐ", "配角": "pèi jué", "配乐": "pèi yuè", "配曲": "pèi qǔ", "配种": "pèi zhǒng", "喷薄": "pēn bó", "喷撒": "pēn sǎ", "喷吐": "pēn tǔ", "喷香": "pèn xiāng", "棚圈": "péng juàn", "批斗": "pī dòu", "批假": "pī jià", "批量": "pī liàng", "披发": "pī fà", "纰缪": "pī miù", "纰漏": "pī lòu", "披散": "pī sǎn", "劈柴": "pǐ chái", "劈叉": "pǐ chà", "劈成": "pǐ chéng", "皮夹": "pí jiā", "皮相": "pí xiàng", "疲沓": "pí ta", "癖好": "pǐ hào", "睥睨": "bì nì", "片儿": "piān er", "片头": "piān tóu", "片子": "piān zi", "偏差": "piān chā", "篇什": "piān shí", "漂泊": "piāo bó", "漂白": "piǎo bái", "漂亮": "piào liàng", "漂染": "piǎo rǎn", "漂洗": "piǎo xǐ", "缥缈": "piāo miǎo", "飘泊": "piāo bó", "撇开": "piē kāi", "撇弃": "piē qì", "姘头": "pīn tou", "拼斗": "pīn dòu", "贫血": "pín xuè", "嫔妃": "pín fēi", "频数": "pín shuò", "品行": "pǐn xíng", "品种": "pǐn zhǒng", "平调": "píng diào", "平峒": "píng dòng", "平巷": "píng hàng", "平行": "píng xíng", "评传": "píng zhuàn", "评量": "píng liàng", "苹果": "pín guǒ", "屏除": "bǐng chú", "屏气": "bǐng qì", "屏弃": "bǐng qì", "屏退": "bǐng tuì", "屏息": "bǐng xī", "破相": "pò xiàng", "扑棱": "pū lēng", "扑扇": "pū shān", "铺陈": "pū chén", "铺衬": "pū chèn", "铺床": "pū chuáng", "铺垫": "pū diàn", "铺盖": "pū gài", "铺轨": "pū guǐ", "铺路": "pū lù", "铺面": "pū miàn", "铺排": "pū pái", "铺平": "pū píng", "铺砌": "pū qì", "铺设": "pū shè", "铺叙": "pū xù", "铺展": "pū zhǎn", "铺张": "pū zhāng", "朴硝": "pò xiāo", "普查": "pǔ zhā", "谱曲": "pǔ qǔ", "曝光": "bào guāng", "期年": "jī nián", "齐明": "zī míng", "齐行": "qí xíng", "奇零": "jī líng", "奇偶": "jī ǒu", "奇数": "jī shù", "耆老": "qí lǎo", "耆宿": "qí sù", "乞降": "qǐ xiáng", "企划": "qǐ huá", "启行": "qǐ xíng", "起哄": "qǐ hòng", "起解": "qǐ jiè", "起兴": "qǐ xìng", "起行": "qǐ xíng", "气量": "qì liàng", "气闷": "qì mèn", "气血": "qì xuè", "泣血": "qì xuè", "器量": "qì liàng", "恰当": "qià dàng", "恰切": "qià qiē", "牵累": "qiān lěi", "牵强": "qiān qiǎng", "铅弹": "qiān dàn", "铅山": "yán shān", "前朝": "qián cháo", "前头": "qián tou", "前行": "qián xíng", "钱夹": "qián jiā", "潜行": "qián xíng", "浅薄": "qiǎn bó", "浅浅": "jiān jiān", "戗风": "qiāng fēng", "枪杆": "qiāng gǎn", "枪弹": "qiāng dàn", "腔调": "qiāng diào", "强逼": "qiǎng bī", "强调": "qiáng diào", "强干": "qiáng gàn", "强横": "qiáng hèng", "强将": "qiáng jiàng", "强劲": "qiáng jìng", "强留": "qiǎng liú", "强迫": "qiǎng pò", "强求": "qiǎng qiú", "强人": "qiǎng rén", "强笑": "qiǎng xiào", "强行": "qiáng xíng", "强颜": "qiǎng yán", "强嘴": "jiàng zuǐ", "墙垛": "qiáng duǒ", "悄然": "qiǎo rán", "悄声": "qiǎo shēng", "巧干": "qiǎo gàn", "俏头": "qiào tou", "翘楚": "qiáo chǔ", "翘棱": "qiáo lēng", "翘盼": "qiáo pàn", "翘企": "qiáo qǐ", "翘首": "qiáo shǒu", "翘望": "qiáo wàng", "切变": "qiē biàn", "切除": "qiē chú", "切磋": "qiē cuō", "切当": "qiē dāng", "切点": "qiē diǎn", "切断": "qiē duàn", "切糕": "qiē gāo", "切割": "qiē gē", "切花": "qiē huā", "切结": "qiē jié", "切口": "qiē kǒu", "切面": "qiē miàn", "切片": "qiē piàn", "切切": "qiē qiē", "切入": "qiē rù", "切勿": "qiē wù", "切屑": "qiē xiè", "切削": "qiē xiāo", "切中": "qiè zhòng", "亲家": "qìng jia", "钦差": "qīn chāi", "秦艽": "qín jiāo", "琴曲": "qín qǔ", "勤朴": "qín piáo", "氢弹": "qīng dàn", "轻薄": "qīng bó", "轻率": "qīng shuài", "倾倒": "qīng dǎo", "倾吐": "qīng tǔ", "请调": "qǐng diào", "请假": "qǐng jià", "请降": "qǐng xiáng", "秋种": "qiū zhǒng", "求降": "qiú xiáng", "酋长": "qiú zhǎng", "遒劲": "qiú jìng", "曲池": "qǔ chí", "曲调": "qǔ diào", "曲度": "qǔ dù", "曲江": "qǔ jiāng", "曲剧": "qǔ jù", "曲率": "qǔ lǜ", "曲面": "qǔ miàn", "曲目": "qǔ mù", "曲牌": "qǔ pái", "曲谱": "qǔ pǔ", "曲泉": "qǔ quán", "曲蟮": "qǔ shàn", "曲水": "qǔ shuǐ", "曲艺": "qǔ yì", "曲张": "qǔ zhāng", "曲泽": "qǔ zé", "曲子": "qǔ zi", "屈曲": "qū qǔ", "屈折": "qū shé", "躯干": "qū gàn", "躯壳": "qū qiào", "取得": "qǔ de", "圈子": "quān zi", "全都": "quán dōu", "拳头": "quán tou", "鬈曲": "quán qǔ", "劝降": "quàn xiáng", "雀子": "qiāo zǐ", "确当": "què dàng", "阙如": "quē rú", "阙漏": "quē lòu", "阙文": "quē wén", "阙疑": "quē yí", "群氓": "qún méng", "染坊": "rǎn fáng", "嚷嚷": "rāng rang", "绕行": "rào xíng", "热和": "rè huo", "热量": "rè liàng", "热血": "rè xuè", "人参": "rén shēn", "人为": "rén wéi", "人种": "rén zhǒng", "认得": "rèn de", "认识": "rèn shi", "认为": "rèn wéi", "恁地": "nèn dì", "日头": "rì tou", "日晕": "rì yùn", "容量": "róng liàng", "溶斗": "róng dòu", "溶血": "róng xuè", "儒将": "rú jiàng", "蠕行": "rú xíng", "乳臭": "rǔ xiù", "辱没": "rǔ mò", "入行": "rù xíng", "软和": "ruǎn huo", "若夫": "ruò fú", "弱冠": "ruò guàn", "撒播": "sǎ bō", "撒布": "sǎ bù", "撒施": "sǎ shī", "塞北": "sài běi", "塞门": "sài mén", "塞外": "sài wài", "塞音": "sè yīn", "塞责": "sè zé", "塞子": "sāi zi", "三藏": "sān zàng", "三更": "sān gēng", "三行": "sān xíng", "三重": "sān chóng", "散兵": "sǎn bīng", "散板": "sǎn bǎn", "散发": "sàn fà", "散工": "sǎn gōng", "散光": "sǎn guāng", "散记": "sǎn jì", "散剂": "sǎn jì", "散架": "sǎn jià", "散见": "sǎn jiàn", "散件": "sǎn jiàn", "散居": "sǎn jū", "散乱": "sǎn luàn", "散漫": "sǎn màn", "散闷": "sàn mèn", "散曲": "sǎn qǔ", "散沙": "sǎn shā", "散射": "sǎn shè", "散碎": "sǎn suì", "散体": "sǎn tǐ", "散文": "sǎn wén", "散装": "sǎn zhuāng", "桑椹": "sāng shèn", "丧服": "sāng fú", "丧假": "sāng jià", "丧礼": "sāng lǐ", "丧乱": "sāng luàn", "丧事": "sāng shì", "丧葬": "sāng zàng", "丧钟": "sāng zhōng", "扫把": "sào bǎ", "扫兴": "sǎo xìng", "扫帚": "sào zhǒu", "色调": "sè diào", "色相": "sè xiàng", "色晕": "sè yùn", "沙参": "shā shēn", "沙拉": "shā là", "沙子": "shā zi", "刹把": "shā bǎ", "刹车": "shā chē", "刹刹": "shā shā", "刹时": "shā shí", "莎草": "suō cǎo", "刹住": "shā zhù", "歃血": "shà xuè", "煞笔": "shā bǐ", "煞车": "shā chē", "煞尾": "shā wěi", "煞住": "shā zhù", "晒场": "shài cháng", "删削": "shān xuē", "姗姗": "shān shān", "膻中": "dàn zhōng", "苫布": "shàn bù", "苫盖": "shàn gài", "扇动": "shān dòng", "扇惑": "shān huò", "扇子": "shàn zi", "善处": "shàn chǔ", "善行": "shàn xíng", "商调": "shāng diào", "上朝": "shàng cháo", "上当": "shàng dàng", "上调": "shàng diào", "上将": "shàng jiàng", "上卷": "shàng juǎn", "上去": "shǎng qù", "上声": "shǎng shēng", "上头": "shàng tou", "上相": "shàng xiàng", "上行": "shàng xíng", "稍为": "shāo wéi", "稍息": "shào xī", "少府": "shào fǔ", "少妇": "shào fù", "少将": "shào jiàng", "少量": "shǎo liàng", "少年": "shào nián", "少女": "shào nǚ", "少尉": "shào wèi", "少相": "shào xiāng", "少小": "shào xiǎo", "少校": "shào xiào", "少爷": "shào yé", "少壮": "shào zhuàng", "哨卡": "shào qiǎ", "舌苔": "shé tāi", "舌头": "shé tou", "蛇行": "shé xíng", "舍得": "shè de", "射干": "yè gàn", "申曲": "shēn qǔ", "身分": "shēn fèn", "身量": "shēn liàng", "深省": "shēn xǐng", "神祇": "shén qí", "神阙": "shén quē", "审查": "shěn zhā", "审处": "shěn chǔ", "审度": "shěn duó", "审干": "shěn gàn", "审校": "shěn jiào", "甚为": "shèn wéi", "慎行": "shèn xíng", "生长": "shēng zhǎng", "生发": "shēng fà", "生还": "shēng huán", "生角": "shēng jué", "生肖": "shēng xiào", "声调": "shēng diào", "声乐": "shēng yuè", "胜朝": "shèng cháo", "渑池": "miǎn chí", "省察": "xǐng chá", "省得": "shěng de", "省亲": "xǐng qīn", "省视": "xǐng shì", "省悟": "xǐng wù", "失当": "shī dàng", "失血": "shī xuè", "失着": "shī zhāo", "师长": "shī zhǎng", "师父": "shī fu", "诗兴": "shī xìng", "施为": "shī wéi", "施行": "shī xíng", "什锦": "shí jǐn", "什物": "shí wù", "石头": "shí tou", "时调": "shí diào", "识记": "zhì jì", "识相": "shí xiàng", "实弹": "shí dàn", "实干": "shí gàn", "实相": "shí xiàng", "实行": "shí xíng", "拾掇": "shí duo", "食量": "shí liàng", "莳萝": "shí luó", "矢量": "shǐ liàng", "使得": "shǐ de", "市长": "shì zhǎng", "事假": "shì jià", "试行": "shì xíng", "适当": "shì dàng", "适量": "shì liàng", "嗜好": "shì hào", "嗜血": "shì xuè", "螫针": "shì zhēn", "手夹": "shǒu jiā", "手相": "shǒu xiàng", "手爪": "shǒu zhǎo", "守分": "shǒu fèn", "守丧": "shǒu sāng", "首长": "shǒu zhǎng", "首相": "shǒu xiàng", "受降": "shòu xiáng", "受累": "shòu lěi", "受难": "shòu nàn", "瘦削": "shòu xuē", "书僮": "shū tóng", "疏浚": "shū jùn", "输血": "shū xuè", "赎当": "shú dàng", "暑假": "shǔ jià", "束发": "shù fà", "树干": "shù gàn", "树杈": "shù chà", "树荫": "shù yīn", "树种": "shù zhǒng", "数九": "shǔ jiǔ", "数量": "shù liàng", "数落": "shǔ luò", "数数": "shuò shuò", "数说": "shǔ shuō", "刷白": "shuà bái", "耍横": "shuǎ hèng", "摔倒": "shuāi dǎo", "摔打": "shuāi dá", "栓塞": "shuān sè", "双重": "shuāng chóng", "水斗": "shuǐ dòu", "水分": "shuǐ fèn", "水浒": "shuǐ hǔ", "水量": "shuǐ liàng", "水栅": "shuǐ shān", "税卡": "shuì qiǎ", "税种": "shuì zhǒng", "睡觉": "shuì jiào", "睡相": "shuì xiàng", "顺差": "shùn chā", "说项": "shuì xiàng", "私处": "sī chǔ", "私斗": "sī dòu", "思量": "sī liang", "死当": "sǐ dàng", "死难": "sǐ nàn", "寺观": "sì guàn", "伺候": "cì hou", "似的": "shì de", "肆行": "sì xíng", "松散": "sōng sǎn", "宋朝": "sòng cháo", "送行": "sòng xíng", "搜查": "sōu zhā", "搜括": "sōu guā", "苏打": "sū dá", "俗曲": "sú qǔ", "素朴": "sù piáo", "宿将": "sù jiàng", "算得": "suàn de", "遂行": "suì xíng", "孙子": "sūn zi", "所得": "suǒ de", "锁钥": "suǒ yuè", "他处": "tā chǔ", "胎发": "tāi fà", "台子": "tái zi", "太冲": "tài chòng", "太监": "tài jiàn", "谈兴": "tán xìng", "谈吐": "tán tǔ", "坦率": "tǎn shuài", "棠棣": "táng dì", "搪塞": "táng sè", "糖弹": "táng dàn", "倘佯": "cháng yáng", "耥耙": "tǎng bà", "躺倒": "tǎng dǎo", "烫发": "tàng fà", "逃奔": "táo bèn", "逃难": "táo nàn", "讨还": "tǎo huán", "套曲": "tào qǔ", "特种": "tè zhǒng", "藤蔓": "téng wàn", "啼血": "tí xuè", "提调": "tí diào", "提防": "dī fáng", "提干": "tí gàn", "提供": "tí gōng", "提溜": "dī liū", "醍醐": "tí hú", "体己": "tī ji", "体量": "tǐ liàng", "剃发": "tì fà", "嚏喷": "tì pen", "天朝": "tiān cháo", "天分": "tiān fèn", "天台": "tiān tāi", "天呀": "tiān yā", "田父": "tián fǔ", "填空": "tián kòng", "佻薄": "tiāo bó", "挑拨": "tiǎo bō", "挑担": "tiāo dàn", "挑灯": "tiǎo dēng", "挑动": "tiǎo dòng", "挑逗": "tiǎo dòu", "挑花": "tiǎo huā", "挑明": "tiǎo míng", "挑弄": "tiǎo nòng", "挑唆": "tiǎo suō", "挑衅": "tiǎo xìn", "挑中": "tiāo zhòng", "挑战": "tiǎo zhàn", "挑子": "tiāo zi", "挑嘴": "tiǎo zuǐ", "条畅": "dí dàng", "条干": "tiáo gàn", "条几": "tiáo jī", "条子": "tiáo zi", "跳踉": "tiào liáng", "铁杆": "tiě gǎn", "铁血": "tiě xuè", "铁椎": "tiě chuí", "帖服": "tiē fú", "听差": "tīng chāi", "庭长": "tíng zhǎng", "挺括": "tǐng guā", "通红": "tòng hóng", "通缉": "tōng jī", "通量": "tōng liàng", "通行": "tōng xíng", "同调": "tóng diào", "同好": "tóng hào", "同量": "tóng liàng", "同种": "tóng zhǒng", "僮仆": "tóng pú", "统率": "tǒng shuài", "痛恶": "tòng wù", "偷空": "tōu kòng", "头儿": "tou er", "头发": "tóu fà", "头子": "tóu zi", "投奔": "tóu bèn", "投弹": "tóu dàn", "投降": "tóu xiáng", "徒长": "tú zhǎng", "土堡": "tǔ pù", "土种": "tǔ zhǒng", "吐蕃": "tǔ bō", "吐口": "tǔ kǒu", "吐露": "tǔ lù", "吐气": "tǔ qì", "吐弃": "tǔ qì", "吐穗": "tǔ suì", "吐絮": "tǔ xù", "吐艳": "tǔ yàn", "吐属": "tǔ shǔ", "吐字": "tǔ zì", "团长": "tuán zhǎng", "退朝": "tuì cháo", "退还": "tuì huán", "退行": "tuì xíng", "褪去": "tùn qù", "褪色": "tuì shǎi", "吞没": "tūn mò", "吞吐": "tūn tǔ", "吞咽": "tūn yàn", "拖累": "tuō lěi", "妥当": "tuǒ dàng", "妥帖": "tuǒ tiē", "拓本": "tà běn", "拓片": "tà piàn", "拓印": "tà yìn", "哇啦": "wā lā", "瓦刀": "wà dāo", "外长": "wài zhǎng", "外传": "wài zhuàn", "外调": "wài diào", "外强": "wài jiāng", "外切": "wài qiē", "外头": "wài tou", "湾泊": "wān bó", "玩兴": "wán xìng", "王朝": "wáng cháo", "王妃": "wáng fēi", "往还": "wǎng huán", "妄为": "wàng wéi", "危难": "wēi nàn", "威吓": "wēi hè", "逶迤": "wēi yí", "微薄": "wēi bó", "微行": "wēi xíng", "为害": "wéi hài", "为患": "wéi huàn", "为难": "wéi nán", "为期": "wéi qī", "为人": "wéi rén", "为生": "wéi shēng", "为时": "wéi shí", "为首": "wéi shǒu", "为数": "wéi shù", "为伍": "wéi wǔ", "为限": "wéi xiàn", "为政": "wéi zhèng", "为止": "wéi zhǐ", "为主": "wéi zhǔ", "为着": "wéi zhe", "圩堤": "wéi dī", "圩垸": "wéi yuàn", "圩子": "wéi zǐ", "委靡": "wěi mǐ", "委蛇": "wēi yí", "未了": "wèi liǎo", "未曾": "wèi zēng", "魏阙": "wèi quē", "文斗": "wén dòu", "文蛤": "wén gé", "问难": "wèn nàn", "莴苣": "wō jù", "喔唷": "ō yō", "窝囊": "wō nāng", "卧倒": "wò dǎo", "乌拉": "wù la", "无处": "wú chǔ", "无间": "wú jiàn", "无量": "wú liàng", "无宁": "wú nìng", "无为": "wú wéi", "无行": "wú xíng", "无着": "wú zhuó", "毋宁": "wú nìng", "吾辈": "wú bèi", "吾侪": "wú chái", "吾人": "wú rén", "吾子": "wú zǐ", "五更": "wǔ gēng", "五行": "wǔ xíng", "午觉": "wǔ jiào", "武斗": "wǔ dòu", "武将": "wǔ jiàng", "武行": "wǔ xíng", "舞曲": "wǔ qǔ", "物种": "wù zhǒng", "误差": "wù chā", "西藏": "xī zàng", "西乐": "xī yuè", "吸着": "xī zhuó", "稀薄": "xī bó", "膝行": "xī xíng", "席卷": "xí juǎn", "喜好": "xǐ hào", "喜兴": "xǐ xìng", "戏曲": "xì qǔ", "系泊": "jì bó", "系带": "jì dài", "系绳": "jì shéng", "细发": "xì fà", "细挑": "xì tāo", "虾蟆": "há má", "下乘": "xià shèng", "下处": "xià chǔ", "下调": "xià diào", "下头": "xià tou", "下行": "xià xíng", "下咽": "xià yàn", "下种": "xià zhǒng", "吓唬": "xià hu", "先行": "xiān xíng", "纤夫": "qiàn fū", "纤手": "qiàn shǒu", "纤绳": "qiàn shéng", "鲜血": "xiān xuè", "闲空": "xián kòng", "闲散": "xián sǎn", "弦乐": "xián yuè", "嫌恶": "xián wù", "显得": "xiǎn de", "县长": "xiàn zhǎng", "现量": "xiàn liàng", "现行": "xiàn xíng", "限量": "xiàn liàng", "献血": "xiàn xuè", "霰弹": "xiàn dàn", "相册": "xiàng cè", "相称": "xiāng chèn", "相处": "xiāng chǔ", "相得": "xiāng de", "相公": "xiàng gōng", "相国": "xiàng guó", "相机": "xiàng jī", "相间": "xiāng jiàn", "相角": "xiàng jiǎo", "相率": "xiāng shuài", "相马": "xiàng mǎ", "相貌": "xiàng mào", "相面": "xiàng miàn", "相片": "xiàng piān", "相扑": "xiàng pū", "相声": "xiàng sheng", "相士": "xiàng shì", "相图": "xiàng tú", "相位": "xiàng wèi", "相纸": "xiàng zhǐ", "相中": "xiāng zhòng", "香槟": "xiāng bīn", "箱笼": "xiāng lǒng", "想头": "xiǎng tou", "巷道": "hàng dào", "巷子": "xiàng zi", "削壁": "xuē bì", "削除": "xuē chú", "削发": "xuē fà", "削价": "xuē jià", "削肩": "xuē jiān", "削减": "xuē jiǎn", "削平": "xuē píng", "削弱": "xuē ruò", "削职": "xuē zhí", "削瘦": "xuē shòu", "削削": "xuē xuē", "骁将": "xiāo jiàng", "宵旰": "xiāo gàn", "消长": "xiāo zhǎng", "销假": "xiāo jià", "销量": "xiāo liàng", "销行": "xiāo xíng", "小传": "xiǎo zhuàn", "小调": "xiǎo diào", "小将": "xiǎo jiàng", "小量": "xiǎo liàng", "小曲": "xiǎo qǔ", "晓得": "xiǎo de", "孝行": "xiào xíng", "肖像": "xiào xiàng", "校场": "jiào chǎng", "校长": "xiào zhǎng", "校点": "jiào diǎn", "校订": "jiào dìng", "校对": "jiào duì", "校改": "jiào gǎi", "校核": "jiào hé", "校勘": "jiào kān", "校验": "jiào yàn", "校样": "jiào yàng", "校阅": "jiào yuè", "校正": "jiào zhèng", "校注": "jiào zhù", "校准": "jiào zhǔn", "邪行": "xié xíng", "偕行": "xié xíng", "泄露": "xiè lòu", "心曲": "xīn qǔ", "心血": "xīn xuè", "芯子": "xìn zǐ", "莘莘": "shēn shēn", "新正": "xīn zhēng", "信差": "xìn chāi", "兴会": "xìng huì", "兴趣": "xìng qù", "兴头": "xìng tou", "兴味": "xìng wèi", "兴致": "xìng zhì", "星宿": "xīng xiù", "星相": "xīng xiàng", "星占": "xīng zhān", "惺忪": "xīng sōng", "腥臊": "xīng sāo", "刑种": "xíng zhǒng", "行板": "xíng bǎn", "行笔": "xíng bǐ", "行草": "xíng cǎo", "行藏": "xíng cáng", "行车": "xíng chē", "行船": "xíng chuán", "行程": "xíng chéng", "行刺": "xíng cì", "行都": "xíng dū", "行动": "xíng dòng", "行东": "xíng dōng", "行房": "xíng fáng", "行贩": "xíng fàn", "行风": "xíng fēng", "行宫": "xíng gōng", "行好": "xíng hǎo", "行号": "háng háo", "行贿": "xíng huì", "行迹": "xíng jì", "行贾": "xíng gǔ", "行将": "xíng jiāng", "行脚": "xíng jiǎo", "行劫": "xíng jié", "行进": "xíng jìn", "行径": "xíng jìng", "行经": "xíng jīng", "行军": "xíng jūn", "行楷": "xíng kǎi", "行款": "xíng kuǎn", "行乐": "xíng lè", "行李": "xíng lǐ", "行礼": "xíng lǐ", "行猎": "xíng liè", "行令": "xíng lìng", "行路": "xíng lù", "行旅": "xíng lǚ", "行囊": "xíng náng", "行年": "xíng nián", "行聘": "xíng pìn", "行骗": "xíng piàn", "行期": "xíng qī", "行乞": "xíng qǐ", "行抢": "xíng qiǎng", "行腔": "xíng qiāng", "行窃": "xíng qiè", "行箧": "xíng qiè", "行人": "xíng rén", "行色": "xíng sè", "行善": "xíng shàn", "行赏": "xíng shǎng", "行省": "xíng shěng", "行时": "xíng shí", "行使": "xíng shǐ", "行驶": "xíng shǐ", "行事": "xíng shì", "行书": "xíng shū", "行署": "xíng shǔ", "行述": "xíng shù", "行唐": "xíng táng", "行头": "xíng tou", "行为": "xíng wéi", "行文": "xíng wén", "行销": "xíng xiāo", "行星": "xíng xīng", "行刑": "xíng xíng", "行行": "xíng xíng", "行凶": "xíng xiōng", "行医": "xíng yī", "行营": "xíng yíng", "行吟": "xíng yín", "行辕": "xíng yuán", "行运": "xíng yùn", "行灶": "xíng zào", "行诈": "xíng zhà", "行栈": "xíng zhàn", "行者": "xíng zhě", "行政": "xíng zhèng", "行止": "xíng zhǐ", "行装": "xíng zhuāng", "行舟": "xíng zhōu", "行状": "xíng zhuàng", "行走": "xíng zǒu", "行踪": "xíng zōng", "幸得": "xìng de", "性行": "xìng xíng", "凶横": "xiōng hèng", "兄长": "xiōng zhǎng", "凶相": "xiōng xiàng", "雄劲": "xióng jìng", "休假": "xiū jià", "修行": "xiū xíng", "羞恶": "xiū wù", "须发": "xū fà", "序曲": "xù qǔ", "畜产": "xù chǎn", "畜牧": "xù mù", "畜圈": "chù juàn", "畜养": "xù yǎng", "絮叨": "xù dáo", "选调": "xuǎn diào", "选曲": "xuǎn qǔ", "选种": "xuǎn zhǒng", "学长": "xué zhǎng", "血癌": "xuè ái", "血案": "xuè àn", "血本": "xuè běn", "血崩": "xuè bēng", "血泊": "xuè pō", "血沉": "xuè chén", "血仇": "xuè chóu", "血防": "xuè fáng", "血汗": "xuè hàn", "血海": "xuè hǎi", "血管": "xuè guǎn", "血痕": "xuè hén", "血红": "xuè hóng", "血花": "xuè huā", "血祭": "xuè jì", "血迹": "xuè jì", "血浆": "xuè jiāng", "血竭": "xuè jié", "血口": "xuè kǒu", "血亏": "xuè kuī", "血泪": "xuè lèi", "血块": "xuè kuài", "血库": "xuè kù", "血流": "xuè liú", "血路": "xuè lù", "血脉": "xuè mài", "血尿": "xuè niào", "血泡": "xuè pào", "血气": "xuè qì", "血亲": "xuè qīn", "血清": "xuè qīng", "血球": "xuè qiú", "血肉": "xuè ròu", "血色": "xuè sè", "血书": "xuè shū", "血栓": "xuè shuān", "血统": "xuè tǒng", "血污": "xuè wū", "血洗": "xuè xǐ", "血水": "xuè shuǐ", "血丝": "xuè sī", "血象": "xuè xiàng", "血腥": "xuè xīng", "血型": "xuè xíng", "血压": "xuè yā", "血虚": "xuè xū", "血性": "xuè xìng", "血液": "xuè yè", "血衣": "xuè yī", "血印": "xuè yìn", "血缘": "xuè yuán", "血债": "xuè zhài", "血晕": "xiě yùn", "血战": "xuè zhàn", "血证": "xuè zhèng", "血肿": "xuè zhǒng", "血渍": "xuè zì", "寻思": "xín sī", "巡查": "xún zhā", "巡行": "xún xíng", "巡更": "xún gēng", "询查": "xún zhā", "丫杈": "yā chà", "殉难": "xùn nàn", "压板": "yà bǎn", "丫头": "yā tou", "压倒": "yā dǎo", "压轴": "yā zhòu", "呀呀": "yā yā", "押当": "yā dàng", "押解": "yā jiè", "押头": "yā tou", "桠杈": "yā chà", "哑哑": "yā yā", "雅乐": "yǎ yuè", "雅量": "yǎ liàng", "雅兴": "yǎ xìng", "咽喉": "yān hóu", "咽气": "yàn qì", "咽头": "yān tóu", "咽炎": "yān yán", "淹没": "yān mò", "湮没": "yān mò", "湮灭": "yān miè", "腌臜": "ā zā", "严查": "yán zhā", "严处": "yán chǔ", "芫荽": "yán sui", "言行": "yán xíng", "盐分": "yán fèn", "奄然": "yǎn rán", "奄忽": "yǎn hū", "奄奄": "yǎn yǎn", "厌恶": "yàn wù", "砚台": "yàn tāi", "验查": "yàn zhā", "验血": "yàn xuè", "燕京": "yān jīng", "燕麦": "yān mài", "燕山": "yān shān", "燕赵": "yān zhào", "燕子": "yàn zi", "扬场": "yáng cháng", "羊圈": "yáng juàn", "洋相": "yáng xiàng", "仰给": "yǎng jǐ", "养分": "yǎng fèn", "吆喝": "yāo he", "妖娆": "yāo ráo", "腰杆": "yāo gǎn", "腰俞": "yāo yú", "繇役": "yáo yì", "窈窕": "yǎo tiǎo", "要得": "yào de", "要好": "yāo hǎo", "要击": "yāo jī", "要求": "yāo qiú", "要塞": "yào sài", "要挟": "yāo xié", "耶教": "yē jiào", "耶稣": "yē sū", "叶鞘": "yè qiào", "叶韵": "xié yùn", "叶子": "yè zi", "夜曲": "yè qǔ", "夜行": "yè xíng", "一撮": "yī zuǒ", "一得": "yī de", "一度": "yí dù", "一发": "yī fà", "一服": "yī fù", "一个": "yí gè", "一晃": "yī huǎng", "一觉": "yī jiào", "一宿": "yī xiǔ", "一行": "yī xíng", "一应": "yī yīng", "一种": "yī zhǒng", "伊吾": "yī wú", "衣冠": "yì guān", "衣着": "yī zhuó", "咿呀": "yī yā", "遗少": "yí shào", "以还": "yǐ huán", "以为": "yǐ wéi", "义行": "yì xíng", "役畜": "yì xù", "意兴": "yì xìng", "臆度": "yì duó", "阴干": "yīn gàn", "荫蔽": "yīn bì", "荫翳": "yīn yì", "音调": "yīn diào", "音乐": "yīn yuè", "音量": "yīn liàng", "殷红": "yān hóng", "吟哦": "yín é", "引得": "yǐn de", "引种": "yǐn zhǒng", "饮弹": "yǐn dàn", "印行": "yìn xíng", "应当": "yīng dāng", "应得": "yīng de", "应分": "yīng fèn", "应和": "yìng hè", "应该": "yīng gāi", "应届": "yīng jiè", "应声": "yīng shēng", "应许": "yīng xǔ", "应有": "yīng yǒu", "应允": "yīng yǔn", "鹰爪": "yīng zhǎo", "荥阳": "xíng yáng", "赢得": "yíng de", "影调": "yǐng diào", "影片": "yǐng piān", "佣工": "yōng gōng", "佣人": "yōng rén", "拥塞": "yōng sè", "壅塞": "yōng sè", "用处": "yòng chǔ", "忧闷": "yōu mèn", "由得": "yóu de", "由头": "yóu tou", "犹疑": "yóu nǐ", "邮差": "yóu chāi", "油坊": "yóu fáng", "柚木": "yóu mù", "有得": "yǒu de", "有为": "yǒu wéi", "有种": "yǒu zhǒng", "右行": "yòu xíng", "诱降": "yòu xiáng", "淤塞": "yū sè", "淤血": "yū xuè", "瘀血": "yū xuè", "于思": "yú sāi", "余量": "yú liàng", "余切": "yú qiē", "余兴": "yú xìng", "於菟": "wū tú", "鱼肚": "yú dǔ", "鱼种": "yú zhǒng", "俞允": "yú yǔn", "逾分": "yú fèn", "愚氓": "yú méng", "瑜伽": "yú jiā", "与会": "yù huì", "与闻": "yù wén", "雨量": "yǔ liàng", "语调": "yǔ diào", "语塞": "yǔ sè", "语种": "yǔ zhǒng", "吁请": "yù qǐng", "吁求": "yù qiú", "芋头": "yù tou", "育种": "yù zhǒng", "郁闷": "yù mèn", "浴血": "yù xuè", "预行": "yù xíng", "元朝": "yuán cháo", "元曲": "yuán qǔ", "原处": "yuán chǔ", "缘簿": "yuán bù", "远行": "yuǎn xíng", "月氏": "ròu zhī", "月相": "yuè xiàng", "月晕": "yuè yùn", "钥匙": "yào shi", "云量": "yún liàng", "匀称": "yún chèn", "允当": "yǔn dàng", "运量": "yùn liàng", "运行": "yùn xíng", "运载": "yùn zài", "运转": "yùn zhuàn", "晕场": "yùn chǎng", "晕车": "yùn chē", "晕池": "yùn chí", "晕船": "yùn chuán", "晕倒": "yūn dǎo", "晕高": "yùn gāo", "晕针": "yùn zhēn", "韵调": "yùn diào", "熨帖": "yù tiē", "杂处": "zá chǔ", "杂种": "zá zhǒng", "灾难": "zāi nàn", "栽倒": "zāi dǎo", "宰相": "zǎi xiàng", "载波": "zài bō", "载荷": "zài hè", "载货": "zài huò", "载频": "zài pín", "载运": "zài yùn", "载重": "zài zhòng", "再行": "zài xíng", "在朝": "zài cháo", "咱家": "zá jiā", "咱们": "zán men", "攒动": "cuán dòng", "攒盒": "cuán hé", "攒集": "cuán jí", "攒聚": "cuán jù", "攒眉": "cuán méi", "攒射": "cuán shè", "暂行": "zàn xíng", "臧否": "zāng pǐ", "遭难": "zāo nàn", "早朝": "zǎo cháo", "灶头": "zào tou", "择菜": "zhái cài", "择席": "zhái xí", "责令": "zé lìng", "责打": "zé dǎ", "责难": "zé nàn", "责任": "zé rèn", "曾祖": "zēng zǔ", "曾孙": "zēng sūn", "增长": "zēng zhǎng", "增量": "zēng liàng", "憎恶": "zēng wù", "咋舌": "zé shé", "扎染": "zā rǎn", "扎挣": "zhá zhēng", "轧钢": "zhá gāng", "诈降": "zhà xiáng", "栅极": "shān jí", "炸弹": "zhà dàn", "炸糕": "zhá gāo", "炸酱": "zhá jiàng", "粘结": "nián jié", "占卜": "zhān bǔ", "占卦": "zhān guà", "占课": "zhān kè", "占梦": "zhān mèng", "占星": "zhān xīng", "战将": "zhàn jiàng", "战斗": "zhàn dòu", "站长": "zhàn zhǎng", "帐簿": "zhàng bù", "账簿": "zhàng bù", "招降": "zhāo xiáng", "招徕": "zhāo lái", "找头": "zhǎo tou", "兆头": "zhào tou", "照片": "zhào piān", "照相": "zhào xiàng", "遮荫": "zhē yīn", "折本": "shé běn", "折秤": "shé chèng", "折堕": "shé duò", "折耗": "shé hào", "折辱": "shé rǔ", "折损": "shé sǔn", "折腾": "zhē téng", "折头": "zhé tou", "折衷": "shé zhōng", "这些": "zhèi xiē", "侦查": "zhēn zhā", "侦缉": "zhēn jī", "真率": "zhēn shuài", "真相": "zhēn xiàng", "枕头": "zhěn tou", "争得": "zhēng de", "争斗": "zhēng dòu", "征调": "zhēng diào", "挣揣": "zhèng chuài", "挣扎": "zhēng zhá", "正传": "zhèng zhuàn", "正旦": "zhēng dàn", "正切": "zhèng qiē", "正朔": "zhēng shuò", "正行": "zhèng xíng", "正月": "zhēng yuè", "症结": "zhēng jié", "支差": "zhī chāi", "支吾": "zhī wú", "吱扭": "zī niǔ", "枝杈": "zhī chà", "枝干": "zhī gàn", "枝蔓": "zhī wàn", "知了": "zhī liǎo", "执拗": "zhí niù", "执著": "zhí zhuó", "执行": "zhí xíng", "执着": "zhí zhuó", "直率": "zhí shuài", "直行": "zhí xíng", "值当": "zhí dàng", "值得": "zhí de", "止血": "zhǐ xuè", "只当": "zhǐ dāng", "只得": "zhǐ de", "只顾": "zhǐ gù", "只好": "zhǐ hǎo", "只管": "zhǐ guǎn", "只怕": "zhǐ pà", "只能": "zhǐ néng", "只是": "zhǐ shì", "只消": "zhǐ xiāo", "只要": "zhǐ yào", "只有": "zhǐ yǒu", "纸夹": "zhǐ jiā", "指缝": "zhǐ féng", "指头": "zhǐ tou", "至为": "zhì wéi", "治丧": "zhì sāng", "质量": "zhì liàng", "质朴": "zhì piáo", "中标": "zhòng biāo", "中彩": "zhòng cǎi", "中弹": "zhòng dàn", "中都": "zhōng dōu", "中毒": "zhòng dú", "中风": "zhòng fēng", "中计": "zhòng jì", "终了": "zhōng liǎo", "衷曲": "zhōng qǔ", "种别": "zhǒng bié", "种草": "zhǒng cǎo", "种差": "zhǒng chà", "种蛋": "zhǒng dàn", "种类": "zhǒng lèi", "种麻": "zhǒng má", "种马": "zhǒng mǎ", "种禽": "zhǒng qín", "种群": "zhǒng qún", "种系": "zhǒng xì", "种姓": "zhǒng xìng", "种畜": "zhǒng chù", "种种": "zhǒng zhǒng", "种籽": "zhǒng zǐ", "种子": "zhǒng zi", "种族": "zhǒng zú", "重版": "chóng bǎn", "重播": "chóng bō", "重唱": "chóng chàng", "重创": "zhòng chuāng", "重出": "chóng chū", "重担": "zhòng dàn", "重弹": "chóng tán", "重叠": "chóng dié", "重返": "chóng fǎn", "重犯": "chóng fàn", "重逢": "chóng féng", "重复": "chóng fù", "重光": "chóng guāng", "重合": "chóng hé", "重荷": "zhòng hè", "重婚": "chóng hūn", "重建": "chóng jiàn", "重九": "chóng jiǔ", "重聚": "chóng jù", "重量": "zhòng liàng", "重拍": "chóng pāi", "重庆": "chóng qìng", "重申": "chóng shēn", "重审": "chóng shěn", "重生": "chóng shēng", "重述": "chóng shù", "重数": "chóng shù", "重提": "chóng tí", "重孙": "chóng sūn", "重头": "chóng tóu", "重围": "chóng wéi", "重温": "chóng wēn", "重现": "chóng xiàn", "重霄": "chóng xiāo", "重新": "chóng xīn", "重行": "chóng xíng", "重修": "chóng xiū", "重演": "chóng yǎn", "重阳": "chóng yáng", "重洋": "chóng yáng", "重译": "chóng yì", "重印": "chóng yìn", "重影": "chóng yǐng", "重映": "chóng yìng", "重圆": "chóng yuán", "重载": "zhòng zài", "重责": "zhòng zé", "重重": "chóng chóng", "重奏": "chóng zòu", "州长": "zhōu zhǎng", "周正": "zhōu zhēng", "主调": "zhǔ diào", "主干": "zhǔ gàn", "主角": "zhǔ jué", "主将": "zhǔ jiàng", "助长": "zhù zhǎng", "助兴": "zhù xìng", "抓差": "zhuā chāi", "抓斗": "zhuā dòu", "爪哇": "zhǎo wā", "爪牙": "zhǎo yá", "专差": "zhuān chāi", "专横": "zhuān hèng", "转调": "zhuǎn diào", "转动": "zhuàn dòng", "转干": "zhuǎn gàn", "转筋": "zhuàn jīn", "转矩": "zhuàn jǔ", "转炉": "zhuàn lú", "转轮": "zhuàn lún", "转门": "zhuàn mén", "转磨": "zhuàn mò", "转圈": "zhuàn quān", "转速": "zhuàn sù", "转台": "zhuàn tái", "转文": "zhuǎi wén", "转椅": "zhuàn yǐ", "转悠": "zhuàn yōu", "转圜": "zhuǎn huán", "转子": "zhuàn zǐ", "赚头": "zhuàn tou", "赚得": "zuàn de", "撰著": "zhuàn zhe", "幢幢": "chuáng chuáng", "追查": "zhuī zhā", "追还": "zhuī huán", "追缉": "zhuī jī", "准将": "zhǔn jiàng", "准头": "zhǔn tou", "拙朴": "zhuō piáo", "茁长": "zhuó zhǎng", "酌处": "zhuó chǔ", "酌量": "zhuó liàng", "着边": "zhuó biān", "着凉": "zháo liáng", "着迷": "zháo mí", "着数": "zhāo shù", "着意": "zhuó yì", "仔鸡": "zǐ jī", "仔肩": "zǐ jiān", "仔密": "zǐ mì", "仔细": "zǐ xì", "仔畜": "zǐ chù", "仔猪": "zǐ zhū", "仔鱼": "zǐ yú", "趑趄": "zī jū", "籽种": "zǐ zhǒng", "子弹": "zǐ dàn", "字调": "zì diào", "字模": "zì mú", "字帖": "zì tiè", "自传": "zì zhuàn", "自给": "zì jǐ", "自矜": "zì jīn", "自禁": "zì jīn", "自量": "zì liàng", "自省": "zì xǐng", "自行": "zì xíng", "自转": "zì zhuàn", "总长": "zǒng zhǎng", "总得": "zǒng děi", "总量": "zǒng liàng", "总行": "zǒng xíng", "走调": "zǒu diào", "奏乐": "zòu yuè", "租种": "zū zhǒng", "阻难": "zǔ nàn", "阻塞": "zǔ sè", "组分": "zǔ fèn", "组曲": "zǔ qǔ", "钻洞": "zuān dòng", "钻杆": "zuàn gǎn", "钻劲": "zuān jìn", "钻孔": "zuān kǒng", "钻谋": "zuān móu", "钻探": "zuān tàn", "钻心": "zuān xīn", "钻研": "zuān yán", "钻营": "zuān yíng", "罪行": "zuì xíng", "遵行": "zūn xíng", "作坊": "zuō fang", "作乐": "zuò yuè", "作弄": "zuō nòng", "作曲": "zuò qǔ", "作为": "zuò wéi", "坐禅": "zuò chán", "柞蚕": "zuò cán" }, { "阿比让": "ā bǐ ràng", "阿波罗": "ā bō luó", "阿昌族": "ā chāng zú", "阿的平": "ā dì píng", "阿房宫": "ē páng gōng", "阿富汗": "ā fù hàn", "阿根廷": "ā gēn tíng", "阿里山": "ā lǐ shān", "阿罗汉": "ā luó hàn", "矮个子": "ǎi gè zi", "安魂曲": "ān hún qǔ", "拗不过": "niù bù guò", "八行书": "bā háng shū", "白干儿": "bái gān ér", "百夫长": "bǎi fū zhǎng", "柏拉图": "bó lā tú", "蚌埠市": "bèng bù shì", "饱和点": "bǎo huó diǎn", "保得住": "bǎo de zhù", "背黑锅": "bēi hēi guō", "奔头儿": "bèn tou er", "鼻咽癌": "bí yān ái", "笔杆儿": "bǐ gǎn ér", "避风头": "bì fēng tou", "变奏曲": "biàn zòu qǔ", "玻璃钢": "bō li gāng", "不倒翁": "bù dǎo wēng", "不点儿": "bù diǎn er", "不更事": "bù gēng shì", "不见得": "bú jiàn de", "不一定": "bù yí dìng", "不由得": "bù yóu de", "不在乎": "bù zài hu", "不粘锅": "bù nián guō", "参谋长": "cān móu zhǎng", "藏红花": "zàng hóng huā", "差一点": "chà yì diǎn", "昌都县": "chāng dōu xiàn", "朝鲜族": "cháo xiǎn zú", "车行道": "chē háng dào", "吃得开": "chī de kāi", "吃得来": "chī de lái", "吃得消": "chī de xiāo", "吃得下": "chī de xià", "吃得住": "chī de zhù", "充其量": "chōng qí liàng", "冲盹儿": "chòng dǔn er", "冲劲儿": "chòng jìn er", "臭架子": "chòu jià zi", "揣手儿": "chuāi shǒu er", "船夫曲": "chuán fū qǔ", "创牌子": "chuàng pái zi", "酢浆草": "cù jiāng cǎo", "醋劲儿": "cù jìn er", "催泪弹": "cuī lèi dàn", "催眠曲": "cuī mián qǔ", "催吐剂": "cuī tǔ jì", "寸劲儿": "cùn jìn er", "达姆弹": "dá mǔ dàn", "打板子": "dǎ bǎn zi", "打底子": "dǎ dǐ zi", "打哆嗦": "dǎ duō suo", "打拍子": "dǎ pāi zi", "大堡礁": "dà pù jiāo", "大伯子": "dà bǎi zǐ", "大换血": "dà huàn xuè", "大家伙": "dà jiā huo", "大帽子": "dà mào zi", "大嫂子": "dà sǎo zi", "大师傅": "dà shī fū", "大行星": "dà háng xīng", "大轴子": "dà zhòu zǐ", "担担面": "dàn dan miàn", "当间儿": "dāng jiàn ér", "当口儿": "dāng kǒu er", "倒春寒": "dǎo chūn hán", "倒好儿": "dǎo hǎo ér", "倒胃口": "dǎo wèi kǒu", "倒栽葱": "dǎo zāi cōng", "低血糖": "dī xuè táng", "滴溜儿": "dī liù ér", "丁点儿": "dīng diǎn er", "钉齿耙": "dīng chǐ bà", "顶呱呱": "dǐng guā guā", "定冠词": "dìng guàn cí", "东三省": "dōng sān xǐng", "都柏林": "dōu bó lín", "斗蟋蟀": "dòu xī shuài", "豆腐干": "dòu fǔ gàn", "豆角儿": "dòu jué ér", "逗闷子": "dòu mèn zǐ", "对得起": "duì de qǐ", "对得住": "duì de zhù", "对着干": "duì zhe gàn", "多弹头": "duō dàn tóu", "二人转": "èr rén zhuàn", "发横财": "fā hèng cái", "发行量": "fā xíng liàng", "犯不着": "fàn bù zháo", "犯得上": "fàn děi shàng", "犯得着": "fàn de zháo", "飞将军": "fēi jiàng jūn", "肺活量": "fèi huó liàng", "分子量": "fèn zǐ liàng", "伽利略": "jiā lì lüè", "嘎嘣脆": "gā bēng cuì", "嘎渣儿": "gā zhā ér", "干打垒": "gàn dǎ lěi", "干瞪眼": "gàn dèng yǎn", "干电池": "gàn diàn chí", "干酵母": "gàn jiào mǔ", "干什么": "gàn shén me", "干性油": "gàn xìng yóu", "干着急": "gān zháo jí", "赶得及": "gǎn de jí", "赶得上": "gǎn děi shàng", "赶浪头": "gǎn làng tóu", "高丽参": "gāo lí shēn", "鸽子笼": "gē zi lóng", "搁不住": "gé bú zhù", "搁得住": "gé de zhù", "歌舞伎": "gē wǔ jì", "个头儿": "gè tou er", "给面子": "gěi miàn zi", "更年期": "gēng nián qī", "工作量": "gōng zuò liàng", "公切线": "gōng qiē xiàn", "功劳簿": "gōng láo bù", "够劲儿": "gòu jìn er", "骨朵儿": "gū duǒ er", "鼓囊囊": "gǔ nāng nang", "呱呱叫": "guā guā jiào", "国子监": "guó zǐ jiàn", "过得硬": "guò de yìng", "过得去": "guò děi qù", "过家家": "guō jiā jiā", "过日子": "guò rì zi", "哈巴狗": "hǎ bā gǒu", "孩子头": "hái zi tóu", "孩子王": "hái zi wáng", "汉堡包": "hàn pù bāo", "汗褂儿": "hàn guà er", "好日子": "hǎo rì zi", "喝倒彩": "hè dào cǎi", "合得来": "hé de lái", "和稀泥": "huò xī ní", "红澄澄": "hóng deng deng", "红帽子": "hóng mào zi", "红彤彤": "hóng tōng tōng", "呼啦啦": "hū lā lā", "胡萝卜": "hú luó bo", "虎而冠": "hǔ ér guàn", "户口簿": "hù kǒu bù", "护士长": "hù shì zhǎng", "华达呢": "huá dá ní", "哗啦啦": "huā lā lā", "划不来": "huá bù lái", "划得来": "huá de lái", "话把儿": "huà bà er", "坏血病": "huài xuè bìng", "幻想曲": "huàn xiǎng qǔ", "灰蒙蒙": "huī mēng méng", "回旋曲": "huí xuán qǔ", "惠更斯": "huì gēng sī", "混日子": "hùn rì zi", "鸡内金": "jī nà jīn", "夹竹桃": "jiā zhú táo", "架子车": "jià zi chē", "间奏曲": "jiàn zòu qǔ", "见世面": "xiàn shì miàn", "降雨量": "jiàng yǔ liàng", "交响乐": "jiāo xiǎng yuè", "交响曲": "jiāo xiǎng qǔ", "节骨眼": "jiē gǔ yǎn", "节假日": "jié jià rì", "进给量": "jìn jǐ liàng", "禁不起": "jīn bù qǐ", "禁不住": "jīn bú zhù", "禁得起": "jīn de qǐ", "禁得住": "jīn de zhù", "九重霄": "jiǔ chóng xiāo", "卷笔刀": "juǎn bǐ dāo", "卷铺盖": "juǎn pū gài", "爵士乐": "jué shì yuè", "嚼舌头": "jiáo shé tou", "卡脖子": "qiǎ bó zi", "开小差": "kāi xiǎo chāi", "侃大山": "kǎn tài shān", "看得起": "kàn de qǐ", "看样子": "kàn yàng zi", "考勤簿": "kǎo qín bù", "靠得住": "kào de zhù", "科教片": "kē jiào piān", "可的松": "kě dì sōng", "空包弹": "kōng bāo dàn", "空架子": "kōng jià zi", "口头禅": "kǒu tóu chán", "狂想曲": "kuáng xiǎng qǔ", "坤角儿": "kūn jué ér", "拉家常": "lá jiā cháng", "劳什子": "láo shí zǐ", "老来少": "lǎo lái shào", "老头儿": "lǎo tou er", "老头子": "lǎo tóu zi", "莲花落": "lián huā lào", "练习曲": "liàn xí qǔ", "两边倒": "liǎng biān dǎo", "了不得": "liǎo bù dé", "了不起": "liǎo bù qǐ", "了望台": "liào wàng tái", "尥蹶子": "liào jué zǐ", "列车长": "liè chē zhǎng", "林荫道": "lín yīn dào", "灵长目": "líng zhǎng mù", "溜肩膀": "liū jiān bǎng", "龙虎斗": "lóng hǔ dòu", "龙爪槐": "lóng zhǎo huái", "露马脚": "lòu mǎ jiǎo", "露一手": "lòu yī shǒu", "捋虎须": "luō hǔ xū", "买得起": "mǎi de qǐ", "铆劲儿": "mǎo jìn er", "没奈何": "mò nài hé", "没谱儿": "méi pǔ er", "闷沉沉": "mèn chén chén", "闷罐车": "mèn guàn chē", "闷葫芦": "mèn hú lú", "闷头儿": "mèn tou er", "闷子车": "mèn zǐ chē", "蒙古包": "měng gǔ bāo", "蒙古族": "měng gǔ zú", "蒙蒙亮": "méng mēng liàng", "蒙蒙黑": "mēng mēng hēi", "明晃晃": "míng huǎng huǎng", "摸不着": "mō bù zháo", "抹不开": "mò bù kāi", "抹脖子": "mǒ bó zi", "哪会儿": "něi huì er", "内切圆": "nèi qiē yuán", "那么些": "nà mǒ xiē", "那么着": "nà me zhāo", "脑溢血": "nǎo yì xuè", "闹哄哄": "nào hōng hǒng", "闹嚷嚷": "nào rāng rang", "泥娃娃": "ní wá wa", "凝血酶": "níng xuè méi", "努劲儿": "nǔ jìn er", "拍纸簿": "pāi zhǐ bù", "排子车": "pǎi zǐ chē", "炮子儿": "pào zǐ er", "碰钉子": "pèng dìng zǐ", "碰头会": "pèng tóu kuài", "琵琶行": "pí pá xíng", "迫击炮": "pǎi jī pào", "铺盖卷": "pū gài juǎn", "奇函数": "jī hán shù", "铅玻璃": "qiān bō li", "前奏曲": "qián zòu qǔ", "枪杆子": "qiāng gǎn zi", "悄没声": "qiǎo méi shēng", "敲竹杠": "qiāo zhū gàng", "瞧得起": "qiáo de qǐ", "翘辫子": "qiào biàn zi", "亲家公": "qìng jiā gōng", "亲家母": "qìng jiā mǔ", "轻量级": "qīng liàng jí", "曲别针": "qǔ bié zhēn", "曲颈甑": "qǔ jǐng zèng", "燃烧弹": "rán shāo dàn", "热得快": "rè de kuài", "人行道": "rén xíng dào", "日记簿": "rì jì bù", "软着陆": "ruǎn zhuó lù", "撒呓挣": "sā yì zhēng", "赛璐玢": "sài lù bīn", "三班倒": "sān bān dǎo", "三部曲": "sān bù qǔ", "三连冠": "sān lián guàn", "散摊子": "sàn tān zi", "傻劲儿": "shǎ jìn er", "煞风景": "shā fēng jǐng", "扇风机": "shān fēng jī", "上辈子": "shàng bèi zi", "少不得": "shào bù dé", "少不了": "shào bù liǎo", "少奶奶": "shào nǎi nai", "少年行": "shào nián xíng", "少女装": "shào nǚ zhuāng", "舍不得": "shě bù dé", "生长期": "shēng zhǎng qī", "生死簿": "shēng sǐ bù", "狮子会": "shī zi huì", "狮子头": "shī zi tóu", "什件儿": "shí jiàn ér", "石狮子": "shí shī zi", "石子儿": "shí zǐ er", "屎壳郎": "shǐ ke làng", "士大夫": "shì dà fū", "数不清": "shǔ bù qīng", "数不着": "shǔ bù zháo", "数得上": "shǔ děi shàng", "数得着": "shǔ de zháo", "数来宝": "shǔ lái bǎo", "耍笔杆": "shuǎ bǐ gǎn", "栓皮栎": "shuān pí lì", "水漂儿": "shuǐ piǎo ér", "说不着": "shuō bù zháo", "说得来": "shuō de lái", "说头儿": "shuō tou er", "司务长": "sī wù zhǎng", "死劲儿": "sǐ jìng er", "缩砂密": "sù shā mì", "塔什干": "tǎ shí gàn", "台柱子": "tái zhù zi", "谈得来": "tán de lái", "糖萝卜": "táng luó bo", "挑大梁": "tiǎo dà liáng", "跳房子": "tiào fáng zi", "亭子间": "tíng zi jiān", "土疙瘩": "tǔ gē da", "吐谷浑": "tǔ yù hún", "吐绶鸡": "tǔ shòu jī", "团团转": "tuán tuán zhuàn", "娃娃亲": "wá wa qīn", "瓦岗军": "wǎ gāng jūn", "万户侯": "wàn hù hòu", "为什么": "wéi shèn mǒ", "文曲星": "wén qǔ xīng", "物理量": "wù lǐ liàng", "西洋参": "xī yáng shēn", "吸血鬼": "xī xuè guǐ", "习字簿": "xí zì bù", "戏班子": "xì bān zi", "弦切角": "xián qiē jiǎo", "湘妃竹": "xiāng fēi zhú", "小萝卜": "xiǎo luó bo", "小数点": "xiǎo shǔ diǎn", "协奏曲": "xié zòu qǔ", "信号弹": "xìn hào dàn", "信皮儿": "xìn pí er", "行不通": "xíng bù tōng", "行方便": "xíng fāng biàn", "羞答答": "xiū dā dā", "畜牧场": "xù mù chǎng", "宣传弹": "xuān chuán dàn", "血吸虫": "xuè xī chóng", "血细胞": "xuè xì bāo", "血小板": "xuè xiǎo bǎn", "血友病": "xuè yǒu bìng", "压根儿": "yà gēn ér", "鸭绿江": "yā lù jiāng", "咽峡炎": "yān xiá yán", "烟卷儿": "yān juǎn ér", "烟幕弹": "yān mù dàn", "燕麦粥": "yān mài zhōu", "摇滚乐": "yáo gǔn yuè", "摇篮曲": "yáo lán qǔ", "要面子": "yào miàn zi", "耶和华": "yē hé huá", "曳光弹": "yè guāng dàn", "一边倒": "yī biān dǎo", "一场空": "yī cháng kōng", "一刀切": "yī dāo qiē", "一溜儿": "yī liù ér", "一溜烟": "yī liú yān", "一掊土": "yī póu tǔ", "仡佬族": "gē lǎo zú", "阴着儿": "yīn zhāo ér", "应声虫": "yìng shēng chóng", "咏叹调": "yǒng tàn diào", "有日子": "yǒu rì zi", "雨夹雪": "yǔ jiā xuě", "运输量": "yùn shū liàng", "晕高儿": "yūn gāo ér", "晕乎乎": "yùn hū hū", "载重量": "zài zhòng liàng", "怎么着": "zěn me zhāo", "炸丸子": "zhá wán zǐ", "粘合剂": "nián hé jì", "招待会": "zhāo dāi huì", "照明弹": "zhào míng dàn", "折跟头": "zhē gēn tou", "这么些": "zhè mǒ xiē", "这么着": "zhè me zhāo", "正电荷": "zhèng diàn hè", "支着儿": "zhī zhāo ér", "直撅撅": "zhí juē juē", "只不过": "zhǐ bù guò", "指甲盖": "zhǐ jiá gài", "众生相": "zhòng shēng xiàng", "重孙女": "chóng sūn nǚ", "爪尖儿": "zhuǎ jiān er", "着眼点": "zhuó yǎn diǎn", "着重号": "zhuó zhòng hào", "子母弹": "zǐ mǔ dàn", "自个儿": "zì gě ér", "奏鸣曲": "zòu míng qǔ", "租庸调": "zū yōng diào", "钻空子": "zuān kòng zi", "钻天杨": "zuān tiān yáng", "柞丝绸": "zuò sī chóu" }, { "阿党相为": "ē dǎng xiāng wéi", "阿尔及尔": "ā ěr jí ěr", "阿狗阿猫": "ā gǒu ā māo", "阿姑阿翁": "ā gū ā wēng", "阿基米德": "ā jī mǐ dé", "阿家阿翁": "ā gū ā wēng", "阿娇金屋": "ā jiāo jīn wū", "阿鲁巴岛": "ā lǔ bā dǎo", "阿猫阿狗": "ā māo ā gǒu", "阿毗地狱": "ā pí dì yù", "阿平绝倒": "ā píng jué dǎo", "阿其所好": "ē qí suǒ hào", "阿塞拜疆": "ā sāi bài jiāng", "唉声叹气": "āi shēng tàn qì", "挨风缉缝": "āi fēng jī fèng", "挨家挨户": "āi ji āi hù", "挨肩并足": "āi jiān bìng zú", "挨肩擦背": "āi jiān cā bèi", "挨肩擦膀": "āi jiān cā bǎng", "挨肩擦脸": "āi jiān cā liǎn", "挨肩搭背": "āi jiān dā bèi", "挨肩迭背": "āi jiān dié bèi", "挨肩叠背": "āi jiān dié bèi", "挨门挨户": "āi mén āi hù", "挨门逐户": "āi mén zhú hù", "挨三顶五": "āi sān dǐng wǔ", "挨山塞海": "āi shān sè hǎi", "捱风缉缝": "āi fēng qī fèng", "矮人观场": "ǎi rén guān cháng", "矮子观场": "ǎi zǐ guān cháng", "爱人好士": "ài rén hào shì", "爱生恶死": "ài shēng wù sǐ", "安步当车": "ān bù dàng chē", "安常处顺": "ān cháng chǔ shùn", "安老怀少": "ān lǎo huái shào", "安身为乐": "ān shēn wéi lè", "安时处顺": "ān shí chǔ shùn", "按捺不住": "àn nà bù zhù", "按行自抑": "àn xíng zì yì", "按辔徐行": "àn pèi xú xíng", "暗斗明争": "àn dòu míng zhēng", "暗箭中人": "àn jiàn zhòng rén", "昂昂自若": "áng áng zì roò", "敖不可长": "ào bù kě zhǎng", "熬更守夜": "áo gēng shǒu yè", "鳌鸣鳖应": "áo míng biē yīng", "傲不可长": "ào bù kě zhǎng", "傲霜斗雪": "ào shuāng dòu xuě", "八大山人": "bā tài shān rén", "八难三灾": "bā nàn sān zāi", "八旗子弟": "bā qí zi dì", "巴巴结结": "bā bā jiē jiē", "扒耳搔腮": "pá ěr sāo sāi", "拔本塞原": "bá běn sè yuán", "拔本塞源": "bá běn sè yuán", "拔锅卷席": "bá guō juǎn xí", "把玩无厌": "bǎ wán wǔ yàn", "罢黜百家": "bā chù bǎi jiā", "白不呲咧": "bái bù cī liě", "白藋同心": "bái diào tóng xīn", "白袷蓝衫": "bái jiá lán shān", "白旄黄钺": "bái máo huáng yuè", "白首相知": "bái shǒu xiāng zhī", "白首为郎": "bái shǒu wéi láng", "白首相庄": "bái shǒu xiāng zhuāng", "白衣卿相": "bái yī qīng xiàng", "百不当一": "bǎi bù dāng yī", "百川朝海": "bǎi chuān cháo hǎi", "百堕俱举": "bǎi huī jù jǔ", "百发百中": "bǎi fā bǎi zhòng", "百孔千创": "bǎi kǒng qiān chuāng", "百了千当": "bǎi liǎo qiān dāng", "百鸟朝凤": "bǎi niǎo cháo fèng", "百舍重茧": "bǎi shè chóng jiǎn", "百舍重趼": "bǎi shè chóng jiǎn", "百兽率舞": "bǎi shòu shuài wǔ", "百下百着": "bǎi xià bǎi zháo", "百中百发": "bǎi zhòng bǎi fā", "败德辱行": "bài dé rǔ xíng", "败国丧家": "bài guó sàng jiā", "败军之将": "bài jūn zhī jiàng", "拜将封侯": "bài jiàng fēng hóu", "班师回朝": "bān shī huí cháo", "板上钉钉": "bǎn shàng dìng dīng", "半半拉拉": "bàn bàn lā lā", "半筹莫展": "bàn chóu mò chǎn", "半间半界": "bàn gān bàn gà", "半间不界": "bàn gān bù gà", "半上落下": "bàn shàng luò xià", "半吐半露": "bàn tǔ bàn lù", "半吞半吐": "bàn tūn bàn tǔ", "帮闲钻懒": "bāng xián zuān lǎn", "膀大腰圆": "bǎng dà yāo yuán", "傍若无人": "páng ruò wú rén", "褒贬与夺": "bǎo biǎn yǔ duó", "抱残守阙": "bào cán shǒu quē", "抱法处势": "bào fǎ chǔ shì", "抱关执钥": "bào guān zhí yuè", "抱蔓摘瓜": "bào wàn zhāi guā", "暴虎冯河": "bào hǔ píng hé", "暴露文学": "bào lòu wén xué", "暴腮龙门": "pù sāi lóng mén", "暴衣露盖": "pù yī lù gài", "暴衣露冠": "pù yī lù guàn", "陂湖禀量": "bēi hú bǐng liáng", "卑宫菲食": "bēi gōng fěi shí", "悲悲切切": "bēi bēi qiè qiē", "悲声载道": "bēi shēng zài dào", "北鄙之声": "bēi bǐ zhī shēng", "北鄙之音": "bēi bǐ zhī yīn", "北辰星拱": "bēi chén xīng gǒng", "北窗高卧": "bēi chuāng gāo wò", "北门管钥": "běi mén guǎn yuè", "背曲腰躬": "bèi qǔ yāo gōng", "背曲腰弯": "bèi qǔ yāo wān", "背义负恩": "bèi yù fù ēn", "背义负信": "bèi yù fù xìn", "背义忘恩": "bèi yù wàng ēn", "倍道而行": "bèi dào ér xíng", "倍道兼行": "bèi dào jiān xíng", "被发文身": "pī fà wén shēn", "被发缨冠": "pī fà yīng guàn", "被发左衽": "pī fà zuǒ rèn", "被褐怀玉": "pī hè huái yù", "被褐怀珠": "pī hè huái zhū", "被甲持兵": "pī jiǎ chí bīng", "被甲据鞍": "pī jiǎ jù ān", "被甲枕戈": "pī jiǎ zhěn gē", "被甲执兵": "pī jiǎ zhí bīng", "被山带河": "pī shān dài hé", "本枝百世": "běn zhī bǒi shì", "逼良为娼": "bī liáng wéi chāng", "比量齐观": "bǐ liàng qí guān", "比物属事": "bǐ wù zhǔ shì", "彼倡此和": "bǐ chàng cǐ hè", "彼唱此和": "bǐ chàng cǐ hè", "秕言谬说": "bǐ yán miù shuò", "闭合思过": "bì gé sī guò", "闭合自责": "bì gé zì zé", "闭门合辙": "bì kǒu hé shé", "闭门塞窦": "bì kǒu sè dòu", "闭门塞户": "bì kǒu sè hù", "闭门扫迹": "bì kǒu sǎo guǐ", "闭门思愆": "bì gé sī qiān", "闭明塞聪": "bì míng sè cōng", "闭目塞耳": "bì mù sè ěr", "闭目塞听": "bì mù sè tīng", "敝盖不弃": "bǐ gài bù qì", "敝绨恶粟": "bì tí è sù", "敝帷不弃": "bǐ wéi bù qì", "蔽聪塞明": "bì cōng sè míng", "蔽明塞聪": "bì míng sè cōng", "避烦斗捷": "bì fán dòu jié", "避难就易": "bì nán jiù yì", "避难趋易": "bì nán qiù yì", "鞭辟向里": "biān bì xiàng lǐ", "鞭辟着里": "biān bì zhuó lǐ", "鞭擗进里": "bīan pì jìn lǐ", "鞭擗向里": "biān bì xiàng lǐ", "鞭约近里": "biān yuē jīn lǐ", "便宜从事": "biàn yí cóng shì", "便宜施行": "biàn yí shī xíng", "便宜行事": "biàn yì xíng shì", "变风改俗": "biàn fēng yì sú", "变幻不测": "biàn huà bù cè", "变危为安": "biàn wēi wéi ān", "变贪厉薄": "biǎn tān lì bó", "飙发电举": "biāo fā diàn jù", "表里为奸": "biǎo lǐ wéi jiān", "摽梅之年": "biào mén zhī nián", "别创一格": "bié chuàng yí gé", "别鹤离鸾": "bié hè lí láun", "别开一格": "bié kāi yí gé", "别类分门": "bié lèi fān mén", "别无长物": "bié wú cháng wù", "彬彬济济": "bīn bīn jǐ jǐ", "冰解的破": "bīng jiě dì pò", "冰山易倒": "bīng shān yì dǎo", "兵不由将": "bīng bù yóu jiàng", "兵不血刃": "bīng bù xuè rèn", "兵多将广": "bīng duō jiàng guǎng", "兵强将勇": "bīng qiáng àng yǒng", "兵微将寡": "bīng wēi jiàng guǎ", "兵未血刃": "bīng wèi xuě rèn", "兵无血刃": "bīng wú xuè rèn", "兵行诡道": "bīng xíng guǐ dào", "丙种射线": "bǐng zhǒng shè xiàn", "并为一谈": "bìng wéi yī tán", "并赃拿贼": "bìng zhuō ná zéi", "病入骨隨": "bìng rù gǔ suǐ", "拨乱为治": "bō luàn wéi zhì", "波骇云属": "bō hài yún zhǔ", "波属云委": "bō zhǔ yún wěi", "玻璃纤维": "bō li xiān wéi", "剥肤椎髓": "bō fū chuí suǐ", "剥皮抽筋": "bō pí chōu jīn", "播穅眯目": "bō kāng mǐ mù", "播糠眯目": "bō kāng mǐ mù", "伯乐一顾": "bō lè yī gù", "博文约礼": "bó wén yuè lǐ", "博闻强识": "bó wén qiáng zhì", "薄寒中人": "bó hán zhòng rén", "薄情无义": "báo qíng wú yì", "薄物细故": "bó wù xì gù", "簸土扬沙": "bǒ tǔ yáng shā", "擘两分星": "bó liǎng fēn xīng", "餔糟啜漓": "bǔ zāo chuò lí", "补阙灯檠": "bǔ quē dēng qíng", "补阙挂漏": "bǔ quē guà lòu", "补阙拾遗": "bǔ quē shí yí", "不拔一毛": "bù bá yì máo", "不辟斧钺": "bù bì fǔ yuè", "不差毫发": "bù chā háo fà", "不差毫厘": "bù chā háo lí", "不差累黍": "bù chā lěi shǔ", "不差上下": "bù chā shàng xià", "不差什么": "bù chà shí mǒ", "不偢不倸": "bù chǒu bù cǎi", "不当不正": "bù dāng bù zhèng", "不当人子": "bù dāng rén zǐ", "不登大雅": "bù dēng dà yǎ", "不分青白": "bù fēn qīng béi", "不干不净": "bù gān bù jìng", "不根之谈": "bù gān zhī tán", "不哼不哈": "bù hēng bù hā", "不护细行": "bù hù xì xíng", "不怀好意": "bù huái hào yì", "不遑宁处": "bù huáng níng chǔ", "不遑启处": "bù huáng qǐ chǔ", "不讳之朝": "bù huì zhī cháo", "不间不界": "bù gān bù gà", "不见经传": "bù jiàn jīng zhuàn", "不见天日": "bù jiàn tiān rì", "不矜不伐": "bù jīn bù fá", "不矜细行": "bù jīn xì xíng", "不紧不慢": "bù jīn bù màn", "不揪不睬": "bù chǒu bù cǎi", "不拘细行": "bù jū xì xíng", "不拘形迹": "bù jū xíng jī", "不绝如发": "bù jué rú fà", "不可揆度": "bù kě kuí duó", "不可奈何": "bù kě mài hé", "不可胜举": "bù kě shèng jù", "不可胜数": "bù kě shèng shǔ", "不愧不怍": "bù kuì bù zuò", "不了而了": "bù liǎo ér liǎo", "不了了之": "bù liǎo liǎo zhī", "不露锋铓": "bù lù fēng huì", "不奈之何": "bù nai zhī hé", "不破不立": "bù può bù lì", "不切实际": "bù qiē shí jì", "不省人事": "bù xǐng rén shì", "不失黍絫": "bù shī shǔ lěi", "不识起倒": "bù shí qǐ dǎo", "不随以止": "bu shui yi zi", "不贪为宝": "bù tān wé bǎo", "不吐不茹": "bù tǔ bù rú", "不为已甚": "bù wéi yǐ shèn", "不相为谋": "bù xiāng wéi móu", "不虚此行": "bù xū cǐ xíng", "不徇私情": "bù xún sī qíng", "不义之财": "bù yì zhī cái", "不亦善夫": "bù yi shàn fū", "不越雷池": "bù yuè léi shi", "不知薡蕫": "bù zhī dīng dǒng", "不知起倒": "bù zhī qǐ dǎo", "不着疼热": "bù zhuó téng rè", "不足齿数": "bù zú chǐ shǔ", "不足为法": "bù zú wéi fǎ", "不足为凭": "bù zú wéi píng", "不足为据": "bù zú wéi jù", "不足为奇": "bù zú wéi qí", "不足为训": "bù zú wéi xùn", "不足为意": "bù zú wéi yì", "布鲁塞尔": "bù lǔ sài ěr", "步步为营": "bù bù wéi yíng", "步线行针": "bù xiàn xíng zhēn", "擦拳抹掌": "cā quán mò zhǎng", "才薄智浅": "cāi bó zhì qiǎn", "才大难用": "cái dà nán yòng", "才高行洁": "cái gāo xíng jié", "才高行厚": "cái gāo xíng hòu", "才轻德薄": "cái qīng dé bó", "才疏德薄": "cái shū dé bó", "才占八斗": "cái zhān bā dǒu", "材薄质衰": "cái bó zhì shuāi", "材大难用": "cái dà nán yòng", "材茂行洁": "cái mào xíng jié", "材茂行絜": "cái mào xíng jié", "材轻德薄": "cái qīng dé bó", "材朽行秽": "cái xiǔ xíng huì", "材优干济": "cái yōu gàn jǐ", "财不露白": "cái bù lù bái", "财大气粗": "cái dà qì cù", "财殚力痡": "cái dān lì pū", "参辰日月": "shēn chén rì yuè", "参辰卯酉": "shēn chén mǎo yǒu", "参回斗转": "shēn huí dǒu zhuǎn", "参横斗转": "shēn héng dǒu zhuǎn", "参伍错综": "cēn wǔ cuò zōng", "骖风驷霞": "cēn fēng sì xiá", "餐风宿草": "cān fēng sù xuě", "餐风咽露": "cān fēng yàn lù", "餐松啖柏": "cān sōng dàn biǎ", "惨澹经营": "cǎn dàn jīng yíng", "惨绿愁红": "cǎn lü chóu hóng", "苍蝇见血": "cāng yíng jiàn xuě", "藏踪蹑迹": "cáng zōng niè jī", "操戈同室": "cāo gē tóon shì", "操奇逐赢": "cāo qì zhù yíng", "操身行世": "cāo shēn xíng shì", "草长莺飞": "cǎo zhǎng yīng fēi", "草率将事": "cǎo lǜ jiāng shì", "草行露宿": "cǎo xíng lù sù", "层见迭出": "céng chū dié jiàn", "层台累榭": "céng tái lěi xiè", "察察为明": "chá chá wéi míng", "察言观行": "chá yán guān xíng", "差强人意": "chā qiáng rén yì", "差三错四": "chā sān cuò sì", "禅世雕龙": "chán shì diāo lóng", "禅絮沾泥": "chán xū zhān ní", "缠夹不清": "chán jiā bù qīng", "刬草除根": "chǎn cǎo chú gēn", "刬恶锄奸": "chǎn è chú jiān", "刬旧谋新": "chǎn jiù móu xīn", "剗草除根": "chǎn cǎo chú gēn", "剗恶锄奸": "chǎn è chú jiān", "剗旧谋新": "chǎn jiù móu xīn", "谄上抑下": "chǎn shàng yi xià", "昌亭旅食": "cháng tíng lǚ shí", "长傲饰非": "zhǎng ào shì fēi", "长春不老": "cháng chún bù lǎo", "长恶靡悛": "cháng è mǐ quān", "长歌当哭": "cháng gē dàng kū", "长虺成蛇": "zhǎng huǐ chéng shé", "长鸣都尉": "cháng míng dōu wèi", "长年累月": "cháng nián lěi yuè", "长年三老": "zhǎng nián sān lǎo", "长篇累牍": "cháng piān lěi dú", "长生不死": "cháng shēng bū sǐ", "长绳系日": "cháng shéng jì rì", "长幼有序": "zhǎng yòu yǒu xù", "长幼有叙": "zhǎng yòu yǒu xù", "长幼尊卑": "zhǎng yòu zūn bēi", "苌弘碧血": "cháng hóng bì xuě", "畅所欲为": "chàng suǒ yù wéi", "倡而不和": "chàng ér bù hè", "倡条冶叶": "chāng tiáo yě yè", "超今冠古": "chāo jīn guàn gǔ", "巢居穴处": "cháo jū xué chǔ", "朝成暮徧": "cháo chéng mù shí", "朝攀暮折": "zhāo pān mù shé", "朝前夕惕": "zhāo qiáng xī tì", "朝乾夕愓": "zhāo qián xī dàng", "朝升暮合": "zhāo shēng mù gě", "朝阳丹凤": "cháo yáng dān fèng", "朝阳鸣凤": "zhāo yáng míng fèng", "朝章国典": "cháo zhāng guó diǎn", "朝章国故": "cháo zhāng guó gù", "朝折暮折": "zhāo shé mù shé", "朝种暮获": "zhāo zhǒng mù hù", "车尘马迹": "chē zhén mǎ jì", "车载船装": "chē zǎi chuán zhuāng", "扯顺风旗": "chě shǔn fēng qí", "扯纤拉烟": "chě qiàn lā yān", "嗔目切齿": "chēn mù qiē chǐ", "沉疴宿疾": "chén kē sù jì", "沉谋重虑": "chén móu chóng lǜ", "沉吟不决": "chén yīn bù jué", "沉吟章句": "chén yīn zhāng jù", "晨昏定省": "chén hūn dìng xǐng", "称德度功": "chēng dé duó gōng", "称家有无": "chèn jiā yǒu wú", "称体裁衣": "chèn tǐ cái yī", "称体载衣": "chèn tǐ cái yī", "称雨道晴": "chēng yǔ dào aíng", "趁风使柁": "chèn fēng shǐ duò", "趁哄打劫": "chèn hōng dǎ jié", "趁水和泥": "chèn shuǐ huò ní", "成败兴废": "chéng bài xīng fèi", "成吉思汗": "chéng jí sī hán", "成家立业": "chéng jiā lì yiè", "成年累月": "chéng nián lěi yuè", "成一家言": "chěng yī jiān yán", "城北徐公": "chéng běi xǘ gōng", "乘肥衣轻": "chéng féi yì qīng", "乘云行泥": "chéng yún xíng ní", "逞娇斗媚": "chěng jiāo dòu mèi", "逞妍斗色": "chěng yán dòu sè", "骋耆奔欲": "chěng qí bēn yù", "吃里扒外": "chī lǐ pá wài", "吃着不尽": "chī zhuó bù jìn", "迟迟吾行": "chí chí wú xíng", "持正不阿": "chí zhèng bù ā", "尺板斗食": "chǐ bǎn dòu shí", "尺寸之功": "chǐ cù zhī gōng", "尺短寸长": "chǐ duǎn cù cháng", "尺二冤家": "chǐ èr yuān jia", "齿豁头童": "chǐ huō tóu tóng", "齿牙为猾": "chǐ yá wéi huá", "齿牙为祸": "chǐ yá wéi huò", "耻与哙伍": "chǐ yú kuài wǔ", "赤绳系足": "chì shéng jì zú", "冲冠发怒": "chōng guàn fā nù", "冲冠怒发": "chōng guàn nù fà", "冲冠眦裂": "chōng guàn zì liè", "抽祕骋妍": "chōu bì chěng yán", "抽丝剥茧": "chōu sī bāo jiǎn", "愁红惨绿": "chóu hóng cǎn lü", "愁眉不展": "chóu méi bù zhān", "愁山闷海": "chóu shān mèn hǎi", "臭味相投": "xiù wèi xiāng tóu", "出处进退": "chū chǔ jìn tuì", "出处殊涂": "chū chǔ shū tú", "出处殊途": "chū chǔ shū tú", "出处语默": "chū chǔ yǔ mò", "出乖露丑": "chū guāi lù chǒu", "出将入相": "chū jiàng rù xiàng", "出门应辙": "chū mén yīng zhé", "出奇划策": "chū qí huá cè", "出入无间": "chū rù wú jiān", "出头露面": "chū tóu lù miàn", "出言吐词": "chū yán tǔ cí", "出言吐语": "chū yán tǔ yǔ", "樗栎庸材": "chū lì yōng cái", "处高临深": "chǔ gāo lín shēn", "处实效功": "chǔ shí xiào gōng", "处堂燕雀": "chǔ táng yàn què", "处堂燕鹊": "chǔ táng yàn què", "处心积虑": "chǔ xīn jī lǜ", "处之泰然": "chǔ zhī tài rán", "处尊居显": "chǔ zūn jū xiǎn", "触处机来": "chù chǔ jī lái", "触斗蛮争": "chù dòu mán zhēng", "揣骨听声": "chuāi gǔ tīng shēng", "揣奸把猾": "chuāi jiān bǎ huá", "揣时度力": "chuǎi shí duó lì", "啜食吐哺": "chuò shí tǔ bǔ", "啜英咀华": "chuò yīng jǔ huá", "川渟岳峙": "chuān tīng yuè zhì", "穿红着绿": "chuān hóng zhuó lǜ", "传风搧火": "chuán fēng yǒu huǒ", "传风扇火": "chuán fēng shān huǒ", "传神阿堵": "chuán shén ā dǔ", "传为佳话": "chuán wéi jiā huà", "传为美谈": "chuán wéi měi tán", "传为笑柄": "chuán wéi xiào bǐng", "传为笑谈": "chuán wéi xiào tán", "窗明几净": "chuāng míng jī jìng", "床下牛斗": "chuáng xià niú dòu", "创巨痛深": "chuāng jù tòng shēn", "吹竹弹丝": "chuí zhú dàn sī", "垂首帖耳": "chuí shǒu tiē ěr", "垂头搨翼": "chuí tóu dá yì", "春风风人": "chūn fēng fèng rén", "春风一度": "chūn fēng yī dù", "春笋怒发": "chūn sǔn mù fā", "纯属骗局": "chún shú piàn jú", "慈悲为本": "cí bēi wéi běn", "此唱彼和": "cǐ chàng bǐ hè", "此动彼应": "cǐ dòng bǐ yīng", "此发彼应": "cǐ fā bǐ yīng", "此呼彼应": "cǐ hū bǐ yīng", "从俗就简": "cóng sú jiù jiǎ", "摧刚为柔": "cuī gāng wéi róu", "摧折豪强": "cuī zhé háo qiáng", "榱崩栋折": "cuī bēng dòng shé", "榱栋崩折": "cuī dòng bēng shé", "啛啛喳喳": "cuì cuì chā chā", "村生泊长": "cūn shēng bó cháng", "寸步难行": "cùn bù nán xíng", "寸积铢累": "cùn jī zhū lěi", "寸利必得": "cùn lì bì dé", "撮科打哄": "cuō kē dǎ hòng", "撮土焚香": "cuō gǔ fén xiāng", "撮科打閧": "cuō kē dǎ hòng", "厝火燎原": "cuò huǒ liǎo yuán", "沓来麕至": "tà lái yǒu zhì", "沓来踵至": "tǎ lái zhǒng zhì", "打躬作揖": "dǎ gōng zuō yī", "打家截舍": "dǎ jiā jié shě", "打马虎眼": "dǎ mǎ hu yǎn", "打闷葫芦": "dǎ mèn hú lu", "大脖子病": "dà bó zi bìng", "大步流星": "dǎ bù liú xīng", "大车以载": "dà chē yǐ zài", "大吃大喝": "dà chī dà hè", "大处着墨": "dà chù zhuó mò", "大处着眼": "dà chù zhuó yǎn", "大吹大擂": "dà chuī dà léi", "大而无当": "dà ér wú dàng", "大腹便便": "dà fù pián pián", "大明法度": "dà jíng fǎ dù", "大缪不然": "dà miù bù rán", "大璞不完": "tài bú bù wán", "大人先生": "dà rén xiān sheng", "大喜若狂": "dā xǐ ruò kuáng", "大雅君子": "dà yǎ jūn zǐ", "大雅之堂": "dà yǎ zhī táng", "大有可为": "dà yǒu kě wéi", "大雨滂沱": "dà yǔ páng tuó", "代人说项": "dài rén shuō xiàng", "代为说项": "dài wéi shuō xiàng", "戴绿帽子": "dài lǜ mào zi", "戴日戴斗": "dài rì dài dòu", "丹凤朝阳": "dān fèng cháo yáng", "单枪匹马": "dān qiāng pí mǎ", "箪食壶浆": "dān sì hú jiāng", "箪食壶酒": "dān sì hú jiǔ", "箪食瓢饮": "dān sì piáo yǐn", "胆大心粗": "dǎn dā xīn cū", "诞谩不经": "dàn màn bù jīng", "弹铗无鱼": "dàn jiá wú yú", "弹尽粮绝": "dàn jìn liáng jué", "弹尽援绝": "dàn jìn yuán jué", "弹丸脱手": "tán wán tuō shǒu", "弹无虚发": "dàn wú xū fā", "弹雨枪林": "dàn yǔ qiāng lín", "淡泊明志": "dàn bó míng zhì", "淡然处之": "dàn rán chǔ zhī", "淡汝浓抹": "dàn zhuāng nóng mǒ", "淡妆轻抹": "dàn zhuāng qīng mò", "澹泊寡欲": "dàn bó guǎ yù", "当务始终": "dang wu shi zhong", "当行本色": "dāng xíng běn sè", "当着不着": "dāng zhuó bù zhuó", "当轴处中": "dāng zhóu chǔ zhōng", "党豺为虐": "dǎng chái wéi nüè", "刀耕火种": "dāo gēng huǒ zhòng", "刀光血影": "dāo guāng xuè yǐng", "叨陪末座": "tāo péi mò zuò", "叨在知己": "tāo zài zhī jǐ", "倒持干戈": "dǎo chí gān gē", "倒持手板": "dǎo chí shǒu bǎn", "倒持戈矛": "dǎo chí gē máo", "倒持太阿": "dǎo chí tài ā", "倒凤颠鸾": "dǎo fèng diān luán", "倒冠落佩": "dǎo guān luò pèi", "倒冠落珮": "dǎo guàn luò pèi", "倒果为因": "dào guǒ wéi yīn", "倒海翻江": "dǎo hǎi fān jiāng", "倒街卧巷": "dǎo jiē wò xiàng", "倒廪倾囷": "dǎo lǐn qīng qūn", "倒买倒卖": "dǎo mǎi dǎo mài", "倒戢干戈": "dǎo jí gān gē", "倒箧倾筐": "dǎo qiè qīng kuāng", "倒箧倾囊": "dǎo qiè qīng náng", "倒三颠四": "dǎo sān diān sì", "倒山倾海": "dǎo shān qīng hǎi", "倒裳索领": "dào cháng suǒ lǐng", "倒峡泻河": "dǎo xiá xiè hé", "倒行逆施": "dào xíng nì shī", "倒因为果": "dǎo yīn wéi guǒ", "倒载干戈": "dào zài gān gē", "倒执手版": "dǎo zhí shǒu bǎn", "捣虚撇抗": "dǎo xū piē kàng", "捣虚批吭": "dǎo xū pī háng", "蹈锋饮血": "dǎo fēng yǐn xuè", "蹈其覆辙": "dǎo qì fù zhé", "道德行为": "dào dé xíng wéi", "道远日暮": "dào yuàn rì mù", "得薄能鲜": "dé bó néng xiān", "得马折足": "dé mǎ shé zú", "得胜回朝": "dé shèng huí cháo", "得手应心": "dé shǒu yīng xīn", "得未曾有": "dé wèi céng yǒu", "德薄才疏": "dé bó cái shū", "德薄能鲜": "dé bó néng xiǎn", "德浅行薄": "dé qiǎn xíng báo", "的一确二": "dí yī què èr", "灯蛾扑火": "dé é pū huǒ", "灯尽油干": "dēng jìn yóu gàn", "登台拜将": "dēng tái bài jiàng", "登坛拜将": "dēng tán bài jiàng", "低唱浅斟": "dì chàng qiǎn zhēn", "低唱浅酌": "dì chàng qiǎn zhuó", "滴滴答答": "dī dī dā dā", "敌王所忾": "dí wáng suǒ kài", "底死谩生": "dǐ sǐ màn shēng", "砥节砺行": "dǐ jié lì xíng", "砥身砺行": "dǐ shēn lì xíng", "砥行立名": "dǐ xíng lì míng", "砥行磨名": "dǐ xíng mó míng", "地动山摇": "dì dòng shēn yáo", "帝王将相": "dì wáng jiòn xiàng", "掂斤抹两": "diān jīn mò liǎng", "颠倒干坤": "diān dǎo gàn kūn", "颠倒衣裳": "diān dǎo yī cháng", "颠颠倒倒": "diān diān dǎo dǎo", "颠来簸去": "diān lái bǒ qù", "颠来倒去": "diān lái dǎo qù", "颠鸾倒凤": "diān luán dǎo fèng", "颠乾倒坤": "diān qiān dǎo kūn", "颠三倒四": "diān sān dǎo sì", "点手划脚": "diǎn shǒu jí jiǎo", "点石为金": "diǎn shí wéi jīn", "点指划脚": "diǎn zhǐ jí jiǎo", "钿合金钗": "diàn hé jīn chāi", "刁钻促搯": "diāo zuàn cù chāo", "刁钻促狭": "diāo zuàn cù xiá", "雕虫薄技": "diāo chóng báo jì", "雕虫末伎": "diāo chóng mò jì", "雕蚶镂蛤": "diāo hān lòu gé", "雕心雁爪": "diāo xīn yàn zhǎo", "吊儿郎当": "diào er láng dāng", "吊尔郎当": "diào er láng dāng", "调兵遣将": "diào bīng qiǎn jiàng", "调虎离山": "diào hǔ lí shān", "调弦品竹": "diào xián pǐn zhú", "调嘴调舌": "tiáo zuǐ diào shé", "跌弹斑鸠": "diē dàn bān jiū", "跌宕不羁": "dié dàng bù jī", "迭矩重规": "dié jǔ chóng guī", "叠矩重规": "dié jǔ chóng guī", "钉头磷磷": "ding tou lin lin", "鼎铛玉石": "dǐng chēng yù shí", "鼎铛有耳": "dǐng chēng yǒu ěr", "鼎鼐调和": "dǐng nai tiáo hé", "鼎折覆餗": "dǐng shé fù sù", "鼎折餗覆": "dǐng shé sù fù", "丢魂丧胆": "diu1 hún sàng dǎn", "丢三落四": "diū sān là sì", "丢三拉四": "diu sān lā sì", "丢卒保车": "diū zú bǎo jū", "东挨西撞": "dōng āi xī zhuàng", "东猜西揣": "dōng cāi xī chuāi", "东扯西拽": "dōng chě xī zhuāi", "东床姣婿": "dōng chuáng jiāo xù", "东倒西歪": "dōng dǎo xī wāi", "东躲西藏": "dōng duǒ xī cáng", "东方将白": "dong fang jiang bai", "东扶西倒": "dōng fú xī dǎo", "东观西望": "dōng guāng xī wàng", "东横西倒": "dōng héng xī dǎo", "东家西舍": "dōng jiā xī shě", "东量西折": "dōng liàng xī shé", "东鳞西爪": "dōng lín xī zhǎo", "东鸣西应": "dōng míng xī yīng", "东抹西涂": "dōng mò xī tú", "东飘西泊": "dōng piāo xī bó", "东市朝衣": "dōng shì cháo yī", "东歪西倒": "dōng wāi xī dǎo", "东踅西倒": "dōng xué xī dǎo", "东支西吾": "dōng zhī xī wú", "动如参商": "dòng rú cān shāng", "动中窾要": "dòng zhōng zhe yào", "恫疑虚喝": "dòng yí xū hè", "恫疑虚猲": "dòng yí xū gé", "栋折榱坏": "dòng shé cuī huài", "洞见症结": "dòng jiàn zhèng jié", "都俞吁咈": "dōu yú xū fú", "兜肚连肠": "dōu dǔ lián cháng", "斗唇合舌": "dòu chún hé shé", "斗而铸兵": "dòu ér zhù bīng", "斗而铸锥": "dòu ér zhù zhuī", "斗怪争奇": "dòu guài zhēng qí", "斗酒双柑": "dòu jiǔ shuāng gān", "斗丽争妍": "dòu lì zhēng yán", "斗美夸丽": "dòu měi kuā lì", "斗媚争妍": "dòu mèi zhēng yán", "斗色争妍": "dòu sè zhēng yán", "斗筲穿窬": "dòu shāo chuān yú", "斗霜傲雪": "dòu shuāng ào xuě", "斗水活鳞": "dòu shuǐ huó lín", "斗心眼儿": "dòu xīn yǎn ér", "斗牙拌齿": "dòu yá bàn chǐ", "斗转参横": "dǒu zhuǎn shēn héng", "豆重榆瞑": "dòu chóng yú míng", "毒泷恶雾": "dú lóng è wù", "读书得间": "dú shū dé jiàn", "读书种子": "dú shū zhǒng zǐ", "独断专行": "dú duàn zhuān xíng", "独善吾身": "dú shàn wú shēn", "独有千秋": "dú yòu qiān qiū", "笃近举远": "dǔ jìn jǔ juǎn", "笃志好学": "dǔ zhì hǎo xué", "杜鹃啼血": "dù juān tí xuě", "杜默为诗": "dù mò wéi shī", "度德量力": "duó dé liàng lì", "度己以绳": "duó jǐ yǐ shéng", "蠹居棊处": "dù jū què chǔ", "蠹居棋处": "dù jū qí chǔ", "短褐不完": "duān hè bù wán", "短见薄识": "duǎn jiàn bó shí", "断长补短": "duàn chāng bǔ duǎn", "断长续短": "duàn chāng xù duǎn", "断发文身": "duàn fà wén shēn", "断还归宗": "duàn huán guī zōng", "断烂朝报": "duàn làn cháo bào", "堆案盈几": "duī àn yíng jī", "对薄公堂": "duì bù gōng táng", "顿开茅塞": "dùn kāi máo sè", "顿学累功": "dùn xué lěi gōng", "遁迹黄冠": "dùn jì huáng guàn", "遁世无闷": "dùn shì wú mèn", "遁俗无闷": "dùn sú wú mèn", "遁天妄行": "dùn tiān wàng xíng", "遁逸无闷": "dùn yì wú mèn", "多财善贾": "duō cái shàn gǔ", "多端寡要": "duō duān guǎi yào", "多口阿师": "duō kǒu ā shī", "多劳多得": "duō láo duō de", "多难兴邦": "duō nàn xīng bāng", "多钱善贾": "duō qián shàn gǔ", "多文为富": "duō wén wéi fù", "多言数穷": "duō yán shuò qióng", "多灾多难": "duō zāi duō nàn", "多种多样": "duō zhǒng duō yàng", "夺人所好": "duó rén suǒ hào", "朵颐大嚼": "duǒ yī dà jiáo", "屙金溺银": "ē jīn niào yín", "峨峨汤汤": "é é shāng shāng", "鹅行鸭步": "é xíng yā bù", "额手相庆": "é shǒu xiāng qìng", "扼襟控咽": "è jīn kòng yān", "扼吭夺食": "è gāng duó shí", "扼吭拊背": "è gāng fǔ bèi", "恶不去善": "wù bù qù shàn", "恶恶从短": "wù wù cóng duǎn", "恶居下流": "wù jū xià liú", "恶湿居下": "wù shī jū xià", "恶意中伤": "è yì zhòng shāng", "恶语中伤": "è yǔ zhòng shāng", "恶醉强酒": "wù zuì qiǎng jiǔ", "恶紫夺朱": "wù zǐ duó zhū", "饿殍载道": "è piǎo zài dào", "饿殍枕藉": "è piǎo zhěn jí", "遏恶扬善": "è è yán shàn", "恩不放债": "ēn bù fàng zhai", "儿女亲家": "ér nǚ qìng jiā", "儿女心肠": "ér nǘ xīn cháng", "耳目闭塞": "ěr mù bì sāi", "二十八宿": "èr shí bā xiù", "二竖为虐": "èr shù wéi nüè", "发短心长": "fà duǎn xīn cháng", "发奸擿伏": "fā jiān tì fú", "发蒙解缚": "fā méng jiě fu", "发蒙解惑": "fā méng jiě huò", "发蒙振落": "fā méng zhèn luò", "发蒙振聩": "fā méng zhèn kuì", "发怒冲冠": "fā nù chōng guàn", "发怒穿冠": "fà nù chuān guān", "发上冲冠": "fā shàng chōng guàn", "发上指冠": "fā shàng zhǐ guàn", "发秃齿豁": "fà tū chǐ huò", "发屋求狸": "fā wū qiú lí", "发隐擿伏": "fā yǐn tī fú", "发引千钧": "fà yǐn qiān jūn", "发踊冲冠": "fà yǒng chōng guān", "发植穿冠": "fà zhí chuān guān", "伐功矜能": "fá gōng jīn néng", "罚不责众": "fá bù zé zhòng", "罚不当罪": "fá bù dāng zuì", "法轮常转": "fǎ lún cháng zhuàn", "番窠倒臼": "fān kē dǎo jiù", "翻肠倒肚": "fān cháng dǎo dǔ", "翻黄倒皁": "fān huáng dǎo yí", "翻黄倒皂": "fān huáng dǎo zào", "翻江倒海": "fān jiāng dǎo hǎi", "翻箱倒柜": "fān xiāng dǎo guì", "翻箱倒笼": "fān xiāng dǎo lóng", "反败为胜": "fǎn bài wéi shèng", "反经行权": "fǎn jīng xíng quán", "反劳为逸": "fǎn láo wéi yì", "反老还童": "fǎn lǎo huán tóng", "反朴还淳": "fǎn pǔ huán chún", "反正还淳": "fǎn zhèng huán chún", "返本朝元": "fǎn běn cháo yuán", "返本还元": "fǎn běn huán yuán", "返本还源": "fǎn běn huán yuán", "返老还童": "fǎn lǎo huán tóng", "返朴还淳": "fǎn pǔ huán chún", "返朴还真": "fǎn pǔ huán zhēn", "犯而不校": "fàn ér bù jiào", "泛应曲当": "fàn yīng qǔ dāng", "贩夫皁隶": "fàn fū yě lì", "贩夫走卒": "fàn fū zǒu fú", "方寸万重": "fāng cùn wàn chóng", "方领圆冠": "fāng lǐng yuán guàn", "方枘圜凿": "fāng ruì huán záo", "方兴未艾": "fāng xīng wèi ài", "方言矩行": "fāng yán jǔ xíng", "防心摄行": "fáng xīn shè xíng", "放辟邪侈": "fàng pì xié chǐ", "飞鸿雪爪": "fēi hóng xuě zhǎo", "飞将数奇": "fē jiàng shù jī", "飞沙走砾": "fēi shē zǒu lì", "菲食薄衣": "fěi shí bó yī", "匪朝伊夕": "fěi cháo yī xī", "匪伊朝夕": "fěi yí zhāo xī", "沸沸汤汤": "fèi fèi shāng shāng", "分风劈流": "fēn fēng pǐ liú", "分毫不差": "fēn háo bù chā", "粪土不如": "fèn tú bù rú", "丰亨豫大": "fēng hēng yù dà", "丰屋蔀家": "fēng wū zhī jiā", "风掣雷行": "fēng chè léi xíng", "风尘肮脏": "fēng chén āng zāng", "风驰草靡": "fēng chí cǎo mǐ", "风驰电卷": "fēng chí diàn juǎn", "风驰云卷": "fēng chí yún juǎn", "风卷残云": "fēng juǎn cán yún", "风清月皎": "fēng qīng yuè jiāo", "风土人情": "fēng tú rén qíng", "风行一时": "fēng xíng yī shī", "风影敷衍": "fēng yǐng fū yān", "风云变幻": "fēng yún bià huàn", "风姿绰约": "fēng zī chuō yué", "封豨修蛇": "fēng xī yǒu shé", "蜂扇蚁聚": "fēng shān yǐ jù", "蜂腰削背": "fēng yāo xuē bèi", "蜂攒蚁集": "fēng cuán yǐ jí", "蜂攒蚁聚": "fēng cuán yǐ jù", "冯驩弹铗": "féng huān dàn jiá", "冯生弹铗": "féng shēng dàn jiá", "逢场作乐": "féng chǎng zuò lè", "逢人说项": "féng rén shuō xiàng", "凤泊鸾漂": "fèng bó luán piāo", "凤泊鸾飘": "fèng bó luán piāo", "凤靡鸾吪": "fèng mǐ luán é", "凤鸣朝阳": "fèng míng zhāo yáng", "奉为至宝": "fèng wéi zhì bǎo", "奉为圭臬": "fèng wéi guī niè", "奉为楷模": "fèng wéi kǎi mó", "佛头着粪": "fó tóu zhuó fèn", "佛头著粪": "fó tóu zhuó fèn", "否极泰回": "pǐ jí tài huí", "否极泰来": "pǐ jí tài lái", "否极阳回": "pǐ jí yáng huí", "否去泰来": "pǐ qù tài lái", "否往泰来": "pǐ wǎng tài lái", "否终复泰": "pǐ zhōng fù tài", "否终则泰": "pǐ zhōng zé tài", "肤见謭识": "fū jiàn guǎng shí", "肤皮潦草": "fū pǐ liǎo cǎo", "肤受之愬": "fū shòu zhī xiāng", "伏虎降龙": "fú hǔ xiáng lóng", "服服帖帖": "fú fu tiē tiē", "浮收勒折": "fú shōu lè shé", "符号逻辑": "fú hào luó ji", "福为祸始": "fú wéi huò shǐ", "福为祸先": "fú wéi huò xiān", "拊背搤吭": "fǔ bèi hè kēng", "俯首帖耳": "fǔ shǒu tiē ěr", "辅世长民": "fǔ shì zhǎng mín", "父为子隐": "fù wéi zǐ yǐn", "父债子还": "fù zhài zǐ huán", "负材矜地": "fù cái jīn dì", "负地矜才": "fù dì jīn cái", "负债累累": "fù zhai lèi lèi", "富国彊兵": "fù guó jiāng bīng", "富商巨贾": "fù shāng jù jiǎ", "腹载五车": "fù zài wǔ chē", "伽马射线": "gā mǎ shè xiàn", "改朝换代": "gǎi cháo huàn dài", "改朝换姓": "gǎi cháo huàn xìng", "改恶为善": "gǎi è wéi shàn", "改而更张": "gǎi ér gèng zhāng", "改曲易调": "gǎi qǔ yì diào", "改弦易调": "gǎi xián yì diào", "改行从善": "gǎi xíng cóng shàn", "改行迁善": "gǎi xíng qiān shàn", "改行为善": "gǎi xíng wéi shàn", "改行自新": "gǎi xíng zì xīn", "改玉改行": "gǎi yù gǎi xíng", "改张易调": "gǎi zhāng yì diào", "干城之将": "gān chéng zhī jiàng", "干脆利索": "gàn cuì lì suǒ", "干端坤倪": "gàn duān kūn ní", "干父之蛊": "gàn fù zhī gǔ", "干干净净": "gàn gān jìng jìng", "干戈载戢": "gàn gē zǎi jí", "干将莫邪": "gān jiàng mò yé", "干净利索": "gàn jìng lì suǒ", "干名犯义": "gàn míng fàn yì", "干啼湿哭": "gàn tí shī kū", "干霄蔽日": "gàn xiāo bì rì", "甘处下流": "gān chǔ xià liú", "甘分随时": "gān fèn suí shí", "甘贫守分": "gān pín shǒu fēn", "竿头日上": "gān tóu rí shàng", "敢为敢做": "gǎn wéi gǎn zuò", "敢作敢为": "gǎn zuò gǎn wéi", "旰食宵衣": "gàn shí xiāo yī", "旰食之劳": "gàn shí zhī láo", "岗头泽底": "gāng tóu zé dǐ", "钢化玻璃": "gāng huà bō li", "钢筋铁骨": "gāng jīng tiě gǔ", "高遏行云": "gāo è xíng yún", "高风劲节": "gāo fēng jìng jié", "高义薄云": "gāo yì bó yún", "膏场绣浍": "gāo cháng xiù kuài", "膏车秣马": "gào chē mò mǎ", "膏唇贩舌": "gào chún fàn shé", "膏唇岐舌": "gào chún qí shé", "膏泽脂香": "gāo zé zhī xiāng", "槁项没齿": "gǎo xiàng méi chǐ", "告老还家": "gào lǎo huán jiā", "告朔饩羊": "gù shuò xì yáng", "疙疙瘩瘩": "gē gē dā dá", "歌莺舞燕": "gē yíng wǔ yàn", "革心易行": "gé xīn yì xíng", "格格不吐": "gē gē bù tǔ", "格格不纳": "gē gē bù nà", "各奔前程": "gè bèn qián chéng", "各色名样": "gè sè gè yàng", "各行其是": "gè xíng qí shì", "各行其志": "gè xíng qí zhì", "各有所长": "gè yǒu suǒ chéng", "各有所好": "gè yǒu suǒ hào", "各自为战": "gè zì wéi zhàn", "根孤伎薄": "gēn gū jì báo", "根生土长": "gēn shēn tǔ zhǎng", "亘古奇闻": "gèn gǔ qī wén", "更长梦短": "gēng cháng mèng duǎn", "更唱迭和": "gēng chàng dié hé", "更唱叠和": "gēng chàng dié hé", "更待干罢": "gèng dài gàn bà", "更阑人静": "gēng lán rén jǐng", "更令明号": "gēng lìng míng hào", "更名改姓": "gèng míng gǎi xìng", "更难仆数": "gēng nán pú shù", "更仆难数": "gēng pú nán shǔ", "更仆难终": "gēng pú nán zhōng", "更弦改辙": "gēng xián gǎi zhé", "更弦易辙": "gēng xián yì zhé", "更姓改物": "gēng xìng gǎi wù", "羹藜唅糗": "gēng lí hán qiǔ", "弓调马服": "gōng diào mǎ fú", "功薄蝉翼": "gōng bó chán yì", "功成行满": "gōng chéng xíng mǎn", "攻城掠地": "gōng chéng lüě dì", "供不应求": "gōng bù yìng qiú", "供过于求": "gōng guò yú qiú", "恭行天罚": "gōng xíng tiān fá", "龚行天罚": "gōng xíng tiān fá", "拱肩缩背": "gǒng jān suō bèi", "拱手而降": "gǒng shòu ér xiáng", "共为唇齿": "gòng wéi chún chǐ", "共枝别干": "gòng zhī bié gàn", "勾心斗角": "gōu xīn dòu jiǎo", "钩心斗角": "gōu xīn dòu jiǎo", "钩爪锯牙": "gōu zhǎo jù yá", "狗心狗行": "gǒu xīn gǒu xíng", "狗行狼心": "gǒu xíng láng xīn", "狗续侯冠": "gǒu xù hòu guàn", "狗血淋头": "gǒu xuè lín tóu", "狗血喷头": "gǒu xuè pēn tóu", "苟合取容": "gǒu hé qǔ ān", "姑射神人": "gū yè shén rén", "孤独矜寡": "gū dú guān guǎ", "孤履危行": "gū lǚ wēi xíng", "沽名干誉": "gū míng gàn yù", "古调不弹": "gǔ diào bù tán", "古调单弹": "gǔ diào dān tán", "古为今用": "gǔ wéi jīn yòng", "骨头架子": "gú tou jià zi", "鼓唇咋舌": "gǔ chún zǎ shé", "鼓鼓囊囊": "gǔ gǔ nāng nāng", "鼓吻奋爪": "gǔ wěn fèn zhǎo", "故伎重演": "gù jì zhòng yǎn", "故态复还": "gù tài fù huán", "顾景惭形": "gù yǐng cán xíng", "顾曲周郎": "gù qǔ zhōu láng", "瓜葛相连": "guā gě xiāng lián", "寡见鲜闻": "guǎ jiàn xiǎn wén", "寡廉鲜耻": "guǎ lián xiǎn chǐ", "挂席为门": "guà xí wéi mén", "拐弯抹角": "guǎi wān mò jiǎo", "关情脉脉": "guān qíng mài mài", "观者如垛": "guān zhě rú duǒ", "官官相为": "guān guān xiāng wéi", "官运亨通": "guān yùn hēng gōng", "官止神行": "guān zhǐ shén xíng", "冠屦倒施": "guàn jù dǎo shī", "冠绝一时": "guàn jué yī shí", "冠山戴粒": "guàn shān dài lì", "贯斗双龙": "guàn dòu shuāng lóng", "广陵散绝": "guǎng líng sǎn jué", "广譬曲谕": "guǎng pì qǔ yù", "广文先生": "guǎng wén xiān sheng", "广种薄收": "guǎng zhòng bó shōu", "规行矩步": "guī xíng jǔ bù", "规行矩止": "guī xíng jǔ zhǐ", "规旋矩折": "guī xuán jǔ shé", "规重矩叠": "guī chóng jǔ dié", "瑰意奇行": "guī yì qí xíng", "瑰意琦行": "guī yì qí xíng", "鬼怕恶人": "guǐ pà èr én", "鬼使神差": "guǐ shǐ shén chāi", "桂折兰摧": "guì shé lán cuī", "桂折一枝": "guì shé yī zhī", "果行育德": "guǒ xíng yù dé", "裹血力战": "guǒ xuè lì zhàn", "过关斩将": "guò guān zhǎn jiàng", "过为已甚": "guò wéi yǐ shèn", "过隙白驹": "guò xī bái jū", "含宫咀征": "hán gōng jǔ zhēng", "含宫咀徵": "hán gōng jǔ zhēng", "含垢藏疾": "hán gǒu cáng jí", "含含糊糊": "hán hán hu hū", "含糊不明": "hán hú bù míng", "含糊其词": "hán hú qí cí", "含糊其辞": "hán hú qí cí", "含菁咀华": "hán jīng jǔ huá", "含蓼问疾": "hán liǎo wèn jí", "含商咀徵": "hán shāng jǔ zhēng", "含商咀征": "hán shāng jǔ zhēng", "含英咀华": "hán yīng jǔ huá", "邯郸重步": "hán dān zhóng bù", "寒酸落魄": "hán suān luò pò", "汗流夹背": "hàn liú jiā bèi", "汗血盐车": "hàn xuè yán chē", "熯天炽地": "hàn tiān chì dì", "毫发不爽": "háo fà bù shuǎng", "豪干暴取": "háo gàn bào qǔ", "豪横跋扈": "háo héng bá hù", "豪商巨贾": "háo shāng jù jiǎ", "好吃懒做": "hào chī lǎn zuò", "好大喜功": "hào dà xǐ gōng", "好丹非素": "hào dān fēi sù", "好恶不同": "hǎo è bù tóng", "好高骛远": "hào gāo wù yuǎn", "好酒贪杯": "hào jiǔ tān bēi", "好谋善断": "hào móu shàn duàn", "好奇尚异": "hǎo qí shàng yì", "好骑者堕": "hào qí zhě duò", "好善恶恶": "hǎo shàn wù è", "好善乐施": "hào shàn lè shī", "好生之德": "hào shēng zhī dé", "好事之徒": "hào shì zhī tú", "好为人师": "hào wéi rén shī", "好问决疑": "hào wèn jué yí", "好为事端": "hào wéi shì duān", "好问则裕": "hào wèn zé yù", "好行小惠": "hào xíng xiǎo huì", "好行小慧": "hǎo xíng xiǎo huì", "好佚恶劳": "hǎo yì wù láo", "好逸恶劳": "hào yì wù láo", "好勇斗狠": "hào yǒng dòu hěn", "好整以暇": "hào zhěng yǐ xiá", "好自为之": "hào zì wéi zhī", "号寒啼饥": "háo hán tí jī", "号咷大哭": "háo táo dà kū", "浩浩汤汤": "hào hào shāng shāng", "合从连衡": "hé zòng lián héng", "合而为一": "hé ér wéi yī", "合二为一": "hé èr wéi yī", "合两为一": "hé liǎng wéi yī", "合浦还珠": "hé pǔ huán zhū", "合浦珠还": "hé pǔ zhū huán", "何乐不为": "hé lè bù wéi", "何所不为": "hé suǒ bù wéi", "何足为奇": "hé zú wéi qí", "和颜说色": "hé yán yuè sè", "河北梆子": "hé běi bāng zi", "河涸海干": "hé hé hǎi qián", "河溓海晏": "hé lián hǎi yàn", "河溓海夷": "hé lián hǎi yí", "河南梆子": "hé nán bāng zi", "荷枪实弹": "hè qiāng shí dàn", "涸思干虑": "hé sī qián lǜ", "鹤处鸡群": "hè chǔ jī qún", "鹤发鸡皮": "hè fà jī pí", "鹤发松姿": "hè fà sōng zī", "鹤发童颜": "hè fà tóng yán", "鹤鸣九皋": "hè míng jiǔ gāo", "鹤行鸡群": "hè xíng jī qún", "黑更半夜": "hēi gēng bàn yè", "恨海难填": "hèn hǎi nán tián", "亨嘉之会": "hēng jiā zhī huì", "哼哈二将": "hēng hā èr jiàng", "横倒竖卧": "héng dǎo shù wò", "横恩滥赏": "hèng ēn làn shǎng", "横科暴敛": "hèng kē bào liǎn", "横抢武夺": "hèng qiǎng wǔ duó", "横抢硬夺": "hèng qiǎng yìng duó", "横拖倒拽": "héng tuō dào zhuāi", "横无忌惮": "hèng wú jì dàn", "横殃飞祸": "hèng yāng fēi huò", "横灾飞祸": "hèng zāi fēi huò", "横征暴赋": "hèng zhēng bào fù", "横征苛敛": "hèng zhēng kē liǎn", "横征苛役": "hèng zhēng kē yì", "衡石量书": "héng shí liàng shū", "红不棱登": "hóng bù lēng dēng", "红得发紫": "hóng de fā zǐ", "红绳系足": "hóng shéng jì zú", "洪都拉斯": "hóng dōu lā sī", "洪炉燎发": "hóng lú liáo fà", "鸿都买第": "hóng dōu mǎi dì", "鸿飞雪爪": "hóng fēi xuě zhǎo", "鸿渐于干": "hóng jiàn yú gàn", "鸿泥雪爪": "hóng ní xuě zhǎo", "厚此薄彼": "hòu cǐ bó bǐ", "厚德载物": "hòu dé zài wù", "厚古薄今": "hòu gǔ bó jīn", "厚积薄发": "hòu jī bó fā", "厚今薄古": "hòu jīn bó gǔ", "厚味腊毒": "hòu wèi xī dú", "呼不给吸": "hū bù jǐ xī", "呼来喝去": "hū lái hè qù", "呼卢喝雉": "hū lú hè zhì", "呼天抢地": "hū tiān qiāng dì", "呼天吁地": "hū tiān yù dì", "呼幺喝六": "hū yāo hè liù", "狐狸尾巴": "hú li wěi ba", "狐裘尨茸": "hú qiú méng róng", "胡思乱量": "hú sī luàn liàng", "胡行乱为": "hú xíng luàn wéi", "胡子拉碴": "hú zǐ lā chā", "胡作非为": "hú zuò fēi wéi", "胡作胡为": "hú zuò hú wéi", "胡作乱为": "hú zuò luàn wéi", "虎步龙行": "hǔ bù lóng xíng", "虎斗龙争": "hǔ dòu lóng zhēng", "互为表里": "hù wéi biǎo lǐ", "互为因果": "hù wéi yīn guò", "户限为穿": "hù xiàn wéi chuān", "花不棱登": "huā bù lēng dēng", "花簇锦攒": "huā cù jǐn cuán", "花攒锦簇": "huā cuán jǐn cù", "花攒锦聚": "huā cuán jǐn jù", "华亭鹤唳": "huà tíng hè lì", "化鸱为凤": "huà chī wéi fèng", "化腐为奇": "huà fǔ wéi qí", "化零为整": "huà líng wéi zhěng", "化为泡影": "huà wéi pāo yǐng", "化为乌有": "huà wéi wū yǒu", "化险为夷": "huà xiǎn wéi yí", "化枭为鸠": "huà xiāo wéi jiū", "化整为零": "huà zhěng wéi líng", "划地为牢": "huá dì wéi láo", "画荻和丸": "huà dí huò wán", "画地为牢": "huà dì wéi láo", "画地为狱": "huà dì wéi yù", "画蛇著足": "huà shé zhuó zú", "怀才不遇": "huái cái bū yù", "淮橘为枳": "huái jú wéi zhǐ", "槐南一梦": "huái nán yī mēng", "坏裳为裤": "huài shang wéi kù", "欢呼雀跃": "huān hū qué yué", "还淳反古": "huán chún fǎn gǔ", "还淳反朴": "huán chún fǎn pǔ", "还淳反素": "huán chún fǎn sù", "还淳返朴": "huán chún fǎn pǔ", "还醇返朴": "huán chún fǎn pǔ", "还年卻老": "huán nián què lǎo", "还年却老": "huán nián què lǎo", "还年驻色": "huán nián zhù sè", "还朴反古": "huán pǔ fǎn gǔ", "还我河山": "huán wǒ hé shān", "还元返本": "huán yuán fǎn běn", "还珠返璧": "huán zhū fǎn bì", "还珠合浦": "huán zhū hé pǔ", "还珠买椟": "huán zhū mǎi dú", "患难夫妻": "huàn nàn fū qī", "患难与共": "huàn nàn yǔ gòng", "患难之交": "huàn nàn zhī jiāo", "黄发垂髫": "huáng fà chuí tiáo", "黄发儿齿": "huáng fà ér chǐ", "黄发骀背": "huáng fā dài bèi", "黄冠草服": "huáng guàn cǎo fú", "黄冠草履": "huáng guàn cǎo lǚ", "黄冠野服": "huáng guàn yě fú", "潢池盗弄": "huáng shi dào nòng", "挥沐吐餐": "huī mù tǔ cān", "回船转舵": "huí chuán zhǎn duò", "回山倒海": "huí shān dǎo hǎi", "回天倒日": "huí tiān dǎo rì", "悔不当初": "huǐ bù dāng chū", "悔过自责": "huǐ guò zì zè", "诲人不惓": "huì rén bù tiě", "贿货公行": "huì huò gōng xíng", "贿赂公行": "huì lù gōng xíng", "晦盲否塞": "huì máng pǐ sè", "秽德垢行": "huì dé gòu xíng", "毁冠裂裳": "huǐ guān liè cháng", "毁家纾难": "huǐ jiā shū nàn", "毁钟为铎": "huǐ zhōng wéi duó", "毁舟为杕": "huǐ zhōu wéi duò", "昏定晨省": "hūn dìng chén xǐng", "昏镜重明": "hūn jìng chóng míng", "昏镜重磨": "hūn jìng chóng mó", "昏迷不省": "hūn mí bù xǐng", "浑抡吞枣": "hún lún tūn zǎo", "魂不著体": "hún bù zhuó tǐ", "魂颠梦倒": "hún diān mèng dǎo", "魂不着体": "hún bù zhuó tǐ", "魂飞魄丧": "hún fēi pò sāng", "混混噩噩": "hún hún è è", "混然一体": "hún rán yī tǐ", "混为一谈": "hùn wéi yī tán", "混应滥应": "hùn yīng làn yīng", "活剥生吞": "huó bāo shēng tūn", "火耕流种": "huǒ gēng liú zhǒng", "火急火燎": "huǒ jí huǒ liǎo", "火烧火燎": "huǒ shāo huǒ liǎo", "货而不售": "huo er bu shou", "货贿公行": "huò huì gōng xíng", "货赂大行": "huò lù dà xíng", "货赂公行": "huò lù gōng xíng", "获隽公车": "huò jūn gōng chē", "祸不单行": "huò bù dān xíng", "祸福相生": "huò fú xiāng shēng", "祸福相依": "huò fú xiāng yī", "祸福相倚": "huò fú xiāng yī", "祸为福先": "huò wéi fú xiān", "击排冒没": "jī pái mào mò", "叽里呱啦": "jī lǐ guā lā", "叽哩咕噜": "jī lǐ gū lū", "饥冻交切": "jī dòng jiāo qiē", "饥寒交切": "jī hán jiāo qiē", "鸡皮鹤发": "jī pí hè fà", "鸡声鹅斗": "jī shēng é dòu", "鸡争鹅斗": "jī zhēng é dòu", "积谗糜骨": "jī chán méi gǔ", "积德累功": "jī dé lěi gōng", "积德累善": "jī dé lěi shàn", "积德累仁": "jī dé lěi rén", "积露为波": "jī lù wéi bō", "积年累岁": "jī nián lěi suì", "积年累月": "jī nián lěi yuè", "积日累久": "jī rì lěi jiǔ", "积日累月": "jī rì lěi yuè", "积日累岁": "jī rì lěi suì", "积时累日": "jī shí lěi rì", "积素累旧": "jī sù lěi jiù", "积岁累月": "jī suì lěi yuè", "积铢累寸": "jī zhū lěi cùn", "赍志而没": "jī zhì ér mò", "稽古揆今": "jī gǔ zhèn jīn", "激薄停浇": "jī bó tíng jiāo", "及宾有鱼": "jí bīn yoǔ yú", "及时行乐": "jí shí xíng lè", "吉人天相": "jí rén tiān xiàng", "极深研几": "jí shēn yán jī", "极深研幾": "jí shēn yán jī", "亟疾苛察": "jí jí kē chá", "急公好施": "jí gōng hào shī", "急功好利": "jí gōng hào lì", "急公好义": "jí gōng hào yì", "急景凋年": "jí yǐng diāo nián", "急脉缓灸": "jí mài huǎn jiù", "疾不可为": "jí bù kě wéi", "集腋为裘": "jí yè wéi qiú", "几不欲生": "jī bù yù shēng", "虮虱相吊": "jǐ shī xiēng diào", "掎裳连袂": "jǐ cháng lián mèi", "掎裳连襼": "jǐ shang lián zhēng", "计斗负才": "jì dòu fù cái", "计功量罪": "jì gōng liàng zuì", "计功行封": "jì gōng xíng fēng", "计深虑远": "jì shēng lǜ yuǎn", "计行虑义": "jì xíng lǜ yì", "计行言听": "jì xíng yán tīng", "纪纲人论": "jì gāng rén lún", "哜哜嘈嘈": "jì jì cáo cáo", "济济一堂": "jǐ jǐ yī táng", "寄兴寓情": "jì xìng yù qíng", "霁风朗月": "jī fēng lǎng yuè", "霁月光风": "jī yuè guāng fēng", "夹层玻璃": "jiā céng bō li", "夹袋人物": "jiā dài rén wù", "夹七夹八": "jiā qī jiā bā", "夹枪带棒": "jiā qiāng dài bàng", "夹枪带棍": "jiā qiāng dài gùn", "家长礼短": "jiā cháng lǐ duǎn", "家长里短": "jiā cháng lǐ duǎn", "家道从容": "jiā dào cōng róng", "家给民足": "jiā jǐ mín zú", "家给人足": "jiā jǐ rén zú", "家累千金": "jiā lèi qiān jīn", "家无担石": "jiā wú dàn shí", "家无斗储": "jiā wú dòu chǔ", "葭莩之亲": "jiā fú zhī qīn", "嘉言懿行": "jiā yán yì xíng", "甲冠天下": "jiǎ guàn tiān xià", "假洋鬼子": "jiǎ yáng guǐ zi", "尖嘴薄舌": "jiān zuǐ bó shé", "间不容发": "jiān bù róng fà", "间不容瞚": "jiān bù róng xǐ", "间不容息": "jiàn bù róng xī", "间见层出": "jiàn xiàn céng chū", "肩摩毂接": "jiān mó gū jiē", "艰难竭蹶": "jiān nán jié jué", "俭不中礼": "jiǎn bù zhòng lǐ", "剪发被褐": "jiǎn fā bèi hè", "剪发披缁": "jiǎn fā pī zī", "简明扼要": "jiǎn míng é yào", "简丝数米": "jiǎn sī shǔ mǐ", "见弹求鹗": "jiàn dàn qiú è", "见弹求鸮": "jiàn dàn qiú háo", "见缝就钻": "jiàn fèng jiù zuān", "见机而行": "jiàn jī ér xíng", "见几而作": "jiàn jī ér zuò", "见幾而作": "jiàn jī ér zuò", "见弃于人": "jiàn qì yǔ rén", "见素抱朴": "xiàn sù bào pǔ", "见所不见": "jiàn suǒ bù jiàn", "见义必为": "jiàn yì bì wéi", "见义当为": "jiàn yì dāng wéi", "见义敢为": "jiàn yì gǎn wéi", "见义勇为": "jiàn yì yǒng wéi", "剑首一吷": "jiàn shǒu yī guī", "渐不可长": "jiàn bù kě zhǎng", "鉴影度形": "jiàn yǐng duó xíng", "槛花笼鹤": "jiàn huā lóng hè", "江翻海倒": "jiāng fān hǎi dǎo", "江汉朝宗": "jiāng hàn cháo zōng", "江河行地": "jiāng hé xíng dì", "江左夷吾": "jiāng zuǒ yí wú", "将伯之呼": "qiāng bó zhī hū", "将伯之助": "qiāng bó zhī zhù", "将夺固与": "jiāng duó gū yǔ", "将功折过": "jiāng gōng shé guò", "将门有将": "jiàng mén yǒu jiàng", "将取固予": "jiāng qǔ gū yǔ", "将相之器": "jiàng xiàng zhī qì", "将遇良材": "jiàng yù liáng cái", "降龙伏虎": "xiáng lóng fú hǔ", "降妖捉怪": "xiáng yāo zhuō guài", "浇风薄俗": "jiāo fēng bó sú", "骄儿騃女": "jiāo ér bā nǚ", "骄奢淫泆": "jiāo shē yín yí", "骄泰淫泆": "jiāo tai yín zhuàng", "胶鬲之困": "jiāo gé zhī kùn", "焦唇干舌": "jiāo chún gàn shé", "焦沙烂石": "jiāo shā shí làn", "燋头烂额": "jiāo tóu làn é", "燋金烁石": "jiāo jīn shuò shí", "角立杰出": "jiao li jie chu", "挢抂过正": "jiǎo kuāng guò zhèng", "皎阳似火": "jiǎo yáng shì huǒ", "矫国更俗": "jiǎo guó gēng sú", "矫矫不群": "jiǎo jiǎo bù qùn", "矫情饰行": "jiǎo qíng shì xíng", "矫言伪行": "jiǎo yán wěi xíng", "较瘦量肥": "jiào shòu liàng féi", "教猱升木": "jiāo náo shēng mù", "教学相长": "jiào xué xiāng zhǎng", "教一识百": "jiāo yī shí bǎi", "诘曲聱牙": "jié qǔ áo yá", "诘屈磝碻": "jié qū bìng zhòu", "诘屈謷牙": "jié qū dà yá", "洁身累行": "jié shēn lèi xíng", "洁身自好": "jié shēn zì hào", "结结巴巴": "jiē jiē bā bā", "桀骜不恭": "jié ào bù gōng", "桀骜不驯": "jié ào bù xùn", "桀骜不逊": "jié ào bù xùn", "桀骜难驯": "jié ào nán xùn", "截铁斩钉": "jié tiě zhǎn dìng", "解发佯狂": "jiě fà yáng kuáng", "解铃系铃": "jiě líng jì líng", "解人难得": "jiě rén nán dé", "解衣衣人": "jiè yī yī rén", "戒奢宁俭": "jiè shē nìng jiān", "借公行私": "jiè gōng xíng sī", "金蝉脱壳": "jīn chán tuō qiào", "金翅擘海": "jīn chì bāi hǎi", "金匮石室": "jīn guì shí shì", "金吾不禁": "jīn wú bù jìn", "金相玉式": "jīn xiāng yù shì", "金相玉映": "jīn xiāng yù yìng", "金相玉振": "jīn xiāng yù zhèn", "金针见血": "jīn zhēn jiàn xuè", "津关险塞": "jīn guān xiǎn sài", "矜功不立": "jīn gōng bù lì", "矜才使气": "jīn cái shǐ qì", "矜功伐能": "jīn gōng fá néng", "矜功伐善": "jīn gōng fá shàn", "矜功负气": "jīn gōng fǔ qì", "矜功恃宠": "jīn gōng shì chǒng", "矜功自伐": "jīn gōng zì fá", "矜己自饰": "jīn jǐ zhì shì", "矜纠收缭": "jīn jiū shōu liáo", "矜名妒能": "jīn míng dù néng", "矜名嫉能": "jīn míng jì néng", "矜能负才": "jīn néng fù cái", "矜贫救厄": "jīn pín jiù è", "矜贫恤独": "jīn pín xù dú", "矜愚饰智": "jīn yú shì zhì", "矜智负能": "jīn zhì fù néng", "矜平躁释": "jīn píng zào shì", "谨行俭用": "jǐn xíng jiǎn yòng", "锦囊还矢": "jǐn náng huán shǐ", "锦衣行昼": "jǐn yī xíng zhòu", "尽多尽少": "jǐn duō jǐn shǎo", "尽力而为": "jìn lì ér wéi", "进寸退尺": "jǐn cùn tuì chǐ", "进退跋疐": "jìn tuì bá zǔ", "进退出处": "jìn tuì chū chǔ", "进退触籓": "jìn tuì chù zǔ", "进退两难": "jǐn tuì liǎng nán", "进退维亟": "jìn tuì wéi jí", "进退应矩": "jìn tuì yīng jǔ", "进退消长": "jìn tuì xiāo cháng", "进退中度": "jìn tuì zhòng dù", "进种善群": "jìn zhǒng shàn qún", "祲威盛容": "lóng wēi shèng róng", "禁舍开塞": "jìn shě kāi sāi", "禁止令行": "jìn zhǐ lìng xíng", "噤口捲舌": "jìn kǒu juǎn shé", "经纶济世": "jing lun ji shi", "经明行修": "jīng míng xíng xiū", "经年累月": "jīng nián lěi yuè", "荆棘塞途": "jīng jí sè tú", "荆棘载途": "jīng jí zài tú", "荆人涉澭": "jīng rén shè yōng", "惊魂落魄": "jīng hún luò pò", "旌旗卷舒": "jīng qí juǎn shū", "井底虾蟆": "jǐng dǐ xiā má", "径行直遂": "jìng xíng zhí suí", "敬业乐群": "jìng yè yào qún", "九间朝殿": "jiǔ jiān cháo diàn", "九蒸三熯": "jiǔ zhēng sān shēng", "九转功成": "jiǔ zhuàn gōng chéng", "久要不忘": "jiǔ yāo bù wàng", "灸艾分痛": "jiù ài fēn tòng", "旧地重游": "jiù dì chóng yóu", "旧调重弹": "jiù diào chóng tán", "旧事重提": "jiù shì zhòng tí", "咎有应得": "jiù yǒu yīng dé", "救过补阙": "jiù guò bǔ quē", "救苦救难": "jiù kǔ jiù nàn", "居不重席": "jū bù chóng xí", "居不重茵": "jū bù chóng yīn", "居下讪上": "jú xià shàn shàng", "居轴处中": "jū zhóu chǔ zhōng", "拘神遣将": "jū shén qiǎn jiàng", "鞠为茂草": "jū wéi mào cǎo", "鞫为茂草": "jū wéi mào cǎo", "橘化为枳": "jú huà wéi zhǐ", "举世混浊": "jǔ shì hún zhuó", "举手相庆": "jǔ shǒu xiāng qìng", "矩步方行": "jǔ bù fāng xíng", "据为己有": "jù wéi jǐ yǒu", "锯牙钩爪": "jù yá gōu zhǎo", "聚米为谷": "jù mǐ wéi gǔ", "聚米为山": "jù mǐ wéi shān", "卷甲倍道": "juǎn jiǎ bèi dào", "卷旗息鼓": "juǎn qí xī gǔ", "卷土重来": "juǎn tǔ chóng lái", "卷席而葬": "juǎn xí ér zàng", "倦鸟知还": "juàn niǎo zhī huán", "撅天扑地": "juē tiān pū dì", "倔头倔脑": "juè tou juè nǎo", "倔头强脑": "juè tóu jiàng nǎo", "嚼穿龈血": "jiáo chuān yín xuè", "嚼墨喷纸": "jué mò pēn zhǐ", "嚼铁咀金": "jiáo tiě jǔ jīn", "攫为己有": "jué wéi jǐ yǒu", "军不血刃": "jūn bù xuè rèn", "君子好逑": "jūn zǐ hào qiú", "钧天广乐": "jūn tiān guǎng yuè", "麇骇雉伏": "jūn hài zhì fú", "峻阪盐车": "jùn bǎn yún chē", "开花结实": "kāi huā jié shí", "开华结果": "kāi huā jié guǒ", "埳井之蛙": "kǎn jǐng zhī wā", "糠豆不赡": "kang dou bu shan", "抗颜为师": "kàng yán wéi shī", "咳唾成珠": "ké tuò chéng zhū", "咳珠唾玉": "ké zhū tuò yù", "可发一噱": "kě fā yī jué", "克什米尔": "kè shí mǐ ěr", "刻木为鹄": "kè mù wéi hú", "刻木为吏": "kè mù wéi lì", "嗑牙料嘴": "kē yá liào zuǐ", "空腹便便": "kōng fù pián pián", "抠心挖血": "kōu xīn wā xuè", "口碑载道": "kǒu bēi zài dào", "口出大言": "kǒu chū dā yán", "口腹之累": "kǒu fù zhī lěi", "口干舌焦": "kǒu gàn shé jiāo", "口角风情": "kǒu jiǎo fēng qíng", "口角春风": "kǒu jiǎo chūn fēng", "口角生风": "kǒu jiǎo shēng fēng", "口轻舌薄": "kǒu qīng shé bó", "口吐珠玑": "kǒu tǔ zhū jī", "口血未干": "kǒu xuè wèi gān", "枯树生华": "kū shù shēng huā", "哭丧着脸": "kū sāng zhe liǎn", "苦中作乐": "kǔ zhōng zuò lè", "夸多斗靡": "kuā duō dòu mí", "宽大为怀": "kuān dà wéi huái", "宽豁大度": "kuān huō dà dù", "匡救弥缝": "kuāng jiù mí fèng", "匡其不逮": "kuāng qí bù dǎi", "旷日累时": "kuàng rì lěi shí", "旷若发蒙": "kuàng ruò fā méng", "亏心短行": "kuī xīn duǎn xíng", "窥间伺隙": "kuī jiàn sì xì", "揆理度情": "kuí lǐ duó qíng", "揆情度理": "kuí qíng duó lǐ", "魁梧奇伟": "kuí wǔ qí wěi", "愧天怍人": "kuì tiān zuò rén", "困知勉行": "kùn zhī miǎn xíng", "困兽犹斗": "kùn shòu yóu dòu", "拉枯折朽": "lā kū shé xiǔ", "兰艾难分": "lán ài nán fēn", "兰艾同焚": "lán ài tóng fén", "阑风长雨": "lán fēng zhàng yǔ", "澜倒波随": "lán dǎo bō suí", "狼狈为奸": "láng bèi wéi jiān", "狼餐虎咽": "láng cān hǔ yàn", "狼飡虎咽": "láng cān hǔ yān", "狼号鬼哭": "láng háo guǐ kū", "狼飧虎咽": "láng sūn hǔ yàn", "狼吞虎咽": "láng tūn hǔ yàn", "狼心狗行": "láng xīn gǒu xíng", "琅嬛福地": "láng huán fú dì", "唠唠叨叨": "lāo lāo dāo dāo", "牢什古子": "láo shí gǔ zi", "老调重弹": "lǎo diào zhòng dàn", "老调重谈": "lǎo diào chóng tán", "老师宿儒": "lǎo shī xiǔ rú", "潦原浸天": "lǎo yuán jìn tiān", "乐道好古": "lè dào hǎo gǔ", "乐山乐水": "yào shān yào shuǐ", "乐善好施": "lè shàn hào shī", "乐行忧违": "lè xíng yōu wéi", "磊落豪横": "lěi luò háo héng", "累牍连篇": "lěi dú lián piān", "累及无辜": "lěi jí wú gū", "累教不改": "lěi jiào bù gǎi", "累块积苏": "lěi kuài jī sū", "累累如珠": "lěi lěi rú zhū", "累卵之危": "lěi luǎn zhī wēi", "累苏积块": "lěi sū jī kuài", "累土聚沙": "lěi tǔ jù shā", "累土至山": "lěi tǔ zhì shān", "累瓦结绳": "lěi wǎ jié shéng", "累屋重架": "lěi wū chóng jià", "累月经年": "lěi yuè jīng nián", "累足成步": "lěi zú chéng bù", "擂天倒地": "léi tiān dǎo dì", "楞眉横眼": "lèng méi héng yǎn", "冷水浇头": "lěng shuǐ jiāo tóu", "冷血动物": "lěng xuè dòng wù", "梨眉艾发": "lí méi ài fā", "离本徼末": "lí běn yāo mò", "离本趣末": "lí běn qū mò", "离山调虎": "lí shān diào hǔ", "犁牛骍角": "lí niú mài jiǎo", "犁生骍角": "lí shēng yuè jiǎo", "犁庭扫闾": "lí tíng sǎo lǚ", "礼崩乐坏": "lǐ bēng yuè huài", "礼坏乐崩": "lǐ huài yuè bēng", "礼让为国": "lǐ ràng wéi guó", "礼为情貌": "lǐ wéi qíng mào", "李广不侯": "lǐ guǎng bù hòu", "哩哩啦啦": "li li lā lā", "哩哩罗罗": "li li luō luō", "力有未逮": "lì yǒu wèi dǎi", "历精更始": "lì jīng gèng shǐ", "历精为治": "lì jīng wéi zhì", "历历可数": "lì lì kě shǔ", "立身行己": "lì shēn xíng jǐ", "利令志惛": "lì lìng zhì zào", "沥血披肝": "lì xuè pī gān", "沥血叩心": "lì xuè kòu xīn", "沥血披心": "lì xuè pī xīn", "栎阳雨金": "lì yáng yǔ jīn", "詈夷为跖": "lì yí wéi zhí", "连编累牍": "lián biān lěi dú", "连街倒巷": "lián jiē dǎo xiàng", "连篇累牍": "lián piān lěi dú", "连中三元": "lián zhòng sān yuán", "联篇累牍": "lián piān lěi dú", "敛骨吹魂": "liǎn gǔ chuí hún", "敛声屏息": "liǎn shēng píng xī", "恋恋难舍": "liàn liàn nán shě", "梁孟相敬": "liáng mèng xiāng jìn", "两虎相斗": "liǎng hǔ xiāng dòu", "两鼠斗穴": "liǎng shǔ dòu xué", "量才而为": "liàng cái ér wéi", "量才录用": "liàng cái lù yòng", "量才器使": "liàng cái qì shǐ", "量材录用": "liàng cái lù yòng", "量己审分": "liàng jǐ shěn fēn", "量金买赋": "liàng jīn mǎi fù", "量力度德": "liàng lì duó dé", "量力而为": "liàng lì ér wéi", "量力而行": "liàng lì ér xíng", "量如江海": "liàng rú jiāng hǎi", "量入为出": "liàng rù wéi chū", "量入计出": "liàng rù jì chū", "量枘制凿": "liàng ruì zhì záo", "量时度力": "liàng shí dù lì", "量体裁衣": "liàng tǐ cái yī", "量小力微": "liàng xiǎo lì wēi", "量凿正枘": "liàng záo zhèng ruì", "寥寥可数": "liáo liáo kě shǔ", "撩蜂吃螫": "liáo fēng chī shì", "撩蜂剔蝎": "liáo fēng tì xiē", "燎发摧枯": "liǎo fà cuī kū", "燎如观火": "liǎo rú guān huǒ", "蓼虫忘辛": "liǎo chóng wàng xīn", "了不长进": "liǎo bù zhǎng jǐn", "了不可见": "liǎo bù kě jiàn", "了然无闻": "le rán wú wén", "了如指掌": "liǎo rú zhǐ zhǎng", "了身达命": "liǎo shēn dá mìng", "了若指掌": "liǎo ruò zhǐ zhǎng", "了无惧色": "liǎo wū jǔ sè", "埒才角妙": "liè cái jué miào", "裂冠毁冕": "liè guàn huǐ miǎn", "裂裳裹足": "liè cháng guǒ zú", "裂裳衣疮": "liè sháng yī chuāng", "临敌易将": "lín dí yì jiàng", "临难不避": "lín nán bù bì", "临难不惧": "lín nàn bù jǔ", "临难无慑": "lín nán wú shè", "临深履薄": "lín shēn lǚ bó", "临潼斗宝": "lín tóng dòu bǎo", "赁耳佣目": "lìn ěr yōng mù", "陵劲淬砺": "líng jìng cuì lì", "零零散散": "líng líng sǎn sǎn", "令不虚行": "lìng bù xū xíng", "令人捧腹": "lìng rén pěng fǔ", "令行禁止": "lìng xíng jìn zhǐ", "令行如流": "lìng xíng rú liú", "令原之戚": "líng yuán zhī qī", "流离颠疐": "liú lí diān shǔ", "流水朝宗": "liú shuǐ cháo zōng", "流水行云": "liú shuǐ xíng yún", "流血漂卤": "liú xuè piāo lǔ", "流血千里": "liú xuè qiān lǐ", "柳骨颜筋": "jiǔ gǔ yán jīn", "柳街花巷": "liǔ jiē huā xiòng", "柳巷花街": "liǔ xiòng huā jiē", "六尺之讬": "liù chǐ zhī quàn", "六神不安": "liù shén bǔ ān", "龙雏凤种": "lóng chú fèng zhǒng", "龙雕凤咀": "lóng diāo fèng jǔ", "龙生九种": "lóng shēng jiǔ zhǒng", "龙行虎变": "lóng xíng hǔ biàn", "龙行虎步": "lóng xíng hǔ bù", "龙血凤髓": "lóng xuè fèng suǐ", "龙血玄黄": "lóng xuě xuán huáng", "龙游曲沼": "long you qu zhao", "龙争虎斗": "lóng zhēng hǔ dòu", "笼络人心": "lǒng luò rén xīn", "笼鸟池鱼": "lóng niǎo shi yú", "笼鸟槛猿": "lóng niǎo jiàn yuán", "漏尽更阑": "lòu jìn gēng lán", "露面抛头": "lù miàn pāo tóu", "鲁斤燕削": "lǔ jīn yàn xuē", "鹭序鸳行": "lù xù yuān xíng", "鹭序鹓行": "lù xù yuān xíng", "驴唇马觜": "lǘ chún mǎ zī", "屡教不改": "lǚ jiàn bù gǎi", "履薄临深": "lǚ bó lín shēn", "率尔操觚": "shuài ér cāo gū", "率尔成章": "shuài ěr chéng zhāng", "率马以骥": "shuài mǎ yǐ jì", "率土归心": "shuài tǔ guī xīn", "率兽食人": "shuài shòu shí rén", "率土同庆": "shuài tǔ tóng qìng", "率土宅心": "shuài tǔ zhái xīn", "率以为常": "shuài yǐ wéi cháng", "率由旧则": "shuài yóu jiù zé", "率由旧章": "shuài yóu jiù zhāng", "绿林大盗": "lù lín dà dào", "绿林豪杰": "lù lín háo jié", "绿林好汉": "lù lín hǎo hàn", "绿林豪士": "lù lín háo shì", "绿林豪客": "lù lín háo kè", "绿林强盗": "lù lín qiáng dào", "绿女红男": "lǜ nǚ hóng nán", "绿叶成荫": "lǜ yè chéng yīn", "鸾颠凤倒": "luán diān fèng dǎo", "鸾凤和鸣": "luán fèng hè míng", "鸾漂凤泊": "luán piāo fèng bó", "鸾飘凤泊": "luán piāo fèng bó", "鸾跂鸿惊": "luán qí hóng jīng", "卵与石斗": "luǎn yǔ shí dòu", "乱箭攒心": "luàn jiàn cuán xīn", "乱作胡为": "luàn zuò hú wéi", "论功行封": "lùn gōng xíng fēng", "论黄数黑": "lùn huáng shǔ hēi", "捋袖揎拳": "luō xiù xuān quán", "罗织构陷": "luò zhī gòu xiàn", "裸裎袒裼": "luǒ chéng tǎn xī", "落草为寇": "luò cǎo wéi kòu", "落落难合": "luò luò nán hé", "落魄不羁": "luò pò bù jī", "落魄不偶": "luo tuo bu ou", "落魄江湖": "luò pò jīng hú", "马入华山": "mǎ rù huá shān", "马上房子": "mǎ shàng fáng zi", "马咽车阗": "mǎ yān chē tián", "埋三怨四": "mán sān yuàn sì", "埋天怨地": "mán tiān yuàn dì", "买椟还珠": "mǎi dú huán zhū", "卖李钻核": "mài lǐ zuān hé", "卖俏行奸": "mài qiào xíng jiān", "卖文为生": "mài wén wéi shēn", "脉脉相通": "mài mài xiāng tōng", "满不在乎": "mǎn bù zài hū", "谩不经意": "màn bù jīng yì", "谩藏诲盗": "màn cáng huì dào", "谩辞哗说": "màn cí huá shuō", "谩天谩地": "màn tiān màn dì", "漫天遍地": "màn shān biàn dì", "尨眉皓发": "máng méi hào fà", "猫鼠同处": "māo shǔ tóng chǔ", "毛发不爽": "máo fā bù shuǎng", "毛发倒竖": "máo fā dǎo shù", "毛发悚然": "máo fā sǒng rán", "毛发耸然": "máo fā sǒng rán", "毛遂堕井": "máo suí duò jǐng", "毛头小子": "máo tóu xiǎo zi", "茅塞顿开": "máo sè dùn kāi", "冒名接脚": "mào míng jiě jiǎo", "貌合行离": "mào hé xíng lí", "没颠没倒": "méi diān méi dǎo", "没金饮羽": "mò jīn yǐn yǔ", "没没无闻": "mò mò wú wén", "没世不渝": "méi shì bù yú", "没世穷年": "méi shì qióng nián", "没世无称": "méi shì wú chēng", "没世无闻": "méi shì wú wén", "没头苍蝇": "méi tóu cāng ying", "没头没尾": "méi tóu mò wěi", "没完没了": "méi wán méi liǎo", "没衷一是": "mò zhōng yī shì", "昧旦晨兴": "mèi dàn chún xīng", "门单户薄": "mén dān hù bó", "扪参历井": "mén shēn lì jǐng", "闷海愁山": "mèn hǎi chóu shān", "闷闷不乐": "mèn mèn bù lè", "蒙古人种": "měng gǔ rén zhǒng", "蒙头转向": "mēng tóu zhuàn xiàng", "孟什维克": "mèng shí wéi kè", "迷恋骸骨": "mí liàn hài gǔ", "迷迷糊糊": "mí mí hu hū", "靡靡之乐": "mǐ mǐ zhī yuè", "靡然从风": "mǐ rán cóng fēng", "靡衣偷食": "mǐ yī tōu shí", "靡衣媮食": "mǐ yī tōu shí", "靡有孑遗": "mǐ yǒu jié yí", "绵里薄材": "mián lǐ bó cái", "绵力薄材": "mián lì bó cái", "黾穴鸲巢": "měng xué qú cháo", "俛首帖耳": "mǎ shǒu tiē ěr", "俛拾地芥": "bì shí dì jiè", "勉为其难": "miǎn wéi qí nán", "面折廷诤": "miàn shé tíng zhèng", "面折庭争": "miàn shé tíng zhēng", "邈处欿视": "miǎo chǔ jī shì", "灭景追风": "miè yǐng zhuī fēng", "名实相副": "míng shí xiāng fù", "名实相符": "míng shí xiāng fú", "名我固当": "ming wo gu dang", "明窗净几": "míng chuāng jìng jī", "明效大验": "míng xiào dà yà", "明争暗斗": "míng zhēng àn dòu", "鸣凤朝阳": "míng fèng zhāo yáng", "鸣鹤之应": "míng hè zhī yīng", "冥漠之都": "míng mò zhī dōu", "冥行盲索": "míng xíng máng suǒ", "冥行擿埴": "míng xíng zhì zhí", "冥昭瞢闇": "míng zhāo méng àn", "命薄缘悭": "mìng báo yuán qiān", "命中注定": "mìng zhōng zhù dìng", "缪种流传": "miù zhǒng liú chuán", "摸不着边": "mō bù zhuó biān", "摸门不着": "mō mén bù zháo", "摸头不着": "mō tóu bù zháo", "模模糊糊": "mó mó hu hū", "磨棱刓角": "mó léng liǎng jiǎo", "磨砻镌切": "mó lóng juān qiē", "磨牙吮血": "mó yá shǔn xuè", "抹粉施脂": "mò fěn shī zhī", "抹月秕风": "mǒ yuè pī fēng", "末节细行": "mò jié xì xíng", "莫此为甚": "mò cǐ wéi shèn", "莫为已甚": "mò wéi yǐ shèn", "莫予毒也": "mò yù dú yě", "莫知所为": "mò zhī suǒ wéi", "侔色揣称": "móu sè chuǎi chèn", "谋听计行": "móu tīng jì xíng", "谋为不轨": "móu wéi bù guǐ", "木干鸟栖": "mù gàn niǎo qī", "木头木脑": "mù tóu mù nǎo", "目不见睫": "mù bù jiàn jié", "目不暇给": "mù bù xiá jǐ", "目瞪舌彊": "mù dèng shé jiàng", "目量意营": "mù liàng yì yíng", "目空余子": "mù kōng yú zǐ", "目挑心招": "mù tiǎo xīn zhāo", "目窕心与": "mù tiǎo xīn yǔ", "目无尊长": "mù wú zūn zhǎng", "目眢心忳": "mù yuān xīn wǎng", "沐猴衣冠": "mù hóu yī guàn", "沐猴而冠": "mù hóu ér guàn", "牧猪奴戏": "mù zhòu nú xì", "暮楚朝秦": "mù chǔ cháo qín", "慕古薄今": "mù gǔ bó jīn", "暮爨朝舂": "mù cuàn cháo chōng", "暮翠朝红": "mù cuì cháo hóng", "暮鼓朝钟": "mù gǔ cháo zhōng", "暮去朝来": "mù qù cháo lái", "暮四朝三": "mù sì cháo sān", "暮想朝思": "mù xiǎng cháo sī", "拿粗夹细": "ná cū jiā xì", "拿腔作调": "ná qiāng zuò diào", "内峻外和": "nèi jùn wai hé", "内柔外刚": "nèi róu wai gāng", "内修外攘": "nèi xiū wai rǎng", "那么点儿": "nà me diǎn er", "纳新吐故": "nà xīn tǔ gù", "南贩北贾": "nán fàn běi gǔ", "南蛮鴂舌": "nán mán xiāng shé", "南腔北调": "nán qiāng běi diào", "南棹北辕": "nán zhào běi yuán", "难得糊涂": "nán dé hú tú", "难分难舍": "nán fēn nán shě", "难更仆数": "nán gēng pú shǔ", "难乎为情": "nán hū wéi qíng", "难乎为继": "nán hū wéi jì", "难进易退": "nan jin yi tui", "难舍难分": "nán shě nán fēn", "难兄难弟": "nàn xiōng nàn dì", "难以为情": "nán yǐ wéi qíng", "难以为继": "nán yǐ wéi jì", "囊萤照读": "náng yíng zhào shū", "挠直为曲": "náo zhí wéi qū", "讷言敏行": "nè yán mǐn xíng", "能不称官": "néng bù chèn guān", "能者为师": "néng zhě wéi shī", "泥而不滓": "niè ér bù zǐ", "泥名失实": "nì míng shī shí", "泥蟠不滓": "ní pān bù zǐ", "儗不于伦": "lǐ bù yú lún", "儗非其伦": "nǐ fēi qí lún", "逆耳利行": "nì ěr lì xíng", "逆施倒行": "nì shī dǎo xíng", "年华垂暮": "nián huá thuí mù", "年湮世远": "nián yān shì yuǎn", "年谊世好": "nián yì shì hào", "捻土为香": "niǎn tǔ wéi xiāng", "念念有词": "niàn niàn yǒu cǐ", "袅袅娜娜": "niǎo niǎo nuó nuó", "啮血沁骨": "niè xuè qìn gǔ", "啮血为盟": "niè xuè wéi méng", "蹑蹻担簦": "niè juē dān dēng", "孽障种子": "niè zhàng zhǒng zǐ", "宁缺毋滥": "nìng quē wù làn", "宁缺勿滥": "nìng quē wù làn", "宁死不屈": "nìng sǐ bù qū", "宁折不弯": "nìng zhé bù wān", "牛骥同皁": "niú jì tóng wěn", "扭直作曲": "niǔ zhí zuò qū", "扭转干坤": "niǔ zhuǎn gàn kūn", "浓抹淡妆": "nóng mò dàn zhuāng", "浓装艳抹": "nóng zhuāng yàn mò", "弄兵潢池": "nòng bīng huáng shi", "弄粉调朱": "nòng fěn diào zhū", "弄管调弦": "nòng guǎn diào xián", "弄口鸣舌": "nòng kǒu míng shé", "弄玉吹箫": "nòng yù chuí xiāo", "弄竹弹丝": "nòng zhú dàn sī", "怒发冲冠": "nù fà chōng guān", "女长当嫁": "nǚ zhǎng dāng jià", "女长须嫁": "nǚ zhǎng xū jià", "女大难留": "nǚ dà nán liú", "喏喏连声": "nuò nuò lián shēng", "呕心滴血": "ǒu xīn dī xuè", "呕心沥血": "ǒu xīn lì xuè", "偶一为之": "ǒu yī wéi zhī", "沤沫槿艳": "ōu mò jǐn yàn", "沤浮泡影": "ōu fú pào yǐng", "沤珠槿艳": "ōu zhū jǐn yàn", "排难解纷": "pái nàn jiě fēn", "排山倒海": "pái shān dǎo hǎi", "排忧解难": "pái yōu jiě nàn", "攀蟾折桂": "pān chán shé guì", "攀花折柳": "pān huā shé liǔ", "滂沱大雨": "páng tuó dà yǔ", "庞眉皓发": "páng méi hào fà", "旁通曲鬯": "páng tōng qǔ chàng", "旁通曲畅": "páng tōng qǔ chàng", "旁行斜上": "páng xíng xié shàng", "旁引曲证": "páng yǐn qǔ zhèng", "旁指曲谕": "páng zhǐ qǔ yù", "抛头露面": "pāo tóu lù miàn", "炮凤烹龙": "páo fèng pēng lóng", "炰鳖脍鲤": "fèng biē kuài lǐ", "跑马卖解": "pǎo mǎ mài xiè", "喷血自污": "pēn xuè zì wū", "喷云吐雾": "pēn yún tǔ wù", "烹龙炮凤": "pēng lóng páo fèng", "朋比为奸": "péng bǐ wéi jiān", "批风抹月": "pī fēng mò yuè", "批吭捣虚": "pī háng dǎo xū", "批隙导窾": "pī xì dǎo yín", "批砉导窾": "pī huā dǎo táo", "披发文身": "pī fà wén shēn", "披发缨冠": "pī fā yīng guàn", "披发入山": "pī fā rù shān", "披肝沥血": "pī gān lì xuè", "披心沥血": "pī xīn lì xuè", "噼里啪啦": "pī lǐ pā lā", "疲于奔命": "pí yú bēn mìng", "匹夫有责": "pǐ fū yǒu zé", "睥睨一切": "pì nì yī qiè", "片甲不还": "piàn jiǎ bù huán", "片鳞半爪": "piàn lín bàn zhǎo", "片言只语": "piàn yán zhǐ yǔ", "片言只字": "piàn yán zhǐ zì", "片语只辞": "piàn yán zhǐ cí", "片纸只字": "piàn zhǐ yán zì", "偏听偏信": "piān tīng piāng xìn", "翩翩年少": "piān piān nián shǎo", "骈肩累迹": "pián jiān lěi jì", "骈肩累足": "pián jiān lěi zú", "飘籓坠溷": "piāo fān zhuì hùn", "贫嘴薄舌": "pín zuǐ bó shé", "品竹调弦": "pǐn zhú diào xián", "娉婷婀娜": "pīng tíng ē nà", "平澹无奇": "píng dàn wú qí", "平铺直叙": "píng pū zhí xù", "凭几据杖": "píng jī jù zhàng", "屏气吞声": "píng qì tūn shēng", "屏声息气": "bǐng shēng xī qì", "帡天极地": "jú tiān jí dì", "萍飘蓬转": "píng piāo péng zhuàn", "瓶坠簪折": "píng zhùi zān zhé", "破愁为笑": "pò chóu wéi xiào", "破觚为圜": "pò gū wéi yuán", "破家为国": "pò jiā wéi guó", "破镜重合": "pò jìng zhòng hé", "破矩为圆": "pò jǔ wéi yuán", "破涕为笑": "pò tì wéi xiào", "仆仆亟拜": "pú pú jí bài", "铺锦列绣": "pū jǐn liè xiù", "铺眉蒙眼": "pū méi méng yǎn", "铺眉苫眼": "pū méi shàn yǎn", "铺胸纳地": "pū xiōng nà dì", "铺天盖地": "pū tiān gài dì", "普天率土": "pǔ tiān shuài tǔ", "七病八倒": "qī bìng bā dǎo", "七颠八倒": "qī diān bā dǎo", "七老八倒": "qī lǎo bā dǎo", "妻儿老少": "qī ér lǎo shǎo", "妻梅子鹤": "qī mén zǐ hè", "栖风宿雨": "qī fēng xiǔ yǔ", "期期艾艾": "qī qī ài ài", "欺天诳地": "qī tiān kuāng dì", "嘁哩喀喳": "qī lǐ kā chā", "齐量等观": "qí liàng děng guān", "齐王舍牛": "qí wáng shě niú", "其道亡繇": "qí dào wáng yáo", "奇葩异卉": "qí pā yì hùi", "耆德硕老": "qí dé shuò lǎo", "耆年硕德": "qí nián shuò dé", "骑驴倒堕": "qí lǘ dǎo duò", "棋输先著": "qí shū xiān zhuó", "棋高一着": "qí gāo yī zhāo", "棋输先着": "qí shū xiān zhāo", "綦溪利跂": "qí xī lì guì", "岂弟君子": "kǎi tì jūn zǐ", "启瞶振聋": "qǐ guì zhèn lóng", "起偃为竖": "qǐ yǎn wéi shù", "气冲斗牛": "qì chōng dǒu niú", "气克斗牛": "qì kè dǒu niú", "气息奄奄": "qì xī yān yān", "弃之度外": "qì zhī dù wai", "泣不成声": "qǐ bù chéng shēng", "泣下如雨": "qǐ xià rú yǔ", "恰如其分": "qià rú qí fèn", "千差万别": "qiān chā wàn bié", "千古绝调": "qiān gǔ jué diào", "千里一曲": "qiān lǐ yī qǔ", "千了百当": "qiān liǎo bǎi dàng", "千了万当": "qiān le wàn dàng", "千虑一得": "qiān lǜ yī dé", "千磨百折": "qiān mó bǎi shé", "千态万状": "qiān tai wàn zhuàng", "千载一弹": "qiān zǎi yī dàn", "千载一合": "qiān zài yī hé", "千状万态": "qiān zhuàng wàn tai", "千姿万态": "qiān zī wàn tai", "牵强附合": "qiān qiáng fù hé", "牵强附会": "qiān qiáng fù huì", "牵羊担酒": "qiān yáng dàn jiǔ", "搴旗取将": "qiān qí qǔ jiàng", "搴旗斩将": "qiān qí zhǎn jiàng", "前跋后疐": "qián bá hòu máo", "前仆后继": "qián pū hòu jì", "前言往行": "qián yán wǎng xíng", "潜德秘行": "qián dé mì xíng", "潜德隐行": "qián dé yǐn xíng", "遣兵调将": "qiǎn bīng diào jiàng", "遣将调兵": "qiǎn jiāng diào bīng", "遣兴陶情": "qiǎn xìng táo qíng", "枪林弹雨": "qiāng lín dàn yǔ", "强词夺理": "qiǎng cí duó lǐ", "强得易贫": "qiǎng dé yì pín", "强词夺正": "qiǎng cí duó zhèng", "强而后可": "qiǎng ér hòu kě", "强凫变鹤": "qiǎng fú biàn hè", "强干弱枝": "qiáng gān ruò zhī", "强聒不舍": "qiǎng guō bù shě", "强弓劲弩": "qiáng gōng jìng nǔ", "强识博闻": "qiǎng shí bó wén", "强食靡角": "qiǎng shí mí jiǎo", "强食自爱": "qiǎng shí zì ài", "强死赖活": "qiǎng sǐ lài huó", "强死强活": "qiǎng sǐ qiǎng huó", "强文假醋": "qiǎng wén jiǎ cù", "强文浉醋": "qiǎng wén jiǎ cù", "强直自遂": "qiáng zhí zì suí", "强自取折": "qiáng zì qǔ shé", "强嘴拗舌": "jiàng zuǐ niù shé", "强作解人": "qiǎng zuò jiě rén", "抢地呼天": "qiāng dì hū tiān", "敲骨剥髓": "qiāo gǔ bāo suǐ", "敲敲打打": "qiāo qiāo dā dā", "巧发奇中": "qiǎo fā qí zhòng", "翘足而待": "qiáo zú ér dài", "翘足引领": "qiáo zú yǐn lǐng", "鞘里藏刀": "qiào lǐ cáng dāo", "切瑳琢磨": "qiē cùn zhuó mó", "切近的当": "qiē jìn de dāng", "切理会心": "qiē lǐ huì xīn", "切理厌心": "qiē lǐ yàn xīn", "切理餍心": "qiē lǐ yàn xīn", "切切此布": "qiè qiè cǐ bù", "切切在心": "qiè qiè zài xīn", "切切私语": "qiè qiè sī yǔ", "切身体会": "qiē shēn tǐ huì", "切树倒根": "qiē shù dǎo gēn", "切中要害": "qiē zhōng yào hài", "且食蛤蜊": "qiě shí há lí", "且住为佳": "qiě zhù wéi jiā", "挈瓶之知": "qiè píng zhī zhì", "琴瑟之好": "qí sè zhī hǎo", "擒奸擿伏": "qín jiān fā fú", "螓首蛾眉": "qín shǒu ér méi", "寝苫枕干": "qǐn shān zhěn gàn", "青藏高原": "qīng zàng gāo yuán", "青红皁白": "qīng hóng tóu bái", "青林黑塞": "qīng lín hēi sài", "青紫被体": "qīng zǐ pī tǐ", "轻薄无礼": "qīng báo wú lǐ", "轻薄无行": "qīng báo wú xíng", "轻才好施": "qīng cái hào shī", "轻薄无知": "qīng báo wú zhī", "轻财好义": "qīng cái hào yì", "轻骑简从": "qīng jì jiǎn cóng", "轻吞慢吐": "qīng tūn màn tǔ", "轻傜薄赋": "qīng yāo báo fù", "轻繇薄赋": "qīng yáo báo fù", "轻重量级": "qīng zhòng liàng jí", "轻嘴薄舌": "qīng zuǐ bó shé", "倾肠倒肚": "qīng cháng dào dǔ", "倾心吐胆": "qīng xīn tǔ dǎn", "清辞丽曲": "qīng cí lì qǔ", "清都绛阙": "qīng dōu jiàng què", "清都紫府": "qīng dōu zǐ fǔ", "清都紫微": "qīng dōu zǐ wēi", "清风劲节": "qīng fēng jìng jié", "情非得已": "qíng fēi dé yǐ", "情见乎辞": "qíng xiàn hū cí", "情见力屈": "qíng xiàn lì qū", "情见势屈": "qíng xiàn shì qū", "情见埶竭": "qíng jiàn zhōu jié", "情凄意切": "qíng qī yì qiē", "穷年累世": "qióng nián lěi shì", "穷年累月": "qióng nián lěi yuè", "穷形尽相": "qióng xíng jìn xiàng", "秋实春华": "qiū shí chūn huā", "秋行夏令": "qiū xíng xià líng", "曲高和寡": "qǔ gāo hè guǎ", "曲不离口": "qǔ bù lí kǒu", "曲肱而枕": "qǔ gōng ér zhěn", "曲里拐弯": "qū lǐ guǎn wān", "曲眉丰颊": "qǔ méi fēng jiá", "曲曲折折": "qū qū zhé shé", "曲突移薪": "qǔ tū yí xīn", "曲学诐行": "qǔ xué hǎo xíng", "曲学阿世": "qǔ xué ā shì", "曲意承迎": "qǔ yì chéng yíng", "曲意奉迎": "qǔ yì fèng yíng", "曲意迎合": "qǔ yì yíng hé", "曲终奏雅": "qǔ zhōng zòu yǎ", "诎要桡腘": "qū yào ráo yù", "屈指可数": "qū zhǐ kě shǔ", "取青妃白": "qǔ qīng fēi bái", "取予有节": "qǔ yù yǒu jié", "去太去甚": "qù tai qù shèn", "圈牢养物": "juàn láo yǎng wù", "权倾中外": "quán qīng zhōng wai", "缺吃少穿": "quē chī xhǎo chuān", "却老还童": "què lǎo huán tóng", "却行求前": "què xíng qiú qián", "雀屏中选": "què píng zhòng xuǎn", "群雌粥粥": "qún cí yù yù", "群居穴处": "qún jū xué chǔ", "染须种齿": "rǎn xū zhǒng chǐ", "热熬翻饼": "rě áo fān bǐng", "人才济济": "rén cái jǐ jǐ", "人才难得": "rén cái cái dé", "人给家足": "rén jǐ jiā zú", "人莫予毒": "rén mò yú dú", "人模狗样": "rén mú gǒu yàng", "人生朝露": "rén shēng cháo lù", "人涉卬否": "rén shè áng fǒu", "人事不省": "rén shì bù xǐng", "人行横道": "rén xíng héng dào", "人言藉藉": "rén yán jí jí", "人自为战": "rén zì wéi zhàn", "人足家给": "rén zú jiā jǐ", "忍俊不住": "rěn jùn bù zhù", "忍俊不禁": "rěn jùn bù jìn", "认贼为子": "rèn zéi wéi zǐ", "认影为头": "rèn yǐng wéi tóu", "任达不拘": "rèn láo bù jū", "认贼为父": "rèn zéi wéi fù", "日薄西山": "rì bó xī shān", "日不暇给": "rì bù xiá jǐ", "日旰不食": "rì gàn bù shí", "日旰忘食": "rì gàn wàng shí", "日旰忘餐": "rì gàn wàng cān", "日积月累": "rì jī yuè lěi", "日省月课": "rì xǐng yuè kè", "日省月试": "rì xǐng yuè shì", "日削月朘": "rì xuē yuè juān", "日削月割": "rì xuē yuè gē", "日省月修": "rì xǐng yuè xiū", "日行千里": "rì xíng qiān lǐ", "日月参辰": "rì yuè shēn chén", "日昃旰食": "rì zè gàn shí", "日中必湲": "rì zhōng bì tóng", "日中为市": "rì zhōng wéi shì", "日朘月减": "rì juān yuè jiǎn", "日朘月削": "rì juān yuè xuē", "戎马劻勷": "róng mǎ dān xiào", "融为一体": "róng wéi yī tǐ", "柔情绰态": "róu qíng chuō tai", "柔茹刚吐": "róu rú gāng tǔ", "肉薄骨并": "ròu bó gǔ bìng", "如登春台": "rú dé chūn tái", "如履薄冰": "rú lǚ bó bīng", "如切如磋": "rú qiē rú cuō", "如数家珍": "rú shǔ jiā zhēn", "如水投石": "rú shǔ tóu shí", "如之奈何": "rú zhī nai hé", "茹毛饮血": "rú máo yǐn xuè", "茹柔吐刚": "rú róu tǔ gāng", "汝成人耶": "nu cheng ren ye", "乳臭未除": "rǔ chòu wèi chú", "辱国丧师": "rǔ guó sàng shī", "入理切情": "rù lǐ qiē qíng", "入铁主簿": "rù tiě zhǔ bù", "入土为安": "rù tú wéi ān", "入吾彀中": "rù wǔ gòu zhōng", "入孝出弟": "rù xiào chū tì", "软红香土": "ruǎn hóng xiāng yù", "撒豆成兵": "sǎ dòu chéng bīng", "洒扫应对": "sǎ sào yìng duì", "洒心更始": "sǎ xīn gèng shǐ", "塞井焚舍": "sāi jǐng fén shě", "塞翁得马": "sài wēng dé mǎ", "塞翁失马": "sài wēng shī mǎ", "塞翁之马": "sài wēng zhī mǎ", "三不拗六": "sān bù niù liù", "三差两错": "sān chā liǎng cuò", "三差五错": "sān chā wǔ cuò", "三朝五日": "sān cháo wǔ rì", "三朝元老": "sān cháo yuán lǎo", "三年五载": "sān nián wǔ zài", "三人为众": "sān rén wèi zhòng", "三省吾身": "sān xǐng wú shēn", "三思而行": "sān sī ér xíng", "三吐三握": "sān tǔ sān wò", "三瓦两舍": "sān wǎ liǎng shě", "三徙成都": "sān xǐ chéng dōu", "三灾八难": "sān zāi bā nàn", "三占从二": "sān zhān cóng èr", "三战三北": "sān zhān sān běi", "三座大山": "sān zuò tài shān", "桑户棬枢": "sāng hù juàn shū", "桑土绸缪": "sāng tǔ chóu miù", "桑荫不徙": "sāng yīn bù xǐ", "桑荫未移": "sāng yīn wèi yí", "丧胆销魂": "sàng hún xiāo hún", "丧魂落魄": "sàng hún luò pò", "色厉胆薄": "sè lì dǎn bó", "色仁行违": "sè rén xíng wéi", "杀鸡为黍": "shā jī wéi shǔ", "杀妻求将": "shā qī qiú jiàng", "杀衣缩食": "shài yī suō shí", "沙鸥翔集": "sha ou xiang ji", "歃血为盟": "shà xuè wéi méng", "山公倒载": "shān gōng dǎo zǎi", "山节藻棁": "shān jié zǎo lì", "山溜穿石": "shān liù chuān shí", "山行海宿": "shān xíng hǎi xiǔ", "山殽野湋": "shān yāo yě fù", "山阴乘兴": "shān yīn chéng xīng", "山止川行": "shān zhǐ chuān xíng", "山峙渊渟": "shān zhì yuān zī", "讪牙闲嗑": "shàn yá xián kē", "苫眼铺眉": "shān yǎn pū méi", "扇枕温被": "shān zhěn wēn chuáng", "扇枕温席": "shān zhěn wēn xí", "善财难舍": "shàn cái nán shě", "善贾而沽": "shàn jià ér gū", "善善恶恶": "shàn shàn wù è", "善为说辞": "shàn wéi shuō cí", "善自为谋": "shàn zì wéi móu", "赏不当功": "shǎng bù dāng gōng", "上当学乖": "shàng dāng xué guāi", "少不更事": "shào bù gēng shì", "少不经事": "shào bù jīng shì", "少成若性": "shào chéng ruò xìng", "少年老诚": "shǎo nián lǎo chéng", "蛇蝎为心": "shé xiē wéi xīn", "舍策追羊": "shě cè zhuī yáng", "舍己从人": "shě jǐ cóng rén", "舍短取长": "shě duǎn qǔ cháng", "舍近即远": "shě jìn jí yuǎn", "舍己为人": "shě jǐ wèi rén", "舍己为公": "shě jǐ wèi gōng", "舍近求远": "shě jìn qiú yuǎn", "舍近务远": "shě jìn wù yuǎn", "舍我其谁": "shě wǒ qí shuí", "舍身为国": "shě shēn wéi guó", "设身处地": "shè shēn chǔ dì", "设心处虑": "shè xīn chǔ lǜ", "身单力薄": "shēn dān lì bó", "身体发肤": "shēn tǐ fà fū", "身无长物": "shēn wú cháng wù", "身无择行": "shēn wú zé xíng", "身先朝露": "shēn xiān cháo lù", "深仇宿怨": "shēn chóu xiǔ yuàn", "深恶痛嫉": "shēn wù tòng jí", "深恶痛绝": "shēn wù tòng jué", "深恶痛疾": "shēn wù tòng jí", "深更半夜": "shēn gēng bàn yè", "深谷为陵": "shēn gǔ wéi líng", "深厉浅揭": "shēn lì qiǎn qì", "深切着白": "shēn qiē zhe bái", "深切着明": "shēn qiē zhe míng", "深文曲折": "shēn wén qǔ shé", "深文周内": "shēn wén zhōu nà", "神不收舍": "shén bù shōu shě", "神不守舍": "shén bù shǒu shě", "神差鬼使": "shén chāi guǐ shǐ", "神出鬼没": "shén chū guǐ mò", "神号鬼哭": "shén háo guǐ kū", "神龙失埶": "shén lóng shī zhì", "神武挂冠": "shén wǔ guà guàn", "沈博绝丽": "chén bó jué lì", "审己度人": "shěn jǐ duó rén", "审时度势": "shěn shí duó shì", "审曲面埶": "shěn qǔ miàn xīn", "生拖死拽": "shēng tuō sǐ zhuāi", "绳愆纠缪": "sheng qian jiu miu", "圣君贤相": "shèng jīng xián xiàng", "圣经贤传": "shèng jīng xián zhuàn", "盛水不漏": "chéng shuǐ bù lòu", "尸居龙见": "shī jū lóng xiàn", "失而复得": "shī ér fù de", "失魂落魄": "shī hún luò pò", "失马塞翁": "shī mǎ sài wēng", "师直为壮": "shī zhí wéi zhuàng", "虱处裈中": "shī chǔ kūn zhōng", "诗书发冢": "shī shū fà zhǒng", "施施而行": "shī shī ér xíng", "十不当一": "shí bù huò yī", "十夫楺椎": "shí fū zhī zhuī", "十魔九难": "shí mó jiǔ nàn", "什围伍攻": "shí wéi wǔ gōng", "什袭而藏": "shí xī ér cáng", "什伍东西": "shí wǔ dōng xī", "什袭以藏": "shí xí yǐ cáng", "什袭珍藏": "shí xí zhēn cáng", "石室金匮": "shí shì jīn guì", "石英玻璃": "shí yīng bō li", "时亨运泰": "shí hēng yùn tai", "时来运转": "shí lái yùn zhuǎn", "时运不齐": "shí yùn bù jì", "识微知著": "shí wēi zhī zhuó", "实偪处此": "shí bèng chǔ cǐ", "实逼处此": "shí bī chǔ cǐ", "实蕃有徒": "shí fān yǒu tú", "实与有力": "shí yù yǒu lì", "拾带重还": "shí dài zhòng huán", "拾掇无遗": "shi duo wu yi", "拾遗补阙": "shí yí bǔ quē", "食不下咽": "shí bù xià yàn", "食不重肉": "shí bù zhóng ròu", "食不重味": "shí bù chóng wèi", "食为民天": "shí wéi mín tiān", "使羊将狼": "shǐ yáng jiàng láng", "事与心违": "shì yù xīn wéi", "事在必行": "shì zài bì xíng", "势在必行": "shì zài bì xíng", "视而不见": "shì ér bù jiàn", "视微知著": "shì wēi zhī zhuó", "视为儿戏": "shì wéi ér xì", "视为寇雠": "shì wéi kòu chóu", "视为畏途": "shì wéi wèi tú", "视为知己": "shì wéi zhī jǐ", "饰非遂过": "shì fēi suí guò", "饰情矫行": "shì qíng jiǎo xíng", "饰智矜愚": "shì zhì jīn yú", "是非得失": "shì fēi dé shī", "是非分明": "shì fēi fēn míng", "是非曲直": "shì fēi qǔ zhí", "适当其冲": "shì dāng qí chōng", "适当其时": "shì dāng qí shí", "适居其反": "shì jú qí fǎn", "适情率意": "shì qíng shuài yì", "适如其分": "shì rú qí fèn", "适时应务": "shì shí yīng wù", "释知遗形": "shì shì yí xíng", "螫手解腕": "shì shǒu jǐe wǎn", "收因种果": "shōu yīn zhǒng guǒ", "手不应心": "shǒu bù yīng xīn", "手脚干净": "shǒu jiǎo gàn jìng", "手足异处": "shǒu zú yì chǔ", "手足重茧": "shǒu zú chóng jiǎn", "守分安常": "shǒu fēn ān cháng", "守土有责": "shǒu tǔ yǒu zé", "首足异处": "shǒu zú yì chǔ", "瘦骨嶙峋": "shòu gǔ lí xún", "瘦骨梭棱": "shòu gǔ léng léng", "书缺有间": "shū quē yǒu jiàn", "叔度陂湖": "shū dù bēi hú", "疏不间亲": "shū bù jiàn qīn", "束椽为柱": "shù chuán wéi zhù", "束发封帛": "shù fā fēng bó", "束带结发": "shù dài jié fā", "束蒲为脯": "shù pú wéi pú", "束身自好": "shù shēn zì hào", "束缊举火": "shù yūn jǔ huǒ", "束缊还妇": "shù yūn huán fù", "树碑立传": "shù bēi lì zhuàn", "树倒根摧": "shù dǎo gēn cuī", "数白论黄": "shǔ bái lùn huáng", "数不胜数": "shǔ bù shèng shǔ", "数典忘祖": "shǔ diǎn wàng zǔ", "数短论长": "shǔ duǎn lùn cháng", "数黑论黄": "shǔ hēi lùn huáng", "数黄道黑": "shu huang dao hei", "数见不鲜": "shuò jiàn bù xiān", "数理逻辑": "shù lǐ luó ji", "数米量柴": "shǔ mǐ ér chái", "数往知来": "shǔ wǎng zhī lái", "数米而炊": "shǔ mǐ ér chuī", "数一数二": "shǔ yī shǔ èr", "数以万计": "shǔ yǐ wàn jì", "双柑斗酒": "shuài gān dǒu jiǔ", "双足重茧": "shuāng zú chóng jiǎn", "霜行草宿": "shuāng xíng cǎo xiǔ", "爽心豁目": "shuǎng xīn huō mù", "水长船高": "shuǐ zhǎng chuán gāo", "水到鱼行": "shuǐ dào yú xíng", "水调歌头": "shuǐ diào gē tóu", "水米无干": "shuǐ mǐ wú gàn", "水宿风餐": "shuǐ xiǔ fēng cān", "水宿山行": "shuǐ xiǔ shān xíng", "水中著盐": "shuǐ zhōng zhuó yán", "水中捉月": "shui zhong zhuo yue", "顺风吹火": "shǔn fēng chuī huǒ", "顺风而呼": "shǔn fēng ér hū", "顺风使船": "shǔn fēng shǐ chuán", "顺风驶船": "shǔn fēng shǐ chuán", "顺风转舵": "shǔn fēng zhuǎn duò", "顺天应时": "shùn tiān yīng shí", "铄古切今": "shuò gǔ qiē jīn", "硕望宿德": "shuò wàng xiǔ dé", "槊血满袖": "shuò xuè mǎn xiù", "丝恩发怨": "sī ēn fà yuàn", "思所逐之": "si shuo zhu zi", "斯事体大": "ī shì tǐ dà", "死有余责": "sǐ yǒu yú zé", "四不拗六": "sì bù niù liù", "四海为家": "sì hǎi wéi jiā", "四马攒蹄": "sì mǎ cuán tí", "四亭八当": "sì tíng bā dàng", "騃女痴男": "ái nǚ chī nán", "騃童钝夫": "ái tóng dùn fū", "松筠之节": "sōng jūn zhī jié", "宋斤鲁削": "sòng jīn lǔ xuē", "薮中荆曲": "sǒu zhōng jí qǔ", "搜岩采干": "sōu yán cǎi gàn", "夙兴夜处": "sù xīng yè chǔ", "素隐行怪": "sù yǐn xíng guài", "宿水餐风": "xiǔ shuǐ cān fēng", "宿水飡风": "xiǔ shuǐ cān fēng", "宿雨餐风": "xiǔ yǔ cān fēng", "随风倒舵": "suí fēng dǎo duò", "随风而靡": "suí fēng ér mǐ", "随物应机": "suí wù yīng jī", "随行逐队": "suí xíng zhú duì", "岁聿其莫": "suì yù qí mù", "岁月不居": "suì yuè bù jú", "遂非文过": "suí fēi wén guò", "遂迷不寤": "suí mí bù wù", "遂迷不窹": "suí méi bù wù", "遂心应手": "suì xīn yīng shǒu", "睟面盎背": "suì miàn àng bèi", "损军折将": "sǔn jūn zhé jiàng", "损兵折将": "sǔn bīng zhé jiàng", "所作所为": "suǒ zuò suǒ wéi", "索隐行怪": "suǒ yǐn xíng guài", "狧穅及米": "shì kǎn jí mǐ", "骀背鹤发": "dài bèi hè fā", "太山北斗": "tài shān běi dòu", "泰极而否": "tài jí ér pǐ", "泰来否极": "tai lái fǒu jí", "泰来否往": "tài lái pǐ wǎng", "泰然处之": "tài rán chǔ zhī", "泰山盘石": "tai shān pán shí", "贪夫狥财": "tān fū huái cái", "贪夫狥利": "tān fū yě lì", "谈言微中": "tán yán wēi zhòng", "谭言微中": "tán yán wēi zhòng", "袒裼裸裎": "tǎn xī luǒ chéng", "叹为观止": "tàn wéi guān zhǐ", "探囊胠箧": "tàn náng wú qiè", "唐临晋帖": "táng lín jìn tiē", "堂皇冠冕": "táng huáng guàn miǎn", "桃蹊柳曲": "táo qī liǔ qǔ", "啼饥号寒": "tí jī háo hán", "蹄间三寻": "tí jìan sān xún", "蹄閒三寻": "tí jiàn sān xún", "替天行道": "tì tiān xíng dào", "天宝当年": "tian bao dang nian", "天兵天将": "tiān bīng tiān jiàng", "天差地远": "tiān chā dì yuǎn", "天道好还": "tiān dào hǎo huán", "天华乱坠": "tiān huā luàn zhuì", "天马行空": "tiān mǎ xíng kōng", "天年不遂": "tiān nián bù suì", "天台路迷": "tiān tái lù mí", "天下为公": "tiān xià wéi gōng", "天下为笼": "tiān xià wéi lóng", "天下为家": "tiān xià wéi jiā", "天旋地转": "tiān xuán dì zhuàn", "添砖加瓦": "tiān zhuān jiē wǎ", "恬不为怪": "tián bù wéi guài", "恬不为意": "tián bù wéi yì", "靦颜事仇": "tiǎn yán shì chóu", "挑唇料嘴": "tiǎo chún liào zuǐ", "挑么挑六": "tiāo yāo tiāo liù", "挑三豁四": "tiāo sān huō sì", "挑牙料唇": "tiǎo yá liào chún", "条贯部分": "tiáo guàn bù fēn", "铁板钉钉": "tiě bǎn dìng dīng", "铁绰铜琶": "tiě chuō tóng pá", "铁树开华": "tiě shù kāi huā", "听而不闻": "tīng ér bú wén", "停留长智": "tíng liú zhǎng zhì", "铤鹿走险": "dìng lù zǒu xiǎn", "通都大埠": "tōng dōu dà bù", "通都巨邑": "tōng dōu jù yì", "通同一气": "tōng tóng yī yì", "通文调武": "tōng wén diào wǔ", "通邑大都": "tōng yì dà dōu", "痌瘝在抱": "tōng guān zào bào", "同仇敌忾": "tóng chóu dí kài", "同恶相党": "tóng è xiāng dǎng", "同恶相济": "tóng è xiāng jì", "同恶相求": "tóng è xiāng qiú", "同恶相恤": "tóng wù xiāng xù", "同恶相助": "tóng wù xiāng zhù", "同工异曲": "tóng gōng yì qǔ", "同心僇力": "tóng xīn jié lì", "同源异派": "tóng yuán yì pai", "童颜鹤发": "tóng yán hè fà", "痛深恶绝": "tòng shēn wù jué", "痛自创艾": "tòng zì chuāng yì", "头出头没": "tóu chū tóu mò", "头会箕赋": "tóu kuài jī fù", "头会箕敛": "tóu kuàn jī liǎn", "头昏脑闷": "tóu hūn nǎo mèn", "头没杯案": "tóu mò bēi àn", "头破血淋": "tóu pò xuè lín", "头破血出": "tóu pò xuè chū", "头上著头": "tóu shàng zhuó tóu", "头足异处": "tóu zú yì chǔ", "投传而去": "tóu zhuàn ér qù", "投其所好": "tóu qí suǒ hào", "图穷匕见": "tú qióng bǐ xiàn", "徒讬空言": "tú tún kōng yán", "屠龙之伎": "tú lóng zhī jì", "屠门大嚼": "tú mén dà jiáo", "土生土长": "tǔ shēng tǔ zhǎng", "吐哺辍洗": "tǔ bǔ chuò xǐ", "吐哺握发": "tǔ bǔ wò fà", "吐哺捉发": "tǔ bǔ zhuō fā", "吐胆倾心": "tǔ dǎn qīng xīn", "吐肝露胆": "tǔ gān lù dǎn", "吐刚茹柔": "tǔ gāng rú róu", "吐故纳新": "tǔ gù nà xīn", "吐食握发": "tǔ shí wò fā", "吐丝自缚": "tǔ sī zì fù", "吐心吐胆": "tǔ xīn tǔ dǎn", "兔角龟毛": "tu jiao gui mao", "兔葵燕麦": "tù kuí yàn mài", "兔头麞脑": "tù tóu suō nǎo", "兔丝燕麦": "tù sī yàn mài", "兔走鹘落": "tù zǒu gǔ luò", "团头聚面": "tuàn tóu jù miàn", "剸繁决剧": "shí fán jué jù", "剸繁治剧": "shí fán zhì jù", "推干就湿": "tuī gàn jiù shī", "推枯折腐": "tuī kū shé fǔ", "颓垣断堑": "tuí yuán duàn piàn", "吞刀吐火": "tūn dāo tǔ huǒ", "吞吞吐吐": "tūn tūn tǔ tǔ", "吞言咽理": "tūn yán yān lǐ", "吞云吐雾": "tūn yún tǔ wù", "托公行私": "tuō gōng xíng sī", "妥首帖耳": "tuǒ shǒu tiē ěr", "蛙蟆胜负": "wā má shèng fù", "歪打正着": "wāi dǎ zhèng zháo", "歪歪倒倒": "wāi wāi dǎo dǎo", "外强中干": "wài qiáng zhōng gān", "外强中瘠": "wài qiáng zhōng jí", "刓方为圆": "shū fāng wéi yuán", "纨袴子弟": "wán kǔ zǐ dì", "玩儿不转": "wán ér bù zhuàn", "玩日愒时": "wán rì kài shí", "玩时愒日": "wán shí ài rì", "玩岁愒日": "wán suì kài rì", "玩岁愒时": "wán suì yī shí", "玩岁愒月": "wán suì yī yuè", "晚节不保": "wǎn jíe bù bǎo", "晚食当肉": "wǎn shí dàng ròu", "万别千差": "wàn bié qiān chā", "万夫不当": "wàn fū bù dāng", "万贯家私": "wàn guàn ji sī", "万箭攒心": "wàn jiàn cuán xīn", "万载千秋": "wàn zài qiān qiū", "亡国大夫": "wáng guó dà fū", "亡魂失魄": "wáng hún shī hún", "王不留行": "wáng bù liú xíng", "王贡弹冠": "wáng gòng dàn guàn", "王侯将相": "wáng hóu jiàng xiàng", "往渚还汀": "wǎng zhǔ huán tīng", "枉曲直凑": "wǎng qǔ zhí còu", "望尘僄声": "wàng chén bù shēng", "望风披靡": "wàng fēng pī mǐ", "望风响应": "wàng fēng xiǎng yīng", "望闻问切": "wàng wén wèn qiē", "望影揣情": "wàng yǐng chuāi qíng", "危如累卵": "wēi rú lěi luǎn", "危言危行": "wēi yán wēi xíng", "危于累卵": "wēi yú lěi luǎn", "威重令行": "wēi zhòng lìng xíng", "偎干就湿": "wēi gàn jiù shī", "微服私行": "wēi fú sī xíng", "煨干避湿": "wēi gàn bì shī", "煨干就湿": "wēi gàn jiù shī", "为德不终": "wéi dé bù zhōng", "为德不卒": "wéi dé bù zú", "为恶不悛": "wéi è bù quān", "为法自弊": "wéi fǎ zì bì", "为鬼为蜮": "wéi guǐ wéi yù", "为富不仁": "wéi fù bù rén", "为非作恶": "wéi fēi zuò è", "为非作歹": "wéi fēi zuò dǎi", "为国为民": "wéi guó wéi mín", "为好成歉": "wéi hǎo chéng qiàn", "为虺弗摧": "wéi huǐ fú cuī", "为民父母": "wéi mín fù mǔ", "为裘为箕": "wéi qiú wéi jī", "为人作嫁": "wèi rén zuò jià", "为人说项": "wèi rén shuō xiàng", "为仁不富": "wéi rén bù fù", "为山止篑": "wéi shān zhǐ kuì", "为蛇画足": "wéi shé huà zú", "为善最乐": "wéi shàn zuì lè", "为蛇添足": "wéi shé tiān zú", "为所欲为": "wéi suǒ yù wéi", "唯所欲为": "wéi suǒ yù wéi", "唯唯否否": "wěi wěi fǒu fǒu", "唯吾独尊": "wéi wú dú zūn", "帷薄不修": "wéi bó bù xiū", "惟妙惟肖": "wéi miào wéi xiào", "惟利是趋": "wéi lì shì qú", "惟日为岁": "wéi rì wéi suì", "惟所欲为": "wéi suǒ yù wéi", "嵬眼澒耳": "wéi yǎn xiāng ěr", "维妙维肖": "wéi miào wéi xiào", "尾大难掉": "wěi dà nán diào", "委曲成全": "wěi qǔ chéng quán", "委委佗佗": "wēi wēi tuó tuó", "萎靡不振": "wěi mǐ bù zhèn", "亹亹不倦": "tān wěi bù juàn", "未艾方兴": "wèi ài fāng xīng", "未为不可": "wèi wéi bù kě", "畏首畏尾": "wèi shǒ wèi wěi", "谓予不信": "wèi yú bù xìn", "蔚为大观": "wèi wéi dà guān", "温衾扇枕": "wēn qīn shān zhěn", "温凊定省": "wēn qǐng dìng shěng", "温席扇枕": "wēn xí shān zhěn", "温枕扇席": "wēn zhěn shān xí", "文不对题": "wén bù duì tí", "文房四侯": "wén fáng sì hòu", "文过遂非": "wén guò suí fēi", "文身剪发": "wén shēn jiǎn fā", "文武差事": "wén wǔ chà shì", "文行出处": "wén xíng chū chǔ", "文以载道": "wén yǐ zài dào", "文章山斗": "wén zhāng shān dòu", "文章星斗": "wén zhāng xīng dòu", "闻风响应": "wén fēng xiǎng yīng", "稳操胜券": "wén cāo shèng quàn", "稳操左券": "wén cāo zuǒ quàn", "蜗行牛步": "wō xíng niú bù", "我行我素": "wǒ xíng wǒ sù", "捰袖揎拳": "luò xiù xuān quán", "握发吐飧": "wò fā tǔ sūn", "握发吐哺": "wò fā tǔ bǔ", "握拳透爪": "wò quán tòu zhǎo", "握粟出卜": "wò sù chū bo", "诬良为盗": "wū liáng wéi dào", "无的放矢": "wú dì fàng shǐ", "无地自处": "wú dì zì chǔ", "无颠无倒": "wú diān wú dǎo", "无动为大": "wú dòng wéi dà", "无恶不为": "wú è bù wéi", "无缝天衣": "wú féng tiān yī", "无间冬夏": "wú jiān dōng xià", "无间可乘": "wú jiān kě chéng", "无间可伺": "wú jiān kě sì", "无精嗒彩": "wú jīng dā cǎi", "无胫而行": "wú jìng ér xíng", "无可比拟": "wú kě bǐ nì", "无孔不钻": "wú kǒng bù zuān", "无寇暴死": "wu kou bào shi", "无了无休": "wú le wú xiū", "无能为役": "wú néng wéi yì", "无能为力": "wú néng wéi lì", "无偏无陂": "wú piān wú bēi", "无伤大雅": "wú shāng dà yǎ", "无伤无臭": "wú shēng wú xiù", "无声无臭": "wú shēng wú xiù", "无適无莫": "wú dí wú mò", "无所不为": "wú suǒ bù wéi", "无下箸处": "wú xià zhù chǔ", "无与为比": "wú yǔ wéi bǐ", "吾谁与归": "wú shuí yǔ guī", "吾膝如铁": "wú xī rú tiě", "吾自有处": "wu zi you chu", "五尺之僮": "wǔ chǐ zhī tóng", "五羖大夫": "wǔ gǔ dà fū", "五侯蜡烛": "wǔ hòu là zhú", "五侯七贵": "wǔ hòu qī guì", "五脊六兽": "wǔ jí liù shòu", "五色相宣": "wǔ sè xiāng xuān", "五石六鹢": "wǔ shí liù yī", "五行八作": "wǔ háng bā zuò", "五行并下": "wǔ háng bìng xià", "五行生克": "wǔ háng shēng kè", "武断专横": "wǔ duàn zhuān héng", "碔砆混玉": "zhì fū hùn yù", "舞爪张牙": "wǔ zhǎo zhāng yá", "物竞天择": "wù jìn tiān zé", "物美价廉": "jià lián wù měi", "物稀为贵": "wù xī wéi guì", "误作非为": "wù zuò fēi wéi", "雾鳞云爪": "wù lín yún zhǎo", "吸新吐故": "xī xīn tǔ gù", "析肝吐胆": "xī gān tǔ dǎn", "析圭儋爵": "xī guī dān jué", "悉索薄赋": "xī suǒ bó fù", "晰毛辨发": "xī máo biàn fà", "歙漆阿胶": "shè qī ē jiāo", "习焉不察": "xī yān bù chá", "喜怒哀乐": "xǐ nù āi lè", "喜行于色": "xǐ xíng yú sè", "虾兵蟹将": "xiā bīng xiè jiàng", "下不为例": "xià bù wéi lì", "先睹为快": "xiān dǔ wéi kuài", "先我着鞭": "xiān wǒ zhuó biān", "闲愁万种": "xián chóu wàn zhǒng", "挦章撦句": "lóng zhāng zōng jù", "相差无几": "xiāng chā wú jǐ", "相得甚欢": "xiāng dé shèn huān", "相辅而行": "xiāng fǔ ér xíng", "相机行事": "xiāng jī xíng shì", "相门有相": "xiàng mén yǒu xiàng", "相女配夫": "xiàng nǚ pèi fū", "相切相磋": "xiāng qiē xiāng cuō", "相时而动": "xiàng shí ér dòng", "相鼠有皮": "xiàng shǔ yǒu pí", "相依为命": "xiāng yī wéi mìng", "相与为一": "xiāng yǔ wéi yī", "香培玉琢": "xiang pei yu zuo", "响遏行云": "xiǎng è xíng yún", "想望风褱": "xiǎng wàng fēng shèng", "橡皮钉子": "xiàng pí dìng zǐ", "削草除根": "xuē cǎo chú gēn", "削尖脑袋": "xuē jiān nǎo dài", "削铁如泥": "xuē tiě rú ní", "削木为吏": "xuē mù wéi lì", "削职为民": "xuē zhí wéi mín", "削铁无声": "xuē tiě wú shēng", "削趾适屦": "xuē zhǐ shì jù", "削株掘根": "xuē zhū jué gēn", "削足适履": "xuē zú shì lǚ", "枵腹终朝": "xiāo fù zhōng cháo", "宵衣旰食": "xiāo yī gàn shí", "鸮鸣鼠暴": "zhāng míng shǔ bào", "硝云弹雨": "xiāo yún dàn yǔ", "小家子气": "xiǎo jiā zi qì", "小廉曲谨": "xiǎo lián qǔ jǐn", "小眼薄皮": "xiǎo yǎn bó pí", "晓行夜宿": "xiǎo xíng yè sù", "晓行夜住": "xiǎo xíng yè zhù", "校短量长": "jiào duǎn liáng cháng", "敩学相长": "zuàn xué xiāng cháng", "邪不干正": "xié bù gān zhèng", "邪魔外祟": "xié mó wai suì", "胁肩累足": "xié jiān lěi zú", "挟势弄权": "jiā shì nòng quán", "挟主行令": "jiā zhǔ xíng lìng", "斜行横阵": "xié xíng héng zhèn", "泄露天机": "xiè lòu tiān jī", "卸磨杀驴": "xiè mò shā lǘ", "心不应口": "xīn bù yīng kǒu", "心驰魏阙": "xīn chí wèi què", "心广体胖": "xīn guǎng tǐ pán", "心急火燎": "xīn jí huǒ liǎo", "心口相应": "xīn kǒu xiāng yīng", "心宽体胖": "xīn kuān tǐ pán", "心手相忘": "xīn shǒu xiāng wàng", "心手相应": "xīn shǒu xiāng yìng", "心同止水": "xīn rú zhǐ shuǐ", "心在魏阙": "xīn zài wèi què", "心瞻魏阙": "xīn zhān wèi què", "心拙口夯": "xīn zhuō kǒu bèn", "信步而行": "xìn bù ér xíng", "兴高采烈": "xìng gāo cǎi liè", "兴高彩烈": "xìng gāo cǎi liè", "兴观群怨": "xìng guān qún yuàn", "兴如嚼蜡": "xìng rú jiáo là", "兴文匽武": "xīng wén diào wǔ", "星行电征": "xīng xíng diàn zhēng", "星行夜归": "xīng xíng yè guī", "腥风血雨": "xīng fēng xuè yǔ", "腥闻在上": "xíng wén zài shàng", "行兵布阵": "xíng bīng bù zhèn", "行不从径": "xíng bù cóng jìng", "行不贰过": "xíng bù èr guò", "行不副言": "xíng bù fù yán", "行不苟合": "xíng bù gǒu hé", "行不履危": "xíng bù lǚ wēi", "行不胜衣": "xíng bù shèng yī", "行步如飞": "xíng bù rú fēi", "行不逾方": "xíng bù yú fāng", "行不由径": "xíng bù yóu jìng", "行藏用舍": "xíng cáng yòng shě", "行成于思": "xíng chéng yú sī", "行古志今": "xíng gǔ zhì jīn", "行号巷哭": "xíng háo xiàng kū", "行号卧泣": "xíng háo wò qì", "行合趋同": "xíng hé qū tóng", "行己有耻": "xíng jǐ yǒu chǐ", "行将就木": "xíng jiāng jiù mù", "行奸卖俏": "xíng jiān mài qiào", "行眠立盹": "xíng mián lì dǔn", "行若狗彘": "xíng ruò gǒu zhì", "行若无事": "xíng ruò wú shì", "行尸走骨": "xíng shī zǒu gǔ", "行尸走肉": "xíng shī zǒu ròu", "行师动众": "xíng shī dòng zhòng", "行思坐想": "xíng sī zuò xiǎng", "行思坐忆": "xíng sī zuò yì", "行思坐筹": "xíng sī zuò chóu", "行同狗豨": "xíng tóng gǒu xī", "行同狗彘": "xíng tóng gǒu zhì", "行同能偶": "xíng tóng néng ǒu", "行侠好义": "xíng xiá hào yì", "行险徼幸": "xíng xiǎn jiǎo xìng", "行崄侥幸": "xíng xiǎn jiǎo xìng", "行香挂牌": "xíng xiāng guà pái", "行行蛇蚓": "háng háng shé yǐn", "行易知难": "xíng yì zhī nán", "行有余力": "xíng yǒu yú lì", "行远升高": "xíng yuǎn shēng gāo", "行远自迩": "xíng yuǎn zì ěr", "行云流水": "xíng yún liú shuǐ", "行针步线": "xíng zhēn bù xiàn", "行之有效": "xíng zhī yǒu xiào", "行住坐卧": "xíng zhù zuò wò", "行浊言清": "xíng zhuó yán qīng", "兄死弟及": "xiōng féi dì jí", "汹涌彭湃": "xiōng yǒng péng pai", "汹涌淜湃": "xiōng yǒng péng pai", "熊据虎跱": "xióng jù hǔ shēn", "修鳞养爪": "xiū lín yǎng zhǎo", "修身洁行": "xiū shēn jié xíng", "羞人答答": "xiū rén dā dā", "绣花枕头": "xiù huā zhěn tóu", "褎然冠首": "yòu rán guàn shǒu", "虚晃一枪": "xiù huàng yī qiāng", "魆风骤雨": "zhuō fēng zhòu yǔ", "畜妻养子": "xù qī yǎng zǐ", "絮絮叨叨": "xù xù dāo dāo", "轩鹤冠猴": "xuān hè guàn hóu", "揎拳捋袖": "xuān quán luō xiù", "揎拳捰袖": "xuān quán lǒng xiù", "悬龟系鱼": "xuán guī jì yú", "悬狟素飡": "xuán huán sù kòu", "悬石程书": "xuán dàn chéng shū", "旋干转坤": "xuán qián zhuǎn kūn", "炫石为玉": "xuàn shí wéi yù", "炫巧斗妍": "xuàn qiǎo dòu yán", "炫玉贾石": "xuàn yù gǔ shí", "衒玉贾石": "zuì yù jiǎ shí", "穴居野处": "xué jū yě chǔ", "雪鸿指爪": "xuě hóng zhǐ zhǎo", "血风肉雨": "xuè fēng ròu yǔ", "血光之灾": "xuè guāng zhī zāi", "血红蛋白": "xuè hóng dàn bái", "血盆大口": "xuè pén dà kǒu", "血染沙场": "xuè rǎn shā chǎng", "血雨腥风": "xuè yǔ xīng fēng", "血债累累": "xuè zhài lěi lěi", "埙篪相和": "xūn chí xiāng hè", "熏莸同器": "xún yóu tóng qì", "寻欢作乐": "xún huān zuò lè", "寻行数墨": "xún háng shǔ mò", "寻行逐队": "xún xíng zhú duì", "压良为贱": "yā liáng wéi jiàn", "鸭步鹅行": "yā bù é xíng", "鸭行鹅步": "yā xíng é bù", "咽苦吐甘": "yàn kǔ tǔ gān", "咽苦吞甘": "yàn kǔ tūn gān", "烟视媚行": "yān shì mèi xíng", "烟熏火燎": "yān xūn huǒ liǎo", "妍蚩好恶": "yán chī hǎo è", "言必有中": "yán bì yǒu zhòng", "言不逮意": "yán bù dǎi yì", "言不顾行": "yán bù gù xíng", "言不及行": "yán bù jí xíng", "言从计行": "yán cóng jì xíng", "言颠语倒": "yán diān yǔ dǎo", "言多伤行": "yán duō shāng xíng", "言方行圆": "yán fāng xíng yuán", "言芳行洁": "yán fāng xíng jié", "言清行浊": "yán qīng xíng zhuó", "言听计行": "yán tīng jì xíng", "言听事行": "yán tīng shì xíng", "言听行从": "yán tīng xíng cóng", "言为心声": "yán wéi xīn shēng", "言文行远": "yán wén xíng yuǎn", "言信行果": "yán xìn xíng guǒ", "言扬行举": "yán yáng xíng jǔ", "岩居穴处": "yán jū xué chǔ", "岩栖穴处": "yán qī xué chǔ", "研京练都": "yán jīng liàn dōu", "偃革为轩": "yǎn gé wéi xuān", "掞藻飞声": "shǎn zǎo fēi shēng", "雁泊人户": "yàn bó rén hù", "燕巢幙上": "yàn cháo yú shàng", "燕处危巢": "yàn chǔ wēi cháo", "燕处焚巢": "yàn chǔ fén cháo", "燕岱之石": "yān dài zhī shí", "燕歌赵舞": "yān gē zhào wǔ", "燕驾越毂": "yān jià yuè gū", "燕金募秀": "yān jīn mù xiù", "燕骏千金": "yān jùn qiān jīn", "燕雀处堂": "yàn què chǔ táng", "燕雀处屋": "yàn què chǔ wū", "燕石妄珍": "yān shí wàng zhēn", "燕市悲歌": "yān shì bēi gē", "燕昭好马": "yān zhāo hǎo mǎ", "燕昭市骏": "yān zhāo shì jùn", "燕子衔食": "yàn zǐ xián shí", "鞅鞅不乐": "yāng yāng bù lè", "扬风扢雅": "yáng fēng bào yǎ", "扬厉铺张": "yáng lì pù zhāng", "扬眉眴目": "yáng méi shùn mù", "羊肠九曲": "yáng cháng jiǔ qǔ", "羊羔美酒": "yán gāo měi jiǔ", "洋为中用": "yáng wéi zhōng yòng", "洋洋纚纚": "yáng yáng sǎ sǎ", "卬首信眉": "áng shǒu shēn méi", "卬头阔步": "áng tóu kuò bù", "仰事俯畜": "yǎng shì fǔ xù", "仰屋着书": "yǎng wū zhù shū", "养精畜锐": "yǎng jīng xù ruì", "养音九皋": "yǎng yīn jiǔ gāo", "养尊处优": "yǎng zūn chǔ yōu", "幺麽小丑": "yāo mǒ xiǎo chǒu", "吆五喝六": "yāo wǔ hè liù", "瑶池女使": "yáo shi nǚ shǐ", "咬血为盟": "yǎo xuè wéi méng", "野调无腔": "yě diào wú qiāng", "业业矜矜": "yè yè jīn jīn", "叶公好龙": "yè gōng hào lóng", "叶落归根": "yè luò huī gēn", "夜静更阑": "yè jìng gēng lán", "一暴十寒": "yī pù shí hán", "一笔抹摋": "yī bǐ mò sà", "一笔抹煞": "yī bǐ mǒ shā", "一鞭先著": "yī biān xiān zhuó", "一倡百和": "yī chàng bǎi hè", "一唱一和": "yī chàng yī hè", "一尘不到": "yī chén bù dào", "一得之功": "yī dé zhī gōng", "一得之见": "yī dé zhī jiàn", "一得之愚": "yī dé zhī yú", "一帆风顺": "yī fán fēng shùn", "一个半个": "yī gè bàn gè", "一股劲儿": "yī gǔ jìn er", "一毫不差": "yī háo bù chā", "一哄而散": "yī hòng ér sàn", "一哄而起": "yī hōng ér qǐ", "一哄而上": "yì hōng ér shàng", "一呼再喏": "yī hū zài nuò", "一还一报": "yī huán yī bào", "一见了然": "yī jiàn le rán", "一蹶不振": "yī jué bù zhèn", "一了百当": "yī liǎo bǎi dàng", "一了百了": "yī liǎo bǎi liǎo", "一鳞半爪": "yī lín bàn zhǎo", "一鳞片爪": "yī lín piàn zhǎo", "一鳞一爪": "yī lín yī zhǎo", "一模一样": "yī mú yī yàng", "一目五行": "yī mù wǔ háng", "一年到头": "yì nián dào tóu", "一年一度": "yī nián yī dù", "一念之差": "yī niàn zhī chā", "一片散沙": "yī piàn sàn shā", "一切万物": "yī qiē wàn wù", "一丘之貉": "yī qiū zhī hé", "一邱之貉": "yī qiū zhī hè", "一日三省": "yī rì sān xǐng", "一曲阳关": "yī qǔ yáng guān", "一岁载赦": "yī suì zài shè", "一吐为快": "yī tǔ wéi kuài", "一无长物": "yī wú cháng wù", "一无所得": "yī wú suǒ dé", "一现昙华": "yī xiàn tán huā", "一笑了事": "yī xiào le shì", "一笑了之": "yī xiào liǎo zhī", "一言为定": "yī yán wéi dìng", "一语破的": "yī yǔ pò dì", "一语中的": "yī yǔ zhōng dì", "一之为甚": "yī zhī wéi shèn", "一重一掩": "yī chóng yī yǎn", "一走了之": "yī zǒu liǎo zhī", "衣被群生": "yì bèi qún shēng", "衣冠楚楚": "yī guān chǔ chǔ", "衣单食薄": "yī dān shí bó", "衣冠禽兽": "yī guān qín shòu", "衣冠土枭": "yī guān tǔ xiāo", "衣冠枭獍": "yī guān xiāo jìng", "衣锦过乡": "yì jǐn guò xiāng", "衣锦还乡": "yì jǐn huán xiāng", "衣锦食肉": "yì jǐn shí ròu", "衣锦夜行": "yì jǐn yè xíng", "衣锦昼行": "yì jǐn zhòu xíng", "衣裳之会": "yī shāng zhī huì", "衣轻乘肥": "yì qīng chéng féi", "衣食住行": "yī shí zhù xíng", "衣宵食旰": "yī xiāo shí gàn", "衣绣昼行": "yì xiù zhòu xíng", "衣租食税": "yì zū shí shuì", "依头缕当": "yī tóu lǚ dàng", "移的就箭": "yí dì jiù jiàn", "移山倒海": "yí shān dǎo hǎi", "移孝为忠": "yí xiào wéi zhōng", "遗寝载怀": "yí qǐn zài huái", "遗世忘累": "yí shì wàng lěi", "疑行无成": "yí xíng wú chéng", "乙种粒子": "yǐ zhǒng lì zǐ", "乙种射线": "yǐ zhǒng shè xiàn", "以白为黑": "yǐ bái wéi hēi", "以不济可": "yǐ fǒu jì kě", "以大恶细": "yǐ dà wù xì", "以耳为目": "yǐ ěr wéi mù", "以法为教": "yǐ fǎ wéi jiào", "以攻为守": "yǐ gōng wéi shǒu", "以宫笑角": "yǐ gōng xiào jué", "以古为鉴": "yǐ gǔ wéi jiàn", "以古为镜": "yǐ gǔ wéi jìng", "以规为瑱": "yǐ guī wéi tiàn", "以黑为白": "yǐ hēi wéi bái", "以毁为罚": "yǐ huǐ wéi fá", "以己度人": "yǐ jǐ duó rén", "以利累形": "yǐ lì lěi xíng", "以邻为壑": "yǐ lín wéi hè", "以鹿为马": "yǐ lù wéi mǎ", "以筌为鱼": "yǐ quán wéi yú", "以忍为阍": "yǐ rěn wéi hūn", "以日为年": "yǐ rì wéi nián", "以慎为键": "yǐ shèn wéi jiàn", "以身许国": "yǐ shēng xǔ guó", "以升量石": "yǐ shēng liáng dàn", "以守为攻": "yǐ shǒu wéi gōng", "以书为御": "yǐ shū wéi yù", "以水济水": "yǐ shuǐ jǐ shuǐ", "以疏间亲": "yǐ shū jiàn qīn", "以水洗血": "yǐ shuǐ xǐ xuè", "以退为进": "yǐ tuì wéi jìn", "以微知着": "yǐ wēi zhī zhù", "以血洗血": "yǐ xuè xǐ xuè", "以牙还牙": "yǐ yá huán yá", "以言为讳": "yǐ yán wéi huì", "以眼还眼": "yǐ yǎn huán yǎn", "以意为之": "yǐ yì wéi zhī", "以誉为赏": "yǐ yù wéi shǎng", "以紫为朱": "yǐ zǐ wéi zhū", "蚁斗蜗争": "yǐ dòu wō zhēng", "蚁集蜂攒": "yǐ jí fēng cuán", "蚁聚蜂攒": "yǐ jù fēng cuán", "蚁拥蜂攒": "yǐ yōng fēng cuán", "倚姣作媚": "yǐ jiāo zuò mèi", "倚闾望切": "yǐ lǘ wàng qiē", "义薄云天": "yì bó yún tiān", "异曲同工": "yì qǔ tóng gōng", "抑塞磊落": "yì sè lěi luò", "易地而处": "yì dì ér chǔ", "逸尘断鞅": "yì chén duàn yāng", "逸兴遄飞": "yì xìng chuán fēi", "逸兴横飞": "yì xìng héng fēi", "逸兴云飞": "yì xìng yún fēi", "意气相得": "yì qì xiāng dé", "意想不到": "yì xiǎng bù dào", "意兴索然": "yì xīng suǒ rán", "溢美溢恶": "yì měi yì lè", "因敌为资": "yīn dí wéi zī", "因公假私": "yīn gōng jiǎ sī", "因公行私": "yīn gōng xíng sī", "因祸为福": "yīn huò wéi fú", "因树为屋": "yīn shù wéi wū", "因缘为市": "yīn yuán wéi shì", "阴错阳差": "yīn cuò yáng chā", "阴差阳错": "yīn chā yáng cuò", "淫词艳曲": "yín cí yàn qǔ", "淫心匿行": "yín xīn nì xíng", "淫言诐行": "yín yán bì xíng", "淫言媟语": "yín yán liǎng yǔ", "龈齿弹舌": "yín chǐ dàn shé", "引过自责": "yǐn guò zì zé", "引吭悲歌": "yǐn háng bēi gē", "引吭高唱": "yǐn háng gāo chàng", "引吭高歌": "yǐn háng gāo gē", "引吭高声": "yǐn háng gāo shēng", "引绳切墨": "yǐn shéng qiē mò", "引新吐故": "yǐn xīn tǔ gù", "饮冰食蘖": "yǐn bīng shí bò", "饮胆尝血": "yǐn dǎn cháng xuè", "饮犊上流": "yìn dú shàng liú", "饮血茹毛": "yǐn xuè rú máo", "隐占身体": "yin zhan shen qi", "印累绶若": "yìn léi shòu ruò", "应弦而倒": "yìng xián ér dǎo", "应天顺时": "yīng tiān shùn shí", "莺飞草长": "yīng fēi cǎo zhǎng", "莺吟燕儛": "yīng yín yàn sāi", "鹰心雁爪": "yīng xīn yàn zhǎo", "盈篇累牍": "yíng piān lěi dú", "盈千累万": "yíng qiān lěi wàn", "营蝇斐锦": "yíng yíng fēi jǐn", "蝇攒蚁附": "yíng cuán yǐ fù", "郢书燕说": "yǐng shū yān shuō", "蝇攒蚁聚": "yíng cuán yǐ jù", "影子内阁": "yǐng zi nèi gé", "庸言庸行": "yōng yán yōng xíng", "庸中皦皦": "yōng zhōng bì tóng", "雍容大雅": "yōng róng dà yǎ", "饔飧不给": "yōng sūn bù jǐ", "勇冠三军": "yǒng guàn sān jūn", "用舍行藏": "yòng shě xíng cáng", "用行舍藏": "yòng xíng cáng shě", "优孟衣冠": "yōu mèng yī guān", "尤云殢雨": "yóu yún zhì yǔ", "油干灯尽": "yóu gàn dēng jìn", "油腔滑调": "yóu qiāng huá diào", "游必有方": "yōu bì yǒu fāng", "游手好闲": "yóu shǒu hào xián", "有蠙可乘": "yǒu bīn kě chéng", "有的放矢": "yǒu dì fàng shǐ", "有国难投": "yǒu guó nán tóu", "有机玻璃": "yǒu jī bō li", "有加无已": "yǒu jiā wǔ yǐ", "有借无还": "yǒu jiè wú huán", "有隙可乘": "yǒu xì kě chèng", "有血有肉": "yǒu xuè yǒu ròu", "有一得一": "yǒu yī dé yī", "又弱一个": "yòu ruò yī gè", "幼学壮行": "yòu xué zhuàng xíng", "于家为国": "yú jiā wéi guó", "于今为烈": "yú jīn wéi liè", "予取予夺": "yú qǔ yú duó", "予取予求": "yú qǔ yú qiú", "予取予携": "yú qǔ yú xié", "予智予雄": "yú zhì yú xióng", "余食赘行": "yú shí zhuì xíng", "余勇可贾": "yú yǒng kě gǔ", "杅穿皮蠹": "yú chuān shuǐ dù", "鱼封雁帖": "yú fēng yàn tiē", "鱼贯而行": "yú guàn ér xíng", "鱼贯雁行": "yú guàn yàn xíng", "鱼目混珎": "yú mù hùn zhū", "鱼尾雁行": "yú wěi yàn xíng", "渔夺侵牟": "yú duó qīn móu", "渔阳鞞鼓": "yǔ yáng pí gǔ", "逾墙钻隙": "yú qiáng zuān xì", "榆木疙瘩": "yú mù gē da", "与民更始": "yǔ rén gēng shǐ", "与民除害": "yǔ hǔ chú hài", "与时消息": "yǔ shí xiāo xi", "与世沉浮": "yú shì chén fú", "与世无争": "yú shì wú zhēng", "雨僝风僽": "yǔ chán fēng zhòu", "雨僝云僽": "yǔ chán yún zhòu", "雨僽风僝": "yǔ zhòu fēng chán", "禹行舜趋": "yǔ xíng shùn qū", "语不惊人": "yǔ bù jīng rèn", "语笑喧阗": "yǔ xiào xuān tiān", "玉卮无当": "yù zhī wú dàng", "吁咈都俞": "yù fú dōu yú", "吁天呼地": "yù tiān hū dì", "郁郁累累": "yù yù lěi lěi", "遇难成祥": "yù nàn chéng xiáng", "遇难呈祥": "yù nàn chéng xiáng", "鹬蚌相斗": "yù bàng xiāng dòu", "鬻鸡为凤": "yù jī wéi fèng", "鬻矛誉楯": "yù máo yù dùn", "鬻驽窃价": "yù nǔ qiè jià", "冤家路狭": "yuān jia lù xiá", "冤家对头": "yuān jia duì tóu", "渊涓蠖濩": "yuān juān huò hù", "渊清玉絜": "yuān qīng yù jié", "远不间亲": "yuǎn bù jiàn qīn", "怨声载道": "yuàn shēng zài dào", "约法三章": "yuè fǎ sān zhāng", "月露风云": "yuè lù fēng yún", "月落参横": "yuè luò shēn héng", "月没参横": "yuè mò shēn héng", "月晕础润": "yuè yūn chǔ rùn", "月中折桂": "yuè zhōng shé guì", "岳镇渊渟": "yuè zhèn yuān tīng", "云窗雾槛": "yún chuāng wù jiàn", "云泥之差": "yún ní zhī chā", "云舒霞卷": "yún shū xiá juǎn", "云行雨洽": "yún xíng yǔ qià", "云行雨施": "yún xíng yǔ shī", "殒身不恤": "yǔn shēn bú xù", "运转时来": "yùn zhuǎn shí lái", "晕头转向": "yūn tóu zhuàn xiàng", "灾难深重": "zāi nán shēn zhòng", "载沉载浮": "zài chén zài fú", "载歌且舞": "zài gē qiě wǔ", "载歌载舞": "zài gē zài wǔ", "载酒问字": "zài jiǔ wèn zì", "载驱载驰": "zài qū zài chí", "载笑载言": "zài xiào zài yán", "载一抱素": "zài yī bào sù", "载舟覆舟": "zài zhōu fù zhōu", "在劫难逃": "zài jié nán táo", "攒锋聚镝": "cuán fēng jù dí", "攒零合整": "cuán líng hé zhěng", "攒眉蹙额": "cuán mei cù é", "攒眉苦脸": "zǎn méi kǔ liǎn", "攒三聚五": "cuán sān jù wǔ", "攒三集五": "cuán sān jí wǔ", "臧谷亡羊": "zāng gǔ wáng yáng", "臧穀亡羊": "zāng gǔ wáng yáng", "脏污狼藉": "zāng wū láng jí", "凿龟数策": "záo guī shǔ cè", "凿坏而遁": "záo pī ér dùn", "凿坏以遁": "záo pī yǐ dùn", "早占勿药": "zǎo zhān wù yào", "造谣中伤": "zào yáo zhòng shāng", "择善而行": "zé shàn ér xíng", "责无旁贷": "zé wú páng dài", "责有所归": "zé yǒu suǒ guī", "责有攸归": "zé yǒu yōu guī", "曾不惨然": "zeng bu chan ran", "曾参杀人": "zēng shēn shā rén", "曾母投杼": "zēng mǔ tóu zhù", "沾沾自好": "zhān zhān zì hào", "詹言曲说": "zhān yán qǔ shuō", "斩钉切铁": "zhǎn dīng qiē tiě", "斩将搴旗": "zhǎn jiàng qiān qí", "斩将刈旗": "zhǎn jiàng yì qí", "斩头沥血": "zhǎn tóu lì xuè", "占风使帆": "zhān fēng shǐ fān", "占风望气": "zhān fēng wàng qì", "战天斗地": "zhàn tiān dòu dì", "湛恩汪濊": "zhàn ēn wāng hún", "张牙舞爪": "zhāng yá wǔ zhǎo", "章句小儒": "zhāng jù xiāo rú", "彰明较着": "zhāng míng jiào zhù", "獐麇马鹿": "zhāng jūn mǎ lù", "招架不住": "zhāo jià bù zhù", "昭德塞违": "zhāo dé sè wéi", "折而族之": "zhe er zu zi", "折箭为誓": "shé jiàn wéi shì", "折腰五斗": "shé yāo wǔ dòu", "赭衣塞路": "zhě yī sài lù", "这么点儿": "zhè me diǎn er", "贞松劲柏": "zhēn sōng jìng bǎi", "针头削铁": "zhēn tóu xuē tiě", "真相毕露": "zhēn xiāng bì lù", "枕干之雠": "zhěn gàn zhī chóu", "枕戈饮血": "zhěn gē yǐn xuè", "枕石嗽流": "zhěn shí shù liú", "枕石漱流": "zhěn shí sòu liú", "枕席还师": "zhěn xí huán shī", "振兵泽旅": "zhèn bīng shì lǚ", "争强斗狠": "zhēng qiáng dòu hěn", "争强斗胜": "zhēng qiáng dòu shèng", "蒸沙为饭": "zhēng shā wéi fàn", "整顿干坤": "zhěng dùn gàn kūn", "整躬率物": "zhěng gōng shuài wù", "整冠纳履": "zhěng guàn nà lǚ", "正当防卫": "zhèng dàng fáng wèi", "正冠李下": "zhèng guàn lǐ xià", "正冠纳履": "zhèng guàn nà lǚ", "正身率下": "zhèng shēn shuài xià", "正视绳行": "zhèng shì shéng xíng", "正中己怀": "zhèng zhòng jǐ huái", "正中下怀": "zhèng zhòng xià huái", "支分族解": "zhī fē zú jiě", "支吾其词": "zhī wū qí cí", "支支吾吾": "zhī zhī wú wú", "吱哩哇啦": "zhī lī wā lā", "枝大于本": "zhī dà yù běn", "枝附叶著": "zhī fù yiè zhuó", "枝附叶着": "zhī fù yiè zhuó", "枝干相持": "zhī gàn xiāng xhí", "枝叶相持": "zhī yè xīng chí", "知疼着热": "zhī téng zháo rè", "知疼着痒": "zhī téng zháo yǎng", "知行合一": "zhī xíng hé yī", "知易行难": "zhī yì xíng nán", "执法不阿": "zhí fǎ bù ā", "执经问难": "zhí jīng wèn nán", "直道而行": "zhí dào ér xíng", "直扑无华": "zhí pǔ wú huá", "直言切谏": "zhí yán qiē jiàn", "植发冲冠": "zhí fà chōng guàn", "植发穿冠": "zhí fà chuān guàn", "止戈为武": "zhǐ gē wéi wǔ", "只争旦夕": "zhǐ zhēng dàn xī", "只争朝夕": "zhǐ zhēng zhāo xī", "指腹为婚": "zhǐ fù wéi hūn", "指鹿为马": "zhǐ lù wéi mǎ", "指囷相赠": "zhǐ què xiāng zèng", "指山卖磨": "zhǐ shān mài mò", "指山说磨": "zhǐ shān shuō mò", "指树为姓": "zhǐ shù wéi xìng", "指天为誓": "zhǐ tiān wéi shì", "指雁为羹": "zhǐ yàn wéi gēng", "指皂为白": "zhǐ zào wéi bái", "指皁为白": "zhǐ zào wéi bái", "至当不易": "zhì dàng bù yì", "志坚行苦": "zhì jiān xíng kǔ", "志洁行芳": "zhì jié xíng fāng", "志美行厉": "zhì měi xíng lì", "栉比鳞差": "zhì bǐ lín cǐ", "致远任重": "zhì yuǎn rèn zhàng", "窒碍难行": "zhì ài nán xíng", "彘肩斗酒": "zhì jiān dòu jiǔ", "智圆行方": "zhì yuán xíng fāng", "稚齿婑媠": "zhì chǐ wǒ tuǒ", "擿伏发奸": "tī fú fā jiān", "擿伏发隐": "tī fú fā yǐn", "擿奸发伏": "tī jiān fā fú", "擿埴索途": "zhāi zhí suǒ tú", "擿埴索涂": "zhāi zhí suǒ tú", "擿植索涂": "zhāi zhí suǒ tú", "钟鼎人家": "zhōng dǐng rén jia", "众好众恶": "zhòng hào zhòng wù", "众毛攒裘": "zhòng máo cuán qiú", "众矢之的": "zhòng shǐ zhī dì", "众星攒月": "zhòng xīng cuán yuè", "众啄同音": "zhòng zhòu tóng yīn", "重操旧业": "chóng cāo jiù yè", "重床迭架": "chóng chuáng dié jià", "重床迭屋": "chóng chuáng dié wū", "重床叠架": "chóng chuáng dié jià", "重床叠屋": "chóng chuáng dié wū", "重蹈覆辙": "chóng dǎo fù zhé", "重睹天日": "chóng dǔ tiān rì", "重铬酸钾": "chóng gè suān jiǎ", "重关击柝": "chóng guān jī tuò", "重圭叠组": "chóng guī dié zǔ", "重规沓矩": "chóng guī tà jǔ", "重规迭矩": "chóng guī dié jǔ", "重规累矩": "chóng guī lèi jǔ", "重规叠矩": "chóng guī dié jǔ", "重规袭矩": "chóng guī xí jǔ", "重珪迭组": "chóng guī dié zǔ", "重珪叠组": "chóng guī dié zǔ", "重迹屏气": "chóng jì bǐng qì", "重见天日": "chóng jiàn tiān rì", "重金兼紫": "chóng jīn jiān zǐ", "重金袭汤": "chóng jīn xí tāng", "重理旧业": "chóng lǐ jiù yè", "重峦迭巘": "chóng luán dié yǎn", "重峦迭嶂": "chóng luán dié zhàng", "重峦叠巘": "chóng luán dié yǎn", "重峦叠嶂": "chóng luán dié zhàng", "重峦复嶂": "chóng luán fù zhàng", "重门击柝": "chóng mén jī tuò", "重明继焰": "chóng míng jì yàn", "重葩累藻": "chóng pā lèi zǎo", "重纰貤缪": "chóng pī yí miù", "重起炉灶": "chóng qǐ lú zào", "重气徇命": "zhòng qì xùn míng", "重三迭四": "chóng sān dié sì", "重三叠四": "chóng sān dié sì", "重山复岭": "chóng shān fù lǐng", "重山复水": "chóng shān fù shuǐ", "重山峻岭": "chóng shān jùn lǐng", "重手累足": "chóng shǒu lěi zú", "重熙累绩": "chóng xī lěi jì", "重熙累洽": "chóng xī lěi qià", "重熙累盛": "chóng xī lěi shèng", "重熙累叶": "chóng xī lěi yè", "重兴旗鼓": "chóng xīng qí gǔ", "重岩迭障": "chóng yán dié zhàng", "重岩叠嶂": "chóng yán dié zhàng", "重裀列鼎": "chóng yīn liè dǐng", "重垣迭锁": "chóng yuán dié suǒ", "重垣叠锁": "chóng yuán dié suǒ", "重振旗鼓": "chóng zhèn qí gǔ", "重整旗鼓": "chóng zhěng qí gǔ", "重纸累札": "chóng zhǐ lèi zhá", "重足而立": "chóng zú ér lì", "重足累息": "chóng zú lèi xī", "重足屏气": "chóng zú bǐng qì", "重足屏息": "chóng zú bǐng xī", "重足一迹": "chóng zú yī jì", "侜张为幻": "zhōu zhāng wéi huàn", "周公吐哺": "zhōu gōng tǔ bǔ", "周郎顾曲": "zhōu láng gù qǔ", "诪张为幻": "zhōu zhāng wéi huàn", "肘行膝步": "zhǒu xíng xī bù", "昼度夜思": "zhòu duó yè sī", "昼干夕惕": "zhòu gàn xī tì", "昼夜兼行": "zhòu yè jiān xíng", "朱轓皁盖": "zhū fān hǎi gài", "朱盘玉敦": "zhū pán yù duì", "朱槃玉敦": "zhū pán yù duì", "侏儒观戏": "zhū rǔ guān xì", "侏儒一节": "zhū rǔ yī jié", "珠还合浦": "zhū huán hé pǔ", "铢积寸累": "zhū jī cùn lěi", "铢两悉称": "zhū liǎng xī chèn", "铢量寸度": "zhū liáng cùn duó", "铢铢校量": "zhū zhū xiào liàng", "竹篮打水": "zhú lán dá shuǐ", "逐物不还": "zhú wù bù huán", "属词比事": "zhǔ cí bǐ shì", "属辞比事": "zhǔ cí bǐ shì", "属毛离里": "zhǔ máo lí lǐ", "属垣有耳": "zhǔ yuán yǒu ěr", "助桀为暴": "zhù jié wéi bào", "助桀为恶": "zhù jié wéi è", "助桀为虐": "zhù jié wéi nüè", "助天为虐": "zhù tiān wéi nüè", "助纣为虐": "zhù zhòu wéi nüè", "杼柚空虚": "zhù zhóu kōng xū", "杼柚其空": "zhù zhóu qí kōng", "杼柚之空": "zhù zhóu zhī kōng", "祝咽祝哽": "zhù yān zhù gěng", "筑坛拜将": "zhù tán bài jiàng", "铸剑为犁": "zhù jiàn wéi lí", "箸长碗短": "zhù chàng wǎn duǎn", "拽布拖麻": "zhuāi bù tuō má", "拽耙扶犁": "zhuāi pá fú lí", "拽巷啰街": "zhuài xiàng luó jiē", "拽巷攞街": "zhuài xiàng luǒ jiē", "转败为功": "zhuǎn bài wéi gōng", "转败为成": "zhuǎn bài wéi chéng", "转败为胜": "zhuǎn bài wéi shèng", "转悲为喜": "zhuǎn bēi wéi xǐ", "转嗔为喜": "zhuǎn chēn wéi xǐ", "转愁为喜": "zhuǎn chóu wéi xǐ", "转斗千里": "zhuǎn dòu qiān lǐ", "转祸为福": "zhuǎn huò wéi fú", "转来转去": "zhuàn lái zhuàn qù", "转弯抹角": "zhuǎn wān mò jiǎo", "转湾抹角": "zhuǎn wān mò jiǎo", "转危为安": "zhuǎn wēi wéi ān", "转忧为喜": "zhuǎn yōu wéi xǐ", "转灾为福": "zhuǎn zāi wéi fú", "庄严宝相": "zhuāng yán bǎo xiàng", "装模作样": "zhuāng mú zuò yàng", "壮发冲冠": "zhuàng fā chōng guàn", "追风摄景": "zhuī fēng niè jǐng", "追欢作乐": "zhuī huān zuò lè", "追亡逐北": "zhuī bēn zhú běi", "椎锋陷陈": "chuī fēng xiàn chén", "椎锋陷阵": "chuí fēng xiàn zhèn", "椎肤剥髓": "chuí fū bō suǐ", "椎肤剥体": "chuí fū bō tǐ", "椎埋狗窃": "chuí mái gǒu qiè", "椎埋屠狗": "chuí mái tú gǒu", "椎牛发冢": "chuí niú fā zhǒng", "椎牛歃血": "chuí niú shà xuè", "椎牛飨士": "chuí niú xiǎng shì", "椎天抢地": "chuí tiān qiǎng dì", "椎心顿足": "chuí xīn dùn zú", "椎心呕血": "chuí xīn ǒu xuè", "椎心泣血": "chuí xīn qì xuè", "椎心饮泣": "chuí xīn yǐn qì", "椎胸顿足": "chuí xiōng dùn zú", "椎胸跌足": "chuí xiōng diē zú", "椎膺顿足": "chuí yīng dùn zú", "锥处囊中": "zhuī chǔ náng zhōng", "灼艾分痛": "zhuó ài fēn tòng", "斫雕为朴": "zhuó diāo wéi pǔ", "斫琱为朴": "zhuó diāo wéi pǔ", "着人先鞭": "zhuó rén xiān biān", "着手成春": "zhuó shǒu chéng chūn", "着书立说": "zhù shū lì shuō", "擢发莫数": "zhuó fà mò shǔ", "擢发难数": "zhuó fà nán shǔ", "资深望重": "zī shēng wàng zhòng", "子为父隐": "zǐ wéi fù yǐn", "自吹自擂": "zì chuī zì léi", "自我吹嘘": "zì wǒ chuí xū", "自相惊忧": "zì xiāng jīng rǎo", "恣行无忌": "zì xíng wú jì", "恣意妄行": "zì yì wàng xíng", "纵曲枉直": "zòng qǔ wǎng zhí", "走花溜水": "zǒu huā liū bīng", "走为上策": "zǒu wéi shàng cè", "走为上着": "zǒu wèi shàng zhaō", "钻冰求酥": "zuān bīng qiú sū", "钻冰求火": "zuān bīng qiú huǒ", "钻洞觅缝": "zuàn dòng mì féng", "钻火得冰": "zuān huǒ dé bīng", "钻懒帮闲": "zuān lǎn bāng xián", "钻皮出羽": "zuān pí chū yǔ", "钻牛角尖": "zuān niú jiǎo jiān", "钻天打洞": "zuān tiān dǎ dòng", "钻天觅缝": "zuàn tiān mì féng", "钻头觅缝": "zuān tóu mì fèng", "钻隙逾墙": "zuān xì yú qiáng", "钻穴逾隙": "zuān xué yú xì", "钻穴逾墙": "zuān xué yú qiáng", "钻心刺骨": "zuàn xīn cì gǔ", "罪应万死": "zuì yīng wàn sǐ", "罪有应得": "zuì yǒu yīng dé", "罪责难逃": "zuì zé nán táo", "醉山颓倒": "zuì shān tuí dǎo", "醉吐相茵": "zuì tǔ xiāng yīn", "左膀右臂": "zuǒ bǎng yòu bì", "左宜右有": "zuǒ yí yòu fú", "左枝右梧": "zuǒ zhī yòu wū", "左支右吾": "zuǒ zhī yòu wū", "作歹为非": "zuò dǎi wéi fēi", "作嫁衣裳": "zuò jià yī shāng", "作困兽斗": "zuò kùn shòu dòu", "作舍道旁": "zuò shě dào páng", "坐不窥堂": "zùo bù kuī táng", "坐不重席": "zuò bù chóng xí", "坐地自划": "zuò dì zì huá", "坐视不救": "zuò shī bù jiù" }, { "阿尔巴尼亚": "ā ěr bā ní yà", "阿尔法射线": "ā ěr fǎ shè xiàn", "阿尔及利亚": "ā ěr jí lì yà", "阿留申群岛": "ā liú shēn qún dǎo", "阿米巴痢疾": "ā mǐ bā lì jí", "阿姆斯特丹": "ā mǔ sī tè dān", "巴尔干半岛": "bā ěr gàn bàn dǎo", "巴尔喀什湖": "bā ěr kā shí hú", "邦以民为本": "bāng yǐ mín wéi běn", "兵败如山倒": "bīng bài rú shān dǎo", "不幸而言中": "bù xìng ér yán zhòng", "布尔什维克": "bù ěr shí wéi kè", "此风不可长": "cǐ fēng bù kě zhǎng", "打鸭子上架": "dǎ yā zi shàng jià", "大老爷们儿": "dà lǎo yé men ér", "东西南北客": "dōng xi nán běi kè", "东西南北人": "dōng xi nán běi rén", "恶事行千里": "è shì xíng qiān lǐ", "赶鸭子上架": "gǎn yā zī shàng jià", "高义薄云天": "gāo yì báo yún tiān", "观今宜鉴古": "guān jīn yì jiàn gǔ", "海德堡大学": "hǎi dé pù dà xué", "何乐而不为": "hé lè ér bù wéi", "华氏温度计": "huà shì wēn dù jì", "夹板医驼子": "jiá bǎn yī tuó zǐ", "尖担两头脱": "jiān dàn liǎng tóu tuō", "见物不见人": "jiàn wù bù jiàn rén", "紧行无好步": "jǐn xíng wú hǎo bù", "九牛拉不转": "jiǔ niú lā bù zhuàn", "攫金不见人": "jué jīn bù jiàn rén", "苛政猛于虎": "kē zhè měng yú hǔ", "六十花甲子": "liù shí huā jiá zǐ", "鹿死不择荫": "lù sǐ bù zé yīn", "蒙得维的亚": "méng de wéi de yà", "民以食为天": "mín yǐ shí wéi tiān", "抹一鼻子灰": "mǒ yī bí zi huī", "拧成一股绳": "níng chéng yī gǔ shéng", "女大不中留": "nǚ dà bù zhòng liú", "牵着鼻子走": "qiān zhe bí zi zǒu", "墙倒众人推": "qiáng dǎo zhòng rén tuī", "人不可貌相": "rén bù kě mào xiàng", "肉包子打狗": "ròu bāo zi dǎ gǒu", "三思而后行": "sān sī ér hòu xíng", "杀人不见血": "shā rén bù jiàn xuè", "狮子大开口": "shī zī dà kāi kǒu", "事后诸葛亮": "shì hòu zhū gé liàng", "树倒猢孙散": "shù dǎo hú sūn sàn", "树倒猢狲散": "shù dǎo hú sūn sàn", "水火不兼容": "shuǐ huǒ bù xiāng róng", "图穷匕首见": "tú qióng bǐ shǒu xiàn", "无所施其伎": "wú suǒ shī qí jì", "吾家千里驹": "wú jiā qiān lǐ jū", "物以希为贵": "wù yǐ xī wéi guì", "物以稀为贵": "wù yǐ xī wéi guì", "先下手为强": "xiān xià shǒu wéi qiáng", "行行出状元": "háng háng chū zhuàng yuán", "熏莸不同器": "xún yóu bù tóng qì", "亚得里亚海": "yà de lǐ yà hǎi", "眼不见为净": "yǎn bù jiàn wéi jìng", "一报还一报": "yī bào huán yī bào", "一饭三吐哺": "yī fàn sān tǔ bǔ", "一身都是胆": "yī shēn dōu shì dǎn", "一退六二五": "yī tuī liù èr wǔ", "一物降一物": "yī wù xiáng yī wù", "有鼻子有眼": "yǒu bí zi yǒu yǎn", "竹筒倒豆子": "zhú tǒng dǎo dòu zi", "着三不着两": "zháo sān bù zháo liǎng", "嘴尖舌头快": "zuǐ jiān shé tóu kuài", "坐山观虎斗": "zuò shān guān hǔ dòu" }],i = function i(g) {var h = g.charCodeAt(0),i = n[h];return i ? i.split(" ")[0] : g;},u = function u(n, g) {if (g > 5) return u(n, g - 1);if (0 === g) return n;var z = "";if (1 === g) {for (var y = !1, s = 0; s < n.length; s++) {var j = i(n[s]);y && j === n[s] ? z += j : y || j !== n[s] ? (z += z ? " " + j : j, y = !1) : (z += z ? " " + j : j, y = !0);}return z;}for (var o in h[g]) {var x = n.indexOf(o);if (x > -1) {var l = n.slice(0, x),c = l ? u(l, l.length) + " " : "",d = n.slice(x + o.length),b = d ? " " + u(d, d.length) : "";z = "" + c + h[g][o] + b;break;}}return z || u(n, g - 1);},z = function z(n) {return n.replace(/(ā|á|ǎ|à)/g, "a").replace(/(ō|ó|ǒ|ò)/g, "o").replace(/(ē|é|ě|è)/g, "e").replace(/(ī|í|ǐ|ì)/g, "i").replace(/(ū|ú|ǔ|ù)/g, "u").replace(/(ǖ|ǘ|ǚ|ǜ)/g, "ü");},y = function y(n) {for (var h = [], i = [], u = 0, z = n.split(" "); u < z.length; u++) {for (var y = z[u], s = 0, j = g; s < j.length; s++) {var o = j[s];if (y.startsWith(o)) {var x = y.slice(o.length);h.push(o), i.push(x);break;}}}return { final: i.join(" "), initial: h.join(" ") };},s = function s(n) {var g = /(ā|ō|ē|ī|ū|ǖ)/,h = /(á|ó|é|í|ú|ǘ)/,i = /(ǎ|ǒ|ě|ǐ|ǔ|ǚ)/,u = /(à|ò|è|ì|ù|ǜ)/,z = /(a|o|e|i|u|ü)/,y = [];return n.split(" ").forEach(function (n) {g.test(n) ? y.push("1") : h.test(n) ? y.push("2") : i.test(n) ? y.push("3") : u.test(n) ? y.push("4") : z.test(n) ? y.push("0") : y.push("");}), y.join(" ");},j = { pattern: "pinyin", toneType: "symbol", type: "string", multiple: !1 };exports.pinyin = function (g, h) {if (void 0 === h && (h = j), "string" != typeof g) return g;if ("" === g) return "array" === h.type ? [] : "";var i = u(g, g.length);switch (1 === g.length && h.multiple && (i = function (g) {var h = g.charCodeAt(0);return n[h] || g;}(g)), h.pattern) {case "pinyin":break;case "num":var o = s(i);return "array" === h.type ? o.split(" ") : o;case "initial":i = y(i).initial;break;case "final":i = y(i).final;break;case "first":i = function (n) {var g = [];return n.split(" ").forEach(function (n) {g.push(n[0]);}), g.join(" ");}(i);}switch (h.toneType) {case "symbol":break;case "none":i = z(i);break;case "num":i = function (n) {var g = z(n).split(" "),h = s(n).split(" "),i = [];return g.forEach(function (n, g) {i.push("" + n + h[g]);}), i.join(" ");}(i);}return "array" === h.type ? i.split(" ") : i;};

/***/ }),

/***/ 84:
/*!*******************************************!*\
  !*** D:/桌面/XLCM/baoma-work/common/api.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.unFollow = exports.follow = exports.comment = exports.postsDetail = exports.postsList = exports.updateInfo = exports.signup = exports.cancelCollect = exports.workCollect = exports.signWork = exports.companyInfo = exports.workInfo = exports.workList = exports.home = exports.login = void 0;var _http = __webpack_require__(/*! ./http.js */ 85);

/**
                                                                                                                                                                                                                                                                                                                                                                                                                       * 用户登录
                                                                                                                                                                                                                                                                                                                                                                                                                       * 
                                                                                                                                                                                                                                                                                                                                                                                                                      | 名称     | 类型   | 说明                               |
                                                                                                                                                                                                                                                                                                                                                                                                                      | -------- | ------ | ---------------------------------- |
                                                                                                                                                                                                                                                                                                                                                                                                                      | code     | String | 调用wx.login所产生的code           |
                                                                                                                                                                                                                                                                                                                                                                                                                      | userInfo | Object | 调用getUserProfile所产生的userInfo |
                                                                                                                                                                                                                                                                                                                                                                                                                       */
var login = function login(code, userInfo) {
  return (0, _http.apiResquest)({
    url: '/login',
    data: {
      code: code,
      userInfo: userInfo },

    method: 'POST' });

};

/**
    * 用户首页数据渲染
   | 名称    | 类型   | 说明     |
   | ------- | ------ | -------- |
   | user_id | Number | 用户的id |
    */exports.login = login;
var home = function home(user_id) {
  return (0, _http.apiResquest)({
    url: '/user/home',
    data: {
      user_id: user_id },

    method: 'GET' });

};

/**
    * 首页数据列表
   | 名称      | 类型   | 说明                                                |
   | --------- | ------ | --------------------------------------------------- |
   | keyword   | String | 搜索时的关键字，非必需，默认为空字符串              |
   | pageIndex | Number | 列表上拉加载数据使用啊(与分页一样)，非必需，默认为1 |
   | pageSize  | Number | 一次展示多少条数据，非必需，默认为10                |
   | city      | String | 兼职所在的城市，非必需，默认为长沙                  |
    */exports.home = home;
var workList = function workList(keyword, pageIndex, pageSize, city) {
  return (0, _http.apiResquest)({
    url: '/work/list',
    data: {
      keyword: keyword,
      pageIndex: pageIndex,
      pageSize: pageSize,
      city: city },

    method: 'GET' });

};


/**
    *	兼职详情
   | 名称    | 类型   | 说明                                            |
   | ------- | ------ | ----------------------------------------------- |
   | work_id | Number | 兼职的id，必须                                  |
   | user_id | Number | 用户的id,用来查找用户是否收藏了这个工作，非必需 |
    */exports.workList = workList;
var workInfo = function workInfo(work_id, user_id) {
  return (0, _http.apiResquest)({
    url: '/work/info',
    data: {
      work_id: work_id,
      user_id: user_id },

    method: 'GET' });

};

/**
    * 公司详情页
   | 名称       | 类型   | 说明   |
   | ---------- | ------ | ------ |
   | company_id | Number | 公司id |
   */exports.workInfo = workInfo;
var companyInfo = function companyInfo(company_id) {
  return (0, _http.apiResquest)({
    url: '/company/info',
    data: {
      company_id: company_id },

    method: 'GET' });

};


/**
    * 用户报名
   | 名称    | 类型   | 说明     |
   | ------- | ------ | -------- |
   | user_id | Number | 用户的id |
   | work_id | Number | 兼职的id |
    */exports.companyInfo = companyInfo;
var signWork = function signWork(user_id, work_id) {
  return (0, _http.apiResquest)({
    url: '/user/signWork',
    data: {
      user_id: user_id,
      work_id: work_id },

    method: 'POST' });

};

/**
    * 用户收藏兼职
   | 名称    | 类型   | 说明           |
   | ------- | ------ | -------------- |
   | work_id | Number | 要收藏的兼职id |
   | user_id | Number | 用户id         |
    */exports.signWork = signWork;
var workCollect = function workCollect(work_id, user_id) {
  return (0, _http.apiResquest)({
    url: '/user/work/collect`',
    data: {
      work_id: work_id,
      user_id: user_id },

    method: 'POST' });

};


/**
    * 用户取消收藏兼职 
   | 名称    | 类型   | 说明             |
   | ------- | ------ | ---------------- |
   | work_id | Number | 取消收藏的兼职id |
   | user_id | Number | 该用户id         |
    */exports.workCollect = workCollect;
var cancelCollect = function cancelCollect(work_id, user_id) {
  return (0, _http.apiResquest)({
    url: '/user/work/cancelCollect',
    data: {
      work_id: work_id,
      user_id: user_id },

    method: 'GET' });

};


/**
    * 报名单 
   | 名称    | 类型   | 说明                                                         |
   | ------- | ------ | ------------------------------------------------------------ |
   | user_id | Number | 用户id                                                       |
   | status  | String | 通过报名单的状态进行查找{progress:"进行中",signup:"已报名",end:"已完成"} |
    */exports.cancelCollect = cancelCollect;
var signup = function signup(user_id, status) {
  return (0, _http.apiResquest)({
    url: '/user/work/status',
    data: {
      user_id: user_id,
      status: status },

    method: 'GET' });

};


/**
    * 更新用户简历
   | 名称    | 类型   | 说明       |
   | ------- | ------ | ---------- |
   | user_id | Number | 用户id     |
   | data    | Object | 更新的数据 | 
    */exports.signup = signup;
var updateInfo = function updateInfo(user_id, data) {
  return (0, _http.apiResquest)({
    url: '/user/updateInfo',
    data: {
      user_id: user_id,
      data: data },

    method: 'POST' });

};

/**
    * 广场帖子列表
   | 名称      | 类型   | 说明                                        |
   | --------- | ------ | ------------------------------------------- |
   | pageIndex | Number | 上拉加载数据的index 自己去计算 非必需 默认1 |
   | pageSize  | Number | 一页展示多少条数据 非必需 默认10            |
    */exports.updateInfo = updateInfo;
var postsList = function postsList(pageIndex, pageSize) {
  return (0, _http.apiResquest)({
    url: '/posts/list',
    data: {
      pageIndex: pageIndex,
      pageSize: pageSize },

    method: 'GET' });

};

/**
    * 帖子详情
   | 名称     | 类型   | 说明     |
   | -------- | ------ | -------- |
   | posts_id | Number | 帖子的id |
    */exports.postsList = postsList;
var postsDetail = function postsDetail(posts_id) {
  return (0, _http.apiResquest)({
    url: '/posts/desc',
    data: {
      posts_id: posts_id },

    method: 'GET' });

};


/**
    * 发表评论
   | 名称     | 类型   | 说明        |
   | -------- | ------ | ----------- |
   | user_id  | Number | 用户id 必填 |
   | posts_id | Number | 帖子id 必填 |
   | content  | String | 内容 必填   | 
    */exports.postsDetail = postsDetail;
var comment = function comment(user_id, posts_id, content) {
  return (0, _http.apiResquest)({
    url: '/posts/comment',
    data: {
      user_id: user_id,
      posts_id: posts_id,
      content: content },

    method: 'POST' });

};

/**
    * 关注用户
   | 名称           | 类型   | 说明             |
   | -------------- | ------ | ---------------- |
   | user_id        | Number | 用户的id         |
   | follow_user_id | Number | 被关注的用户的id |
    */exports.comment = comment;
var follow = function follow(user_id, follow_user_id) {
  return (0, _http.apiResquest)({
    url: '/user/follow',
    data: {
      user_id: user_id,
      follow_user_id: follow_user_id },

    method: 'POST' });

};

/**
    * 取消关注
   | 名称           | 类型   | 说明           |
   | -------------- | ------ | -------------- |
   | user_id        | Number | 用户的id       |
   | Follow_user_id | Number | 被关注的人的id | 
    */exports.follow = follow;
var unFollow = function unFollow(user_id, Follow_user_id) {
  return (0, _http.apiResquest)({
    url: '/user/unFollow',
    data: {
      user_id: user_id,
      Follow_user_id: Follow_user_id },

    method: 'POST' });

};exports.unFollow = unFollow;

/***/ }),

/***/ 85:
/*!********************************************!*\
  !*** D:/桌面/XLCM/baoma-work/common/http.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.apiResquest = void 0;var _config = __webpack_require__(/*! ./config.js */ 86);

var apiResquest = function apiResquest(prams) {//prams 为我们需要调用的接口API的参数 下面会贴具体代码

  // 判断请求类型
  var headerData = {
    "content-type": "application/x-www-form-urlencoded" //自定义请求头信息
  };

  var dataObj = null;
  //因为我们的GET和POST请求结构不同这里我们做处理，大家根据自己后台接口所需结构灵活做调整吧
  if (prams.method === "GET") {
    headerData = {
      'content-type': 'application/json'
      // 'token': uni.getStorageSync('token')
    };
  } else if (prams.method === "POST") {
    headerData = {
      "content-type": "application/x-www-form-urlencoded" //自定义请求头信息
      // 'token': uni.getStorageSync('token')
    };
  }
  // else {
  // 	dataObj = {
  // 		'data': prams.data,
  // 		'token': uni.getStorageSync('token')
  // 	}
  // }
  return new Promise(function (resolve, reject) {
    var url = _config.base_url + prams.url; //请求的网络地址和局地的api地址组合
    uni.showLoading({
      title: '加载中',
      mask: true });

    return uni.request({
      url: url,
      data: prams.data,
      method: prams.method,
      header: headerData,
      success: function success(res) {
        uni.hideLoading();
        //这里是成功的返回码，大家根据自己的实际情况调整
        if (res.data.code !== '0000') {
          uni.showToast({
            title: '获取数据失败:' + res.data,
            duration: 1000,
            icon: "none" });

          return;
        }
        resolve(res.data);
      },
      fail: function fail(err) {
        reject(err);
        console.log(err, "errorrrrrrrrr");
        uni.hideLoading();
      },
      complete: function complete() {
        console.log('请求完成');
        uni.hideLoading();
      } });

  });
};exports.apiResquest = apiResquest;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 86:
/*!**********************************************!*\
  !*** D:/桌面/XLCM/baoma-work/common/config.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.base_url = void 0;var base_url = 'http://118.190.144.130:7070/api';

// const config = {
// base_url: 'http://118.190.144.130:7070/api'
// }
// export { config }
exports.base_url = base_url;

/***/ }),

/***/ 87:
/*!*************************************************!*\
  !*** D:/桌面/XLCM/baoma-work/common/jsrsasign.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.decodeToken = void 0;var _jsrsasign = _interopRequireDefault(__webpack_require__(/*! jsrsasign */ 88));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}
var decodeToken = function decodeToken(token) {
  var obj = null;
  if (token !== '') {
    var payload = _jsrsasign.default.KJUR.jws.JWS.parse(token);
    if (payload.hasOwnProperty('payloadObj')) {
      obj = payload.payloadObj;
    }
  }
  return obj;
};exports.decodeToken = decodeToken;

/***/ }),

/***/ 88:
/*!*********************************************************************!*\
  !*** D:/桌面/XLCM/baoma-work/node_modules/jsrsasign/lib/jsrsasign.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {
var navigator = {};
navigator.userAgent = false;

var window = {};
/*
                  * jsrsasign(all) 10.3.0 (2021-06-01) (c) 2010-2021 Kenji Urushima | kjur.github.com/jsrsasign/license
                  */

/*! CryptoJS v3.1.2 core-fix.js
                      * code.google.com/p/crypto-js
                      * (c) 2009-2013 by Jeff Mott. All rights reserved.
                      * code.google.com/p/crypto-js/wiki/License
                      * THIS IS FIX of 'core.js' to fix Hmac issue.
                      * https://code.google.com/p/crypto-js/issues/detail?id=84
                      * https://crypto-js.googlecode.com/svn-history/r667/branches/3.x/src/core.js
                      */
var CryptoJS = CryptoJS || function (e, g) {var a = {};var b = a.lib = {};var j = b.Base = function () {function n() {}return { extend: function extend(p) {n.prototype = this;var o = new n();if (p) {o.mixIn(p);}if (!o.hasOwnProperty("init")) {o.init = function () {o.$super.init.apply(this, arguments);};}o.init.prototype = o;o.$super = this;return o;}, create: function create() {var o = this.extend();o.init.apply(o, arguments);return o;}, init: function init() {}, mixIn: function mixIn(p) {for (var o in p) {if (p.hasOwnProperty(o)) {this[o] = p[o];}}if (p.hasOwnProperty("toString")) {this.toString = p.toString;}}, clone: function clone() {return this.init.prototype.extend(this);} };}();var l = b.WordArray = j.extend({ init: function init(o, n) {o = this.words = o || [];if (n != g) {this.sigBytes = n;} else {this.sigBytes = o.length * 4;}}, toString: function toString(n) {return (n || h).stringify(this);}, concat: function concat(t) {var q = this.words;var p = t.words;var n = this.sigBytes;var s = t.sigBytes;this.clamp();if (n % 4) {for (var r = 0; r < s; r++) {var o = p[r >>> 2] >>> 24 - r % 4 * 8 & 255;q[n + r >>> 2] |= o << 24 - (n + r) % 4 * 8;}} else {for (var r = 0; r < s; r += 4) {q[n + r >>> 2] = p[r >>> 2];}}this.sigBytes += s;return this;}, clamp: function clamp() {var o = this.words;var n = this.sigBytes;o[n >>> 2] &= 4294967295 << 32 - n % 4 * 8;o.length = e.ceil(n / 4);}, clone: function clone() {var n = j.clone.call(this);n.words = this.words.slice(0);return n;}, random: function random(p) {var o = [];for (var n = 0; n < p; n += 4) {o.push(e.random() * 4294967296 | 0);}return new l.init(o, p);} });var m = a.enc = {};var h = m.Hex = { stringify: function stringify(p) {var r = p.words;var o = p.sigBytes;var q = [];for (var n = 0; n < o; n++) {var s = r[n >>> 2] >>> 24 - n % 4 * 8 & 255;q.push((s >>> 4).toString(16));q.push((s & 15).toString(16));}return q.join("");}, parse: function parse(p) {var n = p.length;var q = [];for (var o = 0; o < n; o += 2) {q[o >>> 3] |= parseInt(p.substr(o, 2), 16) << 24 - o % 8 * 4;}return new l.init(q, n / 2);} };var d = m.Latin1 = { stringify: function stringify(q) {var r = q.words;var p = q.sigBytes;var n = [];for (var o = 0; o < p; o++) {var s = r[o >>> 2] >>> 24 - o % 4 * 8 & 255;n.push(String.fromCharCode(s));}return n.join("");}, parse: function parse(p) {var n = p.length;var q = [];for (var o = 0; o < n; o++) {q[o >>> 2] |= (p.charCodeAt(o) & 255) << 24 - o % 4 * 8;}return new l.init(q, n);} };var c = m.Utf8 = { stringify: function stringify(n) {try {return decodeURIComponent(escape(d.stringify(n)));} catch (o) {throw new Error("Malformed UTF-8 data");}}, parse: function parse(n) {return d.parse(unescape(encodeURIComponent(n)));} };var i = b.BufferedBlockAlgorithm = j.extend({ reset: function reset() {this._data = new l.init();this._nDataBytes = 0;}, _append: function _append(n) {if (typeof n == "string") {n = c.parse(n);}this._data.concat(n);this._nDataBytes += n.sigBytes;}, _process: function _process(w) {var q = this._data;var x = q.words;var n = q.sigBytes;var t = this.blockSize;var v = t * 4;var u = n / v;if (w) {u = e.ceil(u);} else {u = e.max((u | 0) - this._minBufferSize, 0);}var s = u * t;var r = e.min(s * 4, n);if (s) {for (var p = 0; p < s; p += t) {this._doProcessBlock(x, p);}var o = x.splice(0, s);q.sigBytes -= r;}return new l.init(o, r);}, clone: function clone() {var n = j.clone.call(this);n._data = this._data.clone();return n;}, _minBufferSize: 0 });var f = b.Hasher = i.extend({ cfg: j.extend(), init: function init(n) {this.cfg = this.cfg.extend(n);this.reset();}, reset: function reset() {i.reset.call(this);this._doReset();}, update: function update(n) {this._append(n);this._process();return this;}, finalize: function finalize(n) {if (n) {this._append(n);}var o = this._doFinalize();return o;}, blockSize: 512 / 32, _createHelper: function _createHelper(n) {return function (p, o) {return new n.init(o).finalize(p);};}, _createHmacHelper: function _createHmacHelper(n) {return function (p, o) {return new k.HMAC.init(n, o).finalize(p);};} });var k = a.algo = {};return a;}(Math);
/*
ryptoJS v3.1.2 x64-core-min.js
code.google.com/p/crypto-js
c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License

(function (g) {var a = CryptoJS,f = a.lib,e = f.Base,h = f.WordArray,a = a.x64 = {};a.Word = e.extend({ init: function init(b, c) {this.high = b;this.low = c;} });a.WordArray = e.extend({ init: function init(b, c) {b = this.words = b || [];this.sigBytes = c != g ? c : 8 * b.length;}, toX32: function toX32() {for (var b = this.words, c = b.length, a = [], d = 0; d < c; d++) {var e = b[d];a.push(e.high);a.push(e.low);}return h.create(a, this.sigBytes);}, clone: function clone() {for (var b = e.clone.call(this), c = b.words = this.words.slice(0), a = c.length, d = 0; d < a; d++) {c[d] = c[d].clone();}return b;} });})();

/*
ryptoJS v3.1.2 cipher-core.js
code.google.com/p/crypto-js
c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License

CryptoJS.lib.Cipher || function (u) {var g = CryptoJS,f = g.lib,k = f.Base,l = f.WordArray,q = f.BufferedBlockAlgorithm,r = g.enc.Base64,v = g.algo.EvpKDF,n = f.Cipher = q.extend({ cfg: k.extend(), createEncryptor: function createEncryptor(a, b) {return this.create(this._ENC_XFORM_MODE, a, b);}, createDecryptor: function createDecryptor(a, b) {return this.create(this._DEC_XFORM_MODE, a, b);}, init: function init(a, b, c) {this.cfg = this.cfg.extend(c);this._xformMode = a;this._key = b;this.reset();}, reset: function reset() {q.reset.call(this);this._doReset();}, process: function process(a) {this._append(a);
      return this._process();}, finalize: function finalize(a) {a && this._append(a);return this._doFinalize();}, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function _createHelper(a) {return { encrypt: function encrypt(b, c, d) {return ("string" == typeof c ? s : j).encrypt(a, b, c, d);}, decrypt: function decrypt(b, c, d) {return ("string" == typeof c ? s : j).decrypt(a, b, c, d);} };} });f.StreamCipher = n.extend({ _doFinalize: function _doFinalize() {return this._process(!0);}, blockSize: 1 });var m = g.mode = {},t = function t(a, b, c) {var d = this._iv;d ? this._iv = u : d = this._prevBlock;for (var e =
    0; e < c; e++) {a[b + e] ^= d[e];}},h = (f.BlockCipherMode = k.extend({ createEncryptor: function createEncryptor(a, b) {return this.Encryptor.create(a, b);}, createDecryptor: function createDecryptor(a, b) {return this.Decryptor.create(a, b);}, init: function init(a, b) {this._cipher = a;this._iv = b;} })).extend();h.Encryptor = h.extend({ processBlock: function processBlock(a, b) {var c = this._cipher,d = c.blockSize;t.call(this, a, b, d);c.encryptBlock(a, b);this._prevBlock = a.slice(b, b + d);} });h.Decryptor = h.extend({ processBlock: function processBlock(a, b) {var c = this._cipher,d = c.blockSize,e = a.slice(b, b + d);c.decryptBlock(a,
      b);t.call(this, a, b, d);this._prevBlock = e;} });m = m.CBC = h;h = (g.pad = {}).Pkcs7 = { pad: function pad(a, b) {for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, e = [], f = 0; f < c; f += 4) {e.push(d);}c = l.create(e, c);a.concat(c);}, unpad: function unpad(a) {a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255;} };f.BlockCipher = n.extend({ cfg: n.cfg.extend({ mode: m, padding: h }), reset: function reset() {n.reset.call(this);var a = this.cfg,b = a.iv,a = a.mode;if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor;else c = a.createDecryptor, this._minBufferSize = 1;
      this._mode = c.call(a, this, b && b.words);}, _doProcessBlock: function _doProcessBlock(a, b) {this._mode.processBlock(a, b);}, _doFinalize: function _doFinalize() {var a = this.cfg.padding;if (this._xformMode == this._ENC_XFORM_MODE) {a.pad(this._data, this.blockSize);var b = this._process(!0);} else b = this._process(!0), a.unpad(b);return b;}, blockSize: 4 });var p = f.CipherParams = k.extend({ init: function init(a) {this.mixIn(a);}, toString: function toString(a) {return (a || this.formatter).stringify(this);} }),m = (g.format = {}).OpenSSL = { stringify: function stringify(a) {var b = a.ciphertext;a = a.salt;
      return (a ? l.create([1398893684, 1701076831]).concat(a).concat(b) : b).toString(r);}, parse: function parse(a) {a = r.parse(a);var b = a.words;if (1398893684 == b[0] && 1701076831 == b[1]) {var c = l.create(b.slice(2, 4));b.splice(0, 4);a.sigBytes -= 16;}return p.create({ ciphertext: a, salt: c });} },j = f.SerializableCipher = k.extend({ cfg: k.extend({ format: m }), encrypt: function encrypt(a, b, c, d) {d = this.cfg.extend(d);var e = a.createEncryptor(c, d);b = e.finalize(b);e = e.cfg;return p.create({ ciphertext: b, key: c, iv: e.iv, algorithm: a, mode: e.mode, padding: e.padding,
        blockSize: a.blockSize, formatter: d.format });}, decrypt: function decrypt(a, b, c, d) {d = this.cfg.extend(d);b = this._parse(b, d.format);return a.createDecryptor(c, d).finalize(b.ciphertext);}, _parse: function _parse(a, b) {return "string" == typeof a ? b.parse(a, this) : a;} }),g = (g.kdf = {}).OpenSSL = { execute: function execute(a, b, c, d) {d || (d = l.random(8));a = v.create({ keySize: b + c }).compute(a, d);c = l.create(a.words.slice(b), 4 * c);a.sigBytes = 4 * b;return p.create({ key: a, iv: c, salt: d });} },s = f.PasswordBasedCipher = j.extend({ cfg: j.cfg.extend({ kdf: g }), encrypt: function encrypt(a,
    b, c, d) {d = this.cfg.extend(d);c = d.kdf.execute(c, a.keySize, a.ivSize);d.iv = c.iv;a = j.encrypt.call(this, a, b, c.key, d);a.mixIn(c);return a;}, decrypt: function decrypt(a, b, c, d) {d = this.cfg.extend(d);b = this._parse(b, d.format);c = d.kdf.execute(c, a.keySize, a.ivSize, b.salt);d.iv = c.iv;return j.decrypt.call(this, a, b, c.key, d);} });}();

/*
                                                                                                                                                                                                                                                                                                                                                                          CryptoJS v3.1.2 aes.js
                                                                                                                                                                                                                                                                                                                                                                          code.google.com/p/crypto-js
                                                                                                                                                                                                                                                                                                                                                                          (c) 2009-2013 by Jeff Mott. All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                          code.google.com/p/crypto-js/wiki/License
                                                                                                                                                                                                                                                                                                                                                                          */
(function () {for (var q = CryptoJS, x = q.lib.BlockCipher, r = q.algo, j = [], y = [], z = [], A = [], B = [], C = [], s = [], u = [], v = [], w = [], g = [], k = 0; 256 > k; k++) {g[k] = 128 > k ? k << 1 : k << 1 ^ 283;}for (var n = 0, l = 0, k = 0; 256 > k; k++) {var f = l ^ l << 1 ^ l << 2 ^ l << 3 ^ l << 4,f = f >>> 8 ^ f & 255 ^ 99;j[n] = f;y[f] = n;var t = g[n],D = g[t],E = g[D],b = 257 * g[f] ^ 16843008 * f;z[n] = b << 24 | b >>> 8;A[n] = b << 16 | b >>> 16;B[n] = b << 8 | b >>> 24;C[n] = b;b = 16843009 * E ^ 65537 * D ^ 257 * t ^ 16843008 * n;s[f] = b << 24 | b >>> 8;u[f] = b << 16 | b >>> 16;v[f] = b << 8 | b >>> 24;w[f] = b;n ? (n = t ^ g[g[g[E ^ t]]], l ^= g[g[l]]) : n = l = 1;}var F = [0, 1, 2, 4, 8,
  16, 32, 64, 128, 27, 54],r = r.AES = x.extend({ _doReset: function _doReset() {for (var c = this._key, e = c.words, a = c.sigBytes / 4, c = 4 * ((this._nRounds = a + 6) + 1), b = this._keySchedule = [], h = 0; h < c; h++) {if (h < a) b[h] = e[h];else {var d = b[h - 1];h % a ? 6 < a && 4 == h % a && (d = j[d >>> 24] << 24 | j[d >>> 16 & 255] << 16 | j[d >>> 8 & 255] << 8 | j[d & 255]) : (d = d << 8 | d >>> 24, d = j[d >>> 24] << 24 | j[d >>> 16 & 255] << 16 | j[d >>> 8 & 255] << 8 | j[d & 255], d ^= F[h / a | 0] << 24);b[h] = b[h - a] ^ d;}}e = this._invKeySchedule = [];for (a = 0; a < c; a++) {h = c - a, d = a % 4 ? b[h] : b[h - 4], e[a] = 4 > a || 4 >= h ? d : s[j[d >>> 24]] ^ u[j[d >>> 16 & 255]] ^ v[j[d >>>
        8 & 255]] ^ w[j[d & 255]];}}, encryptBlock: function encryptBlock(c, e) {this._doCryptBlock(c, e, this._keySchedule, z, A, B, C, j);}, decryptBlock: function decryptBlock(c, e) {var a = c[e + 1];c[e + 1] = c[e + 3];c[e + 3] = a;this._doCryptBlock(c, e, this._invKeySchedule, s, u, v, w, y);a = c[e + 1];c[e + 1] = c[e + 3];c[e + 3] = a;}, _doCryptBlock: function _doCryptBlock(c, e, a, b, h, d, j, m) {for (var n = this._nRounds, f = c[e] ^ a[0], g = c[e + 1] ^ a[1], k = c[e + 2] ^ a[2], p = c[e + 3] ^ a[3], l = 4, t = 1; t < n; t++) {var q = b[f >>> 24] ^ h[g >>> 16 & 255] ^ d[k >>> 8 & 255] ^ j[p & 255] ^ a[l++],r = b[g >>> 24] ^ h[k >>> 16 & 255] ^ d[p >>> 8 & 255] ^ j[f & 255] ^ a[l++],s =
        b[k >>> 24] ^ h[p >>> 16 & 255] ^ d[f >>> 8 & 255] ^ j[g & 255] ^ a[l++],p = b[p >>> 24] ^ h[f >>> 16 & 255] ^ d[g >>> 8 & 255] ^ j[k & 255] ^ a[l++],f = q,g = r,k = s;}q = (m[f >>> 24] << 24 | m[g >>> 16 & 255] << 16 | m[k >>> 8 & 255] << 8 | m[p & 255]) ^ a[l++];r = (m[g >>> 24] << 24 | m[k >>> 16 & 255] << 16 | m[p >>> 8 & 255] << 8 | m[f & 255]) ^ a[l++];s = (m[k >>> 24] << 24 | m[p >>> 16 & 255] << 16 | m[f >>> 8 & 255] << 8 | m[g & 255]) ^ a[l++];p = (m[p >>> 24] << 24 | m[f >>> 16 & 255] << 16 | m[g >>> 8 & 255] << 8 | m[k & 255]) ^ a[l++];c[e] = q;c[e + 1] = r;c[e + 2] = s;c[e + 3] = p;}, keySize: 8 });q.AES = x._createHelper(r);})();

/*
ryptoJS v3.1.2 tripledes-min.js
code.google.com/p/crypto-js
c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License

(function () {function j(b, c) {var a = (this._lBlock >>> b ^ this._rBlock) & c;this._rBlock ^= a;this._lBlock ^= a << b;}function l(b, c) {var a = (this._rBlock >>> b ^ this._lBlock) & c;this._lBlock ^= a;this._rBlock ^= a << b;}var h = CryptoJS,e = h.lib,n = e.WordArray,e = e.BlockCipher,g = h.algo,q = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4],p = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47,
  55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32],r = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28],s = [{ "0": 8421888, 268435456: 32768, 536870912: 8421378, 805306368: 2, 1073741824: 512, 1342177280: 8421890, 1610612736: 8389122, 1879048192: 8388608, 2147483648: 514, 2415919104: 8389120, 2684354560: 33280, 2952790016: 8421376, 3221225472: 32770, 3489660928: 8388610, 3758096384: 0, 4026531840: 33282, 134217728: 0, 402653184: 8421890, 671088640: 33282, 939524096: 32768, 1207959552: 8421888, 1476395008: 512, 1744830464: 8421378, 2013265920: 2,
    2281701376: 8389120, 2550136832: 33280, 2818572288: 8421376, 3087007744: 8389122, 3355443200: 8388610, 3623878656: 32770, 3892314112: 514, 4160749568: 8388608, 1: 32768, 268435457: 2, 536870913: 8421888, 805306369: 8388608, 1073741825: 8421378, 1342177281: 33280, 1610612737: 512, 1879048193: 8389122, 2147483649: 8421890, 2415919105: 8421376, 2684354561: 8388610, 2952790017: 33282, 3221225473: 514, 3489660929: 8389120, 3758096385: 32770, 4026531841: 0, 134217729: 8421890, 402653185: 8421376, 671088641: 8388608, 939524097: 512, 1207959553: 32768, 1476395009: 8388610,
    1744830465: 2, 2013265921: 33282, 2281701377: 32770, 2550136833: 8389122, 2818572289: 514, 3087007745: 8421888, 3355443201: 8389120, 3623878657: 0, 3892314113: 33280, 4160749569: 8421378 }, { "0": 1074282512, 16777216: 16384, 33554432: 524288, 50331648: 1074266128, 67108864: 1073741840, 83886080: 1074282496, 100663296: 1073758208, 117440512: 16, 134217728: 540672, 150994944: 1073758224, 167772160: 1073741824, 184549376: 540688, 201326592: 524304, 218103808: 0, 234881024: 16400, 251658240: 1074266112, 8388608: 1073758208, 25165824: 540688, 41943040: 16, 58720256: 1073758224,
    75497472: 1074282512, 92274688: 1073741824, 109051904: 524288, 125829120: 1074266128, 142606336: 524304, 159383552: 0, 176160768: 16384, 192937984: 1074266112, 209715200: 1073741840, 226492416: 540672, 243269632: 1074282496, 260046848: 16400, 268435456: 0, 285212672: 1074266128, 301989888: 1073758224, 318767104: 1074282496, 335544320: 1074266112, 352321536: 16, 369098752: 540688, 385875968: 16384, 402653184: 16400, 419430400: 524288, 436207616: 524304, 452984832: 1073741840, 469762048: 540672, 486539264: 1073758208, 503316480: 1073741824, 520093696: 1074282512,
    276824064: 540688, 293601280: 524288, 310378496: 1074266112, 327155712: 16384, 343932928: 1073758208, 360710144: 1074282512, 377487360: 16, 394264576: 1073741824, 411041792: 1074282496, 427819008: 1073741840, 444596224: 1073758224, 461373440: 524304, 478150656: 0, 494927872: 16400, 511705088: 1074266128, 528482304: 540672 }, { "0": 260, 1048576: 0, 2097152: 67109120, 3145728: 65796, 4194304: 65540, 5242880: 67108868, 6291456: 67174660, 7340032: 67174400, 8388608: 67108864, 9437184: 67174656, 10485760: 65792, 11534336: 67174404, 12582912: 67109124, 13631488: 65536,
    14680064: 4, 15728640: 256, 524288: 67174656, 1572864: 67174404, 2621440: 0, 3670016: 67109120, 4718592: 67108868, 5767168: 65536, 6815744: 65540, 7864320: 260, 8912896: 4, 9961472: 256, 11010048: 67174400, 12058624: 65796, 13107200: 65792, 14155776: 67109124, 15204352: 67174660, 16252928: 67108864, 16777216: 67174656, 17825792: 65540, 18874368: 65536, 19922944: 67109120, 20971520: 256, 22020096: 67174660, 23068672: 67108868, 24117248: 0, 25165824: 67109124, 26214400: 67108864, 27262976: 4, 28311552: 65792, 29360128: 67174400, 30408704: 260, 31457280: 65796, 32505856: 67174404,
    17301504: 67108864, 18350080: 260, 19398656: 67174656, 20447232: 0, 21495808: 65540, 22544384: 67109120, 23592960: 256, 24641536: 67174404, 25690112: 65536, 26738688: 67174660, 27787264: 65796, 28835840: 67108868, 29884416: 67109124, 30932992: 67174400, 31981568: 4, 33030144: 65792 }, { "0": 2151682048, 65536: 2147487808, 131072: 4198464, 196608: 2151677952, 262144: 0, 327680: 4198400, 393216: 2147483712, 458752: 4194368, 524288: 2147483648, 589824: 4194304, 655360: 64, 720896: 2147487744, 786432: 2151678016, 851968: 4160, 917504: 4096, 983040: 2151682112, 32768: 2147487808,
    98304: 64, 163840: 2151678016, 229376: 2147487744, 294912: 4198400, 360448: 2151682112, 425984: 0, 491520: 2151677952, 557056: 4096, 622592: 2151682048, 688128: 4194304, 753664: 4160, 819200: 2147483648, 884736: 4194368, 950272: 4198464, 1015808: 2147483712, 1048576: 4194368, 1114112: 4198400, 1179648: 2147483712, 1245184: 0, 1310720: 4160, 1376256: 2151678016, 1441792: 2151682048, 1507328: 2147487808, 1572864: 2151682112, 1638400: 2147483648, 1703936: 2151677952, 1769472: 4198464, 1835008: 2147487744, 1900544: 4194304, 1966080: 64, 2031616: 4096, 1081344: 2151677952,
    1146880: 2151682112, 1212416: 0, 1277952: 4198400, 1343488: 4194368, 1409024: 2147483648, 1474560: 2147487808, 1540096: 64, 1605632: 2147483712, 1671168: 4096, 1736704: 2147487744, 1802240: 2151678016, 1867776: 4160, 1933312: 2151682048, 1998848: 4194304, 2064384: 4198464 }, { "0": 128, 4096: 17039360, 8192: 262144, 12288: 536870912, 16384: 537133184, 20480: 16777344, 24576: 553648256, 28672: 262272, 32768: 16777216, 36864: 537133056, 40960: 536871040, 45056: 553910400, 49152: 553910272, 53248: 0, 57344: 17039488, 61440: 553648128, 2048: 17039488, 6144: 553648256,
    10240: 128, 14336: 17039360, 18432: 262144, 22528: 537133184, 26624: 553910272, 30720: 536870912, 34816: 537133056, 38912: 0, 43008: 553910400, 47104: 16777344, 51200: 536871040, 55296: 553648128, 59392: 16777216, 63488: 262272, 65536: 262144, 69632: 128, 73728: 536870912, 77824: 553648256, 81920: 16777344, 86016: 553910272, 90112: 537133184, 94208: 16777216, 98304: 553910400, 102400: 553648128, 106496: 17039360, 110592: 537133056, 114688: 262272, 118784: 536871040, 122880: 0, 126976: 17039488, 67584: 553648256, 71680: 16777216, 75776: 17039360, 79872: 537133184,
    83968: 536870912, 88064: 17039488, 92160: 128, 96256: 553910272, 100352: 262272, 104448: 553910400, 108544: 0, 112640: 553648128, 116736: 16777344, 120832: 262144, 124928: 537133056, 129024: 536871040 }, { "0": 268435464, 256: 8192, 512: 270532608, 768: 270540808, 1024: 268443648, 1280: 2097152, 1536: 2097160, 1792: 268435456, 2048: 0, 2304: 268443656, 2560: 2105344, 2816: 8, 3072: 270532616, 3328: 2105352, 3584: 8200, 3840: 270540800, 128: 270532608, 384: 270540808, 640: 8, 896: 2097152, 1152: 2105352, 1408: 268435464, 1664: 268443648, 1920: 8200, 2176: 2097160, 2432: 8192,
    2688: 268443656, 2944: 270532616, 3200: 0, 3456: 270540800, 3712: 2105344, 3968: 268435456, 4096: 268443648, 4352: 270532616, 4608: 270540808, 4864: 8200, 5120: 2097152, 5376: 268435456, 5632: 268435464, 5888: 2105344, 6144: 2105352, 6400: 0, 6656: 8, 6912: 270532608, 7168: 8192, 7424: 268443656, 7680: 270540800, 7936: 2097160, 4224: 8, 4480: 2105344, 4736: 2097152, 4992: 268435464, 5248: 268443648, 5504: 8200, 5760: 270540808, 6016: 270532608, 6272: 270540800, 6528: 270532616, 6784: 8192, 7040: 2105352, 7296: 2097160, 7552: 0, 7808: 268435456, 8064: 268443656 }, { "0": 1048576,
    16: 33555457, 32: 1024, 48: 1049601, 64: 34604033, 80: 0, 96: 1, 112: 34603009, 128: 33555456, 144: 1048577, 160: 33554433, 176: 34604032, 192: 34603008, 208: 1025, 224: 1049600, 240: 33554432, 8: 34603009, 24: 0, 40: 33555457, 56: 34604032, 72: 1048576, 88: 33554433, 104: 33554432, 120: 1025, 136: 1049601, 152: 33555456, 168: 34603008, 184: 1048577, 200: 1024, 216: 34604033, 232: 1, 248: 1049600, 256: 33554432, 272: 1048576, 288: 33555457, 304: 34603009, 320: 1048577, 336: 33555456, 352: 34604032, 368: 1049601, 384: 1025, 400: 34604033, 416: 1049600, 432: 1, 448: 0, 464: 34603008, 480: 33554433,
    496: 1024, 264: 1049600, 280: 33555457, 296: 34603009, 312: 1, 328: 33554432, 344: 1048576, 360: 1025, 376: 34604032, 392: 33554433, 408: 34603008, 424: 0, 440: 34604033, 456: 1049601, 472: 1024, 488: 33555456, 504: 1048577 }, { "0": 134219808, 1: 131072, 2: 134217728, 3: 32, 4: 131104, 5: 134350880, 6: 134350848, 7: 2048, 8: 134348800, 9: 134219776, 10: 133120, 11: 134348832, 12: 2080, 13: 0, 14: 134217760, 15: 133152, 2147483648: 2048, 2147483649: 134350880, 2147483650: 134219808, 2147483651: 134217728, 2147483652: 134348800, 2147483653: 133120, 2147483654: 133152, 2147483655: 32,
    2147483656: 134217760, 2147483657: 2080, 2147483658: 131104, 2147483659: 134350848, 2147483660: 0, 2147483661: 134348832, 2147483662: 134219776, 2147483663: 131072, 16: 133152, 17: 134350848, 18: 32, 19: 2048, 20: 134219776, 21: 134217760, 22: 134348832, 23: 131072, 24: 0, 25: 131104, 26: 134348800, 27: 134219808, 28: 134350880, 29: 133120, 30: 2080, 31: 134217728, 2147483664: 131072, 2147483665: 2048, 2147483666: 134348832, 2147483667: 133152, 2147483668: 32, 2147483669: 134348800, 2147483670: 134217728, 2147483671: 134219808, 2147483672: 134350880, 2147483673: 134217760,
    2147483674: 134219776, 2147483675: 0, 2147483676: 133120, 2147483677: 2080, 2147483678: 131104, 2147483679: 134350848 }],t = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679],m = g.DES = e.extend({ _doReset: function _doReset() {for (var b = this._key.words, c = [], a = 0; 56 > a; a++) {var f = q[a] - 1;c[a] = b[f >>> 5] >>> 31 - f % 32 & 1;}b = this._subKeys = [];for (f = 0; 16 > f; f++) {for (var d = b[f] = [], e = r[f], a = 0; 24 > a; a++) {d[a / 6 | 0] |= c[(p[a] - 1 + e) % 28] << 31 - a % 6, d[4 + (a / 6 | 0)] |= c[28 + (p[a + 24] - 1 + e) % 28] << 31 - a % 6;}d[0] = d[0] << 1 | d[0] >>> 31;for (a = 1; 7 > a; a++) {d[a] >>>=
          4 * (a - 1) + 3;}d[7] = d[7] << 5 | d[7] >>> 27;}c = this._invSubKeys = [];for (a = 0; 16 > a; a++) {c[a] = b[15 - a];}}, encryptBlock: function encryptBlock(b, c) {this._doCryptBlock(b, c, this._subKeys);}, decryptBlock: function decryptBlock(b, c) {this._doCryptBlock(b, c, this._invSubKeys);}, _doCryptBlock: function _doCryptBlock(b, c, a) {this._lBlock = b[c];this._rBlock = b[c + 1];j.call(this, 4, 252645135);j.call(this, 16, 65535);l.call(this, 2, 858993459);l.call(this, 8, 16711935);j.call(this, 1, 1431655765);for (var f = 0; 16 > f; f++) {for (var d = a[f], e = this._lBlock, h = this._rBlock, g = 0, k = 0; 8 > k; k++) {g |= s[k][((h ^
          d[k]) & t[k]) >>> 0];}this._lBlock = h;this._rBlock = e ^ g;}a = this._lBlock;this._lBlock = this._rBlock;this._rBlock = a;j.call(this, 1, 1431655765);l.call(this, 8, 16711935);l.call(this, 2, 858993459);j.call(this, 16, 65535);j.call(this, 4, 252645135);b[c] = this._lBlock;b[c + 1] = this._rBlock;}, keySize: 2, ivSize: 2, blockSize: 2 });h.DES = e._createHelper(m);g = g.TripleDES = e.extend({ _doReset: function _doReset() {var b = this._key.words;this._des1 = m.createEncryptor(n.create(b.slice(0, 2)));this._des2 = m.createEncryptor(n.create(b.slice(2, 4)));this._des3 =
      m.createEncryptor(n.create(b.slice(4, 6)));}, encryptBlock: function encryptBlock(b, c) {this._des1.encryptBlock(b, c);this._des2.decryptBlock(b, c);this._des3.encryptBlock(b, c);}, decryptBlock: function decryptBlock(b, c) {this._des3.decryptBlock(b, c);this._des2.encryptBlock(b, c);this._des1.decryptBlock(b, c);}, keySize: 6, ivSize: 2, blockSize: 2 });h.TripleDES = e._createHelper(g);})();

/*
                                                                                                                                                                                                                                                                                                                                                                                                                  CryptoJS v3.1.2 enc-base64.js
                                                                                                                                                                                                                                                                                                                                                                                                                  code.google.com/p/crypto-js
                                                                                                                                                                                                                                                                                                                                                                                                                  (c) 2009-2013 by Jeff Mott. All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                  code.google.com/p/crypto-js/wiki/License
                                                                                                                                                                                                                                                                                                                                                                                                                  */
(function () {var h = CryptoJS,j = h.lib.WordArray;h.enc.Base64 = { stringify: function stringify(b) {var e = b.words,f = b.sigBytes,c = this._map;b.clamp();b = [];for (var a = 0; a < f; a += 3) {for (var d = (e[a >>> 2] >>> 24 - 8 * (a % 4) & 255) << 16 | (e[a + 1 >>> 2] >>> 24 - 8 * ((a + 1) % 4) & 255) << 8 | e[a + 2 >>> 2] >>> 24 - 8 * ((a + 2) % 4) & 255, g = 0; 4 > g && a + 0.75 * g < f; g++) {b.push(c.charAt(d >>> 6 * (3 - g) & 63));}}if (e = c.charAt(64)) for (; b.length % 4;) {b.push(e);}return b.join("");}, parse: function parse(b) {var e = b.length,f = this._map,c = f.charAt(64);c && (c = b.indexOf(c), -1 != c && (e = c));for (var c = [], a = 0, d = 0; d <
      e; d++) {if (d % 4) {var g = f.indexOf(b.charAt(d - 1)) << 2 * (d % 4),h = f.indexOf(b.charAt(d)) >>> 6 - 2 * (d % 4);c[a >>> 2] |= (g | h) << 24 - 8 * (a % 4);a++;}}return j.create(c, a);}, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" };})();

/*
                                                                                                                                                                                                                                                                                       CryptoJS v3.1.2 md5.js
                                                                                                                                                                                                                                                                                       code.google.com/p/crypto-js
                                                                                                                                                                                                                                                                                       (c) 2009-2013 by Jeff Mott. All rights reserved.
                                                                                                                                                                                                                                                                                       code.google.com/p/crypto-js/wiki/License
                                                                                                                                                                                                                                                                                       */
(function (E) {function h(a, f, g, j, p, h, k) {a = a + (f & g | ~f & j) + p + k;return (a << h | a >>> 32 - h) + f;}function k(a, f, g, j, p, h, k) {a = a + (f & j | g & ~j) + p + k;return (a << h | a >>> 32 - h) + f;}function l(a, f, g, j, h, k, l) {a = a + (f ^ g ^ j) + h + l;return (a << k | a >>> 32 - k) + f;}function n(a, f, g, j, h, k, l) {a = a + (g ^ (f | ~j)) + h + l;return (a << k | a >>> 32 - k) + f;}for (var r = CryptoJS, q = r.lib, F = q.WordArray, s = q.Hasher, q = r.algo, a = [], t = 0; 64 > t; t++) {a[t] = 4294967296 * E.abs(E.sin(t + 1)) | 0;}q = q.MD5 = s.extend({ _doReset: function _doReset() {this._hash = new F.init([1732584193, 4023233417, 2562383102, 271733878]);},
    _doProcessBlock: function _doProcessBlock(m, f) {for (var g = 0; 16 > g; g++) {var j = f + g,p = m[j];m[j] = (p << 8 | p >>> 24) & 16711935 | (p << 24 | p >>> 8) & 4278255360;}var g = this._hash.words,j = m[f + 0],p = m[f + 1],q = m[f + 2],r = m[f + 3],s = m[f + 4],t = m[f + 5],u = m[f + 6],v = m[f + 7],w = m[f + 8],x = m[f + 9],y = m[f + 10],z = m[f + 11],A = m[f + 12],B = m[f + 13],C = m[f + 14],D = m[f + 15],b = g[0],c = g[1],d = g[2],e = g[3],b = h(b, c, d, e, j, 7, a[0]),e = h(e, b, c, d, p, 12, a[1]),d = h(d, e, b, c, q, 17, a[2]),c = h(c, d, e, b, r, 22, a[3]),b = h(b, c, d, e, s, 7, a[4]),e = h(e, b, c, d, t, 12, a[5]),d = h(d, e, b, c, u, 17, a[6]),c = h(c, d, e, b, v, 22, a[7]),
      b = h(b, c, d, e, w, 7, a[8]),e = h(e, b, c, d, x, 12, a[9]),d = h(d, e, b, c, y, 17, a[10]),c = h(c, d, e, b, z, 22, a[11]),b = h(b, c, d, e, A, 7, a[12]),e = h(e, b, c, d, B, 12, a[13]),d = h(d, e, b, c, C, 17, a[14]),c = h(c, d, e, b, D, 22, a[15]),b = k(b, c, d, e, p, 5, a[16]),e = k(e, b, c, d, u, 9, a[17]),d = k(d, e, b, c, z, 14, a[18]),c = k(c, d, e, b, j, 20, a[19]),b = k(b, c, d, e, t, 5, a[20]),e = k(e, b, c, d, y, 9, a[21]),d = k(d, e, b, c, D, 14, a[22]),c = k(c, d, e, b, s, 20, a[23]),b = k(b, c, d, e, x, 5, a[24]),e = k(e, b, c, d, C, 9, a[25]),d = k(d, e, b, c, r, 14, a[26]),c = k(c, d, e, b, w, 20, a[27]),b = k(b, c, d, e, B, 5, a[28]),e = k(e, b,
      c, d, q, 9, a[29]),d = k(d, e, b, c, v, 14, a[30]),c = k(c, d, e, b, A, 20, a[31]),b = l(b, c, d, e, t, 4, a[32]),e = l(e, b, c, d, w, 11, a[33]),d = l(d, e, b, c, z, 16, a[34]),c = l(c, d, e, b, C, 23, a[35]),b = l(b, c, d, e, p, 4, a[36]),e = l(e, b, c, d, s, 11, a[37]),d = l(d, e, b, c, v, 16, a[38]),c = l(c, d, e, b, y, 23, a[39]),b = l(b, c, d, e, B, 4, a[40]),e = l(e, b, c, d, j, 11, a[41]),d = l(d, e, b, c, r, 16, a[42]),c = l(c, d, e, b, u, 23, a[43]),b = l(b, c, d, e, x, 4, a[44]),e = l(e, b, c, d, A, 11, a[45]),d = l(d, e, b, c, D, 16, a[46]),c = l(c, d, e, b, q, 23, a[47]),b = n(b, c, d, e, j, 6, a[48]),e = n(e, b, c, d, v, 10, a[49]),d = n(d, e, b, c,
      C, 15, a[50]),c = n(c, d, e, b, t, 21, a[51]),b = n(b, c, d, e, A, 6, a[52]),e = n(e, b, c, d, r, 10, a[53]),d = n(d, e, b, c, y, 15, a[54]),c = n(c, d, e, b, p, 21, a[55]),b = n(b, c, d, e, w, 6, a[56]),e = n(e, b, c, d, D, 10, a[57]),d = n(d, e, b, c, u, 15, a[58]),c = n(c, d, e, b, B, 21, a[59]),b = n(b, c, d, e, s, 6, a[60]),e = n(e, b, c, d, z, 10, a[61]),d = n(d, e, b, c, q, 15, a[62]),c = n(c, d, e, b, x, 21, a[63]);g[0] = g[0] + b | 0;g[1] = g[1] + c | 0;g[2] = g[2] + d | 0;g[3] = g[3] + e | 0;}, _doFinalize: function _doFinalize() {var a = this._data,f = a.words,g = 8 * this._nDataBytes,j = 8 * a.sigBytes;f[j >>> 5] |= 128 << 24 - j % 32;var h = E.floor(g /
      4294967296);f[(j + 64 >>> 9 << 4) + 15] = (h << 8 | h >>> 24) & 16711935 | (h << 24 | h >>> 8) & 4278255360;f[(j + 64 >>> 9 << 4) + 14] = (g << 8 | g >>> 24) & 16711935 | (g << 24 | g >>> 8) & 4278255360;a.sigBytes = 4 * (f.length + 1);this._process();a = this._hash;f = a.words;for (g = 0; 4 > g; g++) {j = f[g], f[g] = (j << 8 | j >>> 24) & 16711935 | (j << 24 | j >>> 8) & 4278255360;}return a;}, clone: function clone() {var a = s.clone.call(this);a._hash = this._hash.clone();return a;} });r.MD5 = s._createHelper(q);r.HmacMD5 = s._createHmacHelper(q);})(Math);

/*
ryptoJS v3.1.2 sha1-min.js
code.google.com/p/crypto-js
c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License

(function () {var k = CryptoJS,b = k.lib,m = b.WordArray,l = b.Hasher,d = [],b = k.algo.SHA1 = l.extend({ _doReset: function _doReset() {this._hash = new m.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);}, _doProcessBlock: function _doProcessBlock(n, p) {for (var a = this._hash.words, e = a[0], f = a[1], h = a[2], j = a[3], b = a[4], c = 0; 80 > c; c++) {if (16 > c) d[c] = n[p + c] | 0;else {var g = d[c - 3] ^ d[c - 8] ^ d[c - 14] ^ d[c - 16];d[c] = g << 1 | g >>> 31;}g = (e << 5 | e >>> 27) + b + d[c];g = 20 > c ? g + ((f & h | ~f & j) + 1518500249) : 40 > c ? g + ((f ^ h ^ j) + 1859775393) : 60 > c ? g + ((f & h | f & j | h & j) - 1894007588) : g + ((f ^ h ^
        j) - 899497514);b = j;j = h;h = f << 30 | f >>> 2;f = e;e = g;}a[0] = a[0] + e | 0;a[1] = a[1] + f | 0;a[2] = a[2] + h | 0;a[3] = a[3] + j | 0;a[4] = a[4] + b | 0;}, _doFinalize: function _doFinalize() {var b = this._data,d = b.words,a = 8 * this._nDataBytes,e = 8 * b.sigBytes;d[e >>> 5] |= 128 << 24 - e % 32;d[(e + 64 >>> 9 << 4) + 14] = Math.floor(a / 4294967296);d[(e + 64 >>> 9 << 4) + 15] = a;b.sigBytes = 4 * d.length;this._process();return this._hash;}, clone: function clone() {var b = l.clone.call(this);b._hash = this._hash.clone();return b;} });k.SHA1 = l._createHelper(b);k.HmacSHA1 = l._createHmacHelper(b);})();

/*
ryptoJS v3.1.2 sha256-min.js
code.google.com/p/crypto-js
c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License

(function (k) {for (var g = CryptoJS, h = g.lib, v = h.WordArray, j = h.Hasher, h = g.algo, s = [], t = [], u = function u(q) {return 4294967296 * (q - (q | 0)) | 0;}, l = 2, b = 0; 64 > b;) {var d;a: {d = l;for (var w = k.sqrt(d), r = 2; r <= w; r++) {if (!(d % r)) {d = !1;break a;}}d = !0;}d && (8 > b && (s[b] = u(k.pow(l, 0.5))), t[b] = u(k.pow(l, 1 / 3)), b++);l++;}var n = [],h = h.SHA256 = j.extend({ _doReset: function _doReset() {this._hash = new v.init(s.slice(0));}, _doProcessBlock: function _doProcessBlock(q, h) {for (var a = this._hash.words, c = a[0], d = a[1], b = a[2], k = a[3], f = a[4], g = a[5], j = a[6], l = a[7], e = 0; 64 > e; e++) {if (16 > e) n[e] =
        q[h + e] | 0;else {var m = n[e - 15],p = n[e - 2];n[e] = ((m << 25 | m >>> 7) ^ (m << 14 | m >>> 18) ^ m >>> 3) + n[e - 7] + ((p << 15 | p >>> 17) ^ (p << 13 | p >>> 19) ^ p >>> 10) + n[e - 16];}m = l + ((f << 26 | f >>> 6) ^ (f << 21 | f >>> 11) ^ (f << 7 | f >>> 25)) + (f & g ^ ~f & j) + t[e] + n[e];p = ((c << 30 | c >>> 2) ^ (c << 19 | c >>> 13) ^ (c << 10 | c >>> 22)) + (c & d ^ c & b ^ d & b);l = j;j = g;g = f;f = k + m | 0;k = b;b = d;d = c;c = m + p | 0;}a[0] = a[0] + c | 0;a[1] = a[1] + d | 0;a[2] = a[2] + b | 0;a[3] = a[3] + k | 0;a[4] = a[4] + f | 0;a[5] = a[5] + g | 0;a[6] = a[6] + j | 0;a[7] = a[7] + l | 0;}, _doFinalize: function _doFinalize() {var d = this._data,b = d.words,a = 8 * this._nDataBytes,c = 8 * d.sigBytes;
      b[c >>> 5] |= 128 << 24 - c % 32;b[(c + 64 >>> 9 << 4) + 14] = k.floor(a / 4294967296);b[(c + 64 >>> 9 << 4) + 15] = a;d.sigBytes = 4 * b.length;this._process();return this._hash;}, clone: function clone() {var b = j.clone.call(this);b._hash = this._hash.clone();return b;} });g.SHA256 = j._createHelper(h);g.HmacSHA256 = j._createHmacHelper(h);})(Math);

/*
                                                                                                                                                                                                                                                                                                                                                                         CryptoJS v3.1.2 sha224-min.js
                                                                                                                                                                                                                                                                                                                                                                         code.google.com/p/crypto-js
                                                                                                                                                                                                                                                                                                                                                                         (c) 2009-2013 by Jeff Mott. All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                         code.google.com/p/crypto-js/wiki/License
                                                                                                                                                                                                                                                                                                                                                                         */
(function () {var b = CryptoJS,d = b.lib.WordArray,a = b.algo,c = a.SHA256,a = a.SHA224 = c.extend({ _doReset: function _doReset() {this._hash = new d.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);}, _doFinalize: function _doFinalize() {var a = c._doFinalize.call(this);a.sigBytes -= 4;return a;} });b.SHA224 = c._createHelper(a);b.HmacSHA224 = c._createHmacHelper(a);})();

/*
                                                                                                                                                                                                                                                                                                                                                                                                                                             CryptoJS v3.1.2 sha512-min.js
                                                                                                                                                                                                                                                                                                                                                                                                                                             code.google.com/p/crypto-js
                                                                                                                                                                                                                                                                                                                                                                                                                                             (c) 2009-2013 by Jeff Mott. All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                             code.google.com/p/crypto-js/wiki/License
                                                                                                                                                                                                                                                                                                                                                                                                                                             */
(function () {function a() {return d.create.apply(d, arguments);}for (var n = CryptoJS, r = n.lib.Hasher, e = n.x64, d = e.Word, T = e.WordArray, e = n.algo, ea = [a(1116352408, 3609767458), a(1899447441, 602891725), a(3049323471, 3964484399), a(3921009573, 2173295548), a(961987163, 4081628472), a(1508970993, 3053834265), a(2453635748, 2937671579), a(2870763221, 3664609560), a(3624381080, 2734883394), a(310598401, 1164996542), a(607225278, 1323610764), a(1426881987, 3590304994), a(1925078388, 4068182383), a(2162078206, 991336113), a(2614888103, 633803317),
  a(3248222580, 3479774868), a(3835390401, 2666613458), a(4022224774, 944711139), a(264347078, 2341262773), a(604807628, 2007800933), a(770255983, 1495990901), a(1249150122, 1856431235), a(1555081692, 3175218132), a(1996064986, 2198950837), a(2554220882, 3999719339), a(2821834349, 766784016), a(2952996808, 2566594879), a(3210313671, 3203337956), a(3336571891, 1034457026), a(3584528711, 2466948901), a(113926993, 3758326383), a(338241895, 168717936), a(666307205, 1188179964), a(773529912, 1546045734), a(1294757372, 1522805485), a(1396182291,
  2643833823), a(1695183700, 2343527390), a(1986661051, 1014477480), a(2177026350, 1206759142), a(2456956037, 344077627), a(2730485921, 1290863460), a(2820302411, 3158454273), a(3259730800, 3505952657), a(3345764771, 106217008), a(3516065817, 3606008344), a(3600352804, 1432725776), a(4094571909, 1467031594), a(275423344, 851169720), a(430227734, 3100823752), a(506948616, 1363258195), a(659060556, 3750685593), a(883997877, 3785050280), a(958139571, 3318307427), a(1322822218, 3812723403), a(1537002063, 2003034995), a(1747873779, 3602036899),
  a(1955562222, 1575990012), a(2024104815, 1125592928), a(2227730452, 2716904306), a(2361852424, 442776044), a(2428436474, 593698344), a(2756734187, 3733110249), a(3204031479, 2999351573), a(3329325298, 3815920427), a(3391569614, 3928383900), a(3515267271, 566280711), a(3940187606, 3454069534), a(4118630271, 4000239992), a(116418474, 1914138554), a(174292421, 2731055270), a(289380356, 3203993006), a(460393269, 320620315), a(685471733, 587496836), a(852142971, 1086792851), a(1017036298, 365543100), a(1126000580, 2618297676), a(1288033470,
  3409855158), a(1501505948, 4234509866), a(1607167915, 987167468), a(1816402316, 1246189591)], v = [], w = 0; 80 > w; w++) {v[w] = a();}e = e.SHA512 = r.extend({ _doReset: function _doReset() {this._hash = new T.init([new d.init(1779033703, 4089235720), new d.init(3144134277, 2227873595), new d.init(1013904242, 4271175723), new d.init(2773480762, 1595750129), new d.init(1359893119, 2917565137), new d.init(2600822924, 725511199), new d.init(528734635, 4215389547), new d.init(1541459225, 327033209)]);}, _doProcessBlock: function _doProcessBlock(a, d) {for (var f = this._hash.words,
      F = f[0], e = f[1], n = f[2], r = f[3], G = f[4], H = f[5], I = f[6], f = f[7], w = F.high, J = F.low, X = e.high, K = e.low, Y = n.high, L = n.low, Z = r.high, M = r.low, $ = G.high, N = G.low, aa = H.high, O = H.low, ba = I.high, P = I.low, ca = f.high, Q = f.low, k = w, g = J, z = X, x = K, A = Y, y = L, U = Z, B = M, l = $, h = N, R = aa, C = O, S = ba, D = P, V = ca, E = Q, m = 0; 80 > m; m++) {var s = v[m];if (16 > m) var j = s.high = a[d + 2 * m] | 0,b = s.low = a[d + 2 * m + 1] | 0;else {var j = v[m - 15],b = j.high,p = j.low,j = (b >>> 1 | p << 31) ^ (b >>> 8 | p << 24) ^ b >>> 7,p = (p >>> 1 | b << 31) ^ (p >>> 8 | b << 24) ^ (p >>> 7 | b << 25),u = v[m - 2],b = u.high,c = u.low,u = (b >>> 19 | c << 13) ^ (b <<
          3 | c >>> 29) ^ b >>> 6,c = (c >>> 19 | b << 13) ^ (c << 3 | b >>> 29) ^ (c >>> 6 | b << 26),b = v[m - 7],W = b.high,t = v[m - 16],q = t.high,t = t.low,b = p + b.low,j = j + W + (b >>> 0 < p >>> 0 ? 1 : 0),b = b + c,j = j + u + (b >>> 0 < c >>> 0 ? 1 : 0),b = b + t,j = j + q + (b >>> 0 < t >>> 0 ? 1 : 0);s.high = j;s.low = b;}var W = l & R ^ ~l & S,t = h & C ^ ~h & D,s = k & z ^ k & A ^ z & A,T = g & x ^ g & y ^ x & y,p = (k >>> 28 | g << 4) ^ (k << 30 | g >>> 2) ^ (k << 25 | g >>> 7),u = (g >>> 28 | k << 4) ^ (g << 30 | k >>> 2) ^ (g << 25 | k >>> 7),c = ea[m],fa = c.high,da = c.low,c = E + ((h >>> 14 | l << 18) ^ (h >>> 18 | l << 14) ^ (h << 23 | l >>> 9)),q = V + ((l >>> 14 | h << 18) ^ (l >>> 18 | h << 14) ^ (l << 23 | h >>> 9)) + (c >>> 0 < E >>> 0 ? 1 :
        0),c = c + t,q = q + W + (c >>> 0 < t >>> 0 ? 1 : 0),c = c + da,q = q + fa + (c >>> 0 < da >>> 0 ? 1 : 0),c = c + b,q = q + j + (c >>> 0 < b >>> 0 ? 1 : 0),b = u + T,s = p + s + (b >>> 0 < u >>> 0 ? 1 : 0),V = S,E = D,S = R,D = C,R = l,C = h,h = B + c | 0,l = U + q + (h >>> 0 < B >>> 0 ? 1 : 0) | 0,U = A,B = y,A = z,y = x,z = k,x = g,g = c + b | 0,k = q + s + (g >>> 0 < c >>> 0 ? 1 : 0) | 0;}J = F.low = J + g;F.high = w + k + (J >>> 0 < g >>> 0 ? 1 : 0);K = e.low = K + x;e.high = X + z + (K >>> 0 < x >>> 0 ? 1 : 0);L = n.low = L + y;n.high = Y + A + (L >>> 0 < y >>> 0 ? 1 : 0);M = r.low = M + B;r.high = Z + U + (M >>> 0 < B >>> 0 ? 1 : 0);N = G.low = N + h;G.high = $ + l + (N >>> 0 < h >>> 0 ? 1 : 0);O = H.low = O + C;H.high = aa + R + (O >>> 0 < C >>> 0 ? 1 : 0);P = I.low = P + D;
      I.high = ba + S + (P >>> 0 < D >>> 0 ? 1 : 0);Q = f.low = Q + E;f.high = ca + V + (Q >>> 0 < E >>> 0 ? 1 : 0);}, _doFinalize: function _doFinalize() {var a = this._data,d = a.words,f = 8 * this._nDataBytes,e = 8 * a.sigBytes;d[e >>> 5] |= 128 << 24 - e % 32;d[(e + 128 >>> 10 << 5) + 30] = Math.floor(f / 4294967296);d[(e + 128 >>> 10 << 5) + 31] = f;a.sigBytes = 4 * d.length;this._process();return this._hash.toX32();}, clone: function clone() {var a = r.clone.call(this);a._hash = this._hash.clone();return a;}, blockSize: 32 });n.SHA512 = r._createHelper(e);n.HmacSHA512 = r._createHmacHelper(e);})();

/*
ryptoJS v3.1.2 sha384-min.js
code.google.com/p/crypto-js
c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License

(function () {var c = CryptoJS,a = c.x64,b = a.Word,e = a.WordArray,a = c.algo,d = a.SHA512,a = a.SHA384 = d.extend({ _doReset: function _doReset() {this._hash = new e.init([new b.init(3418070365, 3238371032), new b.init(1654270250, 914150663), new b.init(2438529370, 812702999), new b.init(355462360, 4144912697), new b.init(1731405415, 4290775857), new b.init(2394180231, 1750603025), new b.init(3675008525, 1694076839), new b.init(1203062813, 3204075428)]);}, _doFinalize: function _doFinalize() {var a = d._doFinalize.call(this);a.sigBytes -= 16;return a;} });c.SHA384 =
  d._createHelper(a);c.HmacSHA384 = d._createHmacHelper(a);})();

/*
                                                                 CryptoJS v3.1.2 ripemd160-min.js
                                                                 code.google.com/p/crypto-js
                                                                 (c) 2009-2013 by Jeff Mott. All rights reserved.
                                                                 code.google.com/p/crypto-js/wiki/License
                                                                 */
/*
                                                                    
                                                                    (c) 2012 by Cedric Mesnil. All rights reserved.
                                                                    
                                                                    Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
                                                                    
                                                                        - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
                                                                        - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
                                                                    
                                                                    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                                                    */
(function () {var q = CryptoJS,d = q.lib,n = d.WordArray,p = d.Hasher,d = q.algo,x = n.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]),y = n.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]),z = n.create([11, 14, 15, 12,
  5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]),A = n.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]),B = n.create([0, 1518500249, 1859775393, 2400959708, 2840853838]),C = n.create([1352829926, 1548603684, 1836072691,
  2053994217, 0]),d = d.RIPEMD160 = p.extend({ _doReset: function _doReset() {this._hash = n.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);}, _doProcessBlock: function _doProcessBlock(e, v) {for (var b = 0; 16 > b; b++) {var c = v + b,f = e[c];e[c] = (f << 8 | f >>> 24) & 16711935 | (f << 24 | f >>> 8) & 4278255360;}var c = this._hash.words,f = B.words,d = C.words,n = x.words,q = y.words,p = z.words,w = A.words,t,g,h,j,r,u,k,l,m,s;u = t = c[0];k = g = c[1];l = h = c[2];m = j = c[3];s = r = c[4];for (var a, b = 0; 80 > b; b += 1) {a = t + e[v + n[b]] | 0, a = 16 > b ? a + ((g ^ h ^ j) + f[0]) : 32 > b ? a + ((g & h | ~g & j) + f[1]) : 48 > b ?
        a + (((g | ~h) ^ j) + f[2]) : 64 > b ? a + ((g & j | h & ~j) + f[3]) : a + ((g ^ (h | ~j)) + f[4]), a |= 0, a = a << p[b] | a >>> 32 - p[b], a = a + r | 0, t = r, r = j, j = h << 10 | h >>> 22, h = g, g = a, a = u + e[v + q[b]] | 0, a = 16 > b ? a + ((k ^ (l | ~m)) + d[0]) : 32 > b ? a + ((k & m | l & ~m) + d[1]) : 48 > b ? a + (((k | ~l) ^ m) + d[2]) : 64 > b ? a + ((k & l | ~k & m) + d[3]) : a + ((k ^ l ^ m) + d[4]), a |= 0, a = a << w[b] | a >>> 32 - w[b], a = a + s | 0, u = s, s = m, m = l << 10 | l >>> 22, l = k, k = a;}a = c[1] + h + m | 0;c[1] = c[2] + j + s | 0;c[2] = c[3] + r + u | 0;c[3] = c[4] + t + k | 0;c[4] = c[0] + g + l | 0;c[0] = a;}, _doFinalize: function _doFinalize() {var e = this._data,d = e.words,b = 8 * this._nDataBytes,c = 8 * e.sigBytes;
      d[c >>> 5] |= 128 << 24 - c % 32;d[(c + 64 >>> 9 << 4) + 14] = (b << 8 | b >>> 24) & 16711935 | (b << 24 | b >>> 8) & 4278255360;e.sigBytes = 4 * (d.length + 1);this._process();e = this._hash;d = e.words;for (b = 0; 5 > b; b++) {c = d[b], d[b] = (c << 8 | c >>> 24) & 16711935 | (c << 24 | c >>> 8) & 4278255360;}return e;}, clone: function clone() {var d = p.clone.call(this);d._hash = this._hash.clone();return d;} });q.RIPEMD160 = p._createHelper(d);q.HmacRIPEMD160 = p._createHmacHelper(d);})(Math);

/*
ryptoJS v3.1.2 hmac.js
code.google.com/p/crypto-js
c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License

(function () {var c = CryptoJS,k = c.enc.Utf8;c.algo.HMAC = c.lib.Base.extend({ init: function init(a, b) {a = this._hasher = new a.init();"string" == typeof b && (b = k.parse(b));var c = a.blockSize,e = 4 * c;b.sigBytes > e && (b = a.finalize(b));b.clamp();for (var f = this._oKey = b.clone(), g = this._iKey = b.clone(), h = f.words, j = g.words, d = 0; d < c; d++) {h[d] ^= 1549556828, j[d] ^= 909522486;}f.sigBytes = g.sigBytes = e;this.reset();}, reset: function reset() {var a = this._hasher;a.reset();a.update(this._iKey);}, update: function update(a) {this._hasher.update(a);return this;}, finalize: function finalize(a) {var b =
      this._hasher;a = b.finalize(a);b.reset();return b.finalize(this._oKey.clone().concat(a));} });})();

/*
                                                                                                          CryptoJS v3.1.2 pbkdf2-min.js
                                                                                                          code.google.com/p/crypto-js
                                                                                                          (c) 2009-2013 by Jeff Mott. All rights reserved.
                                                                                                          code.google.com/p/crypto-js/wiki/License
                                                                                                          */
(function () {var b = CryptoJS,a = b.lib,d = a.Base,m = a.WordArray,a = b.algo,q = a.HMAC,l = a.PBKDF2 = d.extend({ cfg: d.extend({ keySize: 4, hasher: a.SHA1, iterations: 1 }), init: function init(a) {this.cfg = this.cfg.extend(a);}, compute: function compute(a, b) {for (var c = this.cfg, f = q.create(c.hasher, a), g = m.create(), d = m.create([1]), l = g.words, r = d.words, n = c.keySize, c = c.iterations; l.length < n;) {var h = f.update(b).finalize(d);f.reset();for (var j = h.words, s = j.length, k = h, p = 1; p < c; p++) {k = f.finalize(k);f.reset();for (var t = k.words, e = 0; e < s; e++) {j[e] ^= t[e];}}g.concat(h);
        r[0]++;}g.sigBytes = 4 * n;return g;} });b.PBKDF2 = function (a, b, c) {return l.create(c).compute(a, b);};})();

/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/
                                                                                                                          */
var b64map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var b64pad = "=";function hex2b64(d) {var b;var e;var a = "";for (b = 0; b + 3 <= d.length; b += 3) {e = parseInt(d.substring(b, b + 3), 16);a += b64map.charAt(e >> 6) + b64map.charAt(e & 63);}if (b + 1 == d.length) {e = parseInt(d.substring(b, b + 1), 16);a += b64map.charAt(e << 2);} else {if (b + 2 == d.length) {e = parseInt(d.substring(b, b + 2), 16);a += b64map.charAt(e >> 2) + b64map.charAt((e & 3) << 4);}}if (b64pad) {while ((a.length & 3) > 0) {a += b64pad;}}return a;}function b64tohex(f) {var d = "";var e;var b = 0;var c;var a;for (e = 0; e < f.length; ++e) {if (f.charAt(e) == b64pad) {break;}a = b64map.indexOf(f.charAt(e));if (a < 0) {continue;}if (b == 0) {d += int2char(a >> 2);c = a & 3;b = 1;} else {if (b == 1) {d += int2char(c << 2 | a >> 4);c = a & 15;b = 2;} else {if (b == 2) {d += int2char(c);d += int2char(a >> 2);c = a & 3;b = 3;} else {d += int2char(c << 2 | a >> 4);d += int2char(a & 15);b = 0;}}}}if (b == 1) {d += int2char(c << 2);}return d;}function b64toBA(e) {var d = b64tohex(e);var c;var b = new Array();for (c = 0; 2 * c < d.length; ++c) {b[c] = parseInt(d.substring(2 * c, 2 * c + 2), 16);}return b;};
/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/

var dbits;var canary = 244837814094590;var j_lm = (canary & 16777215) == 15715070;function BigInteger(e, d, f) {if (e != null) {if ("number" == typeof e) {this.fromNumber(e, d, f);} else {if (d == null && "string" != typeof e) {this.fromString(e, 256);} else {this.fromString(e, d);}}}}function nbi() {return new BigInteger(null);}function am1(f, a, b, e, h, g) {while (--g >= 0) {var d = a * this[f++] + b[e] + h;h = Math.floor(d / 67108864);b[e++] = d & 67108863;}return h;}function am2(f, q, r, e, o, a) {var k = q & 32767,p = q >> 15;while (--a >= 0) {var d = this[f] & 32767;var g = this[f++] >> 15;var b = p * d + g * k;d = k * d + ((b & 32767) << 15) + r[e] + (o & 1073741823);o = (d >>> 30) + (b >>> 15) + p * g + (o >>> 30);r[e++] = d & 1073741823;}return o;}function am3(f, q, r, e, o, a) {var k = q & 16383,p = q >> 14;while (--a >= 0) {var d = this[f] & 16383;var g = this[f++] >> 14;var b = p * d + g * k;d = k * d + ((b & 16383) << 14) + r[e] + o;o = (d >> 28) + (b >> 14) + p * g;r[e++] = d & 268435455;}return o;}if (j_lm && navigator.appName == "Microsoft Internet Explorer") {BigInteger.prototype.am = am2;dbits = 30;} else {if (j_lm && navigator.appName != "Netscape") {BigInteger.prototype.am = am1;dbits = 26;} else {BigInteger.prototype.am = am3;dbits = 28;}}BigInteger.prototype.DB = dbits;BigInteger.prototype.DM = (1 << dbits) - 1;BigInteger.prototype.DV = 1 << dbits;var BI_FP = 52;BigInteger.prototype.FV = Math.pow(2, BI_FP);BigInteger.prototype.F1 = BI_FP - dbits;BigInteger.prototype.F2 = 2 * dbits - BI_FP;var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";var BI_RC = new Array();var rr, vv;rr = "0".charCodeAt(0);for (vv = 0; vv <= 9; ++vv) {BI_RC[rr++] = vv;}rr = "a".charCodeAt(0);for (vv = 10; vv < 36; ++vv) {BI_RC[rr++] = vv;}rr = "A".charCodeAt(0);for (vv = 10; vv < 36; ++vv) {BI_RC[rr++] = vv;}function int2char(a) {return BI_RM.charAt(a);}function intAt(b, a) {var d = BI_RC[b.charCodeAt(a)];return d == null ? -1 : d;}function bnpCopyTo(b) {for (var a = this.t - 1; a >= 0; --a) {b[a] = this[a];}b.t = this.t;b.s = this.s;}function bnpFromInt(a) {this.t = 1;this.s = a < 0 ? -1 : 0;if (a > 0) {this[0] = a;} else {if (a < -1) {this[0] = a + this.DV;} else {this.t = 0;}}}function nbv(a) {var b = nbi();b.fromInt(a);return b;}function bnpFromString(h, c) {var e;if (c == 16) {e = 4;} else {if (c == 8) {e = 3;} else {if (c == 256) {e = 8;} else {if (c == 2) {e = 1;} else {if (c == 32) {e = 5;} else {if (c == 4) {e = 2;} else {this.fromRadix(h, c);return;}}}}}}this.t = 0;this.s = 0;var g = h.length,d = false,f = 0;while (--g >= 0) {var a = e == 8 ? h[g] & 255 : intAt(h, g);if (a < 0) {if (h.charAt(g) == "-") {d = true;}continue;}d = false;if (f == 0) {this[this.t++] = a;} else {if (f + e > this.DB) {this[this.t - 1] |= (a & (1 << this.DB - f) - 1) << f;this[this.t++] = a >> this.DB - f;} else {this[this.t - 1] |= a << f;}}f += e;if (f >= this.DB) {f -= this.DB;}}if (e == 8 && (h[0] & 128) != 0) {this.s = -1;if (f > 0) {this[this.t - 1] |= (1 << this.DB - f) - 1 << f;}}this.clamp();if (d) {BigInteger.ZERO.subTo(this, this);}}function bnpClamp() {var a = this.s & this.DM;while (this.t > 0 && this[this.t - 1] == a) {--this.t;}}function bnToString(c) {if (this.s < 0) {return "-" + this.negate().toString(c);}var e;if (c == 16) {e = 4;} else {if (c == 8) {e = 3;} else {if (c == 2) {e = 1;} else {if (c == 32) {e = 5;} else {if (c == 4) {e = 2;} else {return this.toRadix(c);}}}}}var g = (1 << e) - 1,l,a = false,h = "",f = this.t;var j = this.DB - f * this.DB % e;if (f-- > 0) {if (j < this.DB && (l = this[f] >> j) > 0) {a = true;h = int2char(l);}while (f >= 0) {if (j < e) {l = (this[f] & (1 << j) - 1) << e - j;l |= this[--f] >> (j += this.DB - e);} else {l = this[f] >> (j -= e) & g;if (j <= 0) {j += this.DB;--f;}}if (l > 0) {a = true;}if (a) {h += int2char(l);}}}return a ? h : "0";}function bnNegate() {var a = nbi();BigInteger.ZERO.subTo(this, a);return a;}function bnAbs() {return this.s < 0 ? this.negate() : this;}function bnCompareTo(b) {var d = this.s - b.s;if (d != 0) {return d;}var c = this.t;d = c - b.t;if (d != 0) {return this.s < 0 ? -d : d;}while (--c >= 0) {if ((d = this[c] - b[c]) != 0) {return d;}}return 0;}function nbits(a) {var c = 1,b;if ((b = a >>> 16) != 0) {a = b;c += 16;}if ((b = a >> 8) != 0) {a = b;c += 8;}if ((b = a >> 4) != 0) {a = b;c += 4;}if ((b = a >> 2) != 0) {a = b;c += 2;}if ((b = a >> 1) != 0) {a = b;c += 1;}return c;}function bnBitLength() {if (this.t <= 0) {return 0;}return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);}function bnpDLShiftTo(c, b) {var a;for (a = this.t - 1; a >= 0; --a) {b[a + c] = this[a];}for (a = c - 1; a >= 0; --a) {b[a] = 0;}b.t = this.t + c;b.s = this.s;}function bnpDRShiftTo(c, b) {for (var a = c; a < this.t; ++a) {b[a - c] = this[a];}b.t = Math.max(this.t - c, 0);b.s = this.s;}function bnpLShiftTo(j, e) {var b = j % this.DB;var a = this.DB - b;var g = (1 << a) - 1;var f = Math.floor(j / this.DB),h = this.s << b & this.DM,d;for (d = this.t - 1; d >= 0; --d) {e[d + f + 1] = this[d] >> a | h;h = (this[d] & g) << b;}for (d = f - 1; d >= 0; --d) {e[d] = 0;}e[f] = h;e.t = this.t + f + 1;e.s = this.s;e.clamp();}function bnpRShiftTo(g, d) {d.s = this.s;var e = Math.floor(g / this.DB);if (e >= this.t) {d.t = 0;return;}var b = g % this.DB;var a = this.DB - b;var f = (1 << b) - 1;d[0] = this[e] >> b;for (var c = e + 1; c < this.t; ++c) {d[c - e - 1] |= (this[c] & f) << a;d[c - e] = this[c] >> b;}if (b > 0) {d[this.t - e - 1] |= (this.s & f) << a;}d.t = this.t - e;d.clamp();}function bnpSubTo(d, f) {var e = 0,g = 0,b = Math.min(d.t, this.t);while (e < b) {g += this[e] - d[e];f[e++] = g & this.DM;g >>= this.DB;}if (d.t < this.t) {g -= d.s;while (e < this.t) {g += this[e];f[e++] = g & this.DM;g >>= this.DB;}g += this.s;} else {g += this.s;while (e < d.t) {g -= d[e];f[e++] = g & this.DM;g >>= this.DB;}g -= d.s;}f.s = g < 0 ? -1 : 0;if (g < -1) {f[e++] = this.DV + g;} else {if (g > 0) {f[e++] = g;}}f.t = e;f.clamp();}function bnpMultiplyTo(c, e) {var b = this.abs(),f = c.abs();var d = b.t;e.t = d + f.t;while (--d >= 0) {e[d] = 0;}for (d = 0; d < f.t; ++d) {e[d + b.t] = b.am(0, f[d], e, d, 0, b.t);}e.s = 0;e.clamp();if (this.s != c.s) {BigInteger.ZERO.subTo(e, e);}}function bnpSquareTo(d) {var a = this.abs();var b = d.t = 2 * a.t;while (--b >= 0) {d[b] = 0;}for (b = 0; b < a.t - 1; ++b) {var e = a.am(b, a[b], d, 2 * b, 0, 1);if ((d[b + a.t] += a.am(b + 1, 2 * a[b], d, 2 * b + 1, e, a.t - b - 1)) >= a.DV) {d[b + a.t] -= a.DV;d[b + a.t + 1] = 1;}}if (d.t > 0) {d[d.t - 1] += a.am(b, a[b], d, 2 * b, 0, 1);}d.s = 0;d.clamp();}function bnpDivRemTo(n, h, g) {var w = n.abs();if (w.t <= 0) {return;}var k = this.abs();if (k.t < w.t) {if (h != null) {h.fromInt(0);}if (g != null) {this.copyTo(g);}return;}if (g == null) {g = nbi();}var d = nbi(),a = this.s,l = n.s;var v = this.DB - nbits(w[w.t - 1]);if (v > 0) {w.lShiftTo(v, d);k.lShiftTo(v, g);} else {w.copyTo(d);k.copyTo(g);}var p = d.t;var b = d[p - 1];if (b == 0) {return;}var o = b * (1 << this.F1) + (p > 1 ? d[p - 2] >> this.F2 : 0);var A = this.FV / o,z = (1 << this.F1) / o,x = 1 << this.F2;var u = g.t,s = u - p,f = h == null ? nbi() : h;d.dlShiftTo(s, f);if (g.compareTo(f) >= 0) {g[g.t++] = 1;g.subTo(f, g);}BigInteger.ONE.dlShiftTo(p, f);f.subTo(d, d);while (d.t < p) {d[d.t++] = 0;}while (--s >= 0) {var c = g[--u] == b ? this.DM : Math.floor(g[u] * A + (g[u - 1] + x) * z);if ((g[u] += d.am(0, c, g, s, 0, p)) < c) {d.dlShiftTo(s, f);g.subTo(f, g);while (g[u] < --c) {g.subTo(f, g);}}}if (h != null) {g.drShiftTo(p, h);if (a != l) {BigInteger.ZERO.subTo(h, h);}}g.t = p;g.clamp();if (v > 0) {g.rShiftTo(v, g);}if (a < 0) {BigInteger.ZERO.subTo(g, g);}}function bnMod(b) {var c = nbi();this.abs().divRemTo(b, null, c);if (this.s < 0 && c.compareTo(BigInteger.ZERO) > 0) {b.subTo(c, c);}return c;}function Classic(a) {this.m = a;}function cConvert(a) {if (a.s < 0 || a.compareTo(this.m) >= 0) {return a.mod(this.m);} else {return a;}}function cRevert(a) {return a;}function cReduce(a) {a.divRemTo(this.m, null, a);}function cMulTo(a, c, b) {a.multiplyTo(c, b);this.reduce(b);}function cSqrTo(a, b) {a.squareTo(b);this.reduce(b);}Classic.prototype.convert = cConvert;Classic.prototype.revert = cRevert;Classic.prototype.reduce = cReduce;Classic.prototype.mulTo = cMulTo;Classic.prototype.sqrTo = cSqrTo;function bnpInvDigit() {if (this.t < 1) {return 0;}var a = this[0];if ((a & 1) == 0) {return 0;}var b = a & 3;b = b * (2 - (a & 15) * b) & 15;b = b * (2 - (a & 255) * b) & 255;b = b * (2 - ((a & 65535) * b & 65535)) & 65535;b = b * (2 - a * b % this.DV) % this.DV;return b > 0 ? this.DV - b : -b;}function Montgomery(a) {this.m = a;this.mp = a.invDigit();this.mpl = this.mp & 32767;this.mph = this.mp >> 15;this.um = (1 << a.DB - 15) - 1;this.mt2 = 2 * a.t;}function montConvert(a) {var b = nbi();a.abs().dlShiftTo(this.m.t, b);b.divRemTo(this.m, null, b);if (a.s < 0 && b.compareTo(BigInteger.ZERO) > 0) {this.m.subTo(b, b);}return b;}function montRevert(a) {var b = nbi();a.copyTo(b);this.reduce(b);return b;}function montReduce(a) {while (a.t <= this.mt2) {a[a.t++] = 0;}for (var c = 0; c < this.m.t; ++c) {var b = a[c] & 32767;var d = b * this.mpl + ((b * this.mph + (a[c] >> 15) * this.mpl & this.um) << 15) & a.DM;b = c + this.m.t;a[b] += this.m.am(0, d, a, c, 0, this.m.t);while (a[b] >= a.DV) {a[b] -= a.DV;a[++b]++;}}a.clamp();a.drShiftTo(this.m.t, a);if (a.compareTo(this.m) >= 0) {a.subTo(this.m, a);}}function montSqrTo(a, b) {a.squareTo(b);this.reduce(b);}function montMulTo(a, c, b) {a.multiplyTo(c, b);this.reduce(b);}Montgomery.prototype.convert = montConvert;Montgomery.prototype.revert = montRevert;Montgomery.prototype.reduce = montReduce;Montgomery.prototype.mulTo = montMulTo;Montgomery.prototype.sqrTo = montSqrTo;function bnpIsEven() {return (this.t > 0 ? this[0] & 1 : this.s) == 0;}function bnpExp(h, j) {if (h > 4294967295 || h < 1) {return BigInteger.ONE;}var f = nbi(),a = nbi(),d = j.convert(this),c = nbits(h) - 1;d.copyTo(f);while (--c >= 0) {j.sqrTo(f, a);if ((h & 1 << c) > 0) {j.mulTo(a, d, f);} else {var b = f;f = a;a = b;}}return j.revert(f);}function bnModPowInt(b, a) {var c;if (b < 256 || a.isEven()) {c = new Classic(a);} else {c = new Montgomery(a);}return this.exp(b, c);}BigInteger.prototype.copyTo = bnpCopyTo;BigInteger.prototype.fromInt = bnpFromInt;BigInteger.prototype.fromString = bnpFromString;BigInteger.prototype.clamp = bnpClamp;BigInteger.prototype.dlShiftTo = bnpDLShiftTo;BigInteger.prototype.drShiftTo = bnpDRShiftTo;BigInteger.prototype.lShiftTo = bnpLShiftTo;BigInteger.prototype.rShiftTo = bnpRShiftTo;BigInteger.prototype.subTo = bnpSubTo;BigInteger.prototype.multiplyTo = bnpMultiplyTo;BigInteger.prototype.squareTo = bnpSquareTo;BigInteger.prototype.divRemTo = bnpDivRemTo;BigInteger.prototype.invDigit = bnpInvDigit;BigInteger.prototype.isEven = bnpIsEven;BigInteger.prototype.exp = bnpExp;BigInteger.prototype.toString = bnToString;BigInteger.prototype.negate = bnNegate;BigInteger.prototype.abs = bnAbs;BigInteger.prototype.compareTo = bnCompareTo;BigInteger.prototype.bitLength = bnBitLength;BigInteger.prototype.mod = bnMod;BigInteger.prototype.modPowInt = bnModPowInt;BigInteger.ZERO = nbv(0);BigInteger.ONE = nbv(1);
/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/

function bnClone() {var a = nbi();this.copyTo(a);return a;}function bnIntValue() {if (this.s < 0) {if (this.t == 1) {return this[0] - this.DV;} else {if (this.t == 0) {return -1;}}} else {if (this.t == 1) {return this[0];} else {if (this.t == 0) {return 0;}}}return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0];}function bnByteValue() {return this.t == 0 ? this.s : this[0] << 24 >> 24;}function bnShortValue() {return this.t == 0 ? this.s : this[0] << 16 >> 16;}function bnpChunkSize(a) {return Math.floor(Math.LN2 * this.DB / Math.log(a));}function bnSigNum() {if (this.s < 0) {return -1;} else {if (this.t <= 0 || this.t == 1 && this[0] <= 0) {return 0;} else {return 1;}}}function bnpToRadix(c) {if (c == null) {c = 10;}if (this.signum() == 0 || c < 2 || c > 36) {return "0";}var f = this.chunkSize(c);var e = Math.pow(c, f);var i = nbv(e),j = nbi(),h = nbi(),g = "";this.divRemTo(i, j, h);while (j.signum() > 0) {g = (e + h.intValue()).toString(c).substr(1) + g;j.divRemTo(i, j, h);}return h.intValue().toString(c) + g;}function bnpFromRadix(m, h) {this.fromInt(0);if (h == null) {h = 10;}var f = this.chunkSize(h);var g = Math.pow(h, f),e = false,a = 0,l = 0;for (var c = 0; c < m.length; ++c) {var k = intAt(m, c);if (k < 0) {if (m.charAt(c) == "-" && this.signum() == 0) {e = true;}continue;}l = h * l + k;if (++a >= f) {this.dMultiply(g);this.dAddOffset(l, 0);a = 0;l = 0;}}if (a > 0) {this.dMultiply(Math.pow(h, a));this.dAddOffset(l, 0);}if (e) {BigInteger.ZERO.subTo(this, this);}}function bnpFromNumber(f, e, h) {if ("number" == typeof e) {if (f < 2) {this.fromInt(1);} else {this.fromNumber(f, h);if (!this.testBit(f - 1)) {this.bitwiseTo(BigInteger.ONE.shiftLeft(f - 1), op_or, this);}if (this.isEven()) {this.dAddOffset(1, 0);}while (!this.isProbablePrime(e)) {this.dAddOffset(2, 0);if (this.bitLength() > f) {this.subTo(BigInteger.ONE.shiftLeft(f - 1), this);}}}} else {var d = new Array(),g = f & 7;d.length = (f >> 3) + 1;e.nextBytes(d);if (g > 0) {d[0] &= (1 << g) - 1;} else {d[0] = 0;}this.fromString(d, 256);}}function bnToByteArray() {var b = this.t,c = new Array();c[0] = this.s;var e = this.DB - b * this.DB % 8,f,a = 0;if (b-- > 0) {if (e < this.DB && (f = this[b] >> e) != (this.s & this.DM) >> e) {c[a++] = f | this.s << this.DB - e;}while (b >= 0) {if (e < 8) {f = (this[b] & (1 << e) - 1) << 8 - e;f |= this[--b] >> (e += this.DB - 8);} else {f = this[b] >> (e -= 8) & 255;if (e <= 0) {e += this.DB;--b;}}if ((f & 128) != 0) {f |= -256;}if (a == 0 && (this.s & 128) != (f & 128)) {++a;}if (a > 0 || f != this.s) {c[a++] = f;}}}return c;}function bnEquals(b) {return this.compareTo(b) == 0;}function bnMin(b) {return this.compareTo(b) < 0 ? this : b;}function bnMax(b) {return this.compareTo(b) > 0 ? this : b;}function bnpBitwiseTo(c, h, e) {var d,g,b = Math.min(c.t, this.t);for (d = 0; d < b; ++d) {e[d] = h(this[d], c[d]);}if (c.t < this.t) {g = c.s & this.DM;for (d = b; d < this.t; ++d) {e[d] = h(this[d], g);}e.t = this.t;} else {g = this.s & this.DM;for (d = b; d < c.t; ++d) {e[d] = h(g, c[d]);}e.t = c.t;}e.s = h(this.s, c.s);e.clamp();}function op_and(a, b) {return a & b;}function bnAnd(b) {var c = nbi();this.bitwiseTo(b, op_and, c);return c;}function op_or(a, b) {return a | b;}function bnOr(b) {var c = nbi();this.bitwiseTo(b, op_or, c);return c;}function op_xor(a, b) {return a ^ b;}function bnXor(b) {var c = nbi();this.bitwiseTo(b, op_xor, c);return c;}function op_andnot(a, b) {return a & ~b;}function bnAndNot(b) {var c = nbi();this.bitwiseTo(b, op_andnot, c);return c;}function bnNot() {var b = nbi();for (var a = 0; a < this.t; ++a) {b[a] = this.DM & ~this[a];}b.t = this.t;b.s = ~this.s;return b;}function bnShiftLeft(b) {var a = nbi();if (b < 0) {this.rShiftTo(-b, a);} else {this.lShiftTo(b, a);}return a;}function bnShiftRight(b) {var a = nbi();if (b < 0) {this.lShiftTo(-b, a);} else {this.rShiftTo(b, a);}return a;}function lbit(a) {if (a == 0) {return -1;}var b = 0;if ((a & 65535) == 0) {a >>= 16;b += 16;}if ((a & 255) == 0) {a >>= 8;b += 8;}if ((a & 15) == 0) {a >>= 4;b += 4;}if ((a & 3) == 0) {a >>= 2;b += 2;}if ((a & 1) == 0) {++b;}return b;}function bnGetLowestSetBit() {for (var a = 0; a < this.t; ++a) {if (this[a] != 0) {return a * this.DB + lbit(this[a]);}}if (this.s < 0) {return this.t * this.DB;}return -1;}function cbit(a) {var b = 0;while (a != 0) {a &= a - 1;++b;}return b;}function bnBitCount() {var c = 0,a = this.s & this.DM;for (var b = 0; b < this.t; ++b) {c += cbit(this[b] ^ a);}return c;}function bnTestBit(b) {var a = Math.floor(b / this.DB);if (a >= this.t) {return this.s != 0;}return (this[a] & 1 << b % this.DB) != 0;}function bnpChangeBit(c, b) {var a = BigInteger.ONE.shiftLeft(c);this.bitwiseTo(a, b, a);return a;}function bnSetBit(a) {return this.changeBit(a, op_or);}function bnClearBit(a) {return this.changeBit(a, op_andnot);}function bnFlipBit(a) {return this.changeBit(a, op_xor);}function bnpAddTo(d, f) {var e = 0,g = 0,b = Math.min(d.t, this.t);while (e < b) {g += this[e] + d[e];f[e++] = g & this.DM;g >>= this.DB;}if (d.t < this.t) {g += d.s;while (e < this.t) {g += this[e];f[e++] = g & this.DM;g >>= this.DB;}g += this.s;} else {g += this.s;while (e < d.t) {g += d[e];f[e++] = g & this.DM;g >>= this.DB;}g += d.s;}f.s = g < 0 ? -1 : 0;if (g > 0) {f[e++] = g;} else {if (g < -1) {f[e++] = this.DV + g;}}f.t = e;f.clamp();}function bnAdd(b) {var c = nbi();this.addTo(b, c);return c;}function bnSubtract(b) {var c = nbi();this.subTo(b, c);return c;}function bnMultiply(b) {var c = nbi();this.multiplyTo(b, c);return c;}function bnSquare() {var a = nbi();this.squareTo(a);return a;}function bnDivide(b) {var c = nbi();this.divRemTo(b, c, null);return c;}function bnRemainder(b) {var c = nbi();this.divRemTo(b, null, c);return c;}function bnDivideAndRemainder(b) {var d = nbi(),c = nbi();this.divRemTo(b, d, c);return new Array(d, c);}function bnpDMultiply(a) {this[this.t] = this.am(0, a - 1, this, 0, 0, this.t);++this.t;this.clamp();}function bnpDAddOffset(b, a) {if (b == 0) {return;}while (this.t <= a) {this[this.t++] = 0;}this[a] += b;while (this[a] >= this.DV) {this[a] -= this.DV;if (++a >= this.t) {this[this.t++] = 0;}++this[a];}}function NullExp() {}function nNop(a) {return a;}function nMulTo(a, c, b) {a.multiplyTo(c, b);}function nSqrTo(a, b) {a.squareTo(b);}NullExp.prototype.convert = nNop;NullExp.prototype.revert = nNop;NullExp.prototype.mulTo = nMulTo;NullExp.prototype.sqrTo = nSqrTo;function bnPow(a) {return this.exp(a, new NullExp());}function bnpMultiplyLowerTo(b, f, e) {var d = Math.min(this.t + b.t, f);e.s = 0;e.t = d;while (d > 0) {e[--d] = 0;}var c;for (c = e.t - this.t; d < c; ++d) {e[d + this.t] = this.am(0, b[d], e, d, 0, this.t);}for (c = Math.min(b.t, f); d < c; ++d) {this.am(0, b[d], e, d, 0, f - d);}e.clamp();}function bnpMultiplyUpperTo(b, e, d) {--e;var c = d.t = this.t + b.t - e;d.s = 0;while (--c >= 0) {d[c] = 0;}for (c = Math.max(e - this.t, 0); c < b.t; ++c) {d[this.t + c - e] = this.am(e - c, b[c], d, 0, 0, this.t + c - e);}d.clamp();d.drShiftTo(1, d);}function Barrett(a) {this.r2 = nbi();this.q3 = nbi();BigInteger.ONE.dlShiftTo(2 * a.t, this.r2);this.mu = this.r2.divide(a);this.m = a;}function barrettConvert(a) {if (a.s < 0 || a.t > 2 * this.m.t) {return a.mod(this.m);} else {if (a.compareTo(this.m) < 0) {return a;} else {var b = nbi();a.copyTo(b);this.reduce(b);return b;}}}function barrettRevert(a) {return a;}function barrettReduce(a) {a.drShiftTo(this.m.t - 1, this.r2);if (a.t > this.m.t + 1) {a.t = this.m.t + 1;a.clamp();}this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);while (a.compareTo(this.r2) < 0) {a.dAddOffset(1, this.m.t + 1);}a.subTo(this.r2, a);while (a.compareTo(this.m) >= 0) {a.subTo(this.m, a);}}function barrettSqrTo(a, b) {a.squareTo(b);this.reduce(b);}function barrettMulTo(a, c, b) {a.multiplyTo(c, b);this.reduce(b);}Barrett.prototype.convert = barrettConvert;Barrett.prototype.revert = barrettRevert;Barrett.prototype.reduce = barrettReduce;Barrett.prototype.mulTo = barrettMulTo;Barrett.prototype.sqrTo = barrettSqrTo;function bnModPow(q, f) {var o = q.bitLength(),h,b = nbv(1),v;if (o <= 0) {return b;} else {if (o < 18) {h = 1;} else {if (o < 48) {h = 3;} else {if (o < 144) {h = 4;} else {if (o < 768) {h = 5;} else {h = 6;}}}}}if (o < 8) {v = new Classic(f);} else {if (f.isEven()) {v = new Barrett(f);} else {v = new Montgomery(f);}}var p = new Array(),d = 3,s = h - 1,a = (1 << h) - 1;p[1] = v.convert(this);if (h > 1) {var A = nbi();v.sqrTo(p[1], A);while (d <= a) {p[d] = nbi();v.mulTo(A, p[d - 2], p[d]);d += 2;}}var l = q.t - 1,x,u = true,c = nbi(),y;o = nbits(q[l]) - 1;while (l >= 0) {if (o >= s) {x = q[l] >> o - s & a;} else {x = (q[l] & (1 << o + 1) - 1) << s - o;if (l > 0) {x |= q[l - 1] >> this.DB + o - s;}}d = h;while ((x & 1) == 0) {x >>= 1;--d;}if ((o -= d) < 0) {o += this.DB;--l;}if (u) {p[x].copyTo(b);u = false;} else {while (d > 1) {v.sqrTo(b, c);v.sqrTo(c, b);d -= 2;}if (d > 0) {v.sqrTo(b, c);} else {y = b;b = c;c = y;}v.mulTo(c, p[x], b);}while (l >= 0 && (q[l] & 1 << o) == 0) {v.sqrTo(b, c);y = b;b = c;c = y;if (--o < 0) {o = this.DB - 1;--l;}}}return v.revert(b);}function bnGCD(c) {var b = this.s < 0 ? this.negate() : this.clone();var h = c.s < 0 ? c.negate() : c.clone();if (b.compareTo(h) < 0) {var e = b;b = h;h = e;}var d = b.getLowestSetBit(),f = h.getLowestSetBit();if (f < 0) {return b;}if (d < f) {f = d;}if (f > 0) {b.rShiftTo(f, b);h.rShiftTo(f, h);}while (b.signum() > 0) {if ((d = b.getLowestSetBit()) > 0) {b.rShiftTo(d, b);}if ((d = h.getLowestSetBit()) > 0) {h.rShiftTo(d, h);}if (b.compareTo(h) >= 0) {b.subTo(h, b);b.rShiftTo(1, b);} else {h.subTo(b, h);h.rShiftTo(1, h);}}if (f > 0) {h.lShiftTo(f, h);}return h;}function bnpModInt(e) {if (e <= 0) {return 0;}var c = this.DV % e,b = this.s < 0 ? e - 1 : 0;if (this.t > 0) {if (c == 0) {b = this[0] % e;} else {for (var a = this.t - 1; a >= 0; --a) {b = (c * b + this[a]) % e;}}}return b;}function bnModInverse(f) {var j = f.isEven();if (this.isEven() && j || f.signum() == 0) {return BigInteger.ZERO;}var i = f.clone(),h = this.clone();var g = nbv(1),e = nbv(0),l = nbv(0),k = nbv(1);while (i.signum() != 0) {while (i.isEven()) {i.rShiftTo(1, i);if (j) {if (!g.isEven() || !e.isEven()) {g.addTo(this, g);e.subTo(f, e);}g.rShiftTo(1, g);} else {if (!e.isEven()) {e.subTo(f, e);}}e.rShiftTo(1, e);}while (h.isEven()) {h.rShiftTo(1, h);if (j) {if (!l.isEven() || !k.isEven()) {l.addTo(this, l);k.subTo(f, k);}l.rShiftTo(1, l);} else {if (!k.isEven()) {k.subTo(f, k);}}k.rShiftTo(1, k);}if (i.compareTo(h) >= 0) {i.subTo(h, i);if (j) {g.subTo(l, g);}e.subTo(k, e);} else {h.subTo(i, h);if (j) {l.subTo(g, l);}k.subTo(e, k);}}if (h.compareTo(BigInteger.ONE) != 0) {return BigInteger.ZERO;}if (k.compareTo(f) >= 0) {return k.subtract(f);}if (k.signum() < 0) {k.addTo(f, k);} else {return k;}if (k.signum() < 0) {return k.add(f);} else {return k;}}var lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];var lplim = (1 << 26) / lowprimes[lowprimes.length - 1];function bnIsProbablePrime(e) {var d,b = this.abs();if (b.t == 1 && b[0] <= lowprimes[lowprimes.length - 1]) {for (d = 0; d < lowprimes.length; ++d) {if (b[0] == lowprimes[d]) {return true;}}return false;}if (b.isEven()) {return false;}d = 1;while (d < lowprimes.length) {var a = lowprimes[d],c = d + 1;while (c < lowprimes.length && a < lplim) {a *= lowprimes[c++];}a = b.modInt(a);while (d < c) {if (a % lowprimes[d++] == 0) {return false;}}}return b.millerRabin(e);}function bnpMillerRabin(f) {var g = this.subtract(BigInteger.ONE);var c = g.getLowestSetBit();if (c <= 0) {return false;}var h = g.shiftRight(c);f = f + 1 >> 1;if (f > lowprimes.length) {f = lowprimes.length;}var b = nbi();for (var e = 0; e < f; ++e) {b.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);var l = b.modPow(h, this);if (l.compareTo(BigInteger.ONE) != 0 && l.compareTo(g) != 0) {var d = 1;while (d++ < c && l.compareTo(g) != 0) {l = l.modPowInt(2, this);if (l.compareTo(BigInteger.ONE) == 0) {return false;}}if (l.compareTo(g) != 0) {return false;}}}return true;}BigInteger.prototype.chunkSize = bnpChunkSize;BigInteger.prototype.toRadix = bnpToRadix;BigInteger.prototype.fromRadix = bnpFromRadix;BigInteger.prototype.fromNumber = bnpFromNumber;BigInteger.prototype.bitwiseTo = bnpBitwiseTo;BigInteger.prototype.changeBit = bnpChangeBit;BigInteger.prototype.addTo = bnpAddTo;BigInteger.prototype.dMultiply = bnpDMultiply;BigInteger.prototype.dAddOffset = bnpDAddOffset;BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;BigInteger.prototype.modInt = bnpModInt;BigInteger.prototype.millerRabin = bnpMillerRabin;BigInteger.prototype.clone = bnClone;BigInteger.prototype.intValue = bnIntValue;BigInteger.prototype.byteValue = bnByteValue;BigInteger.prototype.shortValue = bnShortValue;BigInteger.prototype.signum = bnSigNum;BigInteger.prototype.toByteArray = bnToByteArray;BigInteger.prototype.equals = bnEquals;BigInteger.prototype.min = bnMin;BigInteger.prototype.max = bnMax;BigInteger.prototype.and = bnAnd;BigInteger.prototype.or = bnOr;BigInteger.prototype.xor = bnXor;BigInteger.prototype.andNot = bnAndNot;BigInteger.prototype.not = bnNot;BigInteger.prototype.shiftLeft = bnShiftLeft;BigInteger.prototype.shiftRight = bnShiftRight;BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;BigInteger.prototype.bitCount = bnBitCount;BigInteger.prototype.testBit = bnTestBit;BigInteger.prototype.setBit = bnSetBit;BigInteger.prototype.clearBit = bnClearBit;BigInteger.prototype.flipBit = bnFlipBit;BigInteger.prototype.add = bnAdd;BigInteger.prototype.subtract = bnSubtract;BigInteger.prototype.multiply = bnMultiply;BigInteger.prototype.divide = bnDivide;BigInteger.prototype.remainder = bnRemainder;BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;BigInteger.prototype.modPow = bnModPow;BigInteger.prototype.modInverse = bnModInverse;BigInteger.prototype.pow = bnPow;BigInteger.prototype.gcd = bnGCD;BigInteger.prototype.isProbablePrime = bnIsProbablePrime;BigInteger.prototype.square = bnSquare;
/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/

function Arcfour() {this.i = 0;this.j = 0;this.S = new Array();}function ARC4init(d) {var c, a, b;for (c = 0; c < 256; ++c) {this.S[c] = c;}a = 0;for (c = 0; c < 256; ++c) {a = a + this.S[c] + d[c % d.length] & 255;b = this.S[c];this.S[c] = this.S[a];this.S[a] = b;}this.i = 0;this.j = 0;}function ARC4next() {var a;this.i = this.i + 1 & 255;this.j = this.j + this.S[this.i] & 255;a = this.S[this.i];this.S[this.i] = this.S[this.j];this.S[this.j] = a;return this.S[a + this.S[this.i] & 255];}Arcfour.prototype.init = ARC4init;Arcfour.prototype.next = ARC4next;function prng_newstate() {return new Arcfour();}var rng_psize = 256;
/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/

var rng_state;var rng_pool;var rng_pptr;function rng_seed_int(a) {rng_pool[rng_pptr++] ^= a & 255;rng_pool[rng_pptr++] ^= a >> 8 & 255;rng_pool[rng_pptr++] ^= a >> 16 & 255;rng_pool[rng_pptr++] ^= a >> 24 & 255;if (rng_pptr >= rng_psize) {rng_pptr -= rng_psize;}}function rng_seed_time() {rng_seed_int(new Date().getTime());}if (rng_pool == null) {rng_pool = new Array();rng_pptr = 0;var t;if (window !== undefined && (window.crypto !== undefined || window.msCrypto !== undefined)) {var crypto = window.crypto || window.msCrypto;if (crypto.getRandomValues) {var ua = new Uint8Array(32);crypto.getRandomValues(ua);for (t = 0; t < 32; ++t) {rng_pool[rng_pptr++] = ua[t];}} else {if (navigator.appName == "Netscape" && navigator.appVersion < "5") {var z = window.crypto.random(32);for (t = 0; t < z.length; ++t) {rng_pool[rng_pptr++] = z.charCodeAt(t) & 255;}}}}while (rng_pptr < rng_psize) {t = Math.floor(65536 * Math.random());rng_pool[rng_pptr++] = t >>> 8;rng_pool[rng_pptr++] = t & 255;}rng_pptr = 0;rng_seed_time();}function rng_get_byte() {if (rng_state == null) {rng_seed_time();rng_state = prng_newstate();rng_state.init(rng_pool);for (rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr) {rng_pool[rng_pptr] = 0;}rng_pptr = 0;}return rng_state.next();}function rng_get_bytes(b) {var a;for (a = 0; a < b.length; ++a) {b[a] = rng_get_byte();}}function SecureRandom() {}SecureRandom.prototype.nextBytes = rng_get_bytes;
/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/

function parseBigInt(b, a) {return new BigInteger(b, a);}function linebrk(c, d) {var a = "";var b = 0;while (b + d < c.length) {a += c.substring(b, b + d) + "\n";b += d;}return a + c.substring(b, c.length);}function byte2Hex(a) {if (a < 16) {return "0" + a.toString(16);} else {return a.toString(16);}}function pkcs1pad2(e, h) {if (h < e.length + 11) {throw "Message too long for RSA";return null;}var g = new Array();var d = e.length - 1;while (d >= 0 && h > 0) {var f = e.charCodeAt(d--);if (f < 128) {g[--h] = f;} else {if (f > 127 && f < 2048) {g[--h] = f & 63 | 128;g[--h] = f >> 6 | 192;} else {g[--h] = f & 63 | 128;g[--h] = f >> 6 & 63 | 128;g[--h] = f >> 12 | 224;}}}g[--h] = 0;var b = new SecureRandom();var a = new Array();while (h > 2) {a[0] = 0;while (a[0] == 0) {b.nextBytes(a);}g[--h] = a[0];}g[--h] = 2;g[--h] = 0;return new BigInteger(g);}function oaep_mgf1_arr(c, a, e) {var b = "",d = 0;while (b.length < a) {b += e(String.fromCharCode.apply(String, c.concat([(d & 4278190080) >> 24, (d & 16711680) >> 16, (d & 65280) >> 8, d & 255])));d += 1;}return b;}function oaep_pad(q, a, f, l) {var c = KJUR.crypto.MessageDigest;var o = KJUR.crypto.Util;var b = null;if (!f) {f = "sha1";}if (typeof f === "string") {b = c.getCanonicalAlgName(f);l = c.getHashLength(b);f = function f(i) {return hextorstr(o.hashHex(rstrtohex(i), b));};}if (q.length + 2 * l + 2 > a) {throw "Message too long for RSA";}var k = "",e;for (e = 0; e < a - q.length - 2 * l - 2; e += 1) {k += "\x00";}var h = f("") + k + "\x01" + q;var g = new Array(l);new SecureRandom().nextBytes(g);var j = oaep_mgf1_arr(g, h.length, f);var p = [];for (e = 0; e < h.length; e += 1) {p[e] = h.charCodeAt(e) ^ j.charCodeAt(e);}var m = oaep_mgf1_arr(p, g.length, f);var d = [0];for (e = 0; e < g.length; e += 1) {d[e + 1] = g[e] ^ m.charCodeAt(e);}return new BigInteger(d.concat(p));}function RSAKey() {this.n = null;this.e = 0;this.d = null;this.p = null;this.q = null;this.dmp1 = null;this.dmq1 = null;this.coeff = null;}function RSASetPublic(b, a) {this.isPublic = true;this.isPrivate = false;if (typeof b !== "string") {this.n = b;this.e = a;} else {if (b != null && a != null && b.length > 0 && a.length > 0) {this.n = parseBigInt(b, 16);this.e = parseInt(a, 16);} else {throw "Invalid RSA public key";}}}function RSADoPublic(a) {return a.modPowInt(this.e, this.n);}function RSAEncrypt(d) {var a = pkcs1pad2(d, this.n.bitLength() + 7 >> 3);if (a == null) {return null;}var e = this.doPublic(a);if (e == null) {return null;}var b = e.toString(16);if ((b.length & 1) == 0) {return b;} else {return "0" + b;}}function RSAEncryptOAEP(f, e, b) {var a = oaep_pad(f, this.n.bitLength() + 7 >> 3, e, b);if (a == null) {return null;}var g = this.doPublic(a);if (g == null) {return null;}var d = g.toString(16);if ((d.length & 1) == 0) {return d;} else {return "0" + d;}}RSAKey.prototype.doPublic = RSADoPublic;RSAKey.prototype.setPublic = RSASetPublic;RSAKey.prototype.encrypt = RSAEncrypt;RSAKey.prototype.encryptOAEP = RSAEncryptOAEP;RSAKey.prototype.type = "RSA";
/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */
function pkcs1unpad2(g, j) {var a = g.toByteArray();var f = 0;while (f < a.length && a[f] == 0) {++f;}if (a.length - f != j - 1 || a[f] != 2) {return null;}++f;while (a[f] != 0) {if (++f >= a.length) {return null;}}var e = "";while (++f < a.length) {var h = a[f] & 255;if (h < 128) {e += String.fromCharCode(h);} else {if (h > 191 && h < 224) {e += String.fromCharCode((h & 31) << 6 | a[f + 1] & 63);++f;} else {e += String.fromCharCode((h & 15) << 12 | (a[f + 1] & 63) << 6 | a[f + 2] & 63);f += 2;}}}return e;}function oaep_mgf1_str(c, a, e) {var b = "",d = 0;while (b.length < a) {b += e(c + String.fromCharCode.apply(String, [(d & 4278190080) >> 24, (d & 16711680) >> 16, (d & 65280) >> 8, d & 255]));d += 1;}return b;}function oaep_unpad(o, b, g, p) {var e = KJUR.crypto.MessageDigest;var r = KJUR.crypto.Util;var c = null;if (!g) {g = "sha1";}if (typeof g === "string") {c = e.getCanonicalAlgName(g);p = e.getHashLength(c);g = function g(d) {return hextorstr(r.hashHex(rstrtohex(d), c));};}o = o.toByteArray();var h;for (h = 0; h < o.length; h += 1) {o[h] &= 255;}while (o.length < b) {o.unshift(0);}o = String.fromCharCode.apply(String, o);if (o.length < 2 * p + 2) {throw "Cipher too short";}var f = o.substr(1, p);var s = o.substr(p + 1);var q = oaep_mgf1_str(s, p, g);var k = [],h;for (h = 0; h < f.length; h += 1) {k[h] = f.charCodeAt(h) ^ q.charCodeAt(h);}var l = oaep_mgf1_str(String.fromCharCode.apply(String, k), o.length - p, g);var j = [];for (h = 0; h < s.length; h += 1) {j[h] = s.charCodeAt(h) ^ l.charCodeAt(h);}j = String.fromCharCode.apply(String, j);if (j.substr(0, p) !== g("")) {throw "Hash mismatch";}j = j.substr(p);var a = j.indexOf("\x01");var m = a != -1 ? j.substr(0, a).lastIndexOf("\x00") : -1;if (m + 1 != a) {throw "Malformed data";}return j.substr(a + 1);}function RSASetPrivate(c, a, b) {this.isPrivate = true;if (typeof c !== "string") {this.n = c;this.e = a;this.d = b;} else {if (c != null && a != null && c.length > 0 && a.length > 0) {this.n = parseBigInt(c, 16);this.e = parseInt(a, 16);this.d = parseBigInt(b, 16);} else {throw "Invalid RSA private key";}}}function RSASetPrivateEx(g, d, e, c, b, a, h, f) {this.isPrivate = true;this.isPublic = false;if (g == null) {throw "RSASetPrivateEx N == null";}if (d == null) {throw "RSASetPrivateEx E == null";}if (g.length == 0) {throw "RSASetPrivateEx N.length == 0";}if (d.length == 0) {throw "RSASetPrivateEx E.length == 0";}if (g != null && d != null && g.length > 0 && d.length > 0) {this.n = parseBigInt(g, 16);this.e = parseInt(d, 16);this.d = parseBigInt(e, 16);this.p = parseBigInt(c, 16);this.q = parseBigInt(b, 16);this.dmp1 = parseBigInt(a, 16);this.dmq1 = parseBigInt(h, 16);this.coeff = parseBigInt(f, 16);} else {throw "Invalid RSA private key in RSASetPrivateEx";}}function RSAGenerate(b, i) {var a = new SecureRandom();var f = b >> 1;this.e = parseInt(i, 16);var c = new BigInteger(i, 16);for (;;) {for (;;) {this.p = new BigInteger(b - f, 1, a);if (this.p.subtract(BigInteger.ONE).gcd(c).compareTo(BigInteger.ONE) == 0 && this.p.isProbablePrime(10)) {break;}}for (;;) {this.q = new BigInteger(f, 1, a);if (this.q.subtract(BigInteger.ONE).gcd(c).compareTo(BigInteger.ONE) == 0 && this.q.isProbablePrime(10)) {break;}}if (this.p.compareTo(this.q) <= 0) {var h = this.p;this.p = this.q;this.q = h;}var g = this.p.subtract(BigInteger.ONE);var d = this.q.subtract(BigInteger.ONE);var e = g.multiply(d);if (e.gcd(c).compareTo(BigInteger.ONE) == 0) {this.n = this.p.multiply(this.q);if (this.n.bitLength() == b) {this.d = c.modInverse(e);this.dmp1 = this.d.mod(g);this.dmq1 = this.d.mod(d);this.coeff = this.q.modInverse(this.p);break;}}}this.isPrivate = true;}function RSADoPrivate(a) {if (this.p == null || this.q == null) {return a.modPow(this.d, this.n);}var c = a.mod(this.p).modPow(this.dmp1, this.p);var b = a.mod(this.q).modPow(this.dmq1, this.q);while (c.compareTo(b) < 0) {c = c.add(this.p);}return c.subtract(b).multiply(this.coeff).mod(this.p).multiply(this.q).add(b);}function RSADecrypt(b) {if (b.length != Math.ceil(this.n.bitLength() / 4)) {throw new Error("wrong ctext length");}var d = parseBigInt(b, 16);var a = this.doPrivate(d);if (a == null) {return null;}return pkcs1unpad2(a, this.n.bitLength() + 7 >> 3);}function RSADecryptOAEP(e, d, b) {if (e.length != Math.ceil(this.n.bitLength() / 4)) {throw new Error("wrong ctext length");}var f = parseBigInt(e, 16);var a = this.doPrivate(f);if (a == null) {return null;}return oaep_unpad(a, this.n.bitLength() + 7 >> 3, d, b);}RSAKey.prototype.doPrivate = RSADoPrivate;RSAKey.prototype.setPrivate = RSASetPrivate;RSAKey.prototype.setPrivateEx = RSASetPrivateEx;RSAKey.prototype.generate = RSAGenerate;RSAKey.prototype.decrypt = RSADecrypt;RSAKey.prototype.decryptOAEP = RSADecryptOAEP;
/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/

function ECFieldElementFp(b, a) {this.x = a;this.q = b;}function feFpEquals(a) {if (a == this) {return true;}return this.q.equals(a.q) && this.x.equals(a.x);}function feFpToBigInteger() {return this.x;}function feFpNegate() {return new ECFieldElementFp(this.q, this.x.negate().mod(this.q));}function feFpAdd(a) {return new ECFieldElementFp(this.q, this.x.add(a.toBigInteger()).mod(this.q));}function feFpSubtract(a) {return new ECFieldElementFp(this.q, this.x.subtract(a.toBigInteger()).mod(this.q));}function feFpMultiply(a) {return new ECFieldElementFp(this.q, this.x.multiply(a.toBigInteger()).mod(this.q));}function feFpSquare() {return new ECFieldElementFp(this.q, this.x.square().mod(this.q));}function feFpDivide(a) {return new ECFieldElementFp(this.q, this.x.multiply(a.toBigInteger().modInverse(this.q)).mod(this.q));}ECFieldElementFp.prototype.equals = feFpEquals;ECFieldElementFp.prototype.toBigInteger = feFpToBigInteger;ECFieldElementFp.prototype.negate = feFpNegate;ECFieldElementFp.prototype.add = feFpAdd;ECFieldElementFp.prototype.subtract = feFpSubtract;ECFieldElementFp.prototype.multiply = feFpMultiply;ECFieldElementFp.prototype.square = feFpSquare;ECFieldElementFp.prototype.divide = feFpDivide;function ECPointFp(c, a, d, b) {this.curve = c;this.x = a;this.y = d;if (b == null) {this.z = BigInteger.ONE;} else {this.z = b;}this.zinv = null;}function pointFpGetX() {if (this.zinv == null) {this.zinv = this.z.modInverse(this.curve.q);}return this.curve.fromBigInteger(this.x.toBigInteger().multiply(this.zinv).mod(this.curve.q));}function pointFpGetY() {if (this.zinv == null) {this.zinv = this.z.modInverse(this.curve.q);}return this.curve.fromBigInteger(this.y.toBigInteger().multiply(this.zinv).mod(this.curve.q));}function pointFpEquals(a) {if (a == this) {return true;}if (this.isInfinity()) {return a.isInfinity();}if (a.isInfinity()) {return this.isInfinity();}var c, b;c = a.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(a.z)).mod(this.curve.q);if (!c.equals(BigInteger.ZERO)) {return false;}b = a.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(a.z)).mod(this.curve.q);return b.equals(BigInteger.ZERO);}function pointFpIsInfinity() {if (this.x == null && this.y == null) {return true;}return this.z.equals(BigInteger.ZERO) && !this.y.toBigInteger().equals(BigInteger.ZERO);}function pointFpNegate() {return new ECPointFp(this.curve, this.x, this.y.negate(), this.z);}function pointFpAdd(l) {if (this.isInfinity()) {return l;}if (l.isInfinity()) {return this;}var p = l.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(l.z)).mod(this.curve.q);var o = l.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(l.z)).mod(this.curve.q);if (BigInteger.ZERO.equals(o)) {if (BigInteger.ZERO.equals(p)) {return this.twice();}return this.curve.getInfinity();}var j = new BigInteger("3");var e = this.x.toBigInteger();var n = this.y.toBigInteger();var c = l.x.toBigInteger();var k = l.y.toBigInteger();var m = o.square();var i = m.multiply(o);var d = e.multiply(m);var g = p.square().multiply(this.z);var a = g.subtract(d.shiftLeft(1)).multiply(l.z).subtract(i).multiply(o).mod(this.curve.q);var h = d.multiply(j).multiply(p).subtract(n.multiply(i)).subtract(g.multiply(p)).multiply(l.z).add(p.multiply(i)).mod(this.curve.q);var f = i.multiply(this.z).multiply(l.z).mod(this.curve.q);return new ECPointFp(this.curve, this.curve.fromBigInteger(a), this.curve.fromBigInteger(h), f);}function pointFpTwice() {if (this.isInfinity()) {return this;}if (this.y.toBigInteger().signum() == 0) {return this.curve.getInfinity();}var g = new BigInteger("3");var c = this.x.toBigInteger();var h = this.y.toBigInteger();var e = h.multiply(this.z);var j = e.multiply(h).mod(this.curve.q);var i = this.curve.a.toBigInteger();var k = c.square().multiply(g);if (!BigInteger.ZERO.equals(i)) {k = k.add(this.z.square().multiply(i));}k = k.mod(this.curve.q);var b = k.square().subtract(c.shiftLeft(3).multiply(j)).shiftLeft(1).multiply(e).mod(this.curve.q);var f = k.multiply(g).multiply(c).subtract(j.shiftLeft(1)).shiftLeft(2).multiply(j).subtract(k.square().multiply(k)).mod(this.curve.q);var d = e.square().multiply(e).shiftLeft(3).mod(this.curve.q);return new ECPointFp(this.curve, this.curve.fromBigInteger(b), this.curve.fromBigInteger(f), d);}function pointFpMultiply(d) {if (this.isInfinity()) {return this;}if (d.signum() == 0) {return this.curve.getInfinity();}var m = d;var l = m.multiply(new BigInteger("3"));var b = this.negate();var j = this;var q = this.curve.q.subtract(d);var o = q.multiply(new BigInteger("3"));var c = new ECPointFp(this.curve, this.x, this.y);var a = c.negate();var g;for (g = l.bitLength() - 2; g > 0; --g) {j = j.twice();var n = l.testBit(g);var f = m.testBit(g);if (n != f) {j = j.add(n ? this : b);}}for (g = o.bitLength() - 2; g > 0; --g) {c = c.twice();var p = o.testBit(g);var r = q.testBit(g);if (p != r) {c = c.add(p ? c : a);}}return j;}function pointFpMultiplyTwo(c, a, b) {var d;if (c.bitLength() > b.bitLength()) {d = c.bitLength() - 1;} else {d = b.bitLength() - 1;}var f = this.curve.getInfinity();var e = this.add(a);while (d >= 0) {f = f.twice();if (c.testBit(d)) {if (b.testBit(d)) {f = f.add(e);} else {f = f.add(this);}} else {if (b.testBit(d)) {f = f.add(a);}}--d;}return f;}ECPointFp.prototype.getX = pointFpGetX;ECPointFp.prototype.getY = pointFpGetY;ECPointFp.prototype.equals = pointFpEquals;ECPointFp.prototype.isInfinity = pointFpIsInfinity;ECPointFp.prototype.negate = pointFpNegate;ECPointFp.prototype.add = pointFpAdd;ECPointFp.prototype.twice = pointFpTwice;ECPointFp.prototype.multiply = pointFpMultiply;ECPointFp.prototype.multiplyTwo = pointFpMultiplyTwo;function ECCurveFp(e, d, c) {this.q = e;this.a = this.fromBigInteger(d);this.b = this.fromBigInteger(c);this.infinity = new ECPointFp(this, null, null);}function curveFpGetQ() {return this.q;}function curveFpGetA() {return this.a;}function curveFpGetB() {return this.b;}function curveFpEquals(a) {if (a == this) {return true;}return this.q.equals(a.q) && this.a.equals(a.a) && this.b.equals(a.b);}function curveFpGetInfinity() {return this.infinity;}function curveFpFromBigInteger(a) {return new ECFieldElementFp(this.q, a);}function curveFpDecodePointHex(d) {switch (parseInt(d.substr(0, 2), 16)) {case 0:return this.infinity;case 2:case 3:return null;case 4:case 6:case 7:var a = (d.length - 2) / 2;var c = d.substr(2, a);var b = d.substr(a + 2, a);return new ECPointFp(this, this.fromBigInteger(new BigInteger(c, 16)), this.fromBigInteger(new BigInteger(b, 16)));default:return null;}}ECCurveFp.prototype.getQ = curveFpGetQ;ECCurveFp.prototype.getA = curveFpGetA;ECCurveFp.prototype.getB = curveFpGetB;ECCurveFp.prototype.equals = curveFpEquals;ECCurveFp.prototype.getInfinity = curveFpGetInfinity;ECCurveFp.prototype.fromBigInteger = curveFpFromBigInteger;ECCurveFp.prototype.decodePointHex = curveFpDecodePointHex;
/*! (c) Stefan Thomas | https://github.com/bitcoinjs/bitcoinjs-lib

ECFieldElementFp.prototype.getByteLength = function () {return Math.floor((this.toBigInteger().bitLength() + 7) / 8);};ECPointFp.prototype.getEncoded = function (c) {var d = function d(h, f) {var g = h.toByteArrayUnsigned();if (f < g.length) {g = g.slice(g.length - f);} else {while (f > g.length) {g.unshift(0);}}return g;};var a = this.getX().toBigInteger();var e = this.getY().toBigInteger();var b = d(a, 32);if (c) {if (e.isEven()) {b.unshift(2);} else {b.unshift(3);}} else {b.unshift(4);b = b.concat(d(e, 32));}return b;};ECPointFp.decodeFrom = function (g, c) {var f = c[0];var e = c.length - 1;var d = c.slice(1, 1 + e / 2);var b = c.slice(1 + e / 2, 1 + e);d.unshift(0);b.unshift(0);var a = new BigInteger(d);var h = new BigInteger(b);return new ECPointFp(g, g.fromBigInteger(a), g.fromBigInteger(h));};ECPointFp.decodeFromHex = function (g, c) {var f = c.substr(0, 2);var e = c.length - 2;var d = c.substr(2, e / 2);var b = c.substr(2 + e / 2, e / 2);var a = new BigInteger(d, 16);var h = new BigInteger(b, 16);return new ECPointFp(g, g.fromBigInteger(a), g.fromBigInteger(h));};ECPointFp.prototype.add2D = function (c) {if (this.isInfinity()) {return c;}if (c.isInfinity()) {return this;}if (this.x.equals(c.x)) {if (this.y.equals(c.y)) {return this.twice();}return this.curve.getInfinity();}var g = c.x.subtract(this.x);var e = c.y.subtract(this.y);var a = e.divide(g);var d = a.square().subtract(this.x).subtract(c.x);var f = a.multiply(this.x.subtract(d)).subtract(this.y);return new ECPointFp(this.curve, d, f);};ECPointFp.prototype.twice2D = function () {if (this.isInfinity()) {return this;}if (this.y.toBigInteger().signum() == 0) {return this.curve.getInfinity();}var b = this.curve.fromBigInteger(BigInteger.valueOf(2));var e = this.curve.fromBigInteger(BigInteger.valueOf(3));var a = this.x.square().multiply(e).add(this.curve.a).divide(this.y.multiply(b));var c = a.square().subtract(this.x.multiply(b));var d = a.multiply(this.x.subtract(c)).subtract(this.y);return new ECPointFp(this.curve, c, d);};ECPointFp.prototype.multiply2D = function (b) {if (this.isInfinity()) {return this;}if (b.signum() == 0) {return this.curve.getInfinity();}var g = b;var f = g.multiply(new BigInteger("3"));var l = this.negate();var d = this;var c;for (c = f.bitLength() - 2; c > 0; --c) {d = d.twice();var a = f.testBit(c);var j = g.testBit(c);if (a != j) {d = d.add2D(a ? this : l);}}return d;};ECPointFp.prototype.isOnCurve = function () {var d = this.getX().toBigInteger();var i = this.getY().toBigInteger();var f = this.curve.getA().toBigInteger();var c = this.curve.getB().toBigInteger();var h = this.curve.getQ();var e = i.multiply(i).mod(h);var g = d.multiply(d).multiply(d).add(f.multiply(d)).add(c).mod(h);return e.equals(g);};ECPointFp.prototype.toString = function () {return "(" + this.getX().toBigInteger().toString() + "," + this.getY().toBigInteger().toString() + ")";};ECPointFp.prototype.validate = function () {var c = this.curve.getQ();if (this.isInfinity()) {throw new Error("Point is at infinity.");}var a = this.getX().toBigInteger();var b = this.getY().toBigInteger();if (a.compareTo(BigInteger.ONE) < 0 || a.compareTo(c.subtract(BigInteger.ONE)) > 0) {throw new Error("x coordinate out of bounds");}if (b.compareTo(BigInteger.ONE) < 0 || b.compareTo(c.subtract(BigInteger.ONE)) > 0) {throw new Error("y coordinate out of bounds");}if (!this.isOnCurve()) {throw new Error("Point is not on the curve.");}if (this.multiply(c).isInfinity()) {throw new Error("Point is not a scalar multiple of G.");}return true;};
/*! Mike Samuel (c) 2009 | code.google.com/p/json-sans-eval

var jsonParse = function () {var e = "(?:-?\\b(?:0|[1-9][0-9]*)(?:\\.[0-9]+)?(?:[eE][+-]?[0-9]+)?\\b)";var j = '(?:[^\\0-\\x08\\x0a-\\x1f"\\\\]|\\\\(?:["/\\\\bfnrt]|u[0-9A-Fa-f]{4}))';var i = '(?:"' + j + '*")';var d = new RegExp("(?:false|true|null|[\\{\\}\\[\\]]|" + e + "|" + i + ")", "g");var k = new RegExp("\\\\(?:([^u])|u(.{4}))", "g");var g = { '"': '"', "/": "/", "\\": "\\", b: "\b", f: "\f", n: "\n", r: "\r", t: "\t" };function h(l, m, n) {return m ? g[m] : String.fromCharCode(parseInt(n, 16));}var c = new String("");var a = "\\";var f = { "{": Object, "[": Array };var b = Object.hasOwnProperty;return function (u, q) {var p = u.match(d);var x;var v = p[0];var l = false;if ("{" === v) {x = {};} else {if ("[" === v) {x = [];} else {x = [];l = true;}}var t;var r = [x];for (var o = 1 - l, m = p.length; o < m; ++o) {v = p[o];var w;switch (v.charCodeAt(0)) {default:w = r[0];w[t || w.length] = +v;t = void 0;break;case 34:v = v.substring(1, v.length - 1);if (v.indexOf(a) !== -1) {v = v.replace(k, h);}w = r[0];if (!t) {if (w instanceof Array) {t = w.length;} else {t = v || c;break;}}w[t] = v;t = void 0;break;case 91:w = r[0];r.unshift(w[t || w.length] = []);t = void 0;break;case 93:r.shift();break;case 102:w = r[0];w[t || w.length] = false;t = void 0;break;case 110:w = r[0];w[t || w.length] = null;t = void 0;break;case 116:w = r[0];w[t || w.length] = true;t = void 0;break;case 123:w = r[0];r.unshift(w[t || w.length] = {});t = void 0;break;case 125:r.shift();break;}}if (l) {if (r.length !== 1) {throw new Error();}x = x[0];} else {if (r.length) {throw new Error();}}if (q) {var s = function s(C, B) {var D = C[B];if (D && typeof D === "object") {var n = null;for (var z in D) {if (b.call(D, z) && D !== C) {var y = s(D, z);if (y !== void 0) {D[z] = y;} else {if (!n) {n = [];}n.push(z);}}}if (n) {for (var A = n.length; --A >= 0;) {delete D[n[A]];}}}return q.call(C, B, D);};x = s({ "": x }, "");}return x;};}();
if (typeof KJUR == "undefined" || !KJUR) {KJUR = {};}if (typeof KJUR.asn1 == "undefined" || !KJUR.asn1) {KJUR.asn1 = {};}KJUR.asn1.ASN1Util = new function () {this.integerToByteHex = function (a) {var b = a.toString(16);if (b.length % 2 == 1) {b = "0" + b;}return b;};this.bigIntToMinTwosComplementsHex = function (j) {var f = j.toString(16);if (f.substr(0, 1) != "-") {if (f.length % 2 == 1) {f = "0" + f;} else {if (!f.match(/^[0-7]/)) {f = "00" + f;}}} else {var a = f.substr(1);var e = a.length;if (e % 2 == 1) {e += 1;} else {if (!f.match(/^[0-7]/)) {e += 2;}}var g = "";for (var d = 0; d < e; d++) {g += "f";}var c = new BigInteger(g, 16);var b = c.xor(j).add(BigInteger.ONE);f = b.toString(16).replace(/^-/, "");}return f;};this.getPEMStringFromHex = function (a, b) {return hextopem(a, b);};this.newObject = function (k) {var F = KJUR,o = F.asn1,v = o.ASN1Object,B = o.DERBoolean,e = o.DERInteger,t = o.DERBitString,h = o.DEROctetString,x = o.DERNull,y = o.DERObjectIdentifier,m = o.DEREnumerated,g = o.DERUTF8String,f = o.DERNumericString,A = o.DERPrintableString,w = o.DERTeletexString,q = o.DERIA5String,E = o.DERUTCTime,j = o.DERGeneralizedTime,b = o.DERVisibleString,l = o.DERBMPString,n = o.DERSequence,c = o.DERSet,s = o.DERTaggedObject,p = o.ASN1Util.newObject;if (k instanceof o.ASN1Object) {return k;}var u = Object.keys(k);if (u.length != 1) {throw new Error("key of param shall be only one.");}var H = u[0];if (":asn1:bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:visstr:bmpstr:seq:set:tag:".indexOf(":" + H + ":") == -1) {throw new Error("undefined key: " + H);}if (H == "bool") {return new B(k[H]);}if (H == "int") {return new e(k[H]);}if (H == "bitstr") {return new t(k[H]);}if (H == "octstr") {return new h(k[H]);}if (H == "null") {return new x(k[H]);}if (H == "oid") {return new y(k[H]);}if (H == "enum") {return new m(k[H]);}if (H == "utf8str") {return new g(k[H]);}if (H == "numstr") {return new f(k[H]);}if (H == "prnstr") {return new A(k[H]);}if (H == "telstr") {return new w(k[H]);}if (H == "ia5str") {return new q(k[H]);}if (H == "utctime") {return new E(k[H]);}if (H == "gentime") {return new j(k[H]);}if (H == "visstr") {return new b(k[H]);}if (H == "bmpstr") {return new l(k[H]);}if (H == "asn1") {return new v(k[H]);}if (H == "seq") {var d = k[H];var G = [];for (var z = 0; z < d.length; z++) {var D = p(d[z]);G.push(D);}return new n({ array: G });}if (H == "set") {var d = k[H];var G = [];for (var z = 0; z < d.length; z++) {var D = p(d[z]);G.push(D);}return new c({ array: G });}if (H == "tag") {var C = k[H];if (Object.prototype.toString.call(C) === "[object Array]" && C.length == 3) {var r = p(C[2]);return new s({ tag: C[0], explicit: C[1], obj: r });} else {return new s(C);}}};this.jsonToASN1HEX = function (b) {var a = this.newObject(b);return a.getEncodedHex();};}();KJUR.asn1.ASN1Util.oidHexToInt = function (a) {var j = "";var k = parseInt(a.substr(0, 2), 16);var d = Math.floor(k / 40);var c = k % 40;var j = d + "." + c;var e = "";for (var f = 2; f < a.length; f += 2) {var g = parseInt(a.substr(f, 2), 16);var h = ("00000000" + g.toString(2)).slice(-8);e = e + h.substr(1, 7);if (h.substr(0, 1) == "0") {var b = new BigInteger(e, 2);j = j + "." + b.toString(10);e = "";}}return j;};KJUR.asn1.ASN1Util.oidIntToHex = function (f) {var e = function e(a) {var k = a.toString(16);if (k.length == 1) {k = "0" + k;}return k;};var d = function d(o) {var n = "";var k = new BigInteger(o, 10);var a = k.toString(2);var l = 7 - a.length % 7;if (l == 7) {l = 0;}var q = "";for (var m = 0; m < l; m++) {q += "0";}a = q + a;for (var m = 0; m < a.length - 1; m += 7) {var p = a.substr(m, 7);if (m != a.length - 7) {p = "1" + p;}n += e(parseInt(p, 2));}return n;};if (!f.match(/^[0-9.]+$/)) {throw "malformed oid string: " + f;}var g = "";var b = f.split(".");var j = parseInt(b[0]) * 40 + parseInt(b[1]);g += e(j);b.splice(0, 2);for (var c = 0; c < b.length; c++) {g += d(b[c]);}return g;};KJUR.asn1.ASN1Object = function (e) {var c = true;var b = null;var d = "00";var f = "00";var a = "";this.params = null;this.getLengthHexFromValue = function () {if (typeof this.hV == "undefined" || this.hV == null) {throw new Error("this.hV is null or undefined");}if (this.hV.length % 2 == 1) {throw new Error("value hex must be even length: n=" + a.length + ",v=" + this.hV);}var j = this.hV.length / 2;var i = j.toString(16);if (i.length % 2 == 1) {i = "0" + i;}if (j < 128) {return i;} else {var h = i.length / 2;if (h > 15) {throw "ASN.1 length too long to represent by 8x: n = " + j.toString(16);}var g = 128 + h;return g.toString(16) + i;}};this.getEncodedHex = function () {if (this.hTLV == null || this.isModified) {this.hV = this.getFreshValueHex();this.hL = this.getLengthHexFromValue();this.hTLV = this.hT + this.hL + this.hV;this.isModified = false;}return this.hTLV;};this.getValueHex = function () {this.getEncodedHex();return this.hV;};this.getFreshValueHex = function () {return "";};this.setByParam = function (g) {this.params = g;};if (e != undefined) {if (e.tlv != undefined) {this.hTLV = e.tlv;this.isModified = false;}}};KJUR.asn1.DERAbstractString = function (c) {KJUR.asn1.DERAbstractString.superclass.constructor.call(this);var b = null;var a = null;this.getString = function () {return this.s;};this.setString = function (d) {this.hTLV = null;this.isModified = true;this.s = d;this.hV = utf8tohex(this.s).toLowerCase();};this.setStringHex = function (d) {this.hTLV = null;this.isModified = true;this.s = null;this.hV = d;};this.getFreshValueHex = function () {return this.hV;};if (typeof c != "undefined") {if (typeof c == "string") {this.setString(c);} else {if (typeof c.str != "undefined") {this.setString(c.str);} else {if (typeof c.hex != "undefined") {this.setStringHex(c.hex);}}}}};extendClass(KJUR.asn1.DERAbstractString, KJUR.asn1.ASN1Object);KJUR.asn1.DERAbstractTime = function (c) {KJUR.asn1.DERAbstractTime.superclass.constructor.call(this);var b = null;var a = null;this.localDateToUTC = function (g) {var e = g.getTime() + g.getTimezoneOffset() * 60000;var f = new Date(e);return f;};this.formatDate = function (m, o, e) {var g = this.zeroPadding;var n = this.localDateToUTC(m);var p = String(n.getFullYear());if (o == "utc") {p = p.substr(2, 2);}var l = g(String(n.getMonth() + 1), 2);var q = g(String(n.getDate()), 2);var h = g(String(n.getHours()), 2);var i = g(String(n.getMinutes()), 2);var j = g(String(n.getSeconds()), 2);var r = p + l + q + h + i + j;if (e === true) {var f = n.getMilliseconds();if (f != 0) {var k = g(String(f), 3);k = k.replace(/[0]+$/, "");r = r + "." + k;}}return r + "Z";};this.zeroPadding = function (e, d) {if (e.length >= d) {return e;}return new Array(d - e.length + 1).join("0") + e;};this.getString = function () {return this.s;};this.setString = function (d) {this.hTLV = null;this.isModified = true;this.s = d;this.hV = stohex(d);};this.setByDateValue = function (h, j, e, d, f, g) {var i = new Date(Date.UTC(h, j - 1, e, d, f, g, 0));this.setByDate(i);};this.getFreshValueHex = function () {return this.hV;};};extendClass(KJUR.asn1.DERAbstractTime, KJUR.asn1.ASN1Object);KJUR.asn1.DERAbstractStructured = function (b) {KJUR.asn1.DERAbstractString.superclass.constructor.call(this);var a = null;this.setByASN1ObjectArray = function (c) {this.hTLV = null;this.isModified = true;this.asn1Array = c;};this.appendASN1Object = function (c) {this.hTLV = null;this.isModified = true;this.asn1Array.push(c);};this.asn1Array = new Array();if (typeof b != "undefined") {if (typeof b.array != "undefined") {this.asn1Array = b.array;}}};extendClass(KJUR.asn1.DERAbstractStructured, KJUR.asn1.ASN1Object);KJUR.asn1.DERBoolean = function (a) {KJUR.asn1.DERBoolean.superclass.constructor.call(this);this.hT = "01";if (a == false) {this.hTLV = "010100";} else {this.hTLV = "0101ff";}};extendClass(KJUR.asn1.DERBoolean, KJUR.asn1.ASN1Object);KJUR.asn1.DERInteger = function (a) {KJUR.asn1.DERInteger.superclass.constructor.call(this);this.hT = "02";this.setByBigInteger = function (b) {this.hTLV = null;this.isModified = true;this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(b);};this.setByInteger = function (c) {var b = new BigInteger(String(c), 10);this.setByBigInteger(b);};this.setValueHex = function (b) {this.hV = b;};this.getFreshValueHex = function () {return this.hV;};if (typeof a != "undefined") {if (typeof a.bigint != "undefined") {this.setByBigInteger(a.bigint);} else {if (typeof a["int"] != "undefined") {this.setByInteger(a["int"]);} else {if (typeof a == "number") {this.setByInteger(a);} else {if (typeof a.hex != "undefined") {this.setValueHex(a.hex);}}}}}};extendClass(KJUR.asn1.DERInteger, KJUR.asn1.ASN1Object);KJUR.asn1.DERBitString = function (b) {if (b !== undefined && typeof b.obj !== "undefined") {var a = KJUR.asn1.ASN1Util.newObject(b.obj);b.hex = "00" + a.getEncodedHex();}KJUR.asn1.DERBitString.superclass.constructor.call(this);this.hT = "03";this.setHexValueIncludingUnusedBits = function (c) {this.hTLV = null;this.isModified = true;this.hV = c;};this.setUnusedBitsAndHexValue = function (c, e) {if (c < 0 || 7 < c) {throw "unused bits shall be from 0 to 7: u = " + c;}var d = "0" + c;this.hTLV = null;this.isModified = true;this.hV = d + e;};this.setByBinaryString = function (e) {e = e.replace(/0+$/, "");var f = 8 - e.length % 8;if (f == 8) {f = 0;}for (var g = 0; g <= f; g++) {e += "0";}var j = "";for (var g = 0; g < e.length - 1; g += 8) {var d = e.substr(g, 8);var c = parseInt(d, 2).toString(16);if (c.length == 1) {c = "0" + c;}j += c;}this.hTLV = null;this.isModified = true;this.hV = "0" + f + j;};this.setByBooleanArray = function (e) {var d = "";for (var c = 0; c < e.length; c++) {if (e[c] == true) {d += "1";} else {d += "0";}}this.setByBinaryString(d);};this.newFalseArray = function (e) {var c = new Array(e);for (var d = 0; d < e; d++) {c[d] = false;}return c;};this.getFreshValueHex = function () {return this.hV;};if (typeof b != "undefined") {if (typeof b == "string" && b.toLowerCase().match(/^[0-9a-f]+$/)) {this.setHexValueIncludingUnusedBits(b);} else {if (typeof b.hex != "undefined") {this.setHexValueIncludingUnusedBits(b.hex);} else {if (typeof b.bin != "undefined") {this.setByBinaryString(b.bin);} else {if (typeof b.array != "undefined") {this.setByBooleanArray(b.array);}}}}}};extendClass(KJUR.asn1.DERBitString, KJUR.asn1.ASN1Object);KJUR.asn1.DEROctetString = function (b) {if (b !== undefined && typeof b.obj !== "undefined") {var a = KJUR.asn1.ASN1Util.newObject(b.obj);b.hex = a.getEncodedHex();}KJUR.asn1.DEROctetString.superclass.constructor.call(this, b);this.hT = "04";};extendClass(KJUR.asn1.DEROctetString, KJUR.asn1.DERAbstractString);KJUR.asn1.DERNull = function () {KJUR.asn1.DERNull.superclass.constructor.call(this);this.hT = "05";this.hTLV = "0500";};extendClass(KJUR.asn1.DERNull, KJUR.asn1.ASN1Object);KJUR.asn1.DERObjectIdentifier = function (a) {KJUR.asn1.DERObjectIdentifier.superclass.constructor.call(this);this.hT = "06";this.setValueHex = function (b) {this.hTLV = null;this.isModified = true;this.s = null;this.hV = b;};this.setValueOidString = function (b) {var c = oidtohex(b);if (c == null) {throw new Error("malformed oid string: " + b);}this.hTLV = null;this.isModified = true;this.s = null;this.hV = c;};this.setValueName = function (c) {var b = KJUR.asn1.x509.OID.name2oid(c);if (b !== "") {this.setValueOidString(b);} else {throw new Error("DERObjectIdentifier oidName undefined: " + c);}};this.setValueNameOrOid = function (b) {if (b.match(/^[0-2].[0-9.]+$/)) {this.setValueOidString(b);} else {this.setValueName(b);}};this.getFreshValueHex = function () {return this.hV;};this.setByParam = function (b) {if (typeof b === "string") {this.setValueNameOrOid(b);} else {if (b.oid !== undefined) {this.setValueNameOrOid(b.oid);} else {if (b.name !== undefined) {this.setValueNameOrOid(b.name);} else {if (b.hex !== undefined) {this.setValueHex(b.hex);}}}}};if (a !== undefined) {this.setByParam(a);}};extendClass(KJUR.asn1.DERObjectIdentifier, KJUR.asn1.ASN1Object);KJUR.asn1.DEREnumerated = function (a) {KJUR.asn1.DEREnumerated.superclass.constructor.call(this);this.hT = "0a";this.setByBigInteger = function (b) {this.hTLV = null;this.isModified = true;this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(b);};this.setByInteger = function (c) {var b = new BigInteger(String(c), 10);this.setByBigInteger(b);};this.setValueHex = function (b) {this.hV = b;};this.getFreshValueHex = function () {return this.hV;};if (typeof a != "undefined") {if (typeof a["int"] != "undefined") {this.setByInteger(a["int"]);} else {if (typeof a == "number") {this.setByInteger(a);} else {if (typeof a.hex != "undefined") {this.setValueHex(a.hex);}}}}};extendClass(KJUR.asn1.DEREnumerated, KJUR.asn1.ASN1Object);KJUR.asn1.DERUTF8String = function (a) {KJUR.asn1.DERUTF8String.superclass.constructor.call(this, a);this.hT = "0c";};extendClass(KJUR.asn1.DERUTF8String, KJUR.asn1.DERAbstractString);KJUR.asn1.DERNumericString = function (a) {KJUR.asn1.DERNumericString.superclass.constructor.call(this, a);this.hT = "12";};extendClass(KJUR.asn1.DERNumericString, KJUR.asn1.DERAbstractString);KJUR.asn1.DERPrintableString = function (a) {KJUR.asn1.DERPrintableString.superclass.constructor.call(this, a);this.hT = "13";};extendClass(KJUR.asn1.DERPrintableString, KJUR.asn1.DERAbstractString);KJUR.asn1.DERTeletexString = function (a) {KJUR.asn1.DERTeletexString.superclass.constructor.call(this, a);this.hT = "14";};extendClass(KJUR.asn1.DERTeletexString, KJUR.asn1.DERAbstractString);KJUR.asn1.DERIA5String = function (a) {KJUR.asn1.DERIA5String.superclass.constructor.call(this, a);this.hT = "16";};extendClass(KJUR.asn1.DERIA5String, KJUR.asn1.DERAbstractString);KJUR.asn1.DERVisibleString = function (a) {KJUR.asn1.DERIA5String.superclass.constructor.call(this, a);this.hT = "1a";};extendClass(KJUR.asn1.DERVisibleString, KJUR.asn1.DERAbstractString);KJUR.asn1.DERBMPString = function (a) {KJUR.asn1.DERBMPString.superclass.constructor.call(this, a);this.hT = "1e";};extendClass(KJUR.asn1.DERBMPString, KJUR.asn1.DERAbstractString);KJUR.asn1.DERUTCTime = function (a) {KJUR.asn1.DERUTCTime.superclass.constructor.call(this, a);this.hT = "17";this.setByDate = function (b) {this.hTLV = null;this.isModified = true;this.date = b;this.s = this.formatDate(this.date, "utc");this.hV = stohex(this.s);};this.getFreshValueHex = function () {if (typeof this.date == "undefined" && typeof this.s == "undefined") {this.date = new Date();this.s = this.formatDate(this.date, "utc");this.hV = stohex(this.s);}return this.hV;};if (a !== undefined) {if (a.str !== undefined) {this.setString(a.str);} else {if (typeof a == "string" && a.match(/^[0-9]{12}Z$/)) {this.setString(a);} else {if (a.hex !== undefined) {this.setStringHex(a.hex);} else {if (a.date !== undefined) {this.setByDate(a.date);}}}}}};extendClass(KJUR.asn1.DERUTCTime, KJUR.asn1.DERAbstractTime);KJUR.asn1.DERGeneralizedTime = function (a) {KJUR.asn1.DERGeneralizedTime.superclass.constructor.call(this, a);this.hT = "18";this.withMillis = false;this.setByDate = function (b) {this.hTLV = null;this.isModified = true;this.date = b;this.s = this.formatDate(this.date, "gen", this.withMillis);this.hV = stohex(this.s);};this.getFreshValueHex = function () {if (this.date === undefined && this.s === undefined) {this.date = new Date();this.s = this.formatDate(this.date, "gen", this.withMillis);this.hV = stohex(this.s);}return this.hV;};if (a !== undefined) {if (a.str !== undefined) {this.setString(a.str);} else {if (typeof a == "string" && a.match(/^[0-9]{14}Z$/)) {this.setString(a);} else {if (a.hex !== undefined) {this.setStringHex(a.hex);} else {if (a.date !== undefined) {this.setByDate(a.date);}}}}if (a.millis === true) {this.withMillis = true;}}};extendClass(KJUR.asn1.DERGeneralizedTime, KJUR.asn1.DERAbstractTime);KJUR.asn1.DERSequence = function (a) {KJUR.asn1.DERSequence.superclass.constructor.call(this, a);this.hT = "30";this.getFreshValueHex = function () {var c = "";for (var b = 0; b < this.asn1Array.length; b++) {var d = this.asn1Array[b];c += d.getEncodedHex();}this.hV = c;return this.hV;};};extendClass(KJUR.asn1.DERSequence, KJUR.asn1.DERAbstractStructured);KJUR.asn1.DERSet = function (a) {KJUR.asn1.DERSet.superclass.constructor.call(this, a);this.hT = "31";this.sortFlag = true;this.getFreshValueHex = function () {var b = new Array();for (var c = 0; c < this.asn1Array.length; c++) {var d = this.asn1Array[c];b.push(d.getEncodedHex());}if (this.sortFlag == true) {b.sort();}this.hV = b.join("");return this.hV;};if (typeof a != "undefined") {if (typeof a.sortflag != "undefined" && a.sortflag == false) {this.sortFlag = false;}}};extendClass(KJUR.asn1.DERSet, KJUR.asn1.DERAbstractStructured);KJUR.asn1.DERTaggedObject = function (b) {KJUR.asn1.DERTaggedObject.superclass.constructor.call(this);var a = KJUR.asn1;this.hT = "a0";this.hV = "";this.isExplicit = true;this.asn1Object = null;this.setASN1Object = function (c, d, e) {this.hT = d;this.isExplicit = c;this.asn1Object = e;if (this.isExplicit) {this.hV = this.asn1Object.getEncodedHex();this.hTLV = null;this.isModified = true;} else {this.hV = null;this.hTLV = e.getEncodedHex();this.hTLV = this.hTLV.replace(/^../, d);this.isModified = false;}};this.getFreshValueHex = function () {return this.hV;};this.setByParam = function (c) {if (c.tag != undefined) {this.hT = c.tag;}if (c.explicit != undefined) {this.isExplicit = c.explicit;}if (c.tage != undefined) {this.hT = c.tage;this.isExplicit = true;}if (c.tagi != undefined) {this.hT = c.tagi;this.isExplicit = false;}if (c.obj != undefined) {if (c.obj instanceof a.ASN1Object) {this.asn1Object = c.obj;this.setASN1Object(this.isExplicit, this.hT, this.asn1Object);} else {if (typeof c.obj == "object") {this.asn1Object = a.ASN1Util.newObject(c.obj);this.setASN1Object(this.isExplicit, this.hT, this.asn1Object);}}}};if (b != undefined) {this.setByParam(b);}};extendClass(KJUR.asn1.DERTaggedObject, KJUR.asn1.ASN1Object);
var ASN1HEX = new function () {}();ASN1HEX.getLblen = function (c, a) {if (c.substr(a + 2, 1) != "8") {return 1;}var b = parseInt(c.substr(a + 3, 1));if (b == 0) {return -1;}if (0 < b && b < 10) {return b + 1;}return -2;};ASN1HEX.getL = function (c, b) {var a = ASN1HEX.getLblen(c, b);if (a < 1) {return "";}return c.substr(b + 2, a * 2);};ASN1HEX.getVblen = function (d, a) {var c, b;c = ASN1HEX.getL(d, a);if (c == "") {return -1;}if (c.substr(0, 1) === "8") {b = new BigInteger(c.substr(2), 16);} else {b = new BigInteger(c, 16);}return b.intValue();};ASN1HEX.getVidx = function (c, b) {var a = ASN1HEX.getLblen(c, b);if (a < 0) {return a;}return b + (a + 1) * 2;};ASN1HEX.getV = function (d, a) {var c = ASN1HEX.getVidx(d, a);var b = ASN1HEX.getVblen(d, a);return d.substr(c, b * 2);};ASN1HEX.getTLV = function (b, a) {return b.substr(a, 2) + ASN1HEX.getL(b, a) + ASN1HEX.getV(b, a);};ASN1HEX.getTLVblen = function (b, a) {return 2 + ASN1HEX.getLblen(b, a) * 2 + ASN1HEX.getVblen(b, a) * 2;};ASN1HEX.getNextSiblingIdx = function (d, a) {var c = ASN1HEX.getVidx(d, a);var b = ASN1HEX.getVblen(d, a);return c + b * 2;};ASN1HEX.getChildIdx = function (e, k) {var l = ASN1HEX;var j = [];var c, f, g;c = l.getVidx(e, k);f = l.getVblen(e, k) * 2;if (e.substr(k, 2) == "03") {c += 2;f -= 2;}g = 0;var d = c;while (g <= f) {var b = l.getTLVblen(e, d);g += b;if (g <= f) {j.push(d);}d += b;if (g >= f) {break;}}return j;};ASN1HEX.getNthChildIdx = function (d, b, e) {var c = ASN1HEX.getChildIdx(d, b);return c[e];};ASN1HEX.getIdxbyList = function (e, d, c, i) {var g = ASN1HEX;var f, b;if (c.length == 0) {if (i !== undefined) {if (e.substr(d, 2) !== i) {return -1;}}return d;}f = c.shift();b = g.getChildIdx(e, d);if (f >= b.length) {return -1;}return g.getIdxbyList(e, b[f], c, i);};ASN1HEX.getIdxbyListEx = function (f, k, b, g) {var m = ASN1HEX;var d, l;if (b.length == 0) {if (g !== undefined) {if (f.substr(k, 2) !== g) {return -1;}}return k;}d = b.shift();l = m.getChildIdx(f, k);var j = 0;for (var e = 0; e < l.length; e++) {var c = f.substr(l[e], 2);if (typeof d == "number" && !m.isContextTag(c) && j == d || typeof d == "string" && m.isContextTag(c, d)) {return m.getIdxbyListEx(f, l[e], b, g);}if (!m.isContextTag(c)) {j++;}}return -1;};ASN1HEX.getTLVbyList = function (d, c, b, f) {var e = ASN1HEX;var a = e.getIdxbyList(d, c, b, f);if (a == -1) {return null;}if (a >= d.length) {return null;}return e.getTLV(d, a);};ASN1HEX.getTLVbyListEx = function (d, c, b, f) {var e = ASN1HEX;var a = e.getIdxbyListEx(d, c, b, f);if (a == -1) {return null;}return e.getTLV(d, a);};ASN1HEX.getVbyList = function (e, c, b, g, i) {var f = ASN1HEX;var a, d;a = f.getIdxbyList(e, c, b, g);if (a == -1) {return null;}if (a >= e.length) {return null;}d = f.getV(e, a);if (i === true) {d = d.substr(2);}return d;};ASN1HEX.getVbyListEx = function (b, e, a, d, f) {var j = ASN1HEX;var g, c, i;g = j.getIdxbyListEx(b, e, a, d);if (g == -1) {return null;}i = j.getV(b, g);if (b.substr(g, 2) == "03" && f !== false) {i = i.substr(2);}return i;};ASN1HEX.getInt = function (e, b, f) {if (f == undefined) {f = -1;}try {var c = e.substr(b, 2);if (c != "02" && c != "03") {return f;}var a = ASN1HEX.getV(e, b);if (c == "02") {return parseInt(a, 16);} else {return bitstrtoint(a);}} catch (d) {return f;}};ASN1HEX.getOID = function (c, a, d) {if (d == undefined) {d = null;}try {if (c.substr(a, 2) != "06") {return d;}var e = ASN1HEX.getV(c, a);return hextooid(e);} catch (b) {return d;}};ASN1HEX.getOIDName = function (d, a, f) {if (f == undefined) {f = null;}try {var e = ASN1HEX.getOID(d, a, f);if (e == f) {return f;}var b = KJUR.asn1.x509.OID.oid2name(e);if (b == "") {return e;}return b;} catch (c) {return f;}};ASN1HEX.getString = function (d, b, e) {if (e == undefined) {e = null;}try {var a = ASN1HEX.getV(d, b);return hextorstr(a);} catch (c) {return e;}};ASN1HEX.hextooidstr = function (e) {var h = function h(b, a) {if (b.length >= a) {return b;}return new Array(a - b.length + 1).join("0") + b;};var l = [];var o = e.substr(0, 2);var f = parseInt(o, 16);l[0] = new String(Math.floor(f / 40));l[1] = new String(f % 40);var m = e.substr(2);var k = [];for (var g = 0; g < m.length / 2; g++) {k.push(parseInt(m.substr(g * 2, 2), 16));}var j = [];var d = "";for (var g = 0; g < k.length; g++) {if (k[g] & 128) {d = d + h((k[g] & 127).toString(2), 7);} else {d = d + h((k[g] & 127).toString(2), 7);j.push(new String(parseInt(d, 2)));d = "";}}var n = l.join(".");if (j.length > 0) {n = n + "." + j.join(".");}return n;};ASN1HEX.dump = function (t, c, l, g) {var p = ASN1HEX;var j = p.getV;var y = p.dump;var w = p.getChildIdx;var e = t;if (t instanceof KJUR.asn1.ASN1Object) {e = t.getEncodedHex();}var q = function q(A, i) {if (A.length <= i * 2) {return A;} else {var v = A.substr(0, i) + "..(total " + A.length / 2 + "bytes).." + A.substr(A.length - i, i);return v;}};if (c === undefined) {c = { ommit_long_octet: 32 };}if (l === undefined) {l = 0;}if (g === undefined) {g = "";}var x = c.ommit_long_octet;var z = e.substr(l, 2);if (z == "01") {var h = j(e, l);if (h == "00") {return g + "BOOLEAN FALSE\n";} else {return g + "BOOLEAN TRUE\n";}}if (z == "02") {var h = j(e, l);return g + "INTEGER " + q(h, x) + "\n";}if (z == "03") {var h = j(e, l);if (p.isASN1HEX(h.substr(2))) {var k = g + "BITSTRING, encapsulates\n";k = k + y(h.substr(2), c, 0, g + "  ");return k;} else {return g + "BITSTRING " + q(h, x) + "\n";}}if (z == "04") {var h = j(e, l);if (p.isASN1HEX(h)) {var k = g + "OCTETSTRING, encapsulates\n";k = k + y(h, c, 0, g + "  ");return k;} else {return g + "OCTETSTRING " + q(h, x) + "\n";}}if (z == "05") {return g + "NULL\n";}if (z == "06") {var m = j(e, l);var b = KJUR.asn1.ASN1Util.oidHexToInt(m);var o = KJUR.asn1.x509.OID.oid2name(b);var a = b.replace(/\./g, " ");if (o != "") {return g + "ObjectIdentifier " + o + " (" + a + ")\n";} else {return g + "ObjectIdentifier (" + a + ")\n";}}if (z == "0a") {return g + "ENUMERATED " + parseInt(j(e, l)) + "\n";}if (z == "0c") {return g + "UTF8String '" + hextoutf8(j(e, l)) + "'\n";}if (z == "13") {return g + "PrintableString '" + hextoutf8(j(e, l)) + "'\n";}if (z == "14") {return g + "TeletexString '" + hextoutf8(j(e, l)) + "'\n";}if (z == "16") {return g + "IA5String '" + hextoutf8(j(e, l)) + "'\n";}if (z == "17") {return g + "UTCTime " + hextoutf8(j(e, l)) + "\n";}if (z == "18") {return g + "GeneralizedTime " + hextoutf8(j(e, l)) + "\n";}if (z == "1a") {return g + "VisualString '" + hextoutf8(j(e, l)) + "'\n";}if (z == "1e") {return g + "BMPString '" + ucs2hextoutf8(j(e, l)) + "'\n";}if (z == "30") {if (e.substr(l, 4) == "3000") {return g + "SEQUENCE {}\n";}var k = g + "SEQUENCE\n";var d = w(e, l);var f = c;if ((d.length == 2 || d.length == 3) && e.substr(d[0], 2) == "06" && e.substr(d[d.length - 1], 2) == "04") {var o = p.oidname(j(e, d[0]));var r = JSON.parse(JSON.stringify(c));r.x509ExtName = o;f = r;}for (var u = 0; u < d.length; u++) {k = k + y(e, f, d[u], g + "  ");}return k;}if (z == "31") {var k = g + "SET\n";var d = w(e, l);for (var u = 0; u < d.length; u++) {k = k + y(e, c, d[u], g + "  ");}return k;}var z = parseInt(z, 16);if ((z & 128) != 0) {var n = z & 31;if ((z & 32) != 0) {var k = g + "[" + n + "]\n";var d = w(e, l);for (var u = 0; u < d.length; u++) {k = k + y(e, c, d[u], g + "  ");}return k;} else {var h = j(e, l);if (ASN1HEX.isASN1HEX(h)) {var k = g + "[" + n + "]\n";k = k + y(h, c, 0, g + "  ");return k;} else {if (h.substr(0, 8) == "68747470") {h = hextoutf8(h);} else {if (c.x509ExtName === "subjectAltName" && n == 2) {h = hextoutf8(h);}}}var k = g + "[" + n + "] " + h + "\n";return k;}}return g + "UNKNOWN(" + z + ") " + j(e, l) + "\n";};ASN1HEX.isContextTag = function (c, b) {c = c.toLowerCase();var f, e;try {f = parseInt(c, 16);} catch (d) {return -1;}if (b === undefined) {if ((f & 192) == 128) {return true;} else {return false;}}try {var a = b.match(/^\[[0-9]+\]$/);if (a == null) {return false;}e = parseInt(b.substr(1, b.length - 1), 10);if (e > 31) {return false;}if ((f & 192) == 128 && (f & 31) == e) {return true;}return false;} catch (d) {return false;}};ASN1HEX.isASN1HEX = function (e) {var d = ASN1HEX;if (e.length % 2 == 1) {return false;}var c = d.getVblen(e, 0);var b = e.substr(0, 2);var f = d.getL(e, 0);var a = e.length - b.length - f.length;if (a == c * 2) {return true;}return false;};ASN1HEX.checkStrictDER = function (g, o, d, c, r) {var s = ASN1HEX;if (d === undefined) {if (typeof g != "string") {throw new Error("not hex string");}g = g.toLowerCase();if (!KJUR.lang.String.isHex(g)) {throw new Error("not hex string");}d = g.length;c = g.length / 2;if (c < 128) {r = 1;} else {r = Math.ceil(c.toString(16)) + 1;}}var k = s.getL(g, o);if (k.length > r * 2) {throw new Error("L of TLV too long: idx=" + o);}var n = s.getVblen(g, o);if (n > c) {throw new Error("value of L too long than hex: idx=" + o);}var q = s.getTLV(g, o);var f = q.length - 2 - s.getL(g, o).length;if (f !== n * 2) {throw new Error("V string length and L's value not the same:" + f + "/" + n * 2);}if (o === 0) {if (g.length != q.length) {throw new Error("total length and TLV length unmatch:" + g.length + "!=" + q.length);}}var b = g.substr(o, 2);if (b === "02") {var a = s.getVidx(g, o);if (g.substr(a, 2) == "00" && g.charCodeAt(a + 2) < 56) {throw new Error("not least zeros for DER INTEGER");}}if (parseInt(b, 16) & 32) {var p = s.getVblen(g, o);var m = 0;var l = s.getChildIdx(g, o);for (var e = 0; e < l.length; e++) {var j = s.getTLV(g, l[e]);m += j.length;s.checkStrictDER(g, l[e], d, c, r);}if (p * 2 != m) {throw new Error("sum of children's TLV length and L unmatch: " + p * 2 + "!=" + m);}}};ASN1HEX.oidname = function (a) {var c = KJUR.asn1;if (KJUR.lang.String.isHex(a)) {a = c.ASN1Util.oidHexToInt(a);}var b = c.x509.OID.oid2name(a);if (b === "") {b = a;}return b;};
if (typeof KJUR == "undefined" || !KJUR) {KJUR = {};}if (typeof KJUR.asn1 == "undefined" || !KJUR.asn1) {KJUR.asn1 = {};}if (typeof KJUR.asn1.x509 == "undefined" || !KJUR.asn1.x509) {KJUR.asn1.x509 = {};}KJUR.asn1.x509.Certificate = function (h) {KJUR.asn1.x509.Certificate.superclass.constructor.call(this);var d = KJUR,c = d.asn1,f = c.DERBitString,b = c.DERSequence,g = c.x509,a = g.TBSCertificate,e = g.AlgorithmIdentifier;this.params = undefined;this.setByParam = function (i) {this.params = i;};this.sign = function () {var l = this.params;var k = l.sigalg;if (l.sigalg.name != undefined) {k = l.sigalg.name;}var i = l.tbsobj.getEncodedHex();var j = new KJUR.crypto.Signature({ alg: k });j.init(l.cakey);j.updateHex(i);l.sighex = j.sign();};this.getPEM = function () {return hextopem(this.getEncodedHex(), "CERTIFICATE");};this.getEncodedHex = function () {var k = this.params;if (k.tbsobj == undefined || k.tbsobj == null) {k.tbsobj = new a(k);}if (k.sighex == undefined && k.cakey != undefined) {this.sign();}if (k.sighex == undefined) {throw new Error("sighex or cakey parameter not defined");}var i = [];i.push(k.tbsobj);i.push(new e({ name: k.sigalg }));i.push(new f({ hex: "00" + k.sighex }));var j = new b({ array: i });return j.getEncodedHex();};if (h != undefined) {this.params = h;}};extendClass(KJUR.asn1.x509.Certificate, KJUR.asn1.ASN1Object);KJUR.asn1.x509.TBSCertificate = function (f) {KJUR.asn1.x509.TBSCertificate.superclass.constructor.call(this);var b = KJUR,i = b.asn1,d = i.x509,c = i.DERTaggedObject,h = i.DERInteger,g = i.DERSequence,l = d.AlgorithmIdentifier,e = d.Time,a = d.X500Name,j = d.Extensions,k = d.SubjectPublicKeyInfo;this.params = null;this.setByParam = function (m) {this.params = m;};this.getEncodedHex = function () {var n = [];var q = this.params;if (q.version != undefined || q.version != 1) {var m = 2;if (q.version != undefined) {m = q.version - 1;}var p = new c({ obj: new h({ "int": m }) });n.push(p);}n.push(new h(q.serial));n.push(new l({ name: q.sigalg }));n.push(new a(q.issuer));n.push(new g({ array: [new e(q.notbefore), new e(q.notafter)] }));n.push(new a(q.subject));n.push(new k(KEYUTIL.getKey(q.sbjpubkey)));if (q.ext !== undefined && q.ext.length > 0) {n.push(new c({ tag: "a3", obj: new j(q.ext) }));}var o = new KJUR.asn1.DERSequence({ array: n });return o.getEncodedHex();};if (f !== undefined) {this.setByParam(f);}};extendClass(KJUR.asn1.x509.TBSCertificate, KJUR.asn1.ASN1Object);KJUR.asn1.x509.Extensions = function (d) {KJUR.asn1.x509.Extensions.superclass.constructor.call(this);var c = KJUR,b = c.asn1,a = b.DERSequence,e = b.x509;this.aParam = [];this.setByParam = function (f) {this.aParam = f;};this.getEncodedHex = function () {var f = [];for (var h = 0; h < this.aParam.length; h++) {var l = this.aParam[h];var k = l.extname;var j = null;if (l.extn != undefined) {j = new e.PrivateExtension(l);} else {if (k == "subjectKeyIdentifier") {j = new e.SubjectKeyIdentifier(l);} else {if (k == "keyUsage") {j = new e.KeyUsage(l);} else {if (k == "subjectAltName") {j = new e.SubjectAltName(l);} else {if (k == "issuerAltName") {j = new e.IssuerAltName(l);} else {if (k == "basicConstraints") {j = new e.BasicConstraints(l);} else {if (k == "cRLDistributionPoints") {j = new e.CRLDistributionPoints(l);} else {if (k == "certificatePolicies") {j = new e.CertificatePolicies(l);} else {if (k == "authorityKeyIdentifier") {j = new e.AuthorityKeyIdentifier(l);} else {if (k == "extKeyUsage") {j = new e.ExtKeyUsage(l);} else {if (k == "authorityInfoAccess") {j = new e.AuthorityInfoAccess(l);} else {if (k == "cRLNumber") {j = new e.CRLNumber(l);} else {if (k == "cRLReason") {j = new e.CRLReason(l);} else {if (k == "ocspNonce") {j = new e.OCSPNonce(l);} else {if (k == "ocspNoCheck") {j = new e.OCSPNoCheck(l);} else {if (k == "adobeTimeStamp") {j = new e.AdobeTimeStamp(l);} else {if (k == "subjectDirectoryAttributes") {j = new e.SubjectDirectoryAttributes(l);} else {throw new Error("extension not supported:" + JSON.stringify(l));}}}}}}}}}}}}}}}}}if (j != null) {f.push(j);}}var g = new a({ array: f });return g.getEncodedHex();};if (d != undefined) {this.setByParam(d);}};extendClass(KJUR.asn1.x509.Extensions, KJUR.asn1.ASN1Object);KJUR.asn1.x509.Extension = function (d) {KJUR.asn1.x509.Extension.superclass.constructor.call(this);var f = null,a = KJUR,e = a.asn1,h = e.DERObjectIdentifier,i = e.DEROctetString,b = e.DERBitString,g = e.DERBoolean,c = e.DERSequence;this.getEncodedHex = function () {var m = new h({ oid: this.oid });var l = new i({ hex: this.getExtnValueHex() });var k = new Array();k.push(m);if (this.critical) {k.push(new g());}k.push(l);var j = new c({ array: k });return j.getEncodedHex();};this.critical = false;if (d !== undefined) {if (d.critical !== undefined) {this.critical = d.critical;}}};extendClass(KJUR.asn1.x509.Extension, KJUR.asn1.ASN1Object);KJUR.asn1.x509.KeyUsage = function (f) {KJUR.asn1.x509.KeyUsage.superclass.constructor.call(this, f);var a = X509.KEYUSAGE_NAME;this.getExtnValueHex = function () {return this.asn1ExtnValue.getEncodedHex();};this.oid = "2.5.29.15";if (f !== undefined) {if (f.bin !== undefined) {this.asn1ExtnValue = new KJUR.asn1.DERBitString(f);}if (f.names !== undefined && f.names.length !== undefined) {var e = f.names;var d = "000000000";for (var c = 0; c < e.length; c++) {for (var b = 0; b < a.length; b++) {if (e[c] === a[b]) {d = d.substring(0, b) + "1" + d.substring(b + 1, d.length);}}}this.asn1ExtnValue = new KJUR.asn1.DERBitString({ bin: d });}}};extendClass(KJUR.asn1.x509.KeyUsage, KJUR.asn1.x509.Extension);KJUR.asn1.x509.BasicConstraints = function (g) {KJUR.asn1.x509.BasicConstraints.superclass.constructor.call(this, g);var c = KJUR.asn1,e = c.DERBoolean,f = c.DERInteger,b = c.DERSequence;var a = false;var d = -1;this.getExtnValueHex = function () {var i = new Array();if (this.cA) {i.push(new e());}if (this.pathLen > -1) {i.push(new f({ "int": this.pathLen }));}var h = new b({ array: i });this.asn1ExtnValue = h;return this.asn1ExtnValue.getEncodedHex();};this.oid = "2.5.29.19";this.cA = false;this.pathLen = -1;if (g !== undefined) {if (g.cA !== undefined) {this.cA = g.cA;}if (g.pathLen !== undefined) {this.pathLen = g.pathLen;}}};extendClass(KJUR.asn1.x509.BasicConstraints, KJUR.asn1.x509.Extension);KJUR.asn1.x509.CRLDistributionPoints = function (d) {KJUR.asn1.x509.CRLDistributionPoints.superclass.constructor.call(this, d);var b = KJUR,a = b.asn1,c = a.x509;this.getExtnValueHex = function () {return this.asn1ExtnValue.getEncodedHex();};this.setByDPArray = function (e) {var f = [];for (var g = 0; g < e.length; g++) {if (e[g] instanceof KJUR.asn1.ASN1Object) {f.push(e[g]);} else {var h = new c.DistributionPoint(e[g]);f.push(h);}}this.asn1ExtnValue = new a.DERSequence({ array: f });};this.setByOneURI = function (f) {var e = new c.DistributionPoint({ fulluri: f });this.setByDPArray([e]);};this.oid = "2.5.29.31";if (d !== undefined) {if (d.array !== undefined) {this.setByDPArray(d.array);} else {if (d.uri !== undefined) {this.setByOneURI(d.uri);}}}};extendClass(KJUR.asn1.x509.CRLDistributionPoints, KJUR.asn1.x509.Extension);KJUR.asn1.x509.DistributionPoint = function (e) {KJUR.asn1.x509.DistributionPoint.superclass.constructor.call(this);var a = null,c = KJUR,b = c.asn1,d = b.x509.DistributionPointName;this.getEncodedHex = function () {var f = new b.DERSequence();if (this.asn1DP != null) {var g = new b.DERTaggedObject({ explicit: true, tag: "a0", obj: this.asn1DP });f.appendASN1Object(g);}this.hTLV = f.getEncodedHex();return this.hTLV;};if (e !== undefined) {if (e.dpobj !== undefined) {this.asn1DP = e.dpobj;} else {if (e.dpname !== undefined) {this.asn1DP = new d(e.dpname);} else {if (e.fulluri !== undefined) {this.asn1DP = new d({ full: [{ uri: e.fulluri }] });}}}}};extendClass(KJUR.asn1.x509.DistributionPoint, KJUR.asn1.ASN1Object);KJUR.asn1.x509.DistributionPointName = function (h) {KJUR.asn1.x509.DistributionPointName.superclass.constructor.call(this);var g = null,d = null,a = null,f = null,c = KJUR,b = c.asn1,e = b.DERTaggedObject;this.getEncodedHex = function () {if (this.type != "full") {throw new Error("currently type shall be 'full': " + this.type);}this.asn1Obj = new e({ explicit: false, tag: this.tag, obj: this.asn1V });this.hTLV = this.asn1Obj.getEncodedHex();return this.hTLV;};if (h !== undefined) {if (b.x509.GeneralNames.prototype.isPrototypeOf(h)) {this.type = "full";this.tag = "a0";this.asn1V = h;} else {if (h.full !== undefined) {this.type = "full";this.tag = "a0";this.asn1V = new b.x509.GeneralNames(h.full);} else {throw new Error("This class supports GeneralNames only as argument");}}}};extendClass(KJUR.asn1.x509.DistributionPointName, KJUR.asn1.ASN1Object);KJUR.asn1.x509.CertificatePolicies = function (f) {KJUR.asn1.x509.CertificatePolicies.superclass.constructor.call(this, f);var c = KJUR,b = c.asn1,e = b.x509,a = b.DERSequence,d = e.PolicyInformation;this.params = null;this.getExtnValueHex = function () {var j = [];for (var h = 0; h < this.params.array.length; h++) {j.push(new d(this.params.array[h]));}var g = new a({ array: j });this.asn1ExtnValue = g;return this.asn1ExtnValue.getEncodedHex();};this.oid = "2.5.29.32";if (f !== undefined) {this.params = f;}};extendClass(KJUR.asn1.x509.CertificatePolicies, KJUR.asn1.x509.Extension);KJUR.asn1.x509.PolicyInformation = function (d) {KJUR.asn1.x509.PolicyInformation.superclass.constructor.call(this, d);var c = KJUR.asn1,b = c.DERSequence,e = c.DERObjectIdentifier,a = c.x509.PolicyQualifierInfo;this.params = null;this.getEncodedHex = function () {if (this.params.policyoid === undefined && this.params.array === undefined) {throw new Error("parameter oid and array missing");}var f = [new e(this.params.policyoid)];if (this.params.array !== undefined) {var j = [];for (var h = 0; h < this.params.array.length; h++) {j.push(new a(this.params.array[h]));}if (j.length > 0) {f.push(new b({ array: j }));}}var g = new b({ array: f });return g.getEncodedHex();};if (d !== undefined) {this.params = d;}};extendClass(KJUR.asn1.x509.PolicyInformation, KJUR.asn1.ASN1Object);KJUR.asn1.x509.PolicyQualifierInfo = function (e) {KJUR.asn1.x509.PolicyQualifierInfo.superclass.constructor.call(this, e);var c = KJUR.asn1,b = c.DERSequence,d = c.DERIA5String,f = c.DERObjectIdentifier,a = c.x509.UserNotice;this.params = null;this.getEncodedHex = function () {if (this.params.cps !== undefined) {var g = new b({ array: [new f({ oid: "1.3.6.1.5.5.7.2.1" }), new d({ str: this.params.cps })] });return g.getEncodedHex();}if (this.params.unotice != undefined) {var g = new b({ array: [new f({ oid: "1.3.6.1.5.5.7.2.2" }), new a(this.params.unotice)] });return g.getEncodedHex();}};if (e !== undefined) {this.params = e;}};extendClass(KJUR.asn1.x509.PolicyQualifierInfo, KJUR.asn1.ASN1Object);KJUR.asn1.x509.UserNotice = function (e) {KJUR.asn1.x509.UserNotice.superclass.constructor.call(this, e);var a = KJUR.asn1.DERSequence,d = KJUR.asn1.DERInteger,c = KJUR.asn1.x509.DisplayText,b = KJUR.asn1.x509.NoticeReference;this.params = null;this.getEncodedHex = function () {var f = [];if (this.params.noticeref !== undefined) {f.push(new b(this.params.noticeref));}if (this.params.exptext !== undefined) {f.push(new c(this.params.exptext));}var g = new a({ array: f });return g.getEncodedHex();};if (e !== undefined) {this.params = e;}};extendClass(KJUR.asn1.x509.UserNotice, KJUR.asn1.ASN1Object);KJUR.asn1.x509.NoticeReference = function (d) {KJUR.asn1.x509.NoticeReference.superclass.constructor.call(this, d);var a = KJUR.asn1.DERSequence,c = KJUR.asn1.DERInteger,b = KJUR.asn1.x509.DisplayText;this.params = null;this.getEncodedHex = function () {var f = [];if (this.params.org !== undefined) {f.push(new b(this.params.org));}if (this.params.noticenum !== undefined) {var h = [];var e = this.params.noticenum;for (var j = 0; j < e.length; j++) {h.push(new c(e[j]));}f.push(new a({ array: h }));}if (f.length == 0) {throw new Error("parameter is empty");}var g = new a({ array: f });return g.getEncodedHex();};if (d !== undefined) {this.params = d;}};extendClass(KJUR.asn1.x509.NoticeReference, KJUR.asn1.ASN1Object);KJUR.asn1.x509.DisplayText = function (a) {KJUR.asn1.x509.DisplayText.superclass.constructor.call(this, a);this.hT = "0c";if (a !== undefined) {if (a.type === "ia5") {this.hT = "16";} else {if (a.type === "vis") {this.hT = "1a";} else {if (a.type === "bmp") {this.hT = "1e";}}}}};extendClass(KJUR.asn1.x509.DisplayText, KJUR.asn1.DERAbstractString);KJUR.asn1.x509.ExtKeyUsage = function (c) {KJUR.asn1.x509.ExtKeyUsage.superclass.constructor.call(this, c);var b = KJUR,a = b.asn1;this.setPurposeArray = function (d) {this.asn1ExtnValue = new a.DERSequence();for (var e = 0; e < d.length; e++) {var f = new a.DERObjectIdentifier(d[e]);this.asn1ExtnValue.appendASN1Object(f);}};this.getExtnValueHex = function () {return this.asn1ExtnValue.getEncodedHex();};this.oid = "2.5.29.37";if (c !== undefined) {if (c.array !== undefined) {this.setPurposeArray(c.array);}}};extendClass(KJUR.asn1.x509.ExtKeyUsage, KJUR.asn1.x509.Extension);KJUR.asn1.x509.AuthorityKeyIdentifier = function (f) {KJUR.asn1.x509.AuthorityKeyIdentifier.superclass.constructor.call(this, f);var b = KJUR,a = b.asn1,d = a.DERTaggedObject,e = a.x509.GeneralNames,c = b.crypto.Util.isKey;this.asn1KID = null;this.asn1CertIssuer = null;this.asn1CertSN = null;this.getExtnValueHex = function () {var h = new Array();if (this.asn1KID) {h.push(new d({ explicit: false, tag: "80", obj: this.asn1KID }));}if (this.asn1CertIssuer) {h.push(new d({ explicit: false, tag: "a1", obj: new e([{ dn: this.asn1CertIssuer }]) }));}if (this.asn1CertSN) {h.push(new d({ explicit: false, tag: "82", obj: this.asn1CertSN }));}var g = new a.DERSequence({ array: h });this.asn1ExtnValue = g;return this.asn1ExtnValue.getEncodedHex();};this.setKIDByParam = function (i) {if (i.str !== undefined || i.hex !== undefined) {this.asn1KID = new KJUR.asn1.DEROctetString(i);} else {if (typeof i === "object" && KJUR.crypto.Util.isKey(i) || typeof i === "string" && i.indexOf("BEGIN ") != -1) {var h = i;if (typeof i === "string") {h = KEYUTIL.getKey(i);}var g = KEYUTIL.getKeyID(h);this.asn1KID = new KJUR.asn1.DEROctetString({ hex: g });}}};this.setCertIssuerByParam = function (g) {if (g.str !== undefined || g.ldapstr !== undefined || g.hex !== undefined || g.certsubject !== undefined || g.certissuer !== undefined) {this.asn1CertIssuer = new KJUR.asn1.x509.X500Name(g);} else {if (typeof g === "string" && g.indexOf("BEGIN ") != -1 && g.indexOf("CERTIFICATE") != -1) {this.asn1CertIssuer = new KJUR.asn1.x509.X500Name({ certissuer: g });}}};this.setCertSNByParam = function (i) {if (i.str !== undefined || i.bigint !== undefined || i.hex !== undefined) {this.asn1CertSN = new KJUR.asn1.DERInteger(i);} else {if (typeof i === "string" && i.indexOf("BEGIN ") != -1 && i.indexOf("CERTIFICATE")) {var g = new X509();g.readCertPEM(i);var h = g.getSerialNumberHex();this.asn1CertSN = new KJUR.asn1.DERInteger({ hex: h });}}};this.oid = "2.5.29.35";if (f !== undefined) {if (f.kid !== undefined) {this.setKIDByParam(f.kid);}if (f.issuer !== undefined) {this.setCertIssuerByParam(f.issuer);}if (f.sn !== undefined) {this.setCertSNByParam(f.sn);}if (f.issuersn !== undefined && typeof f.issuersn === "string" && f.issuersn.indexOf("BEGIN ") != -1 && f.issuersn.indexOf("CERTIFICATE")) {this.setCertSNByParam(f.issuersn);this.setCertIssuerByParam(f.issuersn);}}};extendClass(KJUR.asn1.x509.AuthorityKeyIdentifier, KJUR.asn1.x509.Extension);KJUR.asn1.x509.SubjectKeyIdentifier = function (d) {KJUR.asn1.x509.SubjectKeyIdentifier.superclass.constructor.call(this, d);var b = KJUR,a = b.asn1,c = a.DEROctetString;this.asn1KID = null;this.getExtnValueHex = function () {this.asn1ExtnValue = this.asn1KID;return this.asn1ExtnValue.getEncodedHex();};this.setKIDByParam = function (g) {if (g.str !== undefined || g.hex !== undefined) {this.asn1KID = new c(g);} else {if (typeof g === "object" && KJUR.crypto.Util.isKey(g) || typeof g === "string" && g.indexOf("BEGIN") != -1) {var f = g;if (typeof g === "string") {f = KEYUTIL.getKey(g);}var e = KEYUTIL.getKeyID(f);this.asn1KID = new KJUR.asn1.DEROctetString({ hex: e });}}};this.oid = "2.5.29.14";if (d !== undefined) {if (d.kid !== undefined) {this.setKIDByParam(d.kid);}}};extendClass(KJUR.asn1.x509.SubjectKeyIdentifier, KJUR.asn1.x509.Extension);KJUR.asn1.x509.AuthorityInfoAccess = function (a) {KJUR.asn1.x509.AuthorityInfoAccess.superclass.constructor.call(this, a);this.setAccessDescriptionArray = function (k) {var d = new Array(),b = KJUR,g = b.asn1,c = g.DERSequence,j = g.DERObjectIdentifier,l = g.x509.GeneralName;for (var f = 0; f < k.length; f++) {var e;var h = k[f];if (h.ocsp !== undefined) {e = new c({ array: [new j({ oid: "1.3.6.1.5.5.7.48.1" }), new l({ uri: h.ocsp })] });} else {if (h.caissuer !== undefined) {e = new c({ array: [new j({ oid: "1.3.6.1.5.5.7.48.2" }), new l({ uri: h.caissuer })] });} else {throw new Error("unknown AccessMethod parameter: " + JSON.stringify(h));}}d.push(e);}this.asn1ExtnValue = new c({ array: d });};this.getExtnValueHex = function () {return this.asn1ExtnValue.getEncodedHex();};this.oid = "1.3.6.1.5.5.7.1.1";if (a !== undefined) {if (a.array !== undefined) {this.setAccessDescriptionArray(a.array);}}};extendClass(KJUR.asn1.x509.AuthorityInfoAccess, KJUR.asn1.x509.Extension);KJUR.asn1.x509.SubjectAltName = function (a) {KJUR.asn1.x509.SubjectAltName.superclass.constructor.call(this, a);this.setNameArray = function (b) {this.asn1ExtnValue = new KJUR.asn1.x509.GeneralNames(b);};this.getExtnValueHex = function () {return this.asn1ExtnValue.getEncodedHex();};this.oid = "2.5.29.17";if (a !== undefined) {if (a.array !== undefined) {this.setNameArray(a.array);}}};extendClass(KJUR.asn1.x509.SubjectAltName, KJUR.asn1.x509.Extension);KJUR.asn1.x509.IssuerAltName = function (a) {KJUR.asn1.x509.IssuerAltName.superclass.constructor.call(this, a);this.setNameArray = function (b) {this.asn1ExtnValue = new KJUR.asn1.x509.GeneralNames(b);};this.getExtnValueHex = function () {return this.asn1ExtnValue.getEncodedHex();};this.oid = "2.5.29.18";if (a !== undefined) {if (a.array !== undefined) {this.setNameArray(a.array);}}};extendClass(KJUR.asn1.x509.IssuerAltName, KJUR.asn1.x509.Extension);KJUR.asn1.x509.SubjectDirectoryAttributes = function (e) {KJUR.asn1.x509.SubjectDirectoryAttributes.superclass.constructor.call(this, e);var c = KJUR.asn1,a = c.DERSequence,b = c.ASN1Util.newObject,d = c.x509.OID.name2oid;this.params = null;this.getExtnValueHex = function () {var f = [];for (var j = 0; j < this.params.array.length; j++) {var k = this.params.array[j];var h = { seq: [{ oid: "1.2.3.4" }, { set: [{ utf8str: "DE" }] }] };if (k.attr == "dateOfBirth") {h.seq[0].oid = d(k.attr);h.seq[1].set[0] = { gentime: k.str };} else {if (k.attr == "placeOfBirth") {h.seq[0].oid = d(k.attr);h.seq[1].set[0] = { utf8str: k.str };} else {if (k.attr == "gender") {h.seq[0].oid = d(k.attr);h.seq[1].set[0] = { prnstr: k.str };} else {if (k.attr == "countryOfCitizenship") {h.seq[0].oid = d(k.attr);h.seq[1].set[0] = { prnstr: k.str };} else {if (k.attr == "countryOfResidence") {h.seq[0].oid = d(k.attr);h.seq[1].set[0] = { prnstr: k.str };} else {throw new Error("unsupported attribute: " + k.attr);}}}}}f.push(new b(h));}var g = new a({ array: f });this.asn1ExtnValue = g;return this.asn1ExtnValue.getEncodedHex();};this.oid = "2.5.29.9";if (e !== undefined) {this.params = e;}};extendClass(KJUR.asn1.x509.SubjectDirectoryAttributes, KJUR.asn1.x509.Extension);KJUR.asn1.x509.PrivateExtension = function (f) {KJUR.asn1.x509.PrivateExtension.superclass.constructor.call(this, f);var c = KJUR,e = c.lang.String.isHex,b = c.asn1,d = b.x509.OID.name2oid,a = b.ASN1Util.newObject;this.params = null;this.setByParam = function (g) {this.oid = d(g.extname);this.params = g;};this.getExtnValueHex = function () {if (this.params.extname == undefined || this.params.extn == undefined) {throw new Error("extname or extnhex not specified");}var h = this.params.extn;if (typeof h == "string" && e(h)) {return h;} else {if (typeof h == "object") {try {return a(h).getEncodedHex();} catch (g) {}}}throw new Error("unsupported extn value");};if (f != undefined) {this.setByParam(f);}};extendClass(KJUR.asn1.x509.PrivateExtension, KJUR.asn1.x509.Extension);KJUR.asn1.x509.CRL = function (g) {KJUR.asn1.x509.CRL.superclass.constructor.call(this);var c = KJUR,b = c.asn1,a = b.DERSequence,e = b.DERBitString,f = b.x509,d = f.AlgorithmIdentifier,h = f.TBSCertList;this.params = undefined;this.setByParam = function (i) {this.params = i;};this.sign = function () {var j = new h(this.params).getEncodedHex();var k = new KJUR.crypto.Signature({ alg: this.params.sigalg });k.init(this.params.cakey);k.updateHex(j);var i = k.sign();this.params.sighex = i;};this.getPEM = function () {return hextopem(this.getEncodedHex(), "X509 CRL");};this.getEncodedHex = function () {var k = this.params;if (k.tbsobj == undefined) {k.tbsobj = new h(k);}if (k.sighex == undefined && k.cakey != undefined) {this.sign();}if (k.sighex == undefined) {throw new Error("sighex or cakey parameter not defined");}var i = [];i.push(k.tbsobj);i.push(new d({ name: k.sigalg }));i.push(new e({ hex: "00" + k.sighex }));var j = new a({ array: i });return j.getEncodedHex();};if (g != undefined) {this.params = g;}};extendClass(KJUR.asn1.x509.CRL, KJUR.asn1.ASN1Object);KJUR.asn1.x509.TBSCertList = function (f) {KJUR.asn1.x509.TBSCertList.superclass.constructor.call(this);var b = KJUR,i = b.asn1,h = i.DERInteger,g = i.DERSequence,c = i.DERTaggedObject,k = i.DERObjectIdentifier,d = i.x509,l = d.AlgorithmIdentifier,e = d.Time,j = d.Extensions,a = d.X500Name;this.params = null;this.setByParam = function (m) {this.params = m;};this.getRevCertSequence = function () {var m = [];var n = this.params.revcert;for (var o = 0; o < n.length; o++) {var p = [new h(n[o].sn), new e(n[o].date)];if (n[o].ext != undefined) {p.push(new j(n[o].ext));}m.push(new g({ array: p }));}return new g({ array: m });};this.getEncodedHex = function () {var n = [];var r = this.params;if (r.version != undefined) {var m = r.version - 1;var p = new h({ "int": m });n.push(p);}n.push(new l({ name: r.sigalg }));n.push(new a(r.issuer));n.push(new e(r.thisupdate));if (r.nextupdate != undefined) {n.push(new e(r.nextupdate));}if (r.revcert != undefined) {n.push(this.getRevCertSequence());}if (r.ext != undefined) {var q = new j(r.ext);n.push(new c({ tag: "a0", explicit: true, obj: q }));}var o = new g({ array: n });return o.getEncodedHex();};if (f !== undefined) {this.setByParam(f);}};extendClass(KJUR.asn1.x509.TBSCertList, KJUR.asn1.ASN1Object);KJUR.asn1.x509.CRLEntry = function (e) {KJUR.asn1.x509.CRLEntry.superclass.constructor.call(this);var d = null,c = null,b = KJUR,a = b.asn1;this.setCertSerial = function (f) {this.sn = new a.DERInteger(f);};this.setRevocationDate = function (f) {this.time = new a.x509.Time(f);};this.getEncodedHex = function () {var f = new a.DERSequence({ array: [this.sn, this.time] });this.TLV = f.getEncodedHex();return this.TLV;};if (e !== undefined) {if (e.time !== undefined) {this.setRevocationDate(e.time);}if (e.sn !== undefined) {this.setCertSerial(e.sn);}}};extendClass(KJUR.asn1.x509.CRLEntry, KJUR.asn1.ASN1Object);KJUR.asn1.x509.CRLNumber = function (a) {KJUR.asn1.x509.CRLNumber.superclass.constructor.call(this, a);this.params = undefined;this.getExtnValueHex = function () {this.asn1ExtnValue = new KJUR.asn1.DERInteger(this.params.num);return this.asn1ExtnValue.getEncodedHex();};this.oid = "2.5.29.20";if (a != undefined) {this.params = a;}};extendClass(KJUR.asn1.x509.CRLNumber, KJUR.asn1.x509.Extension);KJUR.asn1.x509.CRLReason = function (a) {KJUR.asn1.x509.CRLReason.superclass.constructor.call(this, a);this.params = undefined;this.getExtnValueHex = function () {this.asn1ExtnValue = new KJUR.asn1.DEREnumerated(this.params.code);return this.asn1ExtnValue.getEncodedHex();};this.oid = "2.5.29.21";if (a != undefined) {this.params = a;}};extendClass(KJUR.asn1.x509.CRLReason, KJUR.asn1.x509.Extension);KJUR.asn1.x509.OCSPNonce = function (a) {KJUR.asn1.x509.OCSPNonce.superclass.constructor.call(this, a);this.params = undefined;this.getExtnValueHex = function () {this.asn1ExtnValue = new KJUR.asn1.DEROctetString(this.params);return this.asn1ExtnValue.getEncodedHex();};this.oid = "1.3.6.1.5.5.7.48.1.2";if (a != undefined) {this.params = a;}};extendClass(KJUR.asn1.x509.OCSPNonce, KJUR.asn1.x509.Extension);KJUR.asn1.x509.OCSPNoCheck = function (a) {KJUR.asn1.x509.OCSPNoCheck.superclass.constructor.call(this, a);this.params = undefined;this.getExtnValueHex = function () {this.asn1ExtnValue = new KJUR.asn1.DERNull();return this.asn1ExtnValue.getEncodedHex();};this.oid = "1.3.6.1.5.5.7.48.1.5";if (a != undefined) {this.params = a;}};extendClass(KJUR.asn1.x509.OCSPNoCheck, KJUR.asn1.x509.Extension);KJUR.asn1.x509.AdobeTimeStamp = function (g) {KJUR.asn1.x509.AdobeTimeStamp.superclass.constructor.call(this, g);var c = KJUR,b = c.asn1,f = b.DERInteger,d = b.DERBoolean,a = b.DERSequence,e = b.x509.GeneralName;this.params = null;this.getExtnValueHex = function () {var i = this.params;var h = [new f(1)];h.push(new e({ uri: i.uri }));if (i.reqauth != undefined) {h.push(new d(i.reqauth));}this.asn1ExtnValue = new a({ array: h });return this.asn1ExtnValue.getEncodedHex();};this.oid = "1.2.840.113583.1.1.9.1";if (g !== undefined) {this.setByParam(g);}};extendClass(KJUR.asn1.x509.AdobeTimeStamp, KJUR.asn1.x509.Extension);KJUR.asn1.x509.X500Name = function (f) {KJUR.asn1.x509.X500Name.superclass.constructor.call(this);this.asn1Array = [];this.paramArray = [];this.sRule = "utf8";var c = KJUR,b = c.asn1,e = b.x509,d = e.RDN,a = pemtohex;this.setByString = function (g, l) {if (l !== undefined) {this.sRule = l;}var k = g.split("/");k.shift();var j = [];for (var m = 0; m < k.length; m++) {if (k[m].match(/^[^=]+=.+$/)) {j.push(k[m]);} else {var h = j.length - 1;j[h] = j[h] + "/" + k[m];}}for (var m = 0; m < j.length; m++) {this.asn1Array.push(new d({ str: j[m], rule: this.sRule }));}};this.setByLdapString = function (g, h) {if (h !== undefined) {this.sRule = h;}var i = e.X500Name.ldapToCompat(g);this.setByString(i, h);};this.setByObject = function (j, i) {if (i !== undefined) {this.sRule = i;}for (var g in j) {if (j.hasOwnProperty(g)) {var h = new d({ str: g + "=" + j[g], rule: this.sRule });this.asn1Array ? this.asn1Array.push(h) : this.asn1Array = [h];}}};this.setByParam = function (h) {if (h.rule !== undefined) {this.sRule = h.rule;}if (h.array !== undefined) {this.paramArray = h.array;} else {if (h.str !== undefined) {this.setByString(h.str);} else {if (h.ldapstr !== undefined) {this.setByLdapString(h.ldapstr);} else {if (h.hex !== undefined) {this.hTLV = h.hex;} else {if (h.certissuer !== undefined) {var g = new X509();g.readCertPEM(h.certissuer);this.hTLV = g.getIssuerHex();} else {if (h.certsubject !== undefined) {var g = new X509();g.readCertPEM(h.certsubject);this.hTLV = g.getSubjectHex();} else {if (typeof h === "object" && h.certsubject === undefined && h.certissuer === undefined) {this.setByObject(h);}}}}}}}};this.getEncodedHex = function () {if (typeof this.hTLV == "string") {return this.hTLV;}if (this.asn1Array.length == 0 && this.paramArray.length > 0) {for (var g = 0; g < this.paramArray.length; g++) {var k = { array: this.paramArray[g] };if (this.sRule != "utf8") {k.rule = this.sRule;}var h = new d(k);this.asn1Array.push(h);}}var j = new b.DERSequence({ array: this.asn1Array });this.hTLV = j.getEncodedHex();return this.hTLV;};if (f !== undefined) {this.setByParam(f);}};extendClass(KJUR.asn1.x509.X500Name, KJUR.asn1.ASN1Object);KJUR.asn1.x509.X500Name.compatToLDAP = function (d) {if (d.substr(0, 1) !== "/") {throw "malformed input";}var b = "";d = d.substr(1);var c = d.split("/");c.reverse();c = c.map(function (a) {return a.replace(/,/, "\\,");});return c.join(",");};KJUR.asn1.x509.X500Name.onelineToLDAP = function (a) {return KJUR.asn1.x509.X500Name.compatToLDAP(a);};KJUR.asn1.x509.X500Name.ldapToCompat = function (g) {var c = g.split(",");var e = false;var b = [];for (var f = 0; c.length > 0; f++) {var h = c.shift();if (e === true) {var d = b.pop();var j = (d + "," + h).replace(/\\,/g, ",");b.push(j);e = false;} else {b.push(h);}if (h.substr(-1, 1) === "\\") {e = true;}}b = b.map(function (a) {return a.replace("/", "\\/");});b.reverse();return "/" + b.join("/");};KJUR.asn1.x509.X500Name.ldapToOneline = function (a) {return KJUR.asn1.x509.X500Name.ldapToCompat(a);};KJUR.asn1.x509.RDN = function (b) {KJUR.asn1.x509.RDN.superclass.constructor.call(this);this.asn1Array = [];this.paramArray = [];this.sRule = "utf8";var a = KJUR.asn1.x509.AttributeTypeAndValue;this.setByParam = function (c) {if (c.rule !== undefined) {this.sRule = c.rule;}if (c.str !== undefined) {this.addByMultiValuedString(c.str);}if (c.array !== undefined) {this.paramArray = c.array;}};this.addByString = function (c) {this.asn1Array.push(new KJUR.asn1.x509.AttributeTypeAndValue({ str: c, rule: this.sRule }));};this.addByMultiValuedString = function (e) {var c = KJUR.asn1.x509.RDN.parseString(e);for (var d = 0; d < c.length; d++) {this.addByString(c[d]);}};this.getEncodedHex = function () {if (this.asn1Array.length == 0 && this.paramArray.length > 0) {for (var d = 0; d < this.paramArray.length; d++) {var f = this.paramArray[d];if (f.rule !== undefined && this.sRule != "utf8") {f.rule = this.sRule;}var c = new a(f);this.asn1Array.push(c);}}var e = new KJUR.asn1.DERSet({ array: this.asn1Array });this.TLV = e.getEncodedHex();return this.TLV;};if (b !== undefined) {this.setByParam(b);}};extendClass(KJUR.asn1.x509.RDN, KJUR.asn1.ASN1Object);KJUR.asn1.x509.RDN.parseString = function (m) {var j = m.split(/\+/);var h = false;var c = [];for (var g = 0; j.length > 0; g++) {var k = j.shift();if (h === true) {var f = c.pop();var d = (f + "+" + k).replace(/\\\+/g, "+");c.push(d);h = false;} else {c.push(k);}if (k.substr(-1, 1) === "\\") {h = true;}}var l = false;var b = [];for (var g = 0; c.length > 0; g++) {var k = c.shift();if (l === true) {var e = b.pop();if (k.match(/"$/)) {var d = (e + "+" + k).replace(/^([^=]+)="(.*)"$/, "$1=$2");b.push(d);l = false;} else {b.push(e + "+" + k);}} else {b.push(k);}if (k.match(/^[^=]+="/)) {l = true;}}return b;};KJUR.asn1.x509.AttributeTypeAndValue = function (c) {KJUR.asn1.x509.AttributeTypeAndValue.superclass.constructor.call(this);this.sRule = "utf8";this.sType = null;this.sValue = null;this.dsType = null;var a = KJUR,g = a.asn1,d = g.DERSequence,l = g.DERUTF8String,i = g.DERPrintableString,h = g.DERTeletexString,b = g.DERIA5String,e = g.DERVisibleString,k = g.DERBMPString,f = a.lang.String.isMail,j = a.lang.String.isPrintable;this.setByParam = function (o) {if (o.rule !== undefined) {this.sRule = o.rule;}if (o.ds !== undefined) {this.dsType = o.ds;}if (o.value === undefined && o.str !== undefined) {var n = o.str;var m = n.match(/^([^=]+)=(.+)$/);if (m) {this.sType = m[1];this.sValue = m[2];} else {throw new Error("malformed attrTypeAndValueStr: " + attrTypeAndValueStr);}} else {this.sType = o.type;this.sValue = o.value;}};this.setByString = function (n, o) {if (o !== undefined) {this.sRule = o;}var m = n.match(/^([^=]+)=(.+)$/);if (m) {this.setByAttrTypeAndValueStr(m[1], m[2]);} else {throw new Error("malformed attrTypeAndValueStr: " + attrTypeAndValueStr);}};this._getDsType = function () {var o = this.sType;var n = this.sValue;var m = this.sRule;if (m === "prn") {if (o == "CN" && f(n)) {return "ia5";}if (j(n)) {return "prn";}return "utf8";} else {if (m === "utf8") {if (o == "CN" && f(n)) {return "ia5";}if (o == "C") {return "prn";}return "utf8";}}return "utf8";};this.setByAttrTypeAndValueStr = function (o, n, m) {if (m !== undefined) {this.sRule = m;}this.sType = o;this.sValue = n;};this.getValueObj = function (n, m) {if (n == "utf8") {return new l({ str: m });}if (n == "prn") {return new i({ str: m });}if (n == "tel") {return new h({ str: m });}if (n == "ia5") {return new b({ str: m });}if (n == "vis") {return new e({ str: m });}if (n == "bmp") {return new k({ str: m });}throw new Error("unsupported directory string type: type=" + n + " value=" + m);};this.getEncodedHex = function () {if (this.dsType == null) {this.dsType = this._getDsType();}var n = KJUR.asn1.x509.OID.atype2obj(this.sType);var m = this.getValueObj(this.dsType, this.sValue);var p = new d({ array: [n, m] });this.TLV = p.getEncodedHex();return this.TLV;};if (c !== undefined) {this.setByParam(c);}};extendClass(KJUR.asn1.x509.AttributeTypeAndValue, KJUR.asn1.ASN1Object);KJUR.asn1.x509.SubjectPublicKeyInfo = function (f) {KJUR.asn1.x509.SubjectPublicKeyInfo.superclass.constructor.call(this);var l = null,k = null,a = KJUR,j = a.asn1,i = j.DERInteger,b = j.DERBitString,m = j.DERObjectIdentifier,e = j.DERSequence,h = j.ASN1Util.newObject,d = j.x509,o = d.AlgorithmIdentifier,g = a.crypto,n = g.ECDSA,c = g.DSA;this.getASN1Object = function () {if (this.asn1AlgId == null || this.asn1SubjPKey == null) {throw "algId and/or subjPubKey not set";}var p = new e({ array: [this.asn1AlgId, this.asn1SubjPKey] });return p;};this.getEncodedHex = function () {var p = this.getASN1Object();this.hTLV = p.getEncodedHex();return this.hTLV;};this.setPubKey = function (q) {try {if (q instanceof RSAKey) {var u = h({ seq: [{ "int": { bigint: q.n } }, { "int": { "int": q.e } }] });var s = u.getEncodedHex();this.asn1AlgId = new o({ name: "rsaEncryption" });this.asn1SubjPKey = new b({ hex: "00" + s });}} catch (p) {}try {if (q instanceof KJUR.crypto.ECDSA) {var r = new m({ name: q.curveName });this.asn1AlgId = new o({ name: "ecPublicKey", asn1params: r });this.asn1SubjPKey = new b({ hex: "00" + q.pubKeyHex });}} catch (p) {}try {if (q instanceof KJUR.crypto.DSA) {var r = new h({ seq: [{ "int": { bigint: q.p } }, { "int": { bigint: q.q } }, { "int": { bigint: q.g } }] });this.asn1AlgId = new o({ name: "dsa", asn1params: r });var t = new i({ bigint: q.y });this.asn1SubjPKey = new b({ hex: "00" + t.getEncodedHex() });}} catch (p) {}};if (f !== undefined) {this.setPubKey(f);}};extendClass(KJUR.asn1.x509.SubjectPublicKeyInfo, KJUR.asn1.ASN1Object);KJUR.asn1.x509.Time = function (f) {KJUR.asn1.x509.Time.superclass.constructor.call(this);var e = null,a = null,d = KJUR,c = d.asn1,b = c.DERUTCTime,g = c.DERGeneralizedTime;this.setTimeParams = function (h) {this.timeParams = h;};this.getEncodedHex = function () {var h = null;if (this.timeParams != null) {if (this.type == "utc") {h = new b(this.timeParams);} else {h = new g(this.timeParams);}} else {if (this.type == "utc") {h = new b();} else {h = new g();}}this.TLV = h.getEncodedHex();return this.TLV;};this.type = "utc";if (f !== undefined) {if (f.type !== undefined) {this.type = f.type;} else {if (f.str !== undefined) {if (f.str.match(/^[0-9]{12}Z$/)) {this.type = "utc";}if (f.str.match(/^[0-9]{14}Z$/)) {this.type = "gen";}}}this.timeParams = f;}};extendClass(KJUR.asn1.x509.Time, KJUR.asn1.ASN1Object);KJUR.asn1.x509.AlgorithmIdentifier = function (e) {KJUR.asn1.x509.AlgorithmIdentifier.superclass.constructor.call(this);this.nameAlg = null;this.asn1Alg = null;this.asn1Params = null;this.paramEmpty = false;var b = KJUR,a = b.asn1,c = a.x509.AlgorithmIdentifier.PSSNAME2ASN1TLV;this.getEncodedHex = function () {if (this.nameAlg === null && this.asn1Alg === null) {throw new Error("algorithm not specified");}if (this.nameAlg !== null) {var f = null;for (var h in c) {if (h === this.nameAlg) {f = c[h];}}if (f !== null) {this.hTLV = f;return this.hTLV;}}if (this.nameAlg !== null && this.asn1Alg === null) {this.asn1Alg = a.x509.OID.name2obj(this.nameAlg);}var g = [this.asn1Alg];if (this.asn1Params !== null) {g.push(this.asn1Params);}var i = new a.DERSequence({ array: g });this.hTLV = i.getEncodedHex();return this.hTLV;};if (e !== undefined) {if (e.name !== undefined) {this.nameAlg = e.name;}if (e.asn1params !== undefined) {this.asn1Params = e.asn1params;}if (e.paramempty !== undefined) {this.paramEmpty = e.paramempty;}}if (this.asn1Params === null && this.paramEmpty === false && this.nameAlg !== null) {if (this.nameAlg.name !== undefined) {this.nameAlg = this.nameAlg.name;}var d = this.nameAlg.toLowerCase();if (d.substr(-7, 7) !== "withdsa" && d.substr(-9, 9) !== "withecdsa") {this.asn1Params = new a.DERNull();}}};extendClass(KJUR.asn1.x509.AlgorithmIdentifier, KJUR.asn1.ASN1Object);KJUR.asn1.x509.AlgorithmIdentifier.PSSNAME2ASN1TLV = { SHAwithRSAandMGF1: "300d06092a864886f70d01010a3000", SHA256withRSAandMGF1: "303d06092a864886f70d01010a3030a00d300b0609608648016503040201a11a301806092a864886f70d010108300b0609608648016503040201a203020120", SHA384withRSAandMGF1: "303d06092a864886f70d01010a3030a00d300b0609608648016503040202a11a301806092a864886f70d010108300b0609608648016503040202a203020130", SHA512withRSAandMGF1: "303d06092a864886f70d01010a3030a00d300b0609608648016503040203a11a301806092a864886f70d010108300b0609608648016503040203a203020140" };KJUR.asn1.x509.GeneralName = function (e) {KJUR.asn1.x509.GeneralName.superclass.constructor.call(this);var m = null,i = null,k = { rfc822: "81", dns: "82", dn: "a4", uri: "86", ip: "87" },b = KJUR,g = b.asn1,f = g.DERSequence,j = g.DEROctetString,d = g.DERIA5String,c = g.DERTaggedObject,l = g.ASN1Object,a = g.x509.X500Name,h = pemtohex;this.explicit = false;this.setByParam = function (p) {var r = null;var u = null;if (p === undefined) {return;}if (p.rfc822 !== undefined) {this.type = "rfc822";u = new d({ str: p[this.type] });}if (p.dns !== undefined) {this.type = "dns";u = new d({ str: p[this.type] });}if (p.uri !== undefined) {this.type = "uri";u = new d({ str: p[this.type] });}if (p.dn !== undefined) {this.type = "dn";this.explicit = true;if (typeof p.dn === "string") {u = new a({ str: p.dn });} else {if (p.dn instanceof KJUR.asn1.x509.X500Name) {u = p.dn;} else {u = new a(p.dn);}}}if (p.ldapdn !== undefined) {this.type = "dn";this.explicit = true;u = new a({ ldapstr: p.ldapdn });}if (p.certissuer !== undefined) {this.type = "dn";this.explicit = true;var o = p.certissuer;var w = null;if (o.match(/^[0-9A-Fa-f]+$/)) {w == o;}if (o.indexOf("-----BEGIN ") != -1) {w = h(o);}if (w == null) {throw "certissuer param not cert";}var t = new X509();t.hex = w;var y = t.getIssuerHex();u = new l();u.hTLV = y;}if (p.certsubj !== undefined) {this.type = "dn";this.explicit = true;var o = p.certsubj;var w = null;if (o.match(/^[0-9A-Fa-f]+$/)) {w == o;}if (o.indexOf("-----BEGIN ") != -1) {w = h(o);}if (w == null) {throw "certsubj param not cert";}var t = new X509();t.hex = w;var y = t.getSubjectHex();u = new l();u.hTLV = y;}if (p.ip !== undefined) {this.type = "ip";this.explicit = false;var q = p.ip;var s;var n = "malformed IP address";if (q.match(/^[0-9.]+[.][0-9.]+$/)) {s = intarystrtohex("[" + q.split(".").join(",") + "]");if (s.length !== 8) {throw n;}} else {if (q.match(/^[0-9A-Fa-f:]+:[0-9A-Fa-f:]+$/)) {s = ipv6tohex(q);} else {if (q.match(/^([0-9A-Fa-f][0-9A-Fa-f]){1,}$/)) {s = q;} else {throw n;}}}u = new j({ hex: s });}if (this.type == null) {throw "unsupported type in params=" + p;}this.asn1Obj = new c({ explicit: this.explicit, tag: k[this.type], obj: u });};this.getEncodedHex = function () {return this.asn1Obj.getEncodedHex();};if (e !== undefined) {this.setByParam(e);}};extendClass(KJUR.asn1.x509.GeneralName, KJUR.asn1.ASN1Object);KJUR.asn1.x509.GeneralNames = function (d) {KJUR.asn1.x509.GeneralNames.superclass.constructor.call(this);var a = null,c = KJUR,b = c.asn1;this.setByParamArray = function (g) {for (var e = 0; e < g.length; e++) {var f = new b.x509.GeneralName(g[e]);this.asn1Array.push(f);}};this.getEncodedHex = function () {var e = new b.DERSequence({ array: this.asn1Array });return e.getEncodedHex();};this.asn1Array = new Array();if (typeof d != "undefined") {this.setByParamArray(d);}};extendClass(KJUR.asn1.x509.GeneralNames, KJUR.asn1.ASN1Object);KJUR.asn1.x509.OID = new function (a) {this.atype2oidList = { CN: "2.5.4.3", L: "2.5.4.7", ST: "2.5.4.8", O: "2.5.4.10", OU: "2.5.4.11", C: "2.5.4.6", STREET: "2.5.4.9", DC: "0.9.2342.19200300.100.1.25", UID: "0.9.2342.19200300.100.1.1", SN: "2.5.4.4", T: "2.5.4.12", DN: "2.5.4.49", E: "1.2.840.113549.1.9.1", description: "2.5.4.13", businessCategory: "2.5.4.15", postalCode: "2.5.4.17", serialNumber: "2.5.4.5", uniqueIdentifier: "2.5.4.45", organizationIdentifier: "2.5.4.97", jurisdictionOfIncorporationL: "1.3.6.1.4.1.311.60.2.1.1", jurisdictionOfIncorporationSP: "1.3.6.1.4.1.311.60.2.1.2", jurisdictionOfIncorporationC: "1.3.6.1.4.1.311.60.2.1.3" };this.name2oidList = { sha1: "1.3.14.3.2.26", sha256: "2.16.840.1.101.3.4.2.1", sha384: "2.16.840.1.101.3.4.2.2", sha512: "2.16.840.1.101.3.4.2.3", sha224: "2.16.840.1.101.3.4.2.4", md5: "1.2.840.113549.2.5", md2: "1.3.14.7.2.2.1", ripemd160: "1.3.36.3.2.1", MD2withRSA: "1.2.840.113549.1.1.2", MD4withRSA: "1.2.840.113549.1.1.3", MD5withRSA: "1.2.840.113549.1.1.4", SHA1withRSA: "1.2.840.113549.1.1.5", "pkcs1-MGF": "1.2.840.113549.1.1.8", rsaPSS: "1.2.840.113549.1.1.10", SHA224withRSA: "1.2.840.113549.1.1.14", SHA256withRSA: "1.2.840.113549.1.1.11", SHA384withRSA: "1.2.840.113549.1.1.12", SHA512withRSA: "1.2.840.113549.1.1.13", SHA1withECDSA: "1.2.840.10045.4.1", SHA224withECDSA: "1.2.840.10045.4.3.1", SHA256withECDSA: "1.2.840.10045.4.3.2", SHA384withECDSA: "1.2.840.10045.4.3.3", SHA512withECDSA: "1.2.840.10045.4.3.4", dsa: "1.2.840.10040.4.1", SHA1withDSA: "1.2.840.10040.4.3", SHA224withDSA: "2.16.840.1.101.3.4.3.1", SHA256withDSA: "2.16.840.1.101.3.4.3.2", rsaEncryption: "1.2.840.113549.1.1.1", commonName: "2.5.4.3", countryName: "2.5.4.6", localityName: "2.5.4.7", stateOrProvinceName: "2.5.4.8", streetAddress: "2.5.4.9", organizationName: "2.5.4.10", organizationalUnitName: "2.5.4.11", domainComponent: "0.9.2342.19200300.100.1.25", userId: "0.9.2342.19200300.100.1.1", surname: "2.5.4.4", givenName: "2.5.4.42", title: "2.5.4.12", distinguishedName: "2.5.4.49", emailAddress: "1.2.840.113549.1.9.1", description: "2.5.4.13", businessCategory: "2.5.4.15", postalCode: "2.5.4.17", uniqueIdentifier: "2.5.4.45", organizationIdentifier: "2.5.4.97", jurisdictionOfIncorporationL: "1.3.6.1.4.1.311.60.2.1.1", jurisdictionOfIncorporationSP: "1.3.6.1.4.1.311.60.2.1.2", jurisdictionOfIncorporationC: "1.3.6.1.4.1.311.60.2.1.3", subjectDirectoryAttributes: "2.5.29.9", subjectKeyIdentifier: "2.5.29.14", keyUsage: "2.5.29.15", subjectAltName: "2.5.29.17", issuerAltName: "2.5.29.18", basicConstraints: "2.5.29.19", cRLNumber: "2.5.29.20", cRLReason: "2.5.29.21", nameConstraints: "2.5.29.30", cRLDistributionPoints: "2.5.29.31", certificatePolicies: "2.5.29.32", anyPolicy: "2.5.29.32.0", authorityKeyIdentifier: "2.5.29.35", policyConstraints: "2.5.29.36", extKeyUsage: "2.5.29.37", authorityInfoAccess: "1.3.6.1.5.5.7.1.1", ocsp: "1.3.6.1.5.5.7.48.1", ocspBasic: "1.3.6.1.5.5.7.48.1.1", ocspNonce: "1.3.6.1.5.5.7.48.1.2", ocspNoCheck: "1.3.6.1.5.5.7.48.1.5", caIssuers: "1.3.6.1.5.5.7.48.2", anyExtendedKeyUsage: "2.5.29.37.0", serverAuth: "1.3.6.1.5.5.7.3.1", clientAuth: "1.3.6.1.5.5.7.3.2", codeSigning: "1.3.6.1.5.5.7.3.3", emailProtection: "1.3.6.1.5.5.7.3.4", timeStamping: "1.3.6.1.5.5.7.3.8", ocspSigning: "1.3.6.1.5.5.7.3.9", dateOfBirth: "1.3.6.1.5.5.7.9.1", placeOfBirth: "1.3.6.1.5.5.7.9.2", gender: "1.3.6.1.5.5.7.9.3", countryOfCitizenship: "1.3.6.1.5.5.7.9.4", countryOfResidence: "1.3.6.1.5.5.7.9.5", ecPublicKey: "1.2.840.10045.2.1", "P-256": "1.2.840.10045.3.1.7", secp256r1: "1.2.840.10045.3.1.7", secp256k1: "1.3.132.0.10", secp384r1: "1.3.132.0.34", pkcs5PBES2: "1.2.840.113549.1.5.13", pkcs5PBKDF2: "1.2.840.113549.1.5.12", "des-EDE3-CBC": "1.2.840.113549.3.7", data: "1.2.840.113549.1.7.1", "signed-data": "1.2.840.113549.1.7.2", "enveloped-data": "1.2.840.113549.1.7.3", "digested-data": "1.2.840.113549.1.7.5", "encrypted-data": "1.2.840.113549.1.7.6", "authenticated-data": "1.2.840.113549.1.9.16.1.2", tstinfo: "1.2.840.113549.1.9.16.1.4", signingCertificate: "1.2.840.113549.1.9.16.2.12", timeStampToken: "1.2.840.113549.1.9.16.2.14", signaturePolicyIdentifier: "1.2.840.113549.1.9.16.2.15", etsArchiveTimeStamp: "1.2.840.113549.1.9.16.2.27", signingCertificateV2: "1.2.840.113549.1.9.16.2.47", etsArchiveTimeStampV2: "1.2.840.113549.1.9.16.2.48", extensionRequest: "1.2.840.113549.1.9.14", contentType: "1.2.840.113549.1.9.3", messageDigest: "1.2.840.113549.1.9.4", signingTime: "1.2.840.113549.1.9.5", counterSignature: "1.2.840.113549.1.9.6", archiveTimeStampV3: "0.4.0.1733.2.4", pdfRevocationInfoArchival: "1.2.840.113583.1.1.8", adobeTimeStamp: "1.2.840.113583.1.1.9.1" };this.objCache = {};this.name2obj = function (b) {if (typeof this.objCache[b] != "undefined") {return this.objCache[b];}if (typeof this.name2oidList[b] == "undefined") {throw "Name of ObjectIdentifier not defined: " + b;}var c = this.name2oidList[b];var d = new KJUR.asn1.DERObjectIdentifier({ oid: c });this.objCache[b] = d;return d;};this.atype2obj = function (b) {if (this.objCache[b] !== undefined) {return this.objCache[b];}var c;if (b.match(/^\d+\.\d+\.[0-9.]+$/)) {c = b;} else {if (this.atype2oidList[b] !== undefined) {c = this.atype2oidList[b];} else {if (this.name2oidList[b] !== undefined) {c = this.name2oidList[b];} else {throw "AttributeType name undefined: " + b;}}}var d = new KJUR.asn1.DERObjectIdentifier({ oid: c });this.objCache[b] = d;return d;};}();KJUR.asn1.x509.OID.oid2name = function (b) {var c = KJUR.asn1.x509.OID.name2oidList;for (var a in c) {if (c[a] == b) {return a;}}return "";};KJUR.asn1.x509.OID.oid2atype = function (b) {var c = KJUR.asn1.x509.OID.atype2oidList;for (var a in c) {if (c[a] == b) {return a;}}return b;};KJUR.asn1.x509.OID.name2oid = function (a) {if (a.match(/^[0-9.]+$/)) {return a;}var b = KJUR.asn1.x509.OID.name2oidList;if (b[a] === undefined) {return "";}return b[a];};KJUR.asn1.x509.X509Util = {};KJUR.asn1.x509.X509Util.newCertPEM = function (e) {var d = KJUR.asn1.x509,b = d.TBSCertificate,a = d.Certificate;var c = new a(e);return c.getPEM();};
if (typeof KJUR == "undefined" || !KJUR) {KJUR = {};}if (typeof KJUR.asn1 == "undefined" || !KJUR.asn1) {KJUR.asn1 = {};}if (typeof KJUR.asn1.cms == "undefined" || !KJUR.asn1.cms) {KJUR.asn1.cms = {};}KJUR.asn1.cms.Attribute = function (f) {var e = Error,d = KJUR,c = d.asn1,b = c.DERSequence,a = c.DERSet,g = c.DERObjectIdentifier;this.params = null;this.typeOid = null;this.setByParam = function (h) {this.params = h;};this.getValueArray = function () {throw new e("not yet implemented abstract");};this.getEncodedHex = function () {var j = new g({ oid: this.typeOid });var h = new a({ array: this.getValueArray() });var i = new b({ array: [j, h] });return i.getEncodedHex();};};extendClass(KJUR.asn1.cms.Attribute, KJUR.asn1.ASN1Object);KJUR.asn1.cms.ContentType = function (c) {var b = KJUR,a = b.asn1;a.cms.ContentType.superclass.constructor.call(this);this.typeOid = "1.2.840.113549.1.9.3";this.getValueArray = function () {var d = new a.DERObjectIdentifier(this.params.type);return [d];};if (c != undefined) {this.setByParam(c);}};extendClass(KJUR.asn1.cms.ContentType, KJUR.asn1.cms.Attribute);KJUR.asn1.cms.MessageDigest = function (e) {var b = KJUR,a = b.asn1,c = a.DEROctetString,d = a.cms;d.MessageDigest.superclass.constructor.call(this);this.typeOid = "1.2.840.113549.1.9.4";this.getValueArray = function () {var f = new c(this.params);return [f];};if (e != undefined) {this.setByParam(e);}};extendClass(KJUR.asn1.cms.MessageDigest, KJUR.asn1.cms.Attribute);KJUR.asn1.cms.SigningTime = function (c) {var b = KJUR,a = b.asn1;a.cms.SigningTime.superclass.constructor.call(this);this.typeOid = "1.2.840.113549.1.9.5";this.getValueArray = function () {var d = new a.x509.Time(this.params);return [d];};if (c != undefined) {this.setByParam(c);}};extendClass(KJUR.asn1.cms.SigningTime, KJUR.asn1.cms.Attribute);KJUR.asn1.cms.SigningCertificate = function (h) {var e = Error,d = KJUR,c = d.asn1,b = c.DERSequence,g = c.cms,a = g.ESSCertID,f = d.crypto;g.SigningCertificate.superclass.constructor.call(this);this.typeOid = "1.2.840.113549.1.9.16.2.12";this.getValueArray = function () {if (this.params == null || this.params == undefined || this.params.array == undefined) {throw new e("parameter 'array' not specified");}var o = this.params.array;var k = [];for (var l = 0; l < o.length; l++) {var n = o[l];if (h.hasis == false && typeof n == "string" && (n.indexOf("-----BEGIN") != -1 || ASN1HEX.isASN1HEX(n))) {n = { cert: n };}if (n.hasis != false && h.hasis == false) {n.hasis = false;}k.push(new a(n));}var j = new b({ array: k });var m = new b({ array: [j] });return [m];};if (h != undefined) {this.setByParam(h);}};extendClass(KJUR.asn1.cms.SigningCertificate, KJUR.asn1.cms.Attribute);KJUR.asn1.cms.ESSCertID = function (g) {KJUR.asn1.cms.ESSCertID.superclass.constructor.call(this);var d = Error,c = KJUR,b = c.asn1,f = b.DEROctetString,a = b.DERSequence,e = b.cms.IssuerSerial;this.params = null;this.getCertHash = function (k, h) {if (k.hash != undefined) {return k.hash;}if (typeof k == "string" && k.indexOf("-----BEGIN") == -1 && !ASN1HEX.isASN1HEX(k)) {return k;}var i;if (typeof k == "string") {i = k;} else {if (k.cert != undefined) {i = k.cert;} else {throw new d("hash nor cert unspecified");}}var j;if (i.indexOf("-----BEGIN") != -1) {j = pemtohex(i);} else {j = i;}if (typeof k == "string") {if (k.indexOf("-----BEGIN") != -1) {j = pemtohex(k);} else {if (ASN1HEX.isASN1HEX(k)) {j = k;}}}var l;if (k.alg != undefined) {l = k.alg;} else {if (h != undefined) {l = h;} else {throw new d("hash alg unspecified");}}return c.crypto.Util.hashHex(j, l);};this.getEncodedHex = function () {var k = this.params;var j = this.getCertHash(k, "sha1");var h = [];h.push(new f({ hex: j }));if (typeof k == "string" && k.indexOf("-----BEGIN") != -1 || k.cert != undefined && k.hasis != false || k.issuer != undefined && k.serial != undefined) {h.push(new e(k));}var i = new a({ array: h });return i.getEncodedHex();};if (g != undefined) {this.setByParam(g);}};extendClass(KJUR.asn1.cms.ESSCertID, KJUR.asn1.ASN1Object);KJUR.asn1.cms.SigningCertificateV2 = function (d) {var h = Error,a = KJUR,g = a.asn1,e = g.DERSequence,b = g.x509,i = g.cms,c = i.ESSCertIDv2,f = a.crypto;i.SigningCertificateV2.superclass.constructor.call(this);this.typeOid = "1.2.840.113549.1.9.16.2.47";this.getValueArray = function () {if (this.params == null || this.params == undefined || this.params.array == undefined) {throw new h("parameter 'array' not specified");}var o = this.params.array;var l = [];for (var m = 0; m < o.length; m++) {var n = o[m];if ((d.alg != undefined || d.hasis == false) && typeof n == "string" && (n.indexOf("-----BEGIN") != -1 || ASN1HEX.isASN1HEX(n))) {n = { cert: n };}if (n.alg == undefined && d.alg != undefined) {n.alg = d.alg;}if (n.hasis != false && d.hasis == false) {n.hasis = false;}l.push(new c(n));}var k = new e({ array: l });var j = new e({ array: [k] });return [j];};if (d != undefined) {this.setByParam(d);}};extendClass(KJUR.asn1.cms.SigningCertificateV2, KJUR.asn1.cms.Attribute);KJUR.asn1.cms.ESSCertIDv2 = function (h) {KJUR.asn1.cms.ESSCertIDv2.superclass.constructor.call(this);var d = Error,c = KJUR,b = c.asn1,f = b.DEROctetString,a = b.DERSequence,e = b.cms.IssuerSerial,g = b.x509.AlgorithmIdentifier;this.params = null;this.getEncodedHex = function () {var l = this.params;var k = this.getCertHash(l, "sha256");var i = [];if (l.alg != undefined && l.alg != "sha256") {i.push(new g({ name: l.alg }));}i.push(new f({ hex: k }));if (typeof l == "string" && l.indexOf("-----BEGIN") != -1 || l.cert != undefined && l.hasis != false || l.issuer != undefined && l.serial != undefined) {i.push(new e(l));}var j = new a({ array: i });return j.getEncodedHex();};if (h != undefined) {this.setByParam(h);}};extendClass(KJUR.asn1.cms.ESSCertIDv2, KJUR.asn1.cms.ESSCertID);KJUR.asn1.cms.IssuerSerial = function (e) {var i = Error,c = KJUR,h = c.asn1,g = h.DERInteger,f = h.DERSequence,j = h.cms,d = h.x509,a = d.GeneralNames,b = X509;j.IssuerSerial.superclass.constructor.call(this);this.setByParam = function (k) {this.params = k;};this.getEncodedHex = function () {var p = this.params;var l, r;if (typeof p == "string" && p.indexOf("-----BEGIN") != -1 || p.cert != undefined) {var n;if (p.cert != undefined) {n = p.cert;} else {n = p;}var k = new b();k.readCertPEM(n);l = k.getIssuer();r = { hex: k.getSerialNumberHex() };} else {if (p.issuer != undefined && p.serial) {l = p.issuer;r = p.serial;} else {throw new i("cert or issuer and serial parameter not specified");}}var q = new a([{ dn: l }]);var o = new g(r);var m = new f({ array: [q, o] });return m.getEncodedHex();};if (e != undefined) {this.setByParam(e);}};extendClass(KJUR.asn1.cms.IssuerSerial, KJUR.asn1.ASN1Object);KJUR.asn1.cms.SignerIdentifier = function (f) {var c = KJUR,i = c.asn1,h = i.DERInteger,g = i.DERSequence,l = i.cms,k = l.IssuerAndSerialNumber,d = l.SubjectKeyIdentifier,e = i.x509,a = e.X500Name,b = X509,j = Error;l.SignerIdentifier.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var o = this.params;if (o.type == "isssn") {var m = new k(o);return m.getEncodedHex();} else {if (o.type == "skid") {var n = new d(o);return n.getEncodedHex();} else {throw new Error("wrong property for isssn or skid");}}};if (f != undefined) {this.setByParam(f);}};extendClass(KJUR.asn1.cms.SignerIdentifier, KJUR.asn1.ASN1Object);KJUR.asn1.cms.IssuerAndSerialNumber = function (e) {var c = KJUR,h = c.asn1,g = h.DERInteger,f = h.DERSequence,j = h.cms,d = h.x509,a = d.X500Name,b = X509,i = Error;j.IssuerAndSerialNumber.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var p = this.params;var l, r;if (typeof p == "string" && p.indexOf("-----BEGIN") != -1 || p.cert != undefined) {var n;if (p.cert != undefined) {n = p.cert;} else {n = p;}var k = new b();k.readCertPEM(n);l = k.getIssuer();r = { hex: k.getSerialNumberHex() };} else {if (p.issuer != undefined && p.serial) {l = p.issuer;r = p.serial;} else {throw new i("cert or issuer and serial parameter not specified");}}var q = new a(l);var o = new g(r);var m = new f({ array: [q, o] });return m.getEncodedHex();};this.setByParam = function (k) {this.params = k;};if (e != undefined) {this.setByParam(e);}};extendClass(KJUR.asn1.cms.IssuerAndSerialNumber, KJUR.asn1.ASN1Object);KJUR.asn1.cms.SubjectKeyIdentifier = function (g) {var d = KJUR,k = d.asn1,i = k.DERInteger,h = k.DERSequence,j = k.ASN1Util.newObject,m = k.cms,f = m.IssuerAndSerialName,c = m.SubjectKeyIdentifier,e = k.x509,a = e.X500Name,b = X509,l = Error;m.SubjectKeyIdentifier.superclass.constructor.call(this);this.getEncodedHex = function () {var r = this.params;if (r.cert == undefined && r.skid == undefined) {throw new l("property cert nor skid undefined");}var q;if (r.cert != undefined) {var n = new b(r.cert);var o = n.getExtSubjectKeyIdentifier();q = o.kid.hex;} else {if (r.skid != undefined) {q = r.skid;}}var p = j({ tag: { tage: "a0", obj: { octstr: { hex: q } } } });return p.getEncodedHex();};if (g != undefined) {this.setByParam(g);}};extendClass(KJUR.asn1.cms.SubjectKeyIdentifier, KJUR.asn1.ASN1Object);KJUR.asn1.cms.AttributeList = function (f) {var d = Error,c = KJUR,b = c.asn1,a = b.DERSet,e = b.cms;e.AttributeList.superclass.constructor.call(this);this.params = null;this.hTLV = null;this.setByParam = function (g) {this.params = g;};this.getEncodedHex = function () {var o = this.params;if (this.hTLV != null) {return this.hTLV;}var m = true;if (o.sortflag != undefined) {m = o.sortflag;}var j = o.array;var g = [];for (var l = 0; l < j.length; l++) {var n = j[l];var k = n.attr;if (k == "contentType") {g.push(new e.ContentType(n));} else {if (k == "messageDigest") {g.push(new e.MessageDigest(n));} else {if (k == "signingTime") {g.push(new e.SigningTime(n));} else {if (k == "signingCertificate") {g.push(new e.SigningCertificate(n));} else {if (k == "signingCertificateV2") {g.push(new e.SigningCertificateV2(n));} else {if (k == "signaturePolicyIdentifier") {g.push(new KJUR.asn1.cades.SignaturePolicyIdentifier(n));} else {if (k == "signatureTimeStamp" || k == "timeStampToken") {g.push(new KJUR.asn1.cades.SignatureTimeStamp(n));} else {throw new d("unknown attr: " + k);}}}}}}}}var h = new a({ array: g, sortflag: m });this.hTLV = h.getEncodedHex();return this.hTLV;};if (f != undefined) {this.setByParam(f);}};extendClass(KJUR.asn1.cms.AttributeList, KJUR.asn1.ASN1Object);KJUR.asn1.cms.SignerInfo = function (q) {var n = Error,r = KJUR,i = r.asn1,c = i.DERInteger,f = i.DEROctetString,h = i.DERSequence,m = i.DERTaggedObject,k = i.cms,p = k.SignerIdentifier,l = k.AttributeList,g = k.ContentType,e = k.EncapsulatedContentInfo,d = k.MessageDigest,j = k.SignedData,a = i.x509,s = a.AlgorithmIdentifier,b = r.crypto,o = KEYUTIL;k.SignerInfo.superclass.constructor.call(this);this.params = null;this.sign = function () {var y = this.params;var x = y.sigalg;var u = new l(y.sattrs).getEncodedHex();var v = o.getKey(y.signkey);var w = new b.Signature({ alg: x });w.init(v);w.updateHex(u);var t = w.sign();y.sighex = t;};this.getEncodedHex = function () {var w = this.params;var t = [];t.push(new c({ "int": w.version }));t.push(new p(w.id));t.push(new s({ name: w.hashalg }));if (w.sattrs != undefined) {var x = new l(w.sattrs);try {t.push(new m({ tag: "a0", explicit: false, obj: x }));} catch (v) {throw new n("si sattr error: " + v);}}if (w.sigalgfield != undefined) {t.push(new s({ name: w.sigalgfield }));} else {t.push(new s({ name: w.sigalg }));}if (w.sighex == undefined && w.signkey != undefined) {this.sign();}t.push(new f({ hex: w.sighex }));if (w.uattrs != undefined) {var x = new l(w.uattrs);try {t.push(new m({ tag: "a1", explicit: false, obj: x }));} catch (v) {throw new n("si uattr error: " + v);}}var u = new h({ array: t });return u.getEncodedHex();};if (q != undefined) {this.setByParam(q);}};extendClass(KJUR.asn1.cms.SignerInfo, KJUR.asn1.ASN1Object);KJUR.asn1.cms.EncapsulatedContentInfo = function (g) {var c = KJUR,b = c.asn1,e = b.DERTaggedObject,a = b.DERSequence,h = b.DERObjectIdentifier,d = b.DEROctetString,f = b.cms;f.EncapsulatedContentInfo.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var m = this.params;var i = [];i.push(new h(m.type));if (m.content != undefined && (m.content.hex != undefined || m.content.str != undefined) && m.isDetached != true) {var k = new d(m.content);var l = new e({ tag: "a0", explicit: true, obj: k });i.push(l);}var j = new a({ array: i });return j.getEncodedHex();};this.setByParam = function (i) {this.params = i;};if (g != undefined) {this.setByParam(g);}};extendClass(KJUR.asn1.cms.EncapsulatedContentInfo, KJUR.asn1.ASN1Object);KJUR.asn1.cms.ContentInfo = function (g) {var c = KJUR,b = c.asn1,d = b.DERTaggedObject,a = b.DERSequence,h = b.DERObjectIdentifier,f = b.x509,e = f.OID.name2obj;KJUR.asn1.cms.ContentInfo.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var l = this.params;var i = [];i.push(new h(l.type));var k = new d({ tag: "a0", explicit: true, obj: l.obj });i.push(k);var j = new a({ array: i });return j.getEncodedHex();};this.setByParam = function (i) {this.params = i;};if (g != undefined) {this.setByParam(g);}};extendClass(KJUR.asn1.cms.ContentInfo, KJUR.asn1.ASN1Object);KJUR.asn1.cms.SignedData = function (e) {var j = Error,a = KJUR,h = a.asn1,m = h.ASN1Object,g = h.DERInteger,p = h.DERSet,f = h.DERSequence,b = h.DERTaggedObject,o = h.cms,l = o.EncapsulatedContentInfo,d = o.SignerInfo,q = o.ContentInfo,k = o.CertificateSet,i = o.RevocationInfoChoices,c = h.x509,n = c.AlgorithmIdentifier;KJUR.asn1.cms.SignedData.superclass.constructor.call(this);this.params = null;this.checkAndFixParam = function () {var r = this.params;this._setDigestAlgs(r);this._setContentTypeByEContent(r);this._setMessageDigestByEContent(r);this._setSignerInfoVersion(r);this._setSignedDataVersion(r);};this._setDigestAlgs = function (v) {var u = {};var t = v.sinfos;for (var r = 0; r < t.length; r++) {var s = t[r];u[s.hashalg] = 1;}v.hashalgs = Object.keys(u).sort();};this._setContentTypeByEContent = function (w) {var u = w.econtent.type;var v = w.sinfos;for (var r = 0; r < v.length; r++) {var t = v[r];var s = this._getAttrParamByName(t, "contentType");s.type = u;}};this._setMessageDigestByEContent = function (r) {var v = r.econtent;var y = r.econtent.type;var x = v.content.hex;if (x == undefined && v.type == "data" && v.content.str != undefined) {x = rstrtohex(v.content.str);}var A = r.sinfos;for (var u = 0; u < A.length; u++) {var t = A[u];var s = t.hashalg;var z = this._getAttrParamByName(t, "messageDigest");var w = KJUR.crypto.Util.hashHex(x, s);z.hex = w;}};this._getAttrParamByName = function (t, s) {var u = t.sattrs.array;for (var r = 0; r < u.length; r++) {if (u[r].attr == s) {return u[r];}}};this._setSignerInfoVersion = function (v) {var t = v.sinfos;for (var r = 0; r < t.length; r++) {var s = t[r];var u = 1;if (s.id.type == "skid") {u = 3;}s.version = u;}};this._setSignedDataVersion = function (s) {var r = this._getSignedDataVersion(s);s.version = r;};this._getSignedDataVersion = function (w) {if (w.revinfos != undefined) {var r = w.revinfos;for (var t = 0; t < r.length; t++) {var s = r[t];if (s.ocsp != undefined) {return 5;}}}var v = w.sinfos;for (var t = 0; t < v.length; t++) {var u = w.sinfos[t];if (u.version == 3) {return 3;}}if (w.econtent.type != "data") {return 3;}return 1;};this.getEncodedHex = function () {var y = this.params;if (this.getEncodedHexPrepare != undefined) {this.getEncodedHexPrepare();}if (y.fixed != true) {this.checkAndFixParam();}var r = [];r.push(new g({ "int": y.version }));var w = [];for (var v = 0; v < y.hashalgs.length; v++) {var t = y.hashalgs[v];w.push(new n({ name: t }));}r.push(new p({ array: w }));r.push(new l(y.econtent));if (y.certs != undefined) {r.push(new k(y.certs));}if (y.revinfos != undefined) {r.push(new i(y.revinfos));}var u = [];for (var v = 0; v < y.sinfos.length; v++) {var x = y.sinfos[v];u.push(new d(x));}r.push(new p({ array: u }));var s = new f({ array: r });return s.getEncodedHex();};this.getContentInfo = function () {var r = new q({ type: "signed-data", obj: this });return r;};this.getContentInfoEncodedHex = function () {return this.getContentInfo().getEncodedHex();};if (e != undefined) {this.setByParam(e);}};extendClass(KJUR.asn1.cms.SignedData, KJUR.asn1.ASN1Object);KJUR.asn1.cms.CertificateSet = function (f) {KJUR.asn1.cms.CertificateSet.superclass.constructor.call(this);var c = Error,b = KJUR.asn1,e = b.DERTaggedObject,a = b.DERSet,d = b.ASN1Object;this.params = null;this.getEncodedHex = function () {var j = this.params;var p = [];var q;if (j instanceof Array) {q = j;} else {if (j.array != undefined) {q = j.array;} else {throw new c("cert array not specified");}}for (var k = 0; k < q.length; k++) {var l = q[k];var n = pemtohex(l);var g = new d();g.hTLV = n;p.push(g);}var m = { array: p };if (j.sortflag == false) {m.sortflag = false;}var o = new a(m);var h = new e({ tag: "a0", explicit: false, obj: o });return h.getEncodedHex();};if (f != undefined) {this.setByParam(f);}};extendClass(KJUR.asn1.cms.CertificateSet, KJUR.asn1.ASN1Object);KJUR.asn1.cms.RevocationInfoChoices = function (a) {KJUR.asn1.cms.RevocationInfoChoices.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var e = this.params;if (!e instanceof Array) {throw new Error("params is not array");}var b = [];for (var c = 0; c < e.length; c++) {b.push(new KJUR.asn1.cms.RevocationInfoChoice(e[c]));}var d = KJUR.asn1.ASN1Util.newObject({ tag: { tagi: "a1", obj: { set: b } } });return d.getEncodedHex();};if (a != undefined) {this.setByParam(a);}};extendClass(KJUR.asn1.cms.RevocationInfoChoices, KJUR.asn1.ASN1Object);KJUR.asn1.cms.RevocationInfoChoice = function (a) {KJUR.asn1.cms.RevocationInfoChoice.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var d = this.params;if (d.crl != undefined && typeof d.crl == "string") {var b = d.crl;if (d.crl.indexOf("-----BEGIN") != -1) {b = pemtohex(d.crl);}return b;} else {if (d.ocsp != undefined) {var c = KJUR.asn1.ASN1Util.newObject({ tag: { tagi: "a1", obj: new KJUR.asn1.cms.OtherRevocationFormat(d) } });return c.getEncodedHex();} else {throw new Error("property crl or ocsp undefined");}}};if (a != undefined) {this.setByParam(a);}};extendClass(KJUR.asn1.cms.RevocationInfoChoice, KJUR.asn1.ASN1Object);KJUR.asn1.cms.OtherRevocationFormat = function (f) {KJUR.asn1.cms.OtherRevocationFormat.superclass.constructor.call(this);var d = Error,c = KJUR,b = c.asn1,a = b.ASN1Util.newObject,e = c.lang.String.isHex;this.params = null;this.getEncodedHex = function () {var h = this.params;if (h.ocsp == undefined) {throw new d("property ocsp not specified");}if (!e(h.ocsp) || !ASN1HEX.isASN1HEX(h.ocsp)) {throw new d("ocsp value not ASN.1 hex string");}var g = a({ seq: [{ oid: "1.3.6.1.5.5.7.16.2" }, { asn1: { tlv: h.ocsp } }] });return g.getEncodedHex();};if (f != undefined) {this.setByParam(f);}};extendClass(KJUR.asn1.cms.OtherRevocationFormat, KJUR.asn1.ASN1Object);KJUR.asn1.cms.CMSUtil = new function () {}();KJUR.asn1.cms.CMSUtil.newSignedData = function (a) {return new KJUR.asn1.cms.SignedData(a);};KJUR.asn1.cms.CMSUtil.verifySignedData = function (n) {var C = KJUR,p = C.asn1,s = p.cms,D = s.SignerInfo,q = s.SignedData,y = s.SigningTime,b = s.SigningCertificate,d = s.SigningCertificateV2,A = p.cades,u = A.SignaturePolicyIdentifier,i = C.lang.String.isHex,v = ASN1HEX,h = v.getVbyList,a = v.getTLVbyList,t = v.getIdxbyList,z = v.getChildIdx,c = v.getTLV,B = v.oidname,j = C.crypto.Util.hashHex;if (n.cms === undefined && !i(n.cms)) {}var E = n.cms;var g = function g(J, H) {var G;for (var I = 3; I < 6; I++) {G = t(J, 0, [1, 0, I]);if (G !== undefined) {var F = J.substr(G, 2);if (F === "a0") {H.certsIdx = G;}if (F === "a1") {H.revinfosIdx = G;}if (F === "31") {H.signerinfosIdx = G;}}}};var l = function l(I, F) {var H = F.signerinfosIdx;if (H === undefined) {return;}var L = z(I, H);F.signerInfoIdxList = L;for (var G = 0; G < L.length; G++) {var K = L[G];var J = { idx: K };k(I, J);F.signerInfos.push(J);}};var k = function k(I, J) {var F = J.idx;J.signerid_issuer1 = a(I, F, [1, 0], "30");J.signerid_serial1 = h(I, F, [1, 1], "02");J.hashalg = B(h(I, F, [2, 0], "06"));var H = t(I, F, [3], "a0");J.idxSignedAttrs = H;f(I, J, H);var G = z(I, F);var K = G.length;if (K < 6) {throw "malformed SignerInfo";}J.sigalg = B(h(I, F, [K - 2, 0], "06"));J.sigval = h(I, F, [K - 1], "04");};var f = function f(L, M, F) {var J = z(L, F);M.signedAttrIdxList = J;for (var K = 0; K < J.length; K++) {var I = J[K];var G = h(L, I, [0], "06");var H;if (G === "2a864886f70d010905") {H = hextoutf8(h(L, I, [1, 0]));M.saSigningTime = H;} else {if (G === "2a864886f70d010904") {H = h(L, I, [1, 0], "04");M.saMessageDigest = H;}}}};var w = function w(G, F) {if (h(G, 0, [0], "06") !== "2a864886f70d010702") {return F;}F.cmsType = "signedData";F.econtent = h(G, 0, [1, 0, 2, 1, 0]);g(G, F);F.signerInfos = [];l(G, F);};var o = function o(J, F) {var G = F.parse.signerInfos;var L = G.length;var K = true;for (var I = 0; I < L; I++) {var H = G[I];e(J, F, H, I);if (!H.isValid) {K = false;}}F.isValid = K;};var x = function x(F, Q, J, P) {var N = Q.parse.certsIdx;var H;if (Q.certs === undefined) {H = [];Q.certkeys = [];var K = z(F, N);for (var I = 0; I < K.length; I++) {var M = c(F, K[I]);var O = new X509();O.readCertHex(M);H[I] = O;Q.certkeys[I] = O.getPublicKey();}Q.certs = H;} else {H = Q.certs;}Q.cccc = H.length;Q.cccci = K.length;for (var I = 0; I < H.length; I++) {var L = O.getIssuerHex();var G = O.getSerialNumberHex();if (J.signerid_issuer1 === L && J.signerid_serial1 === G) {J.certkey_idx = I;}}};var e = function e(F, R, I, N) {I.verifyDetail = {};var Q = I.verifyDetail;var K = R.parse.econtent;var G = I.hashalg;var L = I.saMessageDigest;Q.validMessageDigest = false;if (j(K, G) === L) {Q.validMessageDigest = true;}x(F, R, I, N);Q.validSignatureValue = false;var H = I.sigalg;var M = "31" + c(F, I.idxSignedAttrs).substr(2);I.signedattrshex = M;var J = R.certs[I.certkey_idx].getPublicKey();var P = new KJUR.crypto.Signature({ alg: H });P.init(J);P.updateHex(M);var O = P.verify(I.sigval);Q.validSignatureValue_isValid = O;if (O === true) {Q.validSignatureValue = true;}I.isValid = false;if (Q.validMessageDigest && Q.validSignatureValue) {I.isValid = true;}};var m = function m() {};var r = { isValid: false, parse: {} };w(E, r.parse);o(E, r);return r;};KJUR.asn1.cms.CMSParser = function () {var g = Error,a = X509,h = new a(),l = ASN1HEX,i = l.getV,b = l.getTLV,f = l.getIdxbyList,c = l.getTLVbyList,d = l.getTLVbyListEx,e = l.getVbyList,k = l.getVbyListEx,j = l.getChildIdx;this.getCMSSignedData = function (m) {var o = c(m, 0, [1, 0]);var n = this.getSignedData(o);return n;};this.getSignedData = function (o) {var q = j(o, 0);var v = {};var p = i(o, q[0]);var n = parseInt(p, 16);v.version = n;var r = b(o, q[1]);v.hashalgs = this.getHashAlgArray(r);var t = b(o, q[2]);v.econtent = this.getEContent(t);var m = d(o, 0, ["[0]"]);if (m != null) {v.certs = this.getCertificateSet(m);}var u = d(o, 0, ["[1]"]);if (u != null) {}var s = d(o, 0, [3]);v.sinfos = this.getSignerInfos(s);return v;};this.getHashAlgArray = function (s) {var q = j(s, 0);var m = new a();var n = [];for (var r = 0; r < q.length; r++) {var p = b(s, q[r]);var o = m.getAlgorithmIdentifierName(p);n.push(o);}return n;};this.getEContent = function (m) {var n = {};var p = e(m, 0, [0]);var o = e(m, 0, [1, 0]);n.type = KJUR.asn1.x509.OID.oid2name(ASN1HEX.hextooidstr(p));n.content = { hex: o };return n;};this.getSignerInfos = function (p) {var r = [];var m = j(p, 0);for (var n = 0; n < m.length; n++) {var o = b(p, m[n]);var q = this.getSignerInfo(o);r.push(q);}return r;};this.getSignerInfo = function (s) {var y = {};var u = j(s, 0);var q = l.getInt(s, u[0], -1);if (q != -1) {y.version = q;}var t = b(s, u[1]);var p = this.getIssuerAndSerialNumber(t);y.id = p;var z = b(s, u[2]);var n = h.getAlgorithmIdentifierName(z);y.hashalg = n;var w = d(s, 0, ["[0]"]);if (w != null) {var A = this.getAttributeList(w);y.sattrs = A;}var m = d(s, 0, [3]);var x = h.getAlgorithmIdentifierName(m);y.sigalg = x;var o = k(s, 0, [4]);y.sighex = o;var r = d(s, 0, ["[1]"]);if (r != null) {var v = this.getAttributeList(r);y.uattrs = v;}return y;};this.getSignerIdentifier = function (m) {if (m.substr(0, 2) == "30") {return this.getIssuerAndSerialNumber(m);} else {throw new Error("SKID of signerIdentifier not supported");}};this.getIssuerAndSerialNumber = function (n) {var o = { type: "isssn" };var m = j(n, 0);var p = b(n, m[0]);o.issuer = h.getX500Name(p);var q = i(n, m[1]);o.serial = { hex: q };return o;};this.getAttributeList = function (q) {var m = [];var n = j(q, 0);for (var o = 0; o < n.length; o++) {var p = b(q, n[o]);var r = this.getAttribute(p);m.push(r);}return { array: m };};this.getAttribute = function (p) {var t = {};var q = j(p, 0);var o = l.getOID(p, q[0]);var m = KJUR.asn1.x509.OID.oid2name(o);t.attr = m;var r = b(p, q[1]);var u = j(r, 0);if (u.length == 1) {t.valhex = b(r, u[0]);} else {var s = [];for (var n = 0; n < u.length; n++) {s.push(b(r, u[n]));}t.valhex = s;}if (m == "contentType") {this.setContentType(t);} else {if (m == "messageDigest") {this.setMessageDigest(t);} else {if (m == "signingTime") {this.setSigningTime(t);} else {if (m == "signingCertificate") {this.setSigningCertificate(t);} else {if (m == "signingCertificateV2") {this.setSigningCertificateV2(t);} else {if (m == "signaturePolicyIdentifier") {this.setSignaturePolicyIdentifier(t);}}}}}}return t;};this.setContentType = function (m) {var n = l.getOIDName(m.valhex, 0, null);if (n != null) {m.type = n;delete m.valhex;}};this.setSigningTime = function (o) {var n = i(o.valhex, 0);var m = hextoutf8(n);o.str = m;delete o.valhex;};this.setMessageDigest = function (m) {var n = i(m.valhex, 0);m.hex = n;delete m.valhex;};this.setSigningCertificate = function (n) {var q = j(n.valhex, 0);if (q.length > 0) {var m = b(n.valhex, q[0]);var p = j(m, 0);var t = [];for (var o = 0; o < p.length; o++) {var s = b(m, p[o]);var u = this.getESSCertID(s);t.push(u);}n.array = t;}if (q.length > 1) {var r = b(n.valhex, q[1]);n.polhex = r;}delete n.valhex;};this.setSignaturePolicyIdentifier = function (s) {var q = j(s.valhex, 0);if (q.length > 0) {var r = l.getOID(s.valhex, q[0]);s.oid = r;}if (q.length > 1) {var m = new a();var t = j(s.valhex, q[1]);var p = b(s.valhex, t[0]);var o = m.getAlgorithmIdentifierName(p);s.alg = o;var n = i(s.valhex, t[1]);s.hash = n;}delete s.valhex;};this.setSigningCertificateV2 = function (o) {var s = j(o.valhex, 0);if (s.length > 0) {var n = b(o.valhex, s[0]);var r = j(n, 0);var u = [];for (var q = 0; q < r.length; q++) {var m = b(n, r[q]);var p = this.getESSCertIDv2(m);u.push(p);}o.array = u;}if (s.length > 1) {var t = b(o.valhex, s[1]);o.polhex = t;}delete o.valhex;};this.getESSCertID = function (o) {var p = {};var n = j(o, 0);if (n.length > 0) {var q = i(o, n[0]);p.hash = q;}if (n.length > 1) {var m = b(o, n[1]);var r = this.getIssuerSerial(m);if (r.serial != undefined) {p.serial = r.serial;}if (r.issuer != undefined) {p.issuer = r.issuer;}}return p;};this.getESSCertIDv2 = function (q) {var s = {};var p = j(q, 0);if (p.length < 1 || 3 < p.length) {throw new g("wrong number of elements");}var r = 0;if (q.substr(p[0], 2) == "30") {var o = b(q, p[0]);s.alg = h.getAlgorithmIdentifierName(o);r++;} else {s.alg = "sha256";}var n = i(q, p[r]);s.hash = n;if (p.length > r + 1) {var m = b(q, p[r + 1]);var t = this.getIssuerSerial(m);s.issuer = t.issuer;s.serial = t.serial;}return s;};this.getIssuerSerial = function (q) {var r = {};var n = j(q, 0);var m = b(q, n[0]);var p = h.getGeneralNames(m);var o = p[0].dn;r.issuer = o;var s = i(q, n[1]);r.serial = { hex: s };return r;};this.getCertificateSet = function (p) {var n = j(p, 0);var m = [];for (var o = 0; o < n.length; o++) {var r = b(p, n[o]);if (r.substr(0, 2) == "30") {var q = hextopem(r, "CERTIFICATE");m.push(q);}}return { array: m, sortflag: false };};};
if (typeof KJUR == "undefined" || !KJUR) {KJUR = {};}if (typeof KJUR.asn1 == "undefined" || !KJUR.asn1) {KJUR.asn1 = {};}if (typeof KJUR.asn1.tsp == "undefined" || !KJUR.asn1.tsp) {KJUR.asn1.tsp = {};}KJUR.asn1.tsp.TimeStampToken = function (d) {var c = KJUR,b = c.asn1,a = b.tsp;a.TimeStampToken.superclass.constructor.call(this);this.params = null;this.getEncodedHexPrepare = function () {var e = new a.TSTInfo(this.params.econtent.content);this.params.econtent.content.hex = e.getEncodedHex();};if (d != undefined) {this.setByParam(d);}};extendClass(KJUR.asn1.tsp.TimeStampToken, KJUR.asn1.cms.SignedData);KJUR.asn1.tsp.TSTInfo = function (f) {var m = Error,c = KJUR,j = c.asn1,g = j.DERSequence,i = j.DERInteger,l = j.DERBoolean,h = j.DERGeneralizedTime,n = j.DERObjectIdentifier,e = j.DERTaggedObject,k = j.tsp,d = k.MessageImprint,b = k.Accuracy,a = j.x509.X500Name,o = j.x509.GeneralName;k.TSTInfo.superclass.constructor.call(this);this.dVersion = new i({ "int": 1 });this.dPolicy = null;this.dMessageImprint = null;this.dSerial = null;this.dGenTime = null;this.dAccuracy = null;this.dOrdering = null;this.dNonce = null;this.dTsa = null;this.getEncodedHex = function () {var p = [this.dVersion];if (this.dPolicy == null) {throw new Error("policy shall be specified.");}p.push(this.dPolicy);if (this.dMessageImprint == null) {throw new Error("messageImprint shall be specified.");}p.push(this.dMessageImprint);if (this.dSerial == null) {throw new Error("serialNumber shall be specified.");}p.push(this.dSerial);if (this.dGenTime == null) {throw new Error("genTime shall be specified.");}p.push(this.dGenTime);if (this.dAccuracy != null) {p.push(this.dAccuracy);}if (this.dOrdering != null) {p.push(this.dOrdering);}if (this.dNonce != null) {p.push(this.dNonce);}if (this.dTsa != null) {p.push(this.dTsa);}var q = new g({ array: p });this.hTLV = q.getEncodedHex();return this.hTLV;};if (f !== undefined) {if (typeof f.policy == "string") {if (!f.policy.match(/^[0-9.]+$/)) {throw "policy shall be oid like 0.1.4.134";}this.dPolicy = new n({ oid: f.policy });}if (f.messageImprint !== undefined) {this.dMessageImprint = new d(f.messageImprint);}if (f.serial !== undefined) {this.dSerial = new i(f.serial);}if (f.genTime !== undefined) {this.dGenTime = new h(f.genTime);}if (f.accuracy !== undefined) {this.dAccuracy = new b(f.accuracy);}if (f.ordering !== undefined && f.ordering == true) {this.dOrdering = new l();}if (f.nonce !== undefined) {this.dNonce = new i(f.nonce);}if (f.tsa !== undefined) {this.dTsa = new e({ tag: "a0", explicit: true, obj: new o({ dn: f.tsa }) });}}};extendClass(KJUR.asn1.tsp.TSTInfo, KJUR.asn1.ASN1Object);KJUR.asn1.tsp.Accuracy = function (d) {var c = KJUR,b = c.asn1,a = b.ASN1Util.newObject;b.tsp.Accuracy.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var f = this.params;var e = [];if (f.seconds != undefined && typeof f.seconds == "number") {e.push({ "int": f.seconds });}if (f.millis != undefined && typeof f.millis == "number") {e.push({ tag: { tagi: "80", obj: { "int": f.millis } } });}if (f.micros != undefined && typeof f.micros == "number") {e.push({ tag: { tagi: "81", obj: { "int": f.micros } } });}return a({ seq: e }).getEncodedHex();};if (d != undefined) {this.setByParam(d);}};extendClass(KJUR.asn1.tsp.Accuracy, KJUR.asn1.ASN1Object);KJUR.asn1.tsp.MessageImprint = function (g) {var c = KJUR,b = c.asn1,a = b.DERSequence,d = b.DEROctetString,f = b.x509,e = f.AlgorithmIdentifier;b.tsp.MessageImprint.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var k = this.params;var j = new e({ name: k.alg });var h = new d({ hex: k.hash });var i = new a({ array: [j, h] });return i.getEncodedHex();};if (g !== undefined) {this.setByParam(g);}};extendClass(KJUR.asn1.tsp.MessageImprint, KJUR.asn1.ASN1Object);KJUR.asn1.tsp.TimeStampReq = function (c) {var a = KJUR,f = a.asn1,d = f.DERSequence,e = f.DERInteger,h = f.DERBoolean,j = f.ASN1Object,i = f.DERObjectIdentifier,g = f.tsp,b = g.MessageImprint;g.TimeStampReq.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var m = this.params;var k = [];k.push(new e({ "int": 1 }));if (m.messageImprint instanceof KJUR.asn1.ASN1Object) {k.push(m.messageImprint);} else {k.push(new b(m.messageImprint));}if (m.policy != undefined) {k.push(new i(m.policy));}if (m.nonce != undefined) {k.push(new e(m.nonce));}if (m.certreq == true) {k.push(new h());}var l = new d({ array: k });return l.getEncodedHex();};if (c != undefined) {this.setByParam(c);}};extendClass(KJUR.asn1.tsp.TimeStampReq, KJUR.asn1.ASN1Object);KJUR.asn1.tsp.TimeStampResp = function (g) {var e = KJUR,d = e.asn1,c = d.DERSequence,f = d.ASN1Object,a = d.tsp,b = a.PKIStatusInfo;a.TimeStampResp.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var j = this.params;var h = [new b(j.statusinfo)];if (j.econtent != undefined) {h.push(new a.TimeStampToken(j).getContentInfo());}if (j.tst != undefined && j.tst instanceof d.ASN1Object) {h.push(j.tst);}var i = new c({ array: h });return i.getEncodedHex();};if (g != undefined) {this.setByParam(g);}};extendClass(KJUR.asn1.tsp.TimeStampResp, KJUR.asn1.ASN1Object);KJUR.asn1.tsp.PKIStatusInfo = function (d) {var h = Error,a = KJUR,g = a.asn1,e = g.DERSequence,i = g.tsp,f = i.PKIStatus,c = i.PKIFreeText,b = i.PKIFailureInfo;i.PKIStatusInfo.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var l = this.params;var j = [];if (typeof l == "string") {j.push(new f(l));} else {if (l.status == undefined) {throw new h("property 'status' unspecified");}j.push(new f(l.status));if (l.statusstr != undefined) {j.push(new c(l.statusstr));}if (l.failinfo != undefined) {j.push(new b(l.failinfo));}}var k = new e({ array: j });return k.getEncodedHex();};if (d != undefined) {this.setByParam(d);}};extendClass(KJUR.asn1.tsp.PKIStatusInfo, KJUR.asn1.ASN1Object);KJUR.asn1.tsp.PKIStatus = function (g) {var e = Error,d = KJUR,c = d.asn1,f = c.DERInteger,b = c.tsp;b.PKIStatus.superclass.constructor.call(this);var a = { granted: 0, grantedWithMods: 1, rejection: 2, waiting: 3, revocationWarning: 4, revocationNotification: 5 };this.params = null;this.getEncodedHex = function () {var k = this.params;var h, j;if (typeof k == "string") {try {j = a[k];} catch (i) {throw new e("undefined name: " + k);}} else {if (typeof k == "number") {j = k;} else {throw new e("unsupported params");}}return new f({ "int": j }).getEncodedHex();};if (g != undefined) {this.setByParam(g);}};extendClass(KJUR.asn1.tsp.PKIStatus, KJUR.asn1.ASN1Object);KJUR.asn1.tsp.PKIFreeText = function (g) {var f = Error,e = KJUR,d = e.asn1,b = d.DERSequence,c = d.DERUTF8String,a = d.tsp;a.PKIFreeText.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var l = this.params;if (!l instanceof Array) {throw new f("wrong params: not array");}var h = [];for (var k = 0; k < l.length; k++) {h.push(new c({ str: l[k] }));}var j = new b({ array: h });return j.getEncodedHex();};if (g != undefined) {this.setByParam(g);}};extendClass(KJUR.asn1.tsp.PKIFreeText, KJUR.asn1.ASN1Object);KJUR.asn1.tsp.PKIFailureInfo = function (h) {var f = Error,e = KJUR,d = e.asn1,g = d.DERBitString,b = d.tsp,c = b.PKIFailureInfo;var a = { badAlg: 0, badRequest: 2, badDataFormat: 5, timeNotAvailable: 14, unacceptedPolicy: 15, unacceptedExtension: 16, addInfoNotAvailable: 17, systemFailure: 25 };c.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var k = this.params;var j;if (typeof k == "string") {try {j = a[k];} catch (i) {throw new f("undefined name: " + k);}} else {if (typeof k == "number") {j = k;} else {throw new f("wrong params");}}return new g({ bin: j.toString(2) }).getEncodedHex();};if (h != undefined) {this.setByParam(h);}};extendClass(KJUR.asn1.tsp.PKIFailureInfo, KJUR.asn1.ASN1Object);KJUR.asn1.tsp.AbstractTSAAdapter = function (a) {this.getTSTHex = function (c, b) {throw "not implemented yet";};};KJUR.asn1.tsp.SimpleTSAAdapter = function (e) {var d = KJUR,c = d.asn1,a = c.tsp,b = d.crypto.Util.hashHex;a.SimpleTSAAdapter.superclass.constructor.call(this);this.params = null;this.serial = 0;this.getTSTHex = function (g, f) {var i = b(g, f);this.params.econtent.content.messageImprint = { alg: f, hash: i };this.params.econtent.content.serial = { "int": this.serial++ };var h = Math.floor(Math.random() * 1000000000);this.params.econtent.content.nonce = { "int": h };var j = new a.TimeStampToken(this.params);return j.getContentInfoEncodedHex();};if (e !== undefined) {this.params = e;}};extendClass(KJUR.asn1.tsp.SimpleTSAAdapter, KJUR.asn1.tsp.AbstractTSAAdapter);KJUR.asn1.tsp.FixedTSAAdapter = function (e) {var d = KJUR,c = d.asn1,a = c.tsp,b = d.crypto.Util.hashHex;a.FixedTSAAdapter.superclass.constructor.call(this);this.params = null;this.getTSTHex = function (g, f) {var h = b(g, f);this.params.econtent.content.messageImprint = { alg: f, hash: h };var i = new a.TimeStampToken(this.params);return i.getContentInfoEncodedHex();};if (e !== undefined) {this.params = e;}};extendClass(KJUR.asn1.tsp.FixedTSAAdapter, KJUR.asn1.tsp.AbstractTSAAdapter);KJUR.asn1.tsp.TSPUtil = new function () {}();KJUR.asn1.tsp.TSPUtil.newTimeStampToken = function (a) {return new KJUR.asn1.tsp.TimeStampToken(a);};KJUR.asn1.tsp.TSPUtil.parseTimeStampReq = function (m) {var l = ASN1HEX;var h = l.getChildIdx;var f = l.getV;var b = l.getTLV;var j = {};j.certreq = false;var a = h(m, 0);if (a.length < 2) {throw "TimeStampReq must have at least 2 items";}var e = b(m, a[1]);j.messageImprint = KJUR.asn1.tsp.TSPUtil.parseMessageImprint(e);for (var d = 2; d < a.length; d++) {var g = a[d];var k = m.substr(g, 2);if (k == "06") {var c = f(m, g);j.policy = l.hextooidstr(c);}if (k == "02") {j.nonce = f(m, g);}if (k == "01") {j.certreq = true;}}return j;};KJUR.asn1.tsp.TSPUtil.parseMessageImprint = function (c) {var m = ASN1HEX;var j = m.getChildIdx;var i = m.getV;var g = m.getIdxbyList;var k = {};if (c.substr(0, 2) != "30") {throw "head of messageImprint hex shall be '30'";}var a = j(c, 0);var l = g(c, 0, [0, 0]);var e = i(c, l);var d = m.hextooidstr(e);var h = KJUR.asn1.x509.OID.oid2name(d);if (h == "") {throw "hashAlg name undefined: " + d;}var b = h;var f = g(c, 0, [1]);k.alg = b;k.hash = i(c, f);return k;};KJUR.asn1.tsp.TSPParser = function () {var e = Error,a = X509,f = new a(),k = ASN1HEX,g = k.getV,b = k.getTLV,d = k.getIdxbyList,c = k.getTLVbyListEx,i = k.getChildIdx;var j = ["granted", "grantedWithMods", "rejection", "waiting", "revocationWarning", "revocationNotification"];var h = { 0: "badAlg", 2: "badRequest", 5: "badDataFormat", 14: "timeNotAvailable", 15: "unacceptedPolicy", 16: "unacceptedExtension", 17: "addInfoNotAvailable", 25: "systemFailure" };this.getResponse = function (n) {var l = i(n, 0);if (l.length == 1) {return this.getPKIStatusInfo(b(n, l[0]));} else {if (l.length > 1) {var o = this.getPKIStatusInfo(b(n, l[0]));var m = b(n, l[1]);var p = this.getToken(m);p.statusinfo = o;return p;}}};this.getToken = function (m) {var l = new KJUR.asn1.cms.CMSParser();var n = l.getCMSSignedData(m);this.setTSTInfo(n);return n;};this.setTSTInfo = function (l) {var o = l.econtent;if (o.type == "tstinfo") {var n = o.content.hex;var m = this.getTSTInfo(n);o.content = m;}};this.getTSTInfo = function (r) {var x = {};var s = i(r, 0);var p = g(r, s[1]);x.policy = hextooid(p);var o = b(r, s[2]);x.messageImprint = this.getMessageImprint(o);var u = g(r, s[3]);x.serial = { hex: u };var y = g(r, s[4]);x.genTime = { str: hextoutf8(y) };var q = 0;if (s.length > 5 && r.substr(s[5], 2) == "30") {var v = b(r, s[5]);x.accuracy = this.getAccuracy(v);q++;}if (s.length > 5 + q && r.substr(s[5 + q], 2) == "01") {var z = g(r, s[5 + q]);if (z == "ff") {x.ordering = true;}q++;}if (s.length > 5 + q && r.substr(s[5 + q], 2) == "02") {var n = g(r, s[5 + q]);x.nonce = { hex: n };q++;}if (s.length > 5 + q && r.substr(s[5 + q], 2) == "a0") {var m = b(r, s[5 + q]);m = "30" + m.substr(2);pGeneralNames = f.getGeneralNames(m);var t = pGeneralNames[0].dn;x.tsa = t;q++;}if (s.length > 5 + q && r.substr(s[5 + q], 2) == "a1") {var l = b(r, s[5 + q]);l = "30" + l.substr(2);var w = f.getExtParamArray(l);x.ext = w;q++;}return x;};this.getAccuracy = function (q) {var r = {};var o = i(q, 0);for (var p = 0; p < o.length; p++) {var m = q.substr(o[p], 2);var l = g(q, o[p]);var n = parseInt(l, 16);if (m == "02") {r.seconds = n;} else {if (m == "80") {r.millis = n;} else {if (m == "81") {r.micros = n;}}}}return r;};this.getMessageImprint = function (n) {if (n.substr(0, 2) != "30") {throw new Error("head of messageImprint hex shall be x30");}var s = {};var l = i(n, 0);var t = d(n, 0, [0, 0]);var o = g(n, t);var p = k.hextooidstr(o);var r = KJUR.asn1.x509.OID.oid2name(p);if (r == "") {throw new Error("hashAlg name undefined: " + p);}var m = r;var q = d(n, 0, [1]);s.alg = m;s.hash = g(n, q);return s;};this.getPKIStatusInfo = function (o) {var t = {};var r = i(o, 0);var n = 0;try {var l = g(o, r[0]);var p = parseInt(l, 16);t.status = j[p];} catch (s) {}if (r.length > 1 && o.substr(r[1], 2) == "30") {var m = b(o, r[1]);t.statusstr = this.getPKIFreeText(m);n++;}if (r.length > n && o.substr(r[1 + n], 2) == "03") {var q = b(o, r[1 + n]);t.failinfo = this.getPKIFailureInfo(q);}return t;};this.getPKIFreeText = function (n) {var o = [];var l = i(n, 0);for (var m = 0; m < l.length; m++) {o.push(k.getString(n, l[m]));}return o;};this.getPKIFailureInfo = function (l) {var m = k.getInt(l, 0);if (h[m] != undefined) {return h[m];} else {return m;}};};
if (typeof KJUR == "undefined" || !KJUR) {KJUR = {};}if (typeof KJUR.asn1 == "undefined" || !KJUR.asn1) {KJUR.asn1 = {};}if (typeof KJUR.asn1.cades == "undefined" || !KJUR.asn1.cades) {KJUR.asn1.cades = {};}KJUR.asn1.cades.SignaturePolicyIdentifier = function (e) {var c = KJUR,b = c.asn1,a = b.cades,d = a.SignaturePolicyId;a.SignaturePolicyIdentifier.superclass.constructor.call(this);this.typeOid = "1.2.840.113549.1.9.16.2.15";this.params = null;this.getValueArray = function () {return [new d(this.params)];};this.setByParam = function (f) {this.params = f;};if (e != undefined) {this.setByParam(e);}};extendClass(KJUR.asn1.cades.SignaturePolicyIdentifier, KJUR.asn1.cms.Attribute);KJUR.asn1.cades.SignaturePolicyId = function (e) {var a = KJUR,g = a.asn1,f = g.DERSequence,i = g.DERObjectIdentifier,d = g.x509,j = d.AlgorithmIdentifier,c = g.cades,h = c.SignaturePolicyId,b = c.OtherHashAlgAndValue;h.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var m = this.params;var k = [];k.push(new i(m.oid));k.push(new b(m));var l = new f({ array: k });return l.getEncodedHex();};this.setByParam = function (k) {this.params = k;};if (e != undefined) {this.setByParam(e);}};extendClass(KJUR.asn1.cades.SignaturePolicyId, KJUR.asn1.ASN1Object);KJUR.asn1.cades.OtherHashAlgAndValue = function (e) {var h = Error,a = KJUR,g = a.asn1,f = g.DERSequence,i = g.DEROctetString,d = g.x509,j = d.AlgorithmIdentifier,c = g.cades,b = c.OtherHashAlgAndValue;b.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var o = this.params;if (o.alg == undefined) {throw new h("property 'alg' not specified");}if (o.hash == undefined && o.cert == undefined) {throw new h("property 'hash' nor 'cert' not specified");}var m = null;if (o.hash != undefined) {m = o.hash;} else {if (o.cert != undefined) {if (typeof o.cert != "string") {throw new h("cert not string");}var n = o.cert;if (o.cert.indexOf("-----BEGIN") != -1) {n = pemtohex(o.cert);}m = KJUR.crypto.Util.hashHex(n, o.alg);}}var k = [];k.push(new j({ name: o.alg }));k.push(new i({ hex: m }));var l = new f({ array: k });return l.getEncodedHex();};if (e != undefined) {this.setByParam(e);}};extendClass(KJUR.asn1.cades.OtherHashAlgAndValue, KJUR.asn1.ASN1Object);KJUR.asn1.cades.OtherHashValue = function (g) {KJUR.asn1.cades.OtherHashValue.superclass.constructor.call(this);var d = Error,c = KJUR,f = c.lang.String.isHex,b = c.asn1,e = b.DEROctetString,a = c.crypto.Util.hashHex;this.params = null;this.getEncodedHex = function () {var j = this.params;if (j.hash == undefined && j.cert == undefined) {throw new d("hash or cert not specified");}var h = null;if (j.hash != undefined) {h = j.hash;} else {if (j.cert != undefined) {if (typeof j.cert != "string") {throw new d("cert not string");}var i = j.cert;if (j.cert.indexOf("-----BEGIN") != -1) {i = pemtohex(j.cert);}h = KJUR.crypto.Util.hashHex(i, "sha1");}}return new e({ hex: h }).getEncodedHex();};if (g != undefined) {this.setByParam(g);}};extendClass(KJUR.asn1.cades.OtherHashValue, KJUR.asn1.ASN1Object);KJUR.asn1.cades.SignatureTimeStamp = function (h) {var d = Error,c = KJUR,f = c.lang.String.isHex,b = c.asn1,e = b.ASN1Object,g = b.x509,a = b.cades;a.SignatureTimeStamp.superclass.constructor.call(this);this.typeOid = "1.2.840.113549.1.9.16.2.14";this.params = null;this.getValueArray = function () {var l = this.params;if (l.tst != undefined) {if (f(l.tst)) {var j = new e();j.hTLV = l.tst;return [j];} else {if (l.tst instanceof e) {return [l.tst];} else {throw new d("params.tst has wrong value");}}} else {if (l.res != undefined) {var k = l.res;if (k instanceof e) {k = k.getEncodedHex();}if (typeof k != "string" || !f(k)) {throw new d("params.res has wrong value");}var i = ASN1HEX.getTLVbyList(k, 0, [1]);var j = new e();j.hTLV = l.tst;return [j];}}};if (h != null) {this.setByParam(h);}};extendClass(KJUR.asn1.cades.SignatureTimeStamp, KJUR.asn1.cms.Attribute);KJUR.asn1.cades.CompleteCertificateRefs = function (h) {var f = Error,e = KJUR,d = e.asn1,b = d.DERSequence,c = d.cades,a = c.OtherCertID,g = e.lang.String.isHex;c.CompleteCertificateRefs.superclass.constructor.call(this);this.typeOid = "1.2.840.113549.1.9.16.2.21";this.params = null;this.getValueArray = function () {var o = this.params;var k = [];for (var m = 0; m < o.array.length; m++) {var n = o.array[m];if (typeof n == "string") {if (n.indexOf("-----BEGIN") != -1) {n = { cert: n };} else {if (g(n)) {n = { hash: n };} else {throw new f("unsupported value: " + n);}}}if (o.alg != undefined && n.alg == undefined) {n.alg = o.alg;}if (o.hasis != undefined && n.hasis == undefined) {n.hasis = o.hasis;}var j = new a(n);k.push(j);}var l = new b({ array: k });return [l];};if (h != undefined) {this.setByParam(h);}};extendClass(KJUR.asn1.cades.CompleteCertificateRefs, KJUR.asn1.cms.Attribute);KJUR.asn1.cades.OtherCertID = function (e) {var a = KJUR,h = a.asn1,f = h.DERSequence,i = h.cms,g = i.IssuerSerial,c = h.cades,d = c.OtherHashValue,b = c.OtherHashAlgAndValue;c.OtherCertID.superclass.constructor.call(this);this.params = e;this.getEncodedHex = function () {var n = this.params;if (typeof n == "string") {if (n.indexOf("-----BEGIN") != -1) {n = { cert: n };} else {if (_isHex(n)) {n = { hash: n };}}}var j = [];var m = null;if (n.alg != undefined) {m = new b(n);} else {m = new d(n);}j.push(m);if (n.cert != undefined && n.hasis == true || n.issuer != undefined && n.serial != undefined) {var l = new g(n);j.push(l);}var k = new f({ array: j });return k.getEncodedHex();};if (e != undefined) {this.setByParam(e);}};extendClass(KJUR.asn1.cades.OtherCertID, KJUR.asn1.ASN1Object);KJUR.asn1.cades.OtherHash = function (g) {var i = Error,a = KJUR,h = a.asn1,j = h.cms,c = h.cades,b = c.OtherHashAlgAndValue,e = c.OtherHashValue,d = a.crypto.Util.hashHex,f = a.lang.String.isHex;c.OtherHash.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var l = this.params;if (typeof l == "string") {if (l.indexOf("-----BEGIN") != -1) {l = { cert: l };} else {if (f(l)) {l = { hash: l };}}}var k = null;if (l.alg != undefined) {k = new b(l);} else {k = new e(l);}return k.getEncodedHex();};if (g != undefined) {this.setByParam(g);}};extendClass(KJUR.asn1.cades.OtherHash, KJUR.asn1.ASN1Object);KJUR.asn1.cades.CAdESUtil = new function () {}();KJUR.asn1.cades.CAdESUtil.parseSignedDataForAddingUnsigned = function (a) {var c = new KJUR.asn1.cms.CMSParser();var b = c.getCMSSignedData(a);return b;};KJUR.asn1.cades.CAdESUtil.parseSignerInfoForAddingUnsigned = function (g, q, c) {var p = ASN1HEX,s = p.getChildIdx,a = p.getTLV,l = p.getV,v = KJUR,h = v.asn1,n = h.ASN1Object,j = h.cms,k = j.AttributeList,w = j.SignerInfo;var o = {};var t = s(g, q);if (t.length != 6) {throw "not supported items for SignerInfo (!=6)";}var d = t.shift();o.version = a(g, d);var e = t.shift();o.si = a(g, e);var m = t.shift();o.digalg = a(g, m);var f = t.shift();o.sattrs = a(g, f);var i = t.shift();o.sigalg = a(g, i);var b = t.shift();o.sig = a(g, b);o.sigval = l(g, b);var u = null;o.obj = new w();u = new n();u.hTLV = o.version;o.obj.dCMSVersion = u;u = new n();u.hTLV = o.si;o.obj.dSignerIdentifier = u;u = new n();u.hTLV = o.digalg;o.obj.dDigestAlgorithm = u;u = new n();u.hTLV = o.sattrs;o.obj.dSignedAttrs = u;u = new n();u.hTLV = o.sigalg;o.obj.dSigAlg = u;u = new n();u.hTLV = o.sig;o.obj.dSig = u;o.obj.dUnsignedAttrs = new k();return o;};
if (typeof KJUR.asn1.csr == "undefined" || !KJUR.asn1.csr) {KJUR.asn1.csr = {};}KJUR.asn1.csr.CertificationRequest = function (g) {var d = KJUR,c = d.asn1,e = c.DERBitString,b = c.DERSequence,a = c.csr,f = c.x509,h = a.CertificationRequestInfo;a.CertificationRequest.superclass.constructor.call(this);this.setByParam = function (i) {this.params = i;};this.sign = function () {var j = new h(this.params).getEncodedHex();var k = new KJUR.crypto.Signature({ alg: this.params.sigalg });k.init(this.params.sbjprvkey);k.updateHex(j);var i = k.sign();this.params.sighex = i;};this.getPEM = function () {return hextopem(this.getEncodedHex(), "CERTIFICATE REQUEST");};this.getEncodedHex = function () {var l = this.params;var j = new KJUR.asn1.csr.CertificationRequestInfo(this.params);var m = new KJUR.asn1.x509.AlgorithmIdentifier({ name: l.sigalg });if (l.sighex == undefined && l.sbjprvkey != undefined) {this.sign();}if (l.sighex == undefined) {throw new Error("sighex or sbjprvkey parameter not defined");}var k = new e({ hex: "00" + l.sighex });var i = new b({ array: [j, m, k] });return i.getEncodedHex();};if (g !== undefined) {this.setByParam(g);}};extendClass(KJUR.asn1.csr.CertificationRequest, KJUR.asn1.ASN1Object);KJUR.asn1.csr.CertificationRequestInfo = function (f) {var b = KJUR,j = b.asn1,c = j.DERBitString,g = j.DERSequence,i = j.DERInteger,n = j.DERUTF8String,d = j.DERTaggedObject,h = j.ASN1Util.newObject,l = j.csr,e = j.x509,a = e.X500Name,k = e.Extensions,m = e.SubjectPublicKeyInfo;l.CertificationRequestInfo.superclass.constructor.call(this);this.params = null;this.setByParam = function (o) {if (o != undefined) {this.params = o;}};this.getEncodedHex = function () {var s = this.params;var p = [];p.push(new i({ "int": 0 }));p.push(new a(s.subject));p.push(new m(KEYUTIL.getKey(s.sbjpubkey)));if (s.extreq != undefined) {var o = new k(s.extreq);var r = h({ tag: { tag: "a0", explict: true, obj: { seq: [{ oid: "1.2.840.113549.1.9.14" }, { set: [o] }] } } });p.push(r);} else {p.push(new d({ tag: "a0", explicit: false, obj: new n({ str: "" }) }));}var q = new g({ array: p });return q.getEncodedHex();};if (f != undefined) {this.setByParam(f);}};extendClass(KJUR.asn1.csr.CertificationRequestInfo, KJUR.asn1.ASN1Object);KJUR.asn1.csr.CSRUtil = new function () {}();KJUR.asn1.csr.CSRUtil.newCSRPEM = function (e) {var b = KEYUTIL,a = KJUR.asn1.csr;var c = new a.CertificationRequest(e);var d = c.getPEM();return d;};KJUR.asn1.csr.CSRUtil.getParam = function (c) {var m = ASN1HEX,j = m.getV;_getIdxbyList = m.getIdxbyList;_getTLVbyList = m.getTLVbyList, _getTLVbyListEx = m.getTLVbyListEx, _getVbyListEx = m.getVbyListEx;var b = function b(p) {var o = _getIdxbyList(p, 0, [0, 3, 0, 0], "06");if (j(p, o) != "2a864886f70d01090e") {return null;}return _getTLVbyList(p, 0, [0, 3, 0, 1, 0], "30");};var n = {};if (c.indexOf("-----BEGIN CERTIFICATE REQUEST") == -1) {throw new Error("argument is not PEM file");}var e = pemtohex(c, "CERTIFICATE REQUEST");try {var g = _getTLVbyListEx(e, 0, [0, 1]);if (g == "3000") {n.subject = {};} else {var k = new X509();n.subject = k.getX500Name(g);}} catch (h) {}var d = _getTLVbyListEx(e, 0, [0, 2]);var f = KEYUTIL.getKey(d, null, "pkcs8pub");n.sbjpubkey = KEYUTIL.getPEM(f, "PKCS8PUB");var i = b(e);var k = new X509();if (i != null) {n.extreq = k.getExtParamArray(i);}try {var a = _getTLVbyListEx(e, 0, [1], "30");var k = new X509();n.sigalg = k.getAlgorithmIdentifierName(a);} catch (h) {}try {var l = _getVbyListEx(e, 0, [2]);n.sighex = l;} catch (h) {}return n;};
if (typeof KJUR == "undefined" || !KJUR) {KJUR = {};}if (typeof KJUR.asn1 == "undefined" || !KJUR.asn1) {KJUR.asn1 = {};}if (typeof KJUR.asn1.ocsp == "undefined" || !KJUR.asn1.ocsp) {KJUR.asn1.ocsp = {};}KJUR.asn1.ocsp.DEFAULT_HASH = "sha1";KJUR.asn1.ocsp.OCSPResponse = function (e) {KJUR.asn1.ocsp.OCSPResponse.superclass.constructor.call(this);var a = KJUR.asn1.DEREnumerated,b = KJUR.asn1.ASN1Util.newObject,c = KJUR.asn1.ocsp.ResponseBytes;var d = ["successful", "malformedRequest", "internalError", "tryLater", "_not_used_", "sigRequired", "unauthorized"];this.params = null;this._getStatusCode = function () {var f = this.params.resstatus;if (typeof f == "number") {return f;}if (typeof f != "string") {return -1;}return d.indexOf(f);};this.setByParam = function (f) {this.params = f;};this.getEncodedHex = function () {var h = this.params;var g = this._getStatusCode();if (g == -1) {throw new Error("responseStatus not supported: " + h.resstatus);}if (g != 0) {return b({ seq: [{ "enum": { "int": g } }] }).getEncodedHex();}var f = new c(h);return b({ seq: [{ "enum": { "int": 0 } }, { tag: { tag: "a0", explicit: true, obj: f } }] }).getEncodedHex();};if (e !== undefined) {this.setByParam(e);}};extendClass(KJUR.asn1.ocsp.OCSPResponse, KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.ResponseBytes = function (e) {KJUR.asn1.ocsp.ResponseBytes.superclass.constructor.call(this);var b = KJUR.asn1,a = b.DERSequence,f = b.DERObjectIdentifier,c = b.DEROctetString,d = b.ocsp.BasicOCSPResponse;this.params = null;this.setByParam = function (g) {this.params = g;};this.getEncodedHex = function () {var j = this.params;if (j.restype != "ocspBasic") {throw new Error("not supported responseType: " + j.restype);}var i = new d(j);var g = [];g.push(new f({ name: "ocspBasic" }));g.push(new c({ hex: i.getEncodedHex() }));var h = new a({ array: g });return h.getEncodedHex();};if (e !== undefined) {this.setByParam(e);}};extendClass(KJUR.asn1.ocsp.ResponseBytes, KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.BasicOCSPResponse = function (d) {KJUR.asn1.ocsp.BasicOCSPResponse.superclass.constructor.call(this);var i = Error,g = KJUR.asn1,j = g.ASN1Object,e = g.DERSequence,f = g.DERGeneralizedTime,c = g.DERTaggedObject,b = g.DERBitString,h = g.x509.Extensions,k = g.x509.AlgorithmIdentifier,l = g.ocsp,a = l.ResponderID;_SingleResponseList = l.SingleResponseList, _ResponseData = l.ResponseData;this.params = null;this.setByParam = function (m) {this.params = m;};this.sign = function () {var o = this.params;var m = o.tbsresp.getEncodedHex();var n = new KJUR.crypto.Signature({ alg: o.sigalg });n.init(o.reskey);n.updateHex(m);o.sighex = n.sign();};this.getEncodedHex = function () {var t = this.params;if (t.tbsresp == undefined) {t.tbsresp = new _ResponseData(t);}if (t.sighex == undefined && t.reskey != undefined) {this.sign();}var n = [];n.push(t.tbsresp);n.push(new k({ name: t.sigalg }));n.push(new b({ hex: "00" + t.sighex }));if (t.certs != undefined && t.certs.length != undefined) {var m = [];for (var q = 0; q < t.certs.length; q++) {var s = t.certs[q];var r = null;if (ASN1HEX.isASN1HEX(s)) {r = s;} else {if (s.match(/-----BEGIN/)) {r = pemtohex(s);} else {throw new i("certs[" + q + "] not hex or PEM");}}m.push(new j({ tlv: r }));}var p = new e({ array: m });n.push(new c({ tag: "a0", explicit: true, obj: p }));}var o = new e({ array: n });return o.getEncodedHex();};if (d !== undefined) {this.setByParam(d);}};extendClass(KJUR.asn1.ocsp.BasicOCSPResponse, KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.ResponseData = function (c) {KJUR.asn1.ocsp.ResponseData.superclass.constructor.call(this);var h = Error,f = KJUR.asn1,d = f.DERSequence,e = f.DERGeneralizedTime,b = f.DERTaggedObject,g = f.x509.Extensions,i = f.ocsp,a = i.ResponderID;_SingleResponseList = i.SingleResponseList;this.params = null;this.getEncodedHex = function () {var m = this.params;if (m.respid != undefined) {new h("respid not specified");}if (m.prodat != undefined) {new h("prodat not specified");}if (m.array != undefined) {new h("array not specified");}var j = [];j.push(new a(m.respid));j.push(new e(m.prodat));j.push(new _SingleResponseList(m.array));if (m.ext != undefined) {var l = new g(m.ext);j.push(new b({ tag: "a1", explicit: true, obj: l }));}var k = new d({ array: j });return k.getEncodedHex();};this.setByParam = function (j) {this.params = j;};if (c !== undefined) {this.setByParam(c);}};extendClass(KJUR.asn1.ocsp.ResponseData, KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.ResponderID = function (d) {KJUR.asn1.ocsp.ResponderID.superclass.constructor.call(this);var b = KJUR.asn1,a = b.ASN1Util.newObject,c = b.x509.X500Name;this.params = null;this.getEncodedHex = function () {var f = this.params;if (f.key != undefined) {var e = a({ tag: { tag: "a2", explicit: true, obj: { octstr: { hex: f.key } } } });return e.getEncodedHex();} else {if (f.name != undefined) {var e = a({ tag: { tag: "a1", explicit: true, obj: new c(f.name) } });return e.getEncodedHex();}}throw new Error("key or name not specified");};this.setByParam = function (e) {this.params = e;};if (d !== undefined) {this.setByParam(d);}};extendClass(KJUR.asn1.ocsp.ResponderID, KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.SingleResponseList = function (d) {KJUR.asn1.ocsp.SingleResponseList.superclass.constructor.call(this);var c = KJUR.asn1,b = c.DERSequence,a = c.ocsp.SingleResponse;this.params = null;this.getEncodedHex = function () {var h = this.params;if (typeof h != "object" || h.length == undefined) {throw new Error("params not specified properly");}var e = [];for (var g = 0; g < h.length; g++) {e.push(new a(h[g]));}var f = new b({ array: e });return f.getEncodedHex();};this.setByParam = function (e) {this.params = e;};if (d !== undefined) {this.setByParam(d);}};extendClass(KJUR.asn1.ocsp.SingleResponseList, KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.SingleResponse = function (e) {var k = Error,a = KJUR,i = a.asn1,f = i.DERSequence,g = i.DERGeneralizedTime,b = i.DERTaggedObject,l = i.ocsp,h = l.CertID,c = l.CertStatus,d = i.x509,j = d.Extensions;l.SingleResponse.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var q = this.params;var n = [];if (q.certid == undefined) {throw new k("certid unspecified");}if (q.status == undefined) {throw new k("status unspecified");}if (q.thisupdate == undefined) {throw new k("thisupdate unspecified");}n.push(new h(q.certid));n.push(new c(q.status));n.push(new g(q.thisupdate));if (q.nextupdate != undefined) {var m = new g(q.nextupdate);n.push(new b({ tag: "a0", explicit: true, obj: m }));}if (q.ext != undefined) {var p = new j(q.ext);n.push(new b({ tag: "a1", explicit: true, obj: p }));}var o = new f({ array: n });return o.getEncodedHex();};this.setByParam = function (m) {this.params = m;};if (e !== undefined) {this.setByParam(e);}};extendClass(KJUR.asn1.ocsp.SingleResponse, KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.CertID = function (g) {var d = KJUR,k = d.asn1,m = k.DEROctetString,j = k.DERInteger,h = k.DERSequence,f = k.x509,n = f.AlgorithmIdentifier,o = k.ocsp,l = o.DEFAULT_HASH,i = d.crypto,e = i.Util.hashHex,c = X509,q = ASN1HEX;o.CertID.superclass.constructor.call(this);this.dHashAlg = null;this.dIssuerNameHash = null;this.dIssuerKeyHash = null;this.dSerialNumber = null;this.setByValue = function (t, s, p, r) {if (r === undefined) {r = l;}this.dHashAlg = new n({ name: r });this.dIssuerNameHash = new m({ hex: t });this.dIssuerKeyHash = new m({ hex: s });this.dSerialNumber = new j({ hex: p });};this.setByCert = function (x, t, v) {if (v === undefined) {v = l;}var p = new c();p.readCertPEM(t);var y = new c();y.readCertPEM(x);var z = y.getPublicKeyHex();var w = q.getTLVbyList(z, 0, [1, 0], "30");var r = p.getSerialNumberHex();var s = e(y.getSubjectHex(), v);var u = e(w, v);this.setByValue(s, u, r, v);this.hoge = p.getSerialNumberHex();};this.getEncodedHex = function () {if (this.dHashAlg === null && this.dIssuerNameHash === null && this.dIssuerKeyHash === null && this.dSerialNumber === null) {throw "not yet set values";}var p = [this.dHashAlg, this.dIssuerNameHash, this.dIssuerKeyHash, this.dSerialNumber];var r = new h({ array: p });this.hTLV = r.getEncodedHex();return this.hTLV;};if (g !== undefined) {var b = g;if (b.issuerCert !== undefined && b.subjectCert !== undefined) {var a = l;if (b.alg === undefined) {a = undefined;}this.setByCert(b.issuerCert, b.subjectCert, a);} else {if (b.issname !== undefined && b.isskey !== undefined && b.sbjsn !== undefined) {var a = l;if (b.alg === undefined) {a = undefined;}this.setByValue(b.issname, b.isskey, b.sbjsn, a);} else {throw new Error("invalid constructor arguments");}}}};extendClass(KJUR.asn1.ocsp.CertID, KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.CertStatus = function (a) {KJUR.asn1.ocsp.CertStatus.superclass.constructor.call(this);this.params = null;this.getEncodedHex = function () {var d = this.params;if (d.status == "good") {return "8000";}if (d.status == "unknown") {return "8200";}if (d.status == "revoked") {var c = [{ gentime: { str: d.time } }];if (d.reason != undefined) {c.push({ tag: { tag: "a0", explicit: true, obj: { "enum": { "int": d.reason } } } });}var b = { tag: "a1", explicit: false, obj: { seq: c } };return KJUR.asn1.ASN1Util.newObject({ tag: b }).getEncodedHex();}throw new Error("bad status");};this.setByParam = function (b) {this.params = b;};if (a !== undefined) {this.setByParam(a);}};extendClass(KJUR.asn1.ocsp.CertStatus, KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.Request = function (f) {var c = KJUR,b = c.asn1,a = b.DERSequence,d = b.ocsp;d.Request.superclass.constructor.call(this);this.dReqCert = null;this.dExt = null;this.getEncodedHex = function () {var g = [];if (this.dReqCert === null) {throw "reqCert not set";}g.push(this.dReqCert);var h = new a({ array: g });this.hTLV = h.getEncodedHex();return this.hTLV;};if (typeof f !== "undefined") {var e = new d.CertID(f);this.dReqCert = e;}};extendClass(KJUR.asn1.ocsp.Request, KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.TBSRequest = function (e) {var c = KJUR,b = c.asn1,a = b.DERSequence,d = b.ocsp;d.TBSRequest.superclass.constructor.call(this);this.version = 0;this.dRequestorName = null;this.dRequestList = [];this.dRequestExt = null;this.setRequestListByParam = function (h) {var f = [];for (var g = 0; g < h.length; g++) {var j = new d.Request(h[0]);f.push(j);}this.dRequestList = f;};this.getEncodedHex = function () {var f = [];if (this.version !== 0) {throw "not supported version: " + this.version;}if (this.dRequestorName !== null) {throw "requestorName not supported";}var h = new a({ array: this.dRequestList });f.push(h);if (this.dRequestExt !== null) {throw "requestExtensions not supported";}var g = new a({ array: f });this.hTLV = g.getEncodedHex();return this.hTLV;};if (e !== undefined) {if (e.reqList !== undefined) {this.setRequestListByParam(e.reqList);}}};extendClass(KJUR.asn1.ocsp.TBSRequest, KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.OCSPRequest = function (f) {var c = KJUR,b = c.asn1,a = b.DERSequence,d = b.ocsp;d.OCSPRequest.superclass.constructor.call(this);this.dTbsRequest = null;this.dOptionalSignature = null;this.getEncodedHex = function () {var g = [];if (this.dTbsRequest !== null) {g.push(this.dTbsRequest);} else {throw "tbsRequest not set";}if (this.dOptionalSignature !== null) {throw "optionalSignature not supported";}var h = new a({ array: g });this.hTLV = h.getEncodedHex();return this.hTLV;};if (f !== undefined) {if (f.reqList !== undefined) {var e = new d.TBSRequest(f);this.dTbsRequest = e;}}};extendClass(KJUR.asn1.ocsp.OCSPRequest, KJUR.asn1.ASN1Object);KJUR.asn1.ocsp.OCSPUtil = {};KJUR.asn1.ocsp.OCSPUtil.getRequestHex = function (a, b, h) {var d = KJUR,c = d.asn1,e = c.ocsp;if (h === undefined) {h = e.DEFAULT_HASH;}var g = { alg: h, issuerCert: a, subjectCert: b };var f = new e.OCSPRequest({ reqList: [g] });return f.getEncodedHex();};KJUR.asn1.ocsp.OCSPUtil.getOCSPResponseInfo = function (b) {var m = ASN1HEX,c = m.getVbyList,k = m.getVbyListEx,e = m.getIdxbyList,d = m.getIdxbyListEx,g = m.getV;var n = {};try {var j = k(b, 0, [0], "0a");n.responseStatus = parseInt(j, 16);} catch (f) {}if (n.responseStatus !== 0) {return n;}try {var i = e(b, 0, [1, 0, 1, 0, 0, 2, 0, 1]);if (b.substr(i, 2) === "80") {n.certStatus = "good";} else {if (b.substr(i, 2) === "a1") {n.certStatus = "revoked";n.revocationTime = hextoutf8(c(b, i, [0]));} else {if (b.substr(i, 2) === "82") {n.certStatus = "unknown";}}}} catch (f) {}try {var a = e(b, 0, [1, 0, 1, 0, 0, 2, 0, 2]);n.thisUpdate = hextoutf8(g(b, a));} catch (f) {}try {var l = e(b, 0, [1, 0, 1, 0, 0, 2, 0, 3]);if (b.substr(l, 2) === "a0") {n.nextUpdate = hextoutf8(c(b, l, [0]));}} catch (f) {}return n;};KJUR.asn1.ocsp.OCSPParser = function () {var e = Error,a = X509,f = new a(),i = ASN1HEX,g = i.getV,b = i.getTLV,d = i.getIdxbyList,c = i.getTLVbyListEx,h = i.getChildIdx;this.getOCSPRequest = function (l) {var k = h(l, 0);if (k.length != 1 && k.length != 2) {throw new e("wrong number elements: " + k.length);}var j = this.getTBSRequest(b(l, k[0]));return j;};this.getTBSRequest = function (l) {var j = {};var k = c(l, 0, [0], "30");j.array = this.getRequestList(k);var m = c(l, 0, ["[2]", 0], "30");if (m != null) {j.ext = f.getExtParamArray(m);}return j;};this.getRequestList = function (m) {var j = [];var k = h(m, 0);for (var l = 0; l < k.length; l++) {var m = b(m, k[l]);j.push(this.getRequest(m));}return j;};this.getRequest = function (k) {var j = h(k, 0);if (j.length != 1 && j.length != 2) {throw new e("wrong number elements: " + j.length);}var m = this.getCertID(b(k, j[0]));if (j.length == 2) {var l = d(k, 0, [1, 0]);m.ext = f.getExtParamArray(b(k, l));}return m;};this.getCertID = function (m) {var l = h(m, 0);if (l.length != 4) {throw new e("wrong number elements: " + l.length);}var k = new a();var j = {};j.alg = k.getAlgorithmIdentifierName(b(m, l[0]));j.issname = g(m, l[1]);j.isskey = g(m, l[2]);j.sbjsn = g(m, l[3]);return j;};};
var KJUR;if (typeof KJUR == "undefined" || !KJUR) {KJUR = {};}if (typeof KJUR.lang == "undefined" || !KJUR.lang) {KJUR.lang = {};}KJUR.lang.String = function () {};function Base64x() {}function stoBA(d) {var b = new Array();for (var c = 0; c < d.length; c++) {b[c] = d.charCodeAt(c);}return b;}function BAtos(b) {var d = "";for (var c = 0; c < b.length; c++) {d = d + String.fromCharCode(b[c]);}return d;}function BAtohex(b) {var e = "";for (var d = 0; d < b.length; d++) {var c = b[d].toString(16);if (c.length == 1) {c = "0" + c;}e = e + c;}return e;}function stohex(a) {return BAtohex(stoBA(a));}function stob64(a) {return hex2b64(stohex(a));}function stob64u(a) {return b64tob64u(hex2b64(stohex(a)));}function b64utos(a) {return BAtos(b64toBA(b64utob64(a)));}function b64tob64u(a) {a = a.replace(/\=/g, "");a = a.replace(/\+/g, "-");a = a.replace(/\//g, "_");return a;}function b64utob64(a) {if (a.length % 4 == 2) {a = a + "==";} else {if (a.length % 4 == 3) {a = a + "=";}}a = a.replace(/-/g, "+");a = a.replace(/_/g, "/");return a;}function hextob64u(a) {if (a.length % 2 == 1) {a = "0" + a;}return b64tob64u(hex2b64(a));}function b64utohex(a) {return b64tohex(b64utob64(a));}var utf8tob64u, b64utoutf8;if (typeof Buffer === "function") {utf8tob64u = function utf8tob64u(a) {return b64tob64u(Buffer.from(a, "utf8").toString("base64"));};b64utoutf8 = function b64utoutf8(a) {return Buffer.from(b64utob64(a), "base64").toString("utf8");};} else {utf8tob64u = function utf8tob64u(a) {return hextob64u(uricmptohex(encodeURIComponentAll(a)));};b64utoutf8 = function b64utoutf8(a) {return decodeURIComponent(hextouricmp(b64utohex(a)));};}function utf8tob64(a) {return hex2b64(uricmptohex(encodeURIComponentAll(a)));}function b64toutf8(a) {return decodeURIComponent(hextouricmp(b64tohex(a)));}function utf8tohex(a) {return uricmptohex(encodeURIComponentAll(a));}function hextoutf8(a) {return decodeURIComponent(hextouricmp(a));}function hextorstr(c) {var b = "";for (var a = 0; a < c.length - 1; a += 2) {b += String.fromCharCode(parseInt(c.substr(a, 2), 16));}return b;}function rstrtohex(c) {var a = "";for (var b = 0; b < c.length; b++) {a += ("0" + c.charCodeAt(b).toString(16)).slice(-2);}return a;}function hextob64(a) {return hex2b64(a);}function hextob64nl(b) {var a = hextob64(b);var c = a.replace(/(.{64})/g, "$1\r\n");c = c.replace(/\r\n$/, "");return c;}function b64nltohex(b) {var a = b.replace(/[^0-9A-Za-z\/+=]*/g, "");var c = b64tohex(a);return c;}function hextopem(a, b) {var c = hextob64nl(a);return "-----BEGIN " + b + "-----\r\n" + c + "\r\n-----END " + b + "-----\r\n";}function pemtohex(a, b) {if (a.indexOf("-----BEGIN ") == -1) {throw "can't find PEM header: " + b;}if (b !== undefined) {a = a.replace(new RegExp("^[^]*-----BEGIN " + b + "-----"), "");a = a.replace(new RegExp("-----END " + b + "-----[^]*$"), "");} else {a = a.replace(/^[^]*-----BEGIN [^-]+-----/, "");a = a.replace(/-----END [^-]+-----[^]*$/, "");}return b64nltohex(a);}function hextoArrayBuffer(d) {if (d.length % 2 != 0) {throw "input is not even length";}if (d.match(/^[0-9A-Fa-f]+$/) == null) {throw "input is not hexadecimal";}var b = new ArrayBuffer(d.length / 2);var a = new DataView(b);for (var c = 0; c < d.length / 2; c++) {a.setUint8(c, parseInt(d.substr(c * 2, 2), 16));}return b;}function ArrayBuffertohex(b) {var d = "";var a = new DataView(b);for (var c = 0; c < b.byteLength; c++) {d += ("00" + a.getUint8(c).toString(16)).slice(-2);}return d;}function zulutomsec(n) {var l, j, m, e, f, i, b, k;var a, h, g, c;c = n.match(/^(\d{2}|\d{4})(\d\d)(\d\d)(\d\d)(\d\d)(\d\d)(|\.\d+)Z$/);if (c) {a = c[1];l = parseInt(a);if (a.length === 2) {if (50 <= l && l < 100) {l = 1900 + l;} else {if (0 <= l && l < 50) {l = 2000 + l;}}}j = parseInt(c[2]) - 1;m = parseInt(c[3]);e = parseInt(c[4]);f = parseInt(c[5]);i = parseInt(c[6]);b = 0;h = c[7];if (h !== "") {g = (h.substr(1) + "00").substr(0, 3);b = parseInt(g);}return Date.UTC(l, j, m, e, f, i, b);}throw "unsupported zulu format: " + n;}function zulutosec(a) {var b = zulutomsec(a);return ~~(b / 1000);}function zulutodate(a) {return new Date(zulutomsec(a));}function datetozulu(g, e, f) {var b;var a = g.getUTCFullYear();if (e) {if (a < 1950 || 2049 < a) {throw "not proper year for UTCTime: " + a;}b = ("" + a).slice(-2);} else {b = ("000" + a).slice(-4);}b += ("0" + (g.getUTCMonth() + 1)).slice(-2);b += ("0" + g.getUTCDate()).slice(-2);b += ("0" + g.getUTCHours()).slice(-2);b += ("0" + g.getUTCMinutes()).slice(-2);b += ("0" + g.getUTCSeconds()).slice(-2);if (f) {var c = g.getUTCMilliseconds();if (c !== 0) {c = ("00" + c).slice(-3);c = c.replace(/0+$/g, "");b += "." + c;}}b += "Z";return b;}function uricmptohex(a) {return a.replace(/%/g, "");}function hextouricmp(a) {return a.replace(/(..)/g, "%$1");}function ipv6tohex(g) {var b = "malformed IPv6 address";if (!g.match(/^[0-9A-Fa-f:]+$/)) {throw b;}g = g.toLowerCase();var d = g.split(":").length - 1;if (d < 2) {throw b;}var e = ":".repeat(7 - d + 2);g = g.replace("::", e);var c = g.split(":");if (c.length != 8) {throw b;}for (var f = 0; f < 8; f++) {c[f] = ("0000" + c[f]).slice(-4);}return c.join("");}function hextoipv6(e) {if (!e.match(/^[0-9A-Fa-f]{32}$/)) {throw "malformed IPv6 address octet";}e = e.toLowerCase();var b = e.match(/.{1,4}/g);for (var d = 0; d < 8; d++) {b[d] = b[d].replace(/^0+/, "");if (b[d] == "") {b[d] = "0";}}e = ":" + b.join(":") + ":";var c = e.match(/:(0:){2,}/g);if (c === null) {return e.slice(1, -1);}var f = "";for (var d = 0; d < c.length; d++) {if (c[d].length > f.length) {f = c[d];}}e = e.replace(f, "::");return e.slice(1, -1);}function hextoip(b) {var d = "malformed hex value";if (!b.match(/^([0-9A-Fa-f][0-9A-Fa-f]){1,}$/)) {throw d;}if (b.length == 8) {var c;try {c = parseInt(b.substr(0, 2), 16) + "." + parseInt(b.substr(2, 2), 16) + "." + parseInt(b.substr(4, 2), 16) + "." + parseInt(b.substr(6, 2), 16);return c;} catch (a) {throw d;}} else {if (b.length == 32) {return hextoipv6(b);} else {return b;}}}function iptohex(f) {var j = "malformed IP address";f = f.toLowerCase(f);if (f.match(/^[0-9.]+$/)) {var b = f.split(".");if (b.length !== 4) {throw j;}var g = "";try {for (var e = 0; e < 4; e++) {var h = parseInt(b[e]);g += ("0" + h.toString(16)).slice(-2);}return g;} catch (c) {throw j;}} else {if (f.match(/^[0-9a-f:]+$/) && f.indexOf(":") !== -1) {return ipv6tohex(f);} else {throw j;}}}function ucs2hextoutf8(d) {function e(f) {var h = parseInt(f.substr(0, 2), 16);var a = parseInt(f.substr(2), 16);if (h == 0 & a < 128) {return String.fromCharCode(a);}if (h < 8) {var j = 192 | (h & 7) << 3 | (a & 192) >> 6;var i = 128 | a & 63;return hextoutf8(j.toString(16) + i.toString(16));}var j = 224 | (h & 240) >> 4;var i = 128 | (h & 15) << 2 | (a & 192) >> 6;var g = 128 | a & 63;return hextoutf8(j.toString(16) + i.toString(16) + g.toString(16));}var c = d.match(/.{4}/g);var b = c.map(e);return b.join("");}function encodeURIComponentAll(a) {var d = encodeURIComponent(a);var b = "";for (var c = 0; c < d.length; c++) {if (d[c] == "%") {b = b + d.substr(c, 3);c = c + 2;} else {b = b + "%" + stohex(d[c]);}}return b;}function newline_toUnix(a) {a = a.replace(/\r\n/mg, "\n");return a;}function newline_toDos(a) {a = a.replace(/\r\n/mg, "\n");a = a.replace(/\n/mg, "\r\n");return a;}KJUR.lang.String.isInteger = function (a) {if (a.match(/^[0-9]+$/)) {return true;} else {if (a.match(/^-[0-9]+$/)) {return true;} else {return false;}}};KJUR.lang.String.isHex = function (a) {return ishex(a);};function ishex(a) {if (a.length % 2 == 0 && (a.match(/^[0-9a-f]+$/) || a.match(/^[0-9A-F]+$/))) {return true;} else {return false;}}KJUR.lang.String.isBase64 = function (a) {a = a.replace(/\s+/g, "");if (a.match(/^[0-9A-Za-z+\/]+={0,3}$/) && a.length % 4 == 0) {return true;} else {return false;}};KJUR.lang.String.isBase64URL = function (a) {if (a.match(/[+/=]/)) {return false;}a = b64utob64(a);return KJUR.lang.String.isBase64(a);};KJUR.lang.String.isIntegerArray = function (a) {a = a.replace(/\s+/g, "");if (a.match(/^\[[0-9,]+\]$/)) {return true;} else {return false;}};KJUR.lang.String.isPrintable = function (a) {if (a.match(/^[0-9A-Za-z '()+,-./:=?]*$/) !== null) {return true;}return false;};KJUR.lang.String.isIA5 = function (a) {if (a.match(/^[\x20-\x21\x23-\x7f]*$/) !== null) {return true;}return false;};KJUR.lang.String.isMail = function (a) {if (a.match(/^[A-Za-z0-9]{1}[A-Za-z0-9_.-]*@{1}[A-Za-z0-9_.-]{1,}\.[A-Za-z0-9]{1,}$/) !== null) {return true;}return false;};function hextoposhex(a) {if (a.length % 2 == 1) {return "0" + a;}if (a.substr(0, 1) > "7") {return "00" + a;}return a;}function intarystrtohex(b) {b = b.replace(/^\s*\[\s*/, "");b = b.replace(/\s*\]\s*$/, "");b = b.replace(/\s*/g, "");try {var c = b.split(/,/).map(function (g, e, h) {var f = parseInt(g);if (f < 0 || 255 < f) {throw "integer not in range 0-255";}var d = ("00" + f.toString(16)).slice(-2);return d;}).join("");return c;} catch (a) {throw "malformed integer array string: " + a;}}var strdiffidx = function strdiffidx(c, a) {var d = c.length;if (c.length > a.length) {d = a.length;}for (var b = 0; b < d; b++) {if (c.charCodeAt(b) != a.charCodeAt(b)) {return b;}}if (c.length != a.length) {return d;}return -1;};function oidtohex(g) {var f = function f(a) {var l = a.toString(16);if (l.length == 1) {l = "0" + l;}return l;};var e = function e(p) {var o = "";var l = parseInt(p, 10);var a = l.toString(2);var m = 7 - a.length % 7;if (m == 7) {m = 0;}var r = "";for (var n = 0; n < m; n++) {r += "0";}a = r + a;for (var n = 0; n < a.length - 1; n += 7) {var q = a.substr(n, 7);if (n != a.length - 7) {q = "1" + q;}o += f(parseInt(q, 2));}return o;};try {if (!g.match(/^[0-9.]+$/)) {return null;}var j = "";var b = g.split(".");var k = parseInt(b[0], 10) * 40 + parseInt(b[1], 10);j += f(k);b.splice(0, 2);for (var d = 0; d < b.length; d++) {j += e(b[d]);}return j;} catch (c) {return null;}}function hextooid(g) {if (!ishex(g)) {return null;}try {var m = [];var p = g.substr(0, 2);var e = parseInt(p, 16);m[0] = new String(Math.floor(e / 40));m[1] = new String(e % 40);var n = g.substr(2);var l = [];for (var f = 0; f < n.length / 2; f++) {l.push(parseInt(n.substr(f * 2, 2), 16));}var k = [];var d = "";for (var f = 0; f < l.length; f++) {if (l[f] & 128) {d = d + strpad((l[f] & 127).toString(2), 7);} else {d = d + strpad((l[f] & 127).toString(2), 7);k.push(new String(parseInt(d, 2)));d = "";}}var o = m.join(".");if (k.length > 0) {o = o + "." + k.join(".");}return o;} catch (j) {return null;}}var strpad = function strpad(c, b, a) {if (a == undefined) {a = "0";}if (c.length >= b) {return c;}return new Array(b - c.length + 1).join(a) + c;};function bitstrtoint(e) {try {var a = e.substr(0, 2);if (a == "00") {return parseInt(e.substr(2), 16);}var b = parseInt(a, 16);var f = e.substr(2);var d = parseInt(f, 16).toString(2);if (d == "0") {d = "00000000";}d = d.slice(0, 0 - b);return parseInt(d, 2);} catch (c) {return -1;}}function inttobitstr(e) {var c = Number(e).toString(2);var b = 8 - c.length % 8;if (b == 8) {b = 0;}c = c + strpad("", b, "0");var d = parseInt(c, 2).toString(16);if (d.length % 2 == 1) {d = "0" + d;}var a = "0" + b;return a + d;}function extendClass(c, a) {var b = function b() {};b.prototype = a.prototype;c.prototype = new b();c.prototype.constructor = c;c.superclass = a.prototype;if (a.prototype.constructor == Object.prototype.constructor) {a.prototype.constructor = a;}};
if (typeof KJUR == "undefined" || !KJUR) {KJUR = {};}if (typeof KJUR.crypto == "undefined" || !KJUR.crypto) {KJUR.crypto = {};}KJUR.crypto.Util = new function () {this.DIGESTINFOHEAD = { sha1: "3021300906052b0e03021a05000414", sha224: "302d300d06096086480165030402040500041c", sha256: "3031300d060960864801650304020105000420", sha384: "3041300d060960864801650304020205000430", sha512: "3051300d060960864801650304020305000440", md2: "3020300c06082a864886f70d020205000410", md5: "3020300c06082a864886f70d020505000410", ripemd160: "3021300906052b2403020105000414" };this.DEFAULTPROVIDER = { md5: "cryptojs", sha1: "cryptojs", sha224: "cryptojs", sha256: "cryptojs", sha384: "cryptojs", sha512: "cryptojs", ripemd160: "cryptojs", hmacmd5: "cryptojs", hmacsha1: "cryptojs", hmacsha224: "cryptojs", hmacsha256: "cryptojs", hmacsha384: "cryptojs", hmacsha512: "cryptojs", hmacripemd160: "cryptojs", MD5withRSA: "cryptojs/jsrsa", SHA1withRSA: "cryptojs/jsrsa", SHA224withRSA: "cryptojs/jsrsa", SHA256withRSA: "cryptojs/jsrsa", SHA384withRSA: "cryptojs/jsrsa", SHA512withRSA: "cryptojs/jsrsa", RIPEMD160withRSA: "cryptojs/jsrsa", MD5withECDSA: "cryptojs/jsrsa", SHA1withECDSA: "cryptojs/jsrsa", SHA224withECDSA: "cryptojs/jsrsa", SHA256withECDSA: "cryptojs/jsrsa", SHA384withECDSA: "cryptojs/jsrsa", SHA512withECDSA: "cryptojs/jsrsa", RIPEMD160withECDSA: "cryptojs/jsrsa", SHA1withDSA: "cryptojs/jsrsa", SHA224withDSA: "cryptojs/jsrsa", SHA256withDSA: "cryptojs/jsrsa", MD5withRSAandMGF1: "cryptojs/jsrsa", SHAwithRSAandMGF1: "cryptojs/jsrsa", SHA1withRSAandMGF1: "cryptojs/jsrsa", SHA224withRSAandMGF1: "cryptojs/jsrsa", SHA256withRSAandMGF1: "cryptojs/jsrsa", SHA384withRSAandMGF1: "cryptojs/jsrsa", SHA512withRSAandMGF1: "cryptojs/jsrsa", RIPEMD160withRSAandMGF1: "cryptojs/jsrsa" };this.CRYPTOJSMESSAGEDIGESTNAME = { md5: CryptoJS.algo.MD5, sha1: CryptoJS.algo.SHA1, sha224: CryptoJS.algo.SHA224, sha256: CryptoJS.algo.SHA256, sha384: CryptoJS.algo.SHA384, sha512: CryptoJS.algo.SHA512, ripemd160: CryptoJS.algo.RIPEMD160 };this.getDigestInfoHex = function (a, b) {if (typeof this.DIGESTINFOHEAD[b] == "undefined") {throw "alg not supported in Util.DIGESTINFOHEAD: " + b;}return this.DIGESTINFOHEAD[b] + a;};this.getPaddedDigestInfoHex = function (h, a, j) {var c = this.getDigestInfoHex(h, a);var d = j / 4;if (c.length + 22 > d) {throw "key is too short for SigAlg: keylen=" + j + "," + a;}var b = "0001";var k = "00" + c;var g = "";var l = d - b.length - k.length;for (var f = 0; f < l; f += 2) {g += "ff";}var e = b + g + k;return e;};this.hashString = function (a, c) {var b = new KJUR.crypto.MessageDigest({ alg: c });return b.digestString(a);};this.hashHex = function (b, c) {var a = new KJUR.crypto.MessageDigest({ alg: c });return a.digestHex(b);};this.sha1 = function (a) {return this.hashString(a, "sha1");};this.sha256 = function (a) {return this.hashString(a, "sha256");};this.sha256Hex = function (a) {return this.hashHex(a, "sha256");};this.sha512 = function (a) {return this.hashString(a, "sha512");};this.sha512Hex = function (a) {return this.hashHex(a, "sha512");};this.isKey = function (a) {if (a instanceof RSAKey || a instanceof KJUR.crypto.DSA || a instanceof KJUR.crypto.ECDSA) {return true;} else {return false;}};}();KJUR.crypto.Util.md5 = function (a) {var b = new KJUR.crypto.MessageDigest({ alg: "md5", prov: "cryptojs" });return b.digestString(a);};KJUR.crypto.Util.ripemd160 = function (a) {var b = new KJUR.crypto.MessageDigest({ alg: "ripemd160", prov: "cryptojs" });return b.digestString(a);};KJUR.crypto.Util.SECURERANDOMGEN = new SecureRandom();KJUR.crypto.Util.getRandomHexOfNbytes = function (b) {var a = new Array(b);KJUR.crypto.Util.SECURERANDOMGEN.nextBytes(a);return BAtohex(a);};KJUR.crypto.Util.getRandomBigIntegerOfNbytes = function (a) {return new BigInteger(KJUR.crypto.Util.getRandomHexOfNbytes(a), 16);};KJUR.crypto.Util.getRandomHexOfNbits = function (d) {var c = d % 8;var a = (d - c) / 8;var b = new Array(a + 1);KJUR.crypto.Util.SECURERANDOMGEN.nextBytes(b);b[0] = (255 << c & 255 ^ 255) & b[0];return BAtohex(b);};KJUR.crypto.Util.getRandomBigIntegerOfNbits = function (a) {return new BigInteger(KJUR.crypto.Util.getRandomHexOfNbits(a), 16);};KJUR.crypto.Util.getRandomBigIntegerZeroToMax = function (b) {var a = b.bitLength();while (1) {var c = KJUR.crypto.Util.getRandomBigIntegerOfNbits(a);if (b.compareTo(c) != -1) {return c;}}};KJUR.crypto.Util.getRandomBigIntegerMinToMax = function (e, b) {var c = e.compareTo(b);if (c == 1) {throw "biMin is greater than biMax";}if (c == 0) {return e;}var a = b.subtract(e);var d = KJUR.crypto.Util.getRandomBigIntegerZeroToMax(a);return d.add(e);};KJUR.crypto.MessageDigest = function (c) {var b = null;var a = null;var d = null;this.setAlgAndProvider = function (g, f) {g = KJUR.crypto.MessageDigest.getCanonicalAlgName(g);if (g !== null && f === undefined) {f = KJUR.crypto.Util.DEFAULTPROVIDER[g];}if (":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(g) != -1 && f == "cryptojs") {try {this.md = KJUR.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[g].create();} catch (e) {throw "setAlgAndProvider hash alg set fail alg=" + g + "/" + e;}this.updateString = function (h) {this.md.update(h);};this.updateHex = function (h) {var i = CryptoJS.enc.Hex.parse(h);this.md.update(i);};this.digest = function () {var h = this.md.finalize();return h.toString(CryptoJS.enc.Hex);};this.digestString = function (h) {this.updateString(h);return this.digest();};this.digestHex = function (h) {this.updateHex(h);return this.digest();};}if (":sha256:".indexOf(g) != -1 && f == "sjcl") {try {this.md = new sjcl.hash.sha256();} catch (e) {throw "setAlgAndProvider hash alg set fail alg=" + g + "/" + e;}this.updateString = function (h) {this.md.update(h);};this.updateHex = function (i) {var h = sjcl.codec.hex.toBits(i);this.md.update(h);};this.digest = function () {var h = this.md.finalize();return sjcl.codec.hex.fromBits(h);};this.digestString = function (h) {this.updateString(h);return this.digest();};this.digestHex = function (h) {this.updateHex(h);return this.digest();};}};this.updateString = function (e) {throw "updateString(str) not supported for this alg/prov: " + this.algName + "/" + this.provName;};this.updateHex = function (e) {throw "updateHex(hex) not supported for this alg/prov: " + this.algName + "/" + this.provName;};this.digest = function () {throw "digest() not supported for this alg/prov: " + this.algName + "/" + this.provName;};this.digestString = function (e) {throw "digestString(str) not supported for this alg/prov: " + this.algName + "/" + this.provName;};this.digestHex = function (e) {throw "digestHex(hex) not supported for this alg/prov: " + this.algName + "/" + this.provName;};if (c !== undefined) {if (c.alg !== undefined) {this.algName = c.alg;if (c.prov === undefined) {this.provName = KJUR.crypto.Util.DEFAULTPROVIDER[this.algName];}this.setAlgAndProvider(this.algName, this.provName);}}};KJUR.crypto.MessageDigest.getCanonicalAlgName = function (a) {if (typeof a === "string") {a = a.toLowerCase();a = a.replace(/-/, "");}return a;};KJUR.crypto.MessageDigest.getHashLength = function (c) {var b = KJUR.crypto.MessageDigest;var a = b.getCanonicalAlgName(c);if (b.HASHLENGTH[a] === undefined) {throw "not supported algorithm: " + c;}return b.HASHLENGTH[a];};KJUR.crypto.MessageDigest.HASHLENGTH = { md5: 16, sha1: 20, sha224: 28, sha256: 32, sha384: 48, sha512: 64, ripemd160: 20 };KJUR.crypto.Mac = function (d) {var f = null;var c = null;var a = null;var e = null;var b = null;this.setAlgAndProvider = function (k, i) {k = k.toLowerCase();if (k == null) {k = "hmacsha1";}k = k.toLowerCase();if (k.substr(0, 4) != "hmac") {throw "setAlgAndProvider unsupported HMAC alg: " + k;}if (i === undefined) {i = KJUR.crypto.Util.DEFAULTPROVIDER[k];}this.algProv = k + "/" + i;var g = k.substr(4);if (":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(g) != -1 && i == "cryptojs") {try {var j = KJUR.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[g];this.mac = CryptoJS.algo.HMAC.create(j, this.pass);} catch (h) {throw "setAlgAndProvider hash alg set fail hashAlg=" + g + "/" + h;}this.updateString = function (l) {this.mac.update(l);};this.updateHex = function (l) {var m = CryptoJS.enc.Hex.parse(l);this.mac.update(m);};this.doFinal = function () {var l = this.mac.finalize();return l.toString(CryptoJS.enc.Hex);};this.doFinalString = function (l) {this.updateString(l);return this.doFinal();};this.doFinalHex = function (l) {this.updateHex(l);return this.doFinal();};}};this.updateString = function (g) {throw "updateString(str) not supported for this alg/prov: " + this.algProv;};this.updateHex = function (g) {throw "updateHex(hex) not supported for this alg/prov: " + this.algProv;};this.doFinal = function () {throw "digest() not supported for this alg/prov: " + this.algProv;};this.doFinalString = function (g) {throw "digestString(str) not supported for this alg/prov: " + this.algProv;};this.doFinalHex = function (g) {throw "digestHex(hex) not supported for this alg/prov: " + this.algProv;};this.setPassword = function (h) {if (typeof h == "string") {var g = h;if (h.length % 2 == 1 || !h.match(/^[0-9A-Fa-f]+$/)) {g = rstrtohex(h);}this.pass = CryptoJS.enc.Hex.parse(g);return;}if (typeof h != "object") {throw "KJUR.crypto.Mac unsupported password type: " + h;}var g = null;if (h.hex !== undefined) {if (h.hex.length % 2 != 0 || !h.hex.match(/^[0-9A-Fa-f]+$/)) {throw "Mac: wrong hex password: " + h.hex;}g = h.hex;}if (h.utf8 !== undefined) {g = utf8tohex(h.utf8);}if (h.rstr !== undefined) {g = rstrtohex(h.rstr);}if (h.b64 !== undefined) {g = b64tohex(h.b64);}if (h.b64u !== undefined) {g = b64utohex(h.b64u);}if (g == null) {throw "KJUR.crypto.Mac unsupported password type: " + h;}this.pass = CryptoJS.enc.Hex.parse(g);};if (d !== undefined) {if (d.pass !== undefined) {this.setPassword(d.pass);}if (d.alg !== undefined) {this.algName = d.alg;if (d.prov === undefined) {this.provName = KJUR.crypto.Util.DEFAULTPROVIDER[this.algName];}this.setAlgAndProvider(this.algName, this.provName);}}};KJUR.crypto.Signature = function (o) {var q = null;var n = null;var r = null;var c = null;var l = null;var d = null;var k = null;var h = null;var p = null;var e = null;var b = -1;var g = null;var j = null;var a = null;var i = null;var f = null;this._setAlgNames = function () {var s = this.algName.match(/^(.+)with(.+)$/);if (s) {this.mdAlgName = s[1].toLowerCase();this.pubkeyAlgName = s[2].toLowerCase();if (this.pubkeyAlgName == "rsaandmgf1" && this.mdAlgName == "sha") {this.mdAlgName = "sha1";}}};this._zeroPaddingOfSignature = function (x, w) {var v = "";var t = w / 4 - x.length;for (var u = 0; u < t; u++) {v = v + "0";}return v + x;};this.setAlgAndProvider = function (u, t) {this._setAlgNames();if (t != "cryptojs/jsrsa") {throw new Error("provider not supported: " + t);}if (":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(this.mdAlgName) != -1) {try {this.md = new KJUR.crypto.MessageDigest({ alg: this.mdAlgName });} catch (s) {throw new Error("setAlgAndProvider hash alg set fail alg=" + this.mdAlgName + "/" + s);}this.init = function (w, x) {var y = null;try {if (x === undefined) {y = KEYUTIL.getKey(w);} else {y = KEYUTIL.getKey(w, x);}} catch (v) {throw "init failed:" + v;}if (y.isPrivate === true) {this.prvKey = y;this.state = "SIGN";} else {if (y.isPublic === true) {this.pubKey = y;this.state = "VERIFY";} else {throw "init failed.:" + y;}}};this.updateString = function (v) {this.md.updateString(v);};this.updateHex = function (v) {this.md.updateHex(v);};this.sign = function () {this.sHashHex = this.md.digest();if (this.prvKey === undefined && this.ecprvhex !== undefined && this.eccurvename !== undefined && KJUR.crypto.ECDSA !== undefined) {this.prvKey = new KJUR.crypto.ECDSA({ curve: this.eccurvename, prv: this.ecprvhex });}if (this.prvKey instanceof RSAKey && this.pubkeyAlgName === "rsaandmgf1") {this.hSign = this.prvKey.signWithMessageHashPSS(this.sHashHex, this.mdAlgName, this.pssSaltLen);} else {if (this.prvKey instanceof RSAKey && this.pubkeyAlgName === "rsa") {this.hSign = this.prvKey.signWithMessageHash(this.sHashHex, this.mdAlgName);} else {if (this.prvKey instanceof KJUR.crypto.ECDSA) {this.hSign = this.prvKey.signWithMessageHash(this.sHashHex);} else {if (this.prvKey instanceof KJUR.crypto.DSA) {this.hSign = this.prvKey.signWithMessageHash(this.sHashHex);} else {throw "Signature: unsupported private key alg: " + this.pubkeyAlgName;}}}}return this.hSign;};this.signString = function (v) {this.updateString(v);return this.sign();};this.signHex = function (v) {this.updateHex(v);return this.sign();};this.verify = function (v) {this.sHashHex = this.md.digest();if (this.pubKey === undefined && this.ecpubhex !== undefined && this.eccurvename !== undefined && KJUR.crypto.ECDSA !== undefined) {this.pubKey = new KJUR.crypto.ECDSA({ curve: this.eccurvename, pub: this.ecpubhex });}if (this.pubKey instanceof RSAKey && this.pubkeyAlgName === "rsaandmgf1") {return this.pubKey.verifyWithMessageHashPSS(this.sHashHex, v, this.mdAlgName, this.pssSaltLen);} else {if (this.pubKey instanceof RSAKey && this.pubkeyAlgName === "rsa") {return this.pubKey.verifyWithMessageHash(this.sHashHex, v);} else {if (KJUR.crypto.ECDSA !== undefined && this.pubKey instanceof KJUR.crypto.ECDSA) {return this.pubKey.verifyWithMessageHash(this.sHashHex, v);} else {if (KJUR.crypto.DSA !== undefined && this.pubKey instanceof KJUR.crypto.DSA) {return this.pubKey.verifyWithMessageHash(this.sHashHex, v);} else {throw "Signature: unsupported public key alg: " + this.pubkeyAlgName;}}}}};}};this.init = function (s, t) {throw "init(key, pass) not supported for this alg:prov=" + this.algProvName;};this.updateString = function (s) {throw "updateString(str) not supported for this alg:prov=" + this.algProvName;};this.updateHex = function (s) {throw "updateHex(hex) not supported for this alg:prov=" + this.algProvName;};this.sign = function () {throw "sign() not supported for this alg:prov=" + this.algProvName;};this.signString = function (s) {throw "digestString(str) not supported for this alg:prov=" + this.algProvName;};this.signHex = function (s) {throw "digestHex(hex) not supported for this alg:prov=" + this.algProvName;};this.verify = function (s) {throw "verify(hSigVal) not supported for this alg:prov=" + this.algProvName;};this.initParams = o;if (o !== undefined) {if (o.alg !== undefined) {this.algName = o.alg;if (o.prov === undefined) {this.provName = KJUR.crypto.Util.DEFAULTPROVIDER[this.algName];} else {this.provName = o.prov;}this.algProvName = this.algName + ":" + this.provName;this.setAlgAndProvider(this.algName, this.provName);this._setAlgNames();}if (o.psssaltlen !== undefined) {this.pssSaltLen = o.psssaltlen;}if (o.prvkeypem !== undefined) {if (o.prvkeypas !== undefined) {throw "both prvkeypem and prvkeypas parameters not supported";} else {try {var q = KEYUTIL.getKey(o.prvkeypem);this.init(q);} catch (m) {throw "fatal error to load pem private key: " + m;}}}}};KJUR.crypto.Cipher = function (a) {};KJUR.crypto.Cipher.encrypt = function (e, f, d) {if (f instanceof RSAKey && f.isPublic) {var c = KJUR.crypto.Cipher.getAlgByKeyAndName(f, d);if (c === "RSA") {return f.encrypt(e);}if (c === "RSAOAEP") {return f.encryptOAEP(e, "sha1");}var b = c.match(/^RSAOAEP(\d+)$/);if (b !== null) {return f.encryptOAEP(e, "sha" + b[1]);}throw "Cipher.encrypt: unsupported algorithm for RSAKey: " + d;} else {throw "Cipher.encrypt: unsupported key or algorithm";}};KJUR.crypto.Cipher.decrypt = function (e, f, d) {if (f instanceof RSAKey && f.isPrivate) {var c = KJUR.crypto.Cipher.getAlgByKeyAndName(f, d);if (c === "RSA") {return f.decrypt(e);}if (c === "RSAOAEP") {return f.decryptOAEP(e, "sha1");}var b = c.match(/^RSAOAEP(\d+)$/);if (b !== null) {return f.decryptOAEP(e, "sha" + b[1]);}throw "Cipher.decrypt: unsupported algorithm for RSAKey: " + d;} else {throw "Cipher.decrypt: unsupported key or algorithm";}};KJUR.crypto.Cipher.getAlgByKeyAndName = function (b, a) {if (b instanceof RSAKey) {if (":RSA:RSAOAEP:RSAOAEP224:RSAOAEP256:RSAOAEP384:RSAOAEP512:".indexOf(a) != -1) {return a;}if (a === null || a === undefined) {return "RSA";}throw "getAlgByKeyAndName: not supported algorithm name for RSAKey: " + a;}throw "getAlgByKeyAndName: not supported algorithm name: " + a;};KJUR.crypto.OID = new function () {this.oidhex2name = { "2a864886f70d010101": "rsaEncryption", "2a8648ce3d0201": "ecPublicKey", "2a8648ce380401": "dsa", "2a8648ce3d030107": "secp256r1", "2b8104001f": "secp192k1", "2b81040021": "secp224r1", "2b8104000a": "secp256k1", "2b81040023": "secp521r1", "2b81040022": "secp384r1", "2a8648ce380403": "SHA1withDSA", "608648016503040301": "SHA224withDSA", "608648016503040302": "SHA256withDSA" };}();
if (typeof KJUR == "undefined" || !KJUR) {KJUR = {};}if (typeof KJUR.crypto == "undefined" || !KJUR.crypto) {KJUR.crypto = {};}KJUR.crypto.ECDSA = function (e) {var g = "secp256r1";var p = null;var b = null;var i = null;var j = Error,f = BigInteger,h = ECPointFp,m = KJUR.crypto.ECDSA,c = KJUR.crypto.ECParameterDB,d = m.getName,q = ASN1HEX,n = q.getVbyListEx,k = q.isASN1HEX;var a = new SecureRandom();var o = null;this.type = "EC";this.isPrivate = false;this.isPublic = false;function l(x, t, w, s) {var r = Math.max(t.bitLength(), s.bitLength());var y = x.add2D(w);var v = x.curve.getInfinity();for (var u = r - 1; u >= 0; --u) {v = v.twice2D();v.z = f.ONE;if (t.testBit(u)) {if (s.testBit(u)) {v = v.add2D(y);} else {v = v.add2D(x);}} else {if (s.testBit(u)) {v = v.add2D(w);}}}return v;}this.getBigRandom = function (r) {return new f(r.bitLength(), a).mod(r.subtract(f.ONE)).add(f.ONE);};this.setNamedCurve = function (r) {this.ecparams = c.getByName(r);this.prvKeyHex = null;this.pubKeyHex = null;this.curveName = r;};this.setPrivateKeyHex = function (r) {this.isPrivate = true;this.prvKeyHex = r;};this.setPublicKeyHex = function (r) {this.isPublic = true;this.pubKeyHex = r;};this.getPublicKeyXYHex = function () {var t = this.pubKeyHex;if (t.substr(0, 2) !== "04") {throw "this method supports uncompressed format(04) only";}var s = this.ecparams.keylen / 4;if (t.length !== 2 + s * 2) {throw "malformed public key hex length";}var r = {};r.x = t.substr(2, s);r.y = t.substr(2 + s);return r;};this.getShortNISTPCurveName = function () {var r = this.curveName;if (r === "secp256r1" || r === "NIST P-256" || r === "P-256" || r === "prime256v1") {return "P-256";}if (r === "secp384r1" || r === "NIST P-384" || r === "P-384") {return "P-384";}return null;};this.generateKeyPairHex = function () {var t = this.ecparams.n;var w = this.getBigRandom(t);var u = this.ecparams.G.multiply(w);var z = u.getX().toBigInteger();var x = u.getY().toBigInteger();var r = this.ecparams.keylen / 4;var v = ("0000000000" + w.toString(16)).slice(-r);var A = ("0000000000" + z.toString(16)).slice(-r);var y = ("0000000000" + x.toString(16)).slice(-r);var s = "04" + A + y;this.setPrivateKeyHex(v);this.setPublicKeyHex(s);return { ecprvhex: v, ecpubhex: s };};this.signWithMessageHash = function (r) {return this.signHex(r, this.prvKeyHex);};this.signHex = function (x, u) {var A = new f(u, 16);var v = this.ecparams.n;var z = new f(x.substring(0, this.ecparams.keylen / 4), 16);do {var w = this.getBigRandom(v);var B = this.ecparams.G;var y = B.multiply(w);var t = y.getX().toBigInteger().mod(v);} while (t.compareTo(f.ZERO) <= 0);var C = w.modInverse(v).multiply(z.add(A.multiply(t))).mod(v);return m.biRSSigToASN1Sig(t, C);};this.sign = function (w, B) {var z = B;var u = this.ecparams.n;var y = f.fromByteArrayUnsigned(w);do {var v = this.getBigRandom(u);var A = this.ecparams.G;var x = A.multiply(v);var t = x.getX().toBigInteger().mod(u);} while (t.compareTo(BigInteger.ZERO) <= 0);var C = v.modInverse(u).multiply(y.add(z.multiply(t))).mod(u);return this.serializeSig(t, C);};this.verifyWithMessageHash = function (s, r) {return this.verifyHex(s, r, this.pubKeyHex);};this.verifyHex = function (v, y, u) {try {var t, B;var w = m.parseSigHex(y);t = w.r;B = w.s;var x = h.decodeFromHex(this.ecparams.curve, u);var z = new f(v.substring(0, this.ecparams.keylen / 4), 16);return this.verifyRaw(z, t, B, x);} catch (A) {return false;}};this.verify = function (z, A, u) {var w, t;if (Bitcoin.Util.isArray(A)) {var y = this.parseSig(A);w = y.r;t = y.s;} else {if ("object" === typeof A && A.r && A.s) {w = A.r;t = A.s;} else {throw "Invalid value for signature";}}var v;if (u instanceof ECPointFp) {v = u;} else {if (Bitcoin.Util.isArray(u)) {v = h.decodeFrom(this.ecparams.curve, u);} else {throw "Invalid format for pubkey value, must be byte array or ECPointFp";}}var x = f.fromByteArrayUnsigned(z);return this.verifyRaw(x, w, t, v);};this.verifyRaw = function (z, t, E, y) {var x = this.ecparams.n;var D = this.ecparams.G;if (t.compareTo(f.ONE) < 0 || t.compareTo(x) >= 0) {return false;}if (E.compareTo(f.ONE) < 0 || E.compareTo(x) >= 0) {return false;}var A = E.modInverse(x);var w = z.multiply(A).mod(x);var u = t.multiply(A).mod(x);var B = D.multiply(w).add(y.multiply(u));var C = B.getX().toBigInteger().mod(x);return C.equals(t);};this.serializeSig = function (v, u) {var w = v.toByteArraySigned();var t = u.toByteArraySigned();var x = [];x.push(2);x.push(w.length);x = x.concat(w);x.push(2);x.push(t.length);x = x.concat(t);x.unshift(x.length);x.unshift(48);return x;};this.parseSig = function (y) {var x;if (y[0] != 48) {throw new Error("Signature not a valid DERSequence");}x = 2;if (y[x] != 2) {throw new Error("First element in signature must be a DERInteger");}var w = y.slice(x + 2, x + 2 + y[x + 1]);x += 2 + y[x + 1];if (y[x] != 2) {throw new Error("Second element in signature must be a DERInteger");}var t = y.slice(x + 2, x + 2 + y[x + 1]);x += 2 + y[x + 1];var v = f.fromByteArrayUnsigned(w);var u = f.fromByteArrayUnsigned(t);return { r: v, s: u };};this.parseSigCompact = function (w) {if (w.length !== 65) {throw "Signature has the wrong length";}var t = w[0] - 27;if (t < 0 || t > 7) {throw "Invalid signature type";}var x = this.ecparams.n;var v = f.fromByteArrayUnsigned(w.slice(1, 33)).mod(x);var u = f.fromByteArrayUnsigned(w.slice(33, 65)).mod(x);return { r: v, s: u, i: t };};this.readPKCS5PrvKeyHex = function (u) {if (k(u) === false) {throw new Error("not ASN.1 hex string");}var r, t, v;try {r = n(u, 0, ["[0]", 0], "06");t = n(u, 0, [1], "04");try {v = n(u, 0, ["[1]", 0], "03");} catch (s) {}} catch (s) {throw new Error("malformed PKCS#1/5 plain ECC private key");}this.curveName = d(r);if (this.curveName === undefined) {throw "unsupported curve name";}this.setNamedCurve(this.curveName);this.setPublicKeyHex(v);this.setPrivateKeyHex(t);this.isPublic = false;};this.readPKCS8PrvKeyHex = function (v) {if (k(v) === false) {throw new j("not ASN.1 hex string");}var t, r, u, w;try {t = n(v, 0, [1, 0], "06");r = n(v, 0, [1, 1], "06");u = n(v, 0, [2, 0, 1], "04");try {w = n(v, 0, [2, 0, "[1]", 0], "03");} catch (s) {}} catch (s) {throw new j("malformed PKCS#8 plain ECC private key");}this.curveName = d(r);if (this.curveName === undefined) {throw new j("unsupported curve name");}this.setNamedCurve(this.curveName);this.setPublicKeyHex(w);this.setPrivateKeyHex(u);this.isPublic = false;};this.readPKCS8PubKeyHex = function (u) {if (k(u) === false) {throw new j("not ASN.1 hex string");}var t, r, v;try {t = n(u, 0, [0, 0], "06");r = n(u, 0, [0, 1], "06");v = n(u, 0, [1], "03");} catch (s) {throw new j("malformed PKCS#8 ECC public key");}this.curveName = d(r);if (this.curveName === null) {throw new j("unsupported curve name");}this.setNamedCurve(this.curveName);this.setPublicKeyHex(v);};this.readCertPubKeyHex = function (t, v) {if (k(t) === false) {throw new j("not ASN.1 hex string");}var r, u;try {r = n(t, 0, [0, 5, 0, 1], "06");u = n(t, 0, [0, 5, 1], "03");} catch (s) {throw new j("malformed X.509 certificate ECC public key");}this.curveName = d(r);if (this.curveName === null) {throw new j("unsupported curve name");}this.setNamedCurve(this.curveName);this.setPublicKeyHex(u);};if (e !== undefined) {if (e.curve !== undefined) {this.curveName = e.curve;}}if (this.curveName === undefined) {this.curveName = g;}this.setNamedCurve(this.curveName);if (e !== undefined) {if (e.prv !== undefined) {this.setPrivateKeyHex(e.prv);}if (e.pub !== undefined) {this.setPublicKeyHex(e.pub);}}};KJUR.crypto.ECDSA.parseSigHex = function (a) {var b = KJUR.crypto.ECDSA.parseSigHexInHexRS(a);var d = new BigInteger(b.r, 16);var c = new BigInteger(b.s, 16);return { r: d, s: c };};KJUR.crypto.ECDSA.parseSigHexInHexRS = function (f) {var j = ASN1HEX,i = j.getChildIdx,g = j.getV;j.checkStrictDER(f, 0);if (f.substr(0, 2) != "30") {throw new Error("signature is not a ASN.1 sequence");}var h = i(f, 0);if (h.length != 2) {throw new Error("signature shall have two elements");}var e = h[0];var d = h[1];if (f.substr(e, 2) != "02") {throw new Error("1st item not ASN.1 integer");}if (f.substr(d, 2) != "02") {throw new Error("2nd item not ASN.1 integer");}var c = g(f, e);var b = g(f, d);return { r: c, s: b };};KJUR.crypto.ECDSA.asn1SigToConcatSig = function (c) {var d = KJUR.crypto.ECDSA.parseSigHexInHexRS(c);var b = d.r;var a = d.s;if (b.substr(0, 2) == "00" && b.length % 32 == 2) {b = b.substr(2);}if (a.substr(0, 2) == "00" && a.length % 32 == 2) {a = a.substr(2);}if (b.length % 32 == 30) {b = "00" + b;}if (a.length % 32 == 30) {a = "00" + a;}if (b.length % 32 != 0) {throw "unknown ECDSA sig r length error";}if (a.length % 32 != 0) {throw "unknown ECDSA sig s length error";}return b + a;};KJUR.crypto.ECDSA.concatSigToASN1Sig = function (a) {if (a.length / 2 * 8 % (16 * 8) != 0) {throw "unknown ECDSA concatinated r-s sig  length error";}var c = a.substr(0, a.length / 2);var b = a.substr(a.length / 2);return KJUR.crypto.ECDSA.hexRSSigToASN1Sig(c, b);};KJUR.crypto.ECDSA.hexRSSigToASN1Sig = function (b, a) {var d = new BigInteger(b, 16);var c = new BigInteger(a, 16);return KJUR.crypto.ECDSA.biRSSigToASN1Sig(d, c);};KJUR.crypto.ECDSA.biRSSigToASN1Sig = function (f, d) {var c = KJUR.asn1;var b = new c.DERInteger({ bigint: f });var a = new c.DERInteger({ bigint: d });var e = new c.DERSequence({ array: [b, a] });return e.getEncodedHex();};KJUR.crypto.ECDSA.getName = function (a) {if (a === "2b8104001f") {return "secp192k1";}if (a === "2a8648ce3d030107") {return "secp256r1";}if (a === "2b8104000a") {return "secp256k1";}if (a === "2b81040021") {return "secp224r1";}if (a === "2b81040022") {return "secp384r1";}if ("|secp256r1|NIST P-256|P-256|prime256v1|".indexOf(a) !== -1) {return "secp256r1";}if ("|secp256k1|".indexOf(a) !== -1) {return "secp256k1";}if ("|secp224r1|NIST P-224|P-224|".indexOf(a) !== -1) {return "secp224r1";}if ("|secp384r1|NIST P-384|P-384|".indexOf(a) !== -1) {return "secp384r1";}return null;};
if (typeof KJUR == "undefined" || !KJUR) {KJUR = {};}if (typeof KJUR.crypto == "undefined" || !KJUR.crypto) {KJUR.crypto = {};}KJUR.crypto.ECParameterDB = new function () {var b = {};var c = {};function a(d) {return new BigInteger(d, 16);}this.getByName = function (e) {var d = e;if (typeof c[d] != "undefined") {d = c[e];}if (typeof b[d] != "undefined") {return b[d];}throw "unregistered EC curve name: " + d;};this.regist = function (A, l, o, g, m, e, j, f, k, u, d, x) {b[A] = {};var s = a(o);var z = a(g);var y = a(m);var t = a(e);var w = a(j);var r = new ECCurveFp(s, z, y);var q = r.decodePointHex("04" + f + k);b[A]["name"] = A;b[A]["keylen"] = l;b[A]["curve"] = r;b[A]["G"] = q;b[A]["n"] = t;b[A]["h"] = w;b[A]["oid"] = d;b[A]["info"] = x;for (var v = 0; v < u.length; v++) {c[u[v]] = A;}};}();KJUR.crypto.ECParameterDB.regist("secp128r1", 128, "FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFF", "FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFC", "E87579C11079F43DD824993C2CEE5ED3", "FFFFFFFE0000000075A30D1B9038A115", "1", "161FF7528B899B2D0C28607CA52C5B86", "CF5AC8395BAFEB13C02DA292DDED7A83", [], "", "secp128r1 : SECG curve over a 128 bit prime field");KJUR.crypto.ECParameterDB.regist("secp160k1", 160, "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFAC73", "0", "7", "0100000000000000000001B8FA16DFAB9ACA16B6B3", "1", "3B4C382CE37AA192A4019E763036F4F5DD4D7EBB", "938CF935318FDCED6BC28286531733C3F03C4FEE", [], "", "secp160k1 : SECG curve over a 160 bit prime field");KJUR.crypto.ECParameterDB.regist("secp160r1", 160, "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFF", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFC", "1C97BEFC54BD7A8B65ACF89F81D4D4ADC565FA45", "0100000000000000000001F4C8F927AED3CA752257", "1", "4A96B5688EF573284664698968C38BB913CBFC82", "23A628553168947D59DCC912042351377AC5FB32", [], "", "secp160r1 : SECG curve over a 160 bit prime field");KJUR.crypto.ECParameterDB.regist("secp192k1", 192, "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFEE37", "0", "3", "FFFFFFFFFFFFFFFFFFFFFFFE26F2FC170F69466A74DEFD8D", "1", "DB4FF10EC057E9AE26B07D0280B7F4341DA5D1B1EAE06C7D", "9B2F2F6D9C5628A7844163D015BE86344082AA88D95E2F9D", []);KJUR.crypto.ECParameterDB.regist("secp192r1", 192, "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFC", "64210519E59C80E70FA7E9AB72243049FEB8DEECC146B9B1", "FFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22831", "1", "188DA80EB03090F67CBF20EB43A18800F4FF0AFD82FF1012", "07192B95FFC8DA78631011ED6B24CDD573F977A11E794811", []);KJUR.crypto.ECParameterDB.regist("secp224r1", 224, "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000001", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFE", "B4050A850C04B3ABF54132565044B0B7D7BFD8BA270B39432355FFB4", "FFFFFFFFFFFFFFFFFFFFFFFFFFFF16A2E0B8F03E13DD29455C5C2A3D", "1", "B70E0CBD6BB4BF7F321390B94A03C1D356C21122343280D6115C1D21", "BD376388B5F723FB4C22DFE6CD4375A05A07476444D5819985007E34", []);KJUR.crypto.ECParameterDB.regist("secp256k1", 256, "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F", "0", "7", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141", "1", "79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798", "483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8", []);KJUR.crypto.ECParameterDB.regist("secp256r1", 256, "FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF", "FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC", "5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B", "FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551", "1", "6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296", "4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5", ["NIST P-256", "P-256", "prime256v1"]);KJUR.crypto.ECParameterDB.regist("secp384r1", 384, "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFF", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFC", "B3312FA7E23EE7E4988E056BE3F82D19181D9C6EFE8141120314088F5013875AC656398D8A2ED19D2A85C8EDD3EC2AEF", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC7634D81F4372DDF581A0DB248B0A77AECEC196ACCC52973", "1", "AA87CA22BE8B05378EB1C71EF320AD746E1D3B628BA79B9859F741E082542A385502F25DBF55296C3A545E3872760AB7", "3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f", ["NIST P-384", "P-384"]);KJUR.crypto.ECParameterDB.regist("secp521r1", 521, "1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC", "051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00", "1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA51868783BF2F966B7FCC0148F709A5D03BB5C9B8899C47AEBB6FB71E91386409", "1", "C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66", "011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650", ["NIST P-521", "P-521"]);
if (typeof KJUR == "undefined" || !KJUR) {KJUR = {};}if (typeof KJUR.crypto == "undefined" || !KJUR.crypto) {KJUR.crypto = {};}KJUR.crypto.DSA = function () {var b = ASN1HEX,e = b.getVbyList,d = b.getVbyListEx,a = b.isASN1HEX,c = BigInteger;this.p = null;this.q = null;this.g = null;this.y = null;this.x = null;this.type = "DSA";this.isPrivate = false;this.isPublic = false;this.setPrivate = function (j, i, h, k, f) {this.isPrivate = true;this.p = j;this.q = i;this.g = h;this.y = k;this.x = f;};this.setPrivateHex = function (i, g, k, n, o) {var h, f, j, l, m;h = new BigInteger(i, 16);f = new BigInteger(g, 16);j = new BigInteger(k, 16);if (typeof n === "string" && n.length > 1) {l = new BigInteger(n, 16);} else {l = null;}m = new BigInteger(o, 16);this.setPrivate(h, f, j, l, m);};this.setPublic = function (i, h, f, j) {this.isPublic = true;this.p = i;this.q = h;this.g = f;this.y = j;this.x = null;};this.setPublicHex = function (k, j, i, l) {var g, f, m, h;g = new BigInteger(k, 16);f = new BigInteger(j, 16);m = new BigInteger(i, 16);h = new BigInteger(l, 16);this.setPublic(g, f, m, h);};this.signWithMessageHash = function (j) {var i = this.p;var h = this.q;var m = this.g;var o = this.y;var t = this.x;var l = KJUR.crypto.Util.getRandomBigIntegerMinToMax(BigInteger.ONE.add(BigInteger.ONE), h.subtract(BigInteger.ONE));var u = j.substr(0, h.bitLength() / 4);var n = new BigInteger(u, 16);var f = m.modPow(l, i).mod(h);var w = l.modInverse(h).multiply(n.add(t.multiply(f))).mod(h);var v = KJUR.asn1.ASN1Util.jsonToASN1HEX({ seq: [{ "int": { bigint: f } }, { "int": { bigint: w } }] });return v;};this.verifyWithMessageHash = function (m, l) {var j = this.p;var h = this.q;var o = this.g;var u = this.y;var n = this.parseASN1Signature(l);var f = n[0];var C = n[1];var B = m.substr(0, h.bitLength() / 4);var t = new BigInteger(B, 16);if (BigInteger.ZERO.compareTo(f) > 0 || f.compareTo(h) > 0) {throw "invalid DSA signature";}if (BigInteger.ZERO.compareTo(C) >= 0 || C.compareTo(h) > 0) {throw "invalid DSA signature";}var x = C.modInverse(h);var k = t.multiply(x).mod(h);var i = f.multiply(x).mod(h);var A = o.modPow(k, j).multiply(u.modPow(i, j)).mod(j).mod(h);return A.compareTo(f) == 0;};this.parseASN1Signature = function (f) {try {var i = new c(d(f, 0, [0], "02"), 16);var h = new c(d(f, 0, [1], "02"), 16);return [i, h];} catch (g) {throw new Error("malformed ASN.1 DSA signature");}};this.readPKCS5PrvKeyHex = function (j) {var k, i, g, l, m;if (a(j) === false) {throw new Error("not ASN.1 hex string");}try {k = d(j, 0, [1], "02");i = d(j, 0, [2], "02");g = d(j, 0, [3], "02");l = d(j, 0, [4], "02");m = d(j, 0, [5], "02");} catch (f) {throw new Error("malformed PKCS#1/5 plain DSA private key");}this.setPrivateHex(k, i, g, l, m);};this.readPKCS8PrvKeyHex = function (j) {var k, i, g, l;if (a(j) === false) {throw new Error("not ASN.1 hex string");}try {k = d(j, 0, [1, 1, 0], "02");i = d(j, 0, [1, 1, 1], "02");g = d(j, 0, [1, 1, 2], "02");l = d(j, 0, [2, 0], "02");} catch (f) {throw new Error("malformed PKCS#8 plain DSA private key");}this.setPrivateHex(k, i, g, null, l);};this.readPKCS8PubKeyHex = function (j) {var k, i, g, l;if (a(j) === false) {throw new Error("not ASN.1 hex string");}try {k = d(j, 0, [0, 1, 0], "02");i = d(j, 0, [0, 1, 1], "02");g = d(j, 0, [0, 1, 2], "02");l = d(j, 0, [1, 0], "02");} catch (f) {throw new Error("malformed PKCS#8 DSA public key");}this.setPublicHex(k, i, g, l);};this.readCertPubKeyHex = function (j, m) {var k, i, g, l;if (a(j) === false) {throw new Error("not ASN.1 hex string");}try {k = d(j, 0, [0, 5, 0, 1, 0], "02");i = d(j, 0, [0, 5, 0, 1, 1], "02");g = d(j, 0, [0, 5, 0, 1, 2], "02");l = d(j, 0, [0, 5, 1, 0], "02");} catch (f) {throw new Error("malformed X.509 certificate DSA public key");}this.setPublicHex(k, i, g, l);};};
var KEYUTIL = function () {var d = function d(p, r, q) {return k(CryptoJS.AES, p, r, q);};var e = function e(p, r, q) {return k(CryptoJS.TripleDES, p, r, q);};var a = function a(p, r, q) {return k(CryptoJS.DES, p, r, q);};var k = function k(s, x, u, q) {var r = CryptoJS.enc.Hex.parse(x);var w = CryptoJS.enc.Hex.parse(u);var p = CryptoJS.enc.Hex.parse(q);var t = {};t.key = w;t.iv = p;t.ciphertext = r;var v = s.decrypt(t, w, { iv: p });return CryptoJS.enc.Hex.stringify(v);};var l = function l(p, r, q) {return g(CryptoJS.AES, p, r, q);};var o = function o(p, r, q) {return g(CryptoJS.TripleDES, p, r, q);};var f = function f(p, r, q) {return g(CryptoJS.DES, p, r, q);};var g = function g(t, y, v, q) {var s = CryptoJS.enc.Hex.parse(y);var x = CryptoJS.enc.Hex.parse(v);var p = CryptoJS.enc.Hex.parse(q);var w = t.encrypt(s, x, { iv: p });var r = CryptoJS.enc.Hex.parse(w.toString());var u = CryptoJS.enc.Base64.stringify(r);return u;};var i = { "AES-256-CBC": { proc: d, eproc: l, keylen: 32, ivlen: 16 }, "AES-192-CBC": { proc: d, eproc: l, keylen: 24, ivlen: 16 }, "AES-128-CBC": { proc: d, eproc: l, keylen: 16, ivlen: 16 }, "DES-EDE3-CBC": { proc: e, eproc: o, keylen: 24, ivlen: 8 }, "DES-CBC": { proc: a, eproc: f, keylen: 8, ivlen: 8 } };var c = function c(p) {return i[p]["proc"];};var m = function m(p) {var r = CryptoJS.lib.WordArray.random(p);var q = CryptoJS.enc.Hex.stringify(r);return q;};var n = function n(v) {var w = {};var q = v.match(new RegExp("DEK-Info: ([^,]+),([0-9A-Fa-f]+)", "m"));if (q) {w.cipher = q[1];w.ivsalt = q[2];}var p = v.match(new RegExp("-----BEGIN ([A-Z]+) PRIVATE KEY-----"));if (p) {w.type = p[1];}var u = -1;var x = 0;if (v.indexOf("\r\n\r\n") != -1) {u = v.indexOf("\r\n\r\n");x = 2;}if (v.indexOf("\n\n") != -1) {u = v.indexOf("\n\n");x = 1;}var t = v.indexOf("-----END");if (u != -1 && t != -1) {var r = v.substring(u + x * 2, t - x);r = r.replace(/\s+/g, "");w.data = r;}return w;};var j = function j(q, y, p) {var v = p.substring(0, 16);var t = CryptoJS.enc.Hex.parse(v);var r = CryptoJS.enc.Utf8.parse(y);var u = i[q]["keylen"] + i[q]["ivlen"];var x = "";var w = null;for (;;) {var s = CryptoJS.algo.MD5.create();if (w != null) {s.update(w);}s.update(r);s.update(t);w = s.finalize();x = x + CryptoJS.enc.Hex.stringify(w);if (x.length >= u * 2) {break;}}var z = {};z.keyhex = x.substr(0, i[q]["keylen"] * 2);z.ivhex = x.substr(i[q]["keylen"] * 2, i[q]["ivlen"] * 2);return z;};var b = function b(p, v, r, w) {var s = CryptoJS.enc.Base64.parse(p);var q = CryptoJS.enc.Hex.stringify(s);var u = i[v]["proc"];var t = u(q, r, w);return t;};var h = function h(p, s, q, u) {var r = i[s]["eproc"];var t = r(p, q, u);return t;};return { version: "1.0.0", parsePKCS5PEM: function parsePKCS5PEM(p) {return n(p);}, getKeyAndUnusedIvByPasscodeAndIvsalt: function getKeyAndUnusedIvByPasscodeAndIvsalt(q, p, r) {return j(q, p, r);}, decryptKeyB64: function decryptKeyB64(p, r, q, s) {return b(p, r, q, s);}, getDecryptedKeyHex: function getDecryptedKeyHex(y, x) {var q = n(y);var t = q.type;var r = q.cipher;var p = q.ivsalt;var s = q.data;var w = j(r, x, p);var v = w.keyhex;var u = b(s, r, v, p);return u;}, getEncryptedPKCS5PEMFromPrvKeyHex: function getEncryptedPKCS5PEMFromPrvKeyHex(x, s, A, t, r) {var p = "";if (typeof t == "undefined" || t == null) {t = "AES-256-CBC";}if (typeof i[t] == "undefined") {throw new Error("KEYUTIL unsupported algorithm: " + t);}if (typeof r == "undefined" || r == null) {var v = i[t]["ivlen"];var u = m(v);r = u.toUpperCase();}var z = j(t, A, r);var y = z.keyhex;var w = h(s, t, y, r);var q = w.replace(/(.{64})/g, "$1\r\n");var p = "-----BEGIN " + x + " PRIVATE KEY-----\r\n";p += "Proc-Type: 4,ENCRYPTED\r\n";p += "DEK-Info: " + t + "," + r + "\r\n";p += "\r\n";p += q;p += "\r\n-----END " + x + " PRIVATE KEY-----\r\n";return p;}, parseHexOfEncryptedPKCS8: function parseHexOfEncryptedPKCS8(y) {var B = ASN1HEX;var z = B.getChildIdx;var w = B.getV;var t = {};var r = z(y, 0);if (r.length != 2) {throw new Error("malformed format: SEQUENCE(0).items != 2: " + r.length);}t.ciphertext = w(y, r[1]);var A = z(y, r[0]);if (A.length != 2) {throw new Error("malformed format: SEQUENCE(0.0).items != 2: " + A.length);}if (w(y, A[0]) != "2a864886f70d01050d") {throw new Error("this only supports pkcs5PBES2");}var p = z(y, A[1]);if (A.length != 2) {throw new Error("malformed format: SEQUENCE(0.0.1).items != 2: " + p.length);}var q = z(y, p[1]);if (q.length != 2) {throw new Error("malformed format: SEQUENCE(0.0.1.1).items != 2: " + q.length);}if (w(y, q[0]) != "2a864886f70d0307") {throw "this only supports TripleDES";}t.encryptionSchemeAlg = "TripleDES";t.encryptionSchemeIV = w(y, q[1]);var s = z(y, p[0]);if (s.length != 2) {throw new Error("malformed format: SEQUENCE(0.0.1.0).items != 2: " + s.length);}if (w(y, s[0]) != "2a864886f70d01050c") {throw new Error("this only supports pkcs5PBKDF2");}var x = z(y, s[1]);if (x.length < 2) {throw new Error("malformed format: SEQUENCE(0.0.1.0.1).items < 2: " + x.length);}t.pbkdf2Salt = w(y, x[0]);var u = w(y, x[1]);try {t.pbkdf2Iter = parseInt(u, 16);} catch (v) {throw new Error("malformed format pbkdf2Iter: " + u);}return t;}, getPBKDF2KeyHexFromParam: function getPBKDF2KeyHexFromParam(u, p) {var t = CryptoJS.enc.Hex.parse(u.pbkdf2Salt);var q = u.pbkdf2Iter;var s = CryptoJS.PBKDF2(p, t, { keySize: 192 / 32, iterations: q });var r = CryptoJS.enc.Hex.stringify(s);return r;}, _getPlainPKCS8HexFromEncryptedPKCS8PEM: function _getPlainPKCS8HexFromEncryptedPKCS8PEM(x, y) {var r = pemtohex(x, "ENCRYPTED PRIVATE KEY");var p = this.parseHexOfEncryptedPKCS8(r);var u = KEYUTIL.getPBKDF2KeyHexFromParam(p, y);var v = {};v.ciphertext = CryptoJS.enc.Hex.parse(p.ciphertext);var t = CryptoJS.enc.Hex.parse(u);var s = CryptoJS.enc.Hex.parse(p.encryptionSchemeIV);var w = CryptoJS.TripleDES.decrypt(v, t, { iv: s });var q = CryptoJS.enc.Hex.stringify(w);return q;}, getKeyFromEncryptedPKCS8PEM: function getKeyFromEncryptedPKCS8PEM(s, q) {var p = this._getPlainPKCS8HexFromEncryptedPKCS8PEM(s, q);var r = this.getKeyFromPlainPrivatePKCS8Hex(p);return r;}, parsePlainPrivatePKCS8Hex: function parsePlainPrivatePKCS8Hex(s) {var v = ASN1HEX;var u = v.getChildIdx;var t = v.getV;var q = {};q.algparam = null;if (s.substr(0, 2) != "30") {throw new Error("malformed plain PKCS8 private key(code:001)");}var r = u(s, 0);if (r.length < 3) {throw new Error("malformed plain PKCS8 private key(code:002)");}if (s.substr(r[1], 2) != "30") {throw new Error("malformed PKCS8 private key(code:003)");}var p = u(s, r[1]);if (p.length != 2) {throw new Error("malformed PKCS8 private key(code:004)");}if (s.substr(p[0], 2) != "06") {throw new Error("malformed PKCS8 private key(code:005)");}q.algoid = t(s, p[0]);if (s.substr(p[1], 2) == "06") {q.algparam = t(s, p[1]);}if (s.substr(r[2], 2) != "04") {throw new Error("malformed PKCS8 private key(code:006)");}q.keyidx = v.getVidx(s, r[2]);return q;}, getKeyFromPlainPrivatePKCS8PEM: function getKeyFromPlainPrivatePKCS8PEM(q) {var p = pemtohex(q, "PRIVATE KEY");var r = this.getKeyFromPlainPrivatePKCS8Hex(p);return r;}, getKeyFromPlainPrivatePKCS8Hex: function getKeyFromPlainPrivatePKCS8Hex(p) {var q = this.parsePlainPrivatePKCS8Hex(p);var r;if (q.algoid == "2a864886f70d010101") {r = new RSAKey();} else {if (q.algoid == "2a8648ce380401") {r = new KJUR.crypto.DSA();} else {if (q.algoid == "2a8648ce3d0201") {r = new KJUR.crypto.ECDSA();} else {throw new Error("unsupported private key algorithm");}}}r.readPKCS8PrvKeyHex(p);return r;}, _getKeyFromPublicPKCS8Hex: function _getKeyFromPublicPKCS8Hex(q) {var p;var r = ASN1HEX.getVbyList(q, 0, [0, 0], "06");if (r === "2a864886f70d010101") {p = new RSAKey();} else {if (r === "2a8648ce380401") {p = new KJUR.crypto.DSA();} else {if (r === "2a8648ce3d0201") {p = new KJUR.crypto.ECDSA();} else {throw new Error("unsupported PKCS#8 public key hex");}}}p.readPKCS8PubKeyHex(q);return p;}, parsePublicRawRSAKeyHex: function parsePublicRawRSAKeyHex(r) {var u = ASN1HEX;var t = u.getChildIdx;var s = u.getV;var p = {};if (r.substr(0, 2) != "30") {throw new Error("malformed RSA key(code:001)");}var q = t(r, 0);if (q.length != 2) {throw new Error("malformed RSA key(code:002)");}if (r.substr(q[0], 2) != "02") {throw new Error("malformed RSA key(code:003)");}p.n = s(r, q[0]);if (r.substr(q[1], 2) != "02") {throw new Error("malformed RSA key(code:004)");}p.e = s(r, q[1]);return p;}, parsePublicPKCS8Hex: function parsePublicPKCS8Hex(t) {var v = ASN1HEX;var u = v.getChildIdx;var s = v.getV;var q = {};q.algparam = null;var r = u(t, 0);if (r.length != 2) {throw new Error("outer DERSequence shall have 2 elements: " + r.length);}var w = r[0];if (t.substr(w, 2) != "30") {throw new Error("malformed PKCS8 public key(code:001)");}var p = u(t, w);if (p.length != 2) {throw new Error("malformed PKCS8 public key(code:002)");}if (t.substr(p[0], 2) != "06") {throw new Error("malformed PKCS8 public key(code:003)");}q.algoid = s(t, p[0]);if (t.substr(p[1], 2) == "06") {q.algparam = s(t, p[1]);} else {if (t.substr(p[1], 2) == "30") {q.algparam = {};q.algparam.p = v.getVbyList(t, p[1], [0], "02");q.algparam.q = v.getVbyList(t, p[1], [1], "02");q.algparam.g = v.getVbyList(t, p[1], [2], "02");}}if (t.substr(r[1], 2) != "03") {throw new Error("malformed PKCS8 public key(code:004)");}q.key = s(t, r[1]).substr(2);return q;} };}();KEYUTIL.getKey = function (l, k, n) {var G = ASN1HEX,L = G.getChildIdx,v = G.getV,d = G.getVbyList,c = KJUR.crypto,i = c.ECDSA,C = c.DSA,w = RSAKey,M = pemtohex,F = KEYUTIL;if (typeof w != "undefined" && l instanceof w) {return l;}if (typeof i != "undefined" && l instanceof i) {return l;}if (typeof C != "undefined" && l instanceof C) {return l;}if (l.curve !== undefined && l.xy !== undefined && l.d === undefined) {return new i({ pub: l.xy, curve: l.curve });}if (l.curve !== undefined && l.d !== undefined) {return new i({ prv: l.d, curve: l.curve });}if (l.kty === undefined && l.n !== undefined && l.e !== undefined && l.d === undefined) {var P = new w();P.setPublic(l.n, l.e);return P;}if (l.kty === undefined && l.n !== undefined && l.e !== undefined && l.d !== undefined && l.p !== undefined && l.q !== undefined && l.dp !== undefined && l.dq !== undefined && l.co !== undefined && l.qi === undefined) {var P = new w();P.setPrivateEx(l.n, l.e, l.d, l.p, l.q, l.dp, l.dq, l.co);return P;}if (l.kty === undefined && l.n !== undefined && l.e !== undefined && l.d !== undefined && l.p === undefined) {var P = new w();P.setPrivate(l.n, l.e, l.d);return P;}if (l.p !== undefined && l.q !== undefined && l.g !== undefined && l.y !== undefined && l.x === undefined) {var P = new C();P.setPublic(l.p, l.q, l.g, l.y);return P;}if (l.p !== undefined && l.q !== undefined && l.g !== undefined && l.y !== undefined && l.x !== undefined) {var P = new C();P.setPrivate(l.p, l.q, l.g, l.y, l.x);return P;}if (l.kty === "RSA" && l.n !== undefined && l.e !== undefined && l.d === undefined) {var P = new w();P.setPublic(b64utohex(l.n), b64utohex(l.e));return P;}if (l.kty === "RSA" && l.n !== undefined && l.e !== undefined && l.d !== undefined && l.p !== undefined && l.q !== undefined && l.dp !== undefined && l.dq !== undefined && l.qi !== undefined) {var P = new w();P.setPrivateEx(b64utohex(l.n), b64utohex(l.e), b64utohex(l.d), b64utohex(l.p), b64utohex(l.q), b64utohex(l.dp), b64utohex(l.dq), b64utohex(l.qi));return P;}if (l.kty === "RSA" && l.n !== undefined && l.e !== undefined && l.d !== undefined) {var P = new w();P.setPrivate(b64utohex(l.n), b64utohex(l.e), b64utohex(l.d));return P;}if (l.kty === "EC" && l.crv !== undefined && l.x !== undefined && l.y !== undefined && l.d === undefined) {var j = new i({ curve: l.crv });var t = j.ecparams.keylen / 4;var B = ("0000000000" + b64utohex(l.x)).slice(-t);var z = ("0000000000" + b64utohex(l.y)).slice(-t);var u = "04" + B + z;j.setPublicKeyHex(u);return j;}if (l.kty === "EC" && l.crv !== undefined && l.x !== undefined && l.y !== undefined && l.d !== undefined) {var j = new i({ curve: l.crv });var t = j.ecparams.keylen / 4;var B = ("0000000000" + b64utohex(l.x)).slice(-t);var z = ("0000000000" + b64utohex(l.y)).slice(-t);var u = "04" + B + z;var b = ("0000000000" + b64utohex(l.d)).slice(-t);j.setPublicKeyHex(u);j.setPrivateKeyHex(b);return j;}if (n === "pkcs5prv") {var J = l,G = ASN1HEX,N,P;N = L(J, 0);if (N.length === 9) {P = new w();P.readPKCS5PrvKeyHex(J);} else {if (N.length === 6) {P = new C();P.readPKCS5PrvKeyHex(J);} else {if (N.length > 2 && J.substr(N[1], 2) === "04") {P = new i();P.readPKCS5PrvKeyHex(J);} else {throw new Error("unsupported PKCS#1/5 hexadecimal key");}}}return P;}if (n === "pkcs8prv") {var P = F.getKeyFromPlainPrivatePKCS8Hex(l);return P;}if (n === "pkcs8pub") {return F._getKeyFromPublicPKCS8Hex(l);}if (n === "x509pub") {return X509.getPublicKeyFromCertHex(l);}if (l.indexOf("-END CERTIFICATE-", 0) != -1 || l.indexOf("-END X509 CERTIFICATE-", 0) != -1 || l.indexOf("-END TRUSTED CERTIFICATE-", 0) != -1) {return X509.getPublicKeyFromCertPEM(l);}if (l.indexOf("-END PUBLIC KEY-") != -1) {var O = pemtohex(l, "PUBLIC KEY");return F._getKeyFromPublicPKCS8Hex(O);}if (l.indexOf("-END RSA PRIVATE KEY-") != -1 && l.indexOf("4,ENCRYPTED") == -1) {var m = M(l, "RSA PRIVATE KEY");return F.getKey(m, null, "pkcs5prv");}if (l.indexOf("-END DSA PRIVATE KEY-") != -1 && l.indexOf("4,ENCRYPTED") == -1) {var I = M(l, "DSA PRIVATE KEY");var E = d(I, 0, [1], "02");var D = d(I, 0, [2], "02");var K = d(I, 0, [3], "02");var r = d(I, 0, [4], "02");var s = d(I, 0, [5], "02");var P = new C();P.setPrivate(new BigInteger(E, 16), new BigInteger(D, 16), new BigInteger(K, 16), new BigInteger(r, 16), new BigInteger(s, 16));return P;}if (l.indexOf("-END EC PRIVATE KEY-") != -1 && l.indexOf("4,ENCRYPTED") == -1) {var m = M(l, "EC PRIVATE KEY");return F.getKey(m, null, "pkcs5prv");}if (l.indexOf("-END PRIVATE KEY-") != -1) {return F.getKeyFromPlainPrivatePKCS8PEM(l);}if (l.indexOf("-END RSA PRIVATE KEY-") != -1 && l.indexOf("4,ENCRYPTED") != -1) {var o = F.getDecryptedKeyHex(l, k);var H = new RSAKey();H.readPKCS5PrvKeyHex(o);return H;}if (l.indexOf("-END EC PRIVATE KEY-") != -1 && l.indexOf("4,ENCRYPTED") != -1) {var I = F.getDecryptedKeyHex(l, k);var P = d(I, 0, [1], "04");var f = d(I, 0, [2, 0], "06");var A = d(I, 0, [3, 0], "03").substr(2);var e = "";if (KJUR.crypto.OID.oidhex2name[f] !== undefined) {e = KJUR.crypto.OID.oidhex2name[f];} else {throw new Error("undefined OID(hex) in KJUR.crypto.OID: " + f);}var j = new i({ curve: e });j.setPublicKeyHex(A);j.setPrivateKeyHex(P);j.isPublic = false;return j;}if (l.indexOf("-END DSA PRIVATE KEY-") != -1 && l.indexOf("4,ENCRYPTED") != -1) {var I = F.getDecryptedKeyHex(l, k);var E = d(I, 0, [1], "02");var D = d(I, 0, [2], "02");var K = d(I, 0, [3], "02");var r = d(I, 0, [4], "02");var s = d(I, 0, [5], "02");var P = new C();P.setPrivate(new BigInteger(E, 16), new BigInteger(D, 16), new BigInteger(K, 16), new BigInteger(r, 16), new BigInteger(s, 16));return P;}if (l.indexOf("-END ENCRYPTED PRIVATE KEY-") != -1) {return F.getKeyFromEncryptedPKCS8PEM(l, k);}throw new Error("not supported argument");};KEYUTIL.generateKeypair = function (a, c) {if (a == "RSA") {var b = c;var h = new RSAKey();h.generate(b, "10001");h.isPrivate = true;h.isPublic = true;var f = new RSAKey();var e = h.n.toString(16);var i = h.e.toString(16);f.setPublic(e, i);f.isPrivate = false;f.isPublic = true;var k = {};k.prvKeyObj = h;k.pubKeyObj = f;return k;} else {if (a == "EC") {var d = c;var g = new KJUR.crypto.ECDSA({ curve: d });var j = g.generateKeyPairHex();var h = new KJUR.crypto.ECDSA({ curve: d });h.setPublicKeyHex(j.ecpubhex);h.setPrivateKeyHex(j.ecprvhex);h.isPrivate = true;h.isPublic = false;var f = new KJUR.crypto.ECDSA({ curve: d });f.setPublicKeyHex(j.ecpubhex);f.isPrivate = false;f.isPublic = true;var k = {};k.prvKeyObj = h;k.pubKeyObj = f;return k;} else {throw new Error("unknown algorithm: " + a);}}};KEYUTIL.getPEM = function (b, D, y, m, q, j) {var F = KJUR,k = F.asn1,z = k.DERObjectIdentifier,f = k.DERInteger,l = k.ASN1Util.newObject,a = k.x509,C = a.SubjectPublicKeyInfo,e = F.crypto,u = e.DSA,r = e.ECDSA,n = RSAKey;function A(s) {var G = l({ seq: [{ "int": 0 }, { "int": { bigint: s.n } }, { "int": s.e }, { "int": { bigint: s.d } }, { "int": { bigint: s.p } }, { "int": { bigint: s.q } }, { "int": { bigint: s.dmp1 } }, { "int": { bigint: s.dmq1 } }, { "int": { bigint: s.coeff } }] });return G;}function B(G) {var s = l({ seq: [{ "int": 1 }, { octstr: { hex: G.prvKeyHex } }, { tag: ["a0", true, { oid: { name: G.curveName } }] }, { tag: ["a1", true, { bitstr: { hex: "00" + G.pubKeyHex } }] }] });return s;}function x(s) {var G = l({ seq: [{ "int": 0 }, { "int": { bigint: s.p } }, { "int": { bigint: s.q } }, { "int": { bigint: s.g } }, { "int": { bigint: s.y } }, { "int": { bigint: s.x } }] });return G;}if ((n !== undefined && b instanceof n || u !== undefined && b instanceof u || r !== undefined && b instanceof r) && b.isPublic == true && (D === undefined || D == "PKCS8PUB")) {var E = new C(b);var w = E.getEncodedHex();return hextopem(w, "PUBLIC KEY");}if (D == "PKCS1PRV" && n !== undefined && b instanceof n && (y === undefined || y == null) && b.isPrivate == true) {var E = A(b);var w = E.getEncodedHex();return hextopem(w, "RSA PRIVATE KEY");}if (D == "PKCS1PRV" && r !== undefined && b instanceof r && (y === undefined || y == null) && b.isPrivate == true) {var i = new z({ name: b.curveName });var v = i.getEncodedHex();var h = B(b);var t = h.getEncodedHex();var p = "";p += hextopem(v, "EC PARAMETERS");p += hextopem(t, "EC PRIVATE KEY");return p;}if (D == "PKCS1PRV" && u !== undefined && b instanceof u && (y === undefined || y == null) && b.isPrivate == true) {var E = x(b);var w = E.getEncodedHex();return hextopem(w, "DSA PRIVATE KEY");}if (D == "PKCS5PRV" && n !== undefined && b instanceof n && y !== undefined && y != null && b.isPrivate == true) {var E = A(b);var w = E.getEncodedHex();if (m === undefined) {m = "DES-EDE3-CBC";}return this.getEncryptedPKCS5PEMFromPrvKeyHex("RSA", w, y, m, j);}if (D == "PKCS5PRV" && r !== undefined && b instanceof r && y !== undefined && y != null && b.isPrivate == true) {var E = B(b);var w = E.getEncodedHex();if (m === undefined) {m = "DES-EDE3-CBC";}return this.getEncryptedPKCS5PEMFromPrvKeyHex("EC", w, y, m, j);}if (D == "PKCS5PRV" && u !== undefined && b instanceof u && y !== undefined && y != null && b.isPrivate == true) {var E = x(b);var w = E.getEncodedHex();if (m === undefined) {m = "DES-EDE3-CBC";}return this.getEncryptedPKCS5PEMFromPrvKeyHex("DSA", w, y, m, j);}var o = function o(G, s) {var I = c(G, s);var H = new l({ seq: [{ seq: [{ oid: { name: "pkcs5PBES2" } }, { seq: [{ seq: [{ oid: { name: "pkcs5PBKDF2" } }, { seq: [{ octstr: { hex: I.pbkdf2Salt } }, { "int": I.pbkdf2Iter }] }] }, { seq: [{ oid: { name: "des-EDE3-CBC" } }, { octstr: { hex: I.encryptionSchemeIV } }] }] }] }, { octstr: { hex: I.ciphertext } }] });return H.getEncodedHex();};var c = function c(N, O) {var H = 100;var M = CryptoJS.lib.WordArray.random(8);var L = "DES-EDE3-CBC";var s = CryptoJS.lib.WordArray.random(8);var I = CryptoJS.PBKDF2(O, M, { keySize: 192 / 32, iterations: H });var J = CryptoJS.enc.Hex.parse(N);var K = CryptoJS.TripleDES.encrypt(J, I, { iv: s }) + "";var G = {};G.ciphertext = K;G.pbkdf2Salt = CryptoJS.enc.Hex.stringify(M);G.pbkdf2Iter = H;G.encryptionSchemeAlg = L;G.encryptionSchemeIV = CryptoJS.enc.Hex.stringify(s);return G;};if (D == "PKCS8PRV" && n != undefined && b instanceof n && b.isPrivate == true) {var g = A(b);var d = g.getEncodedHex();var E = l({ seq: [{ "int": 0 }, { seq: [{ oid: { name: "rsaEncryption" } }, { "null": true }] }, { octstr: { hex: d } }] });var w = E.getEncodedHex();if (y === undefined || y == null) {return hextopem(w, "PRIVATE KEY");} else {var t = o(w, y);return hextopem(t, "ENCRYPTED PRIVATE KEY");}}if (D == "PKCS8PRV" && r !== undefined && b instanceof r && b.isPrivate == true) {var g = new l({ seq: [{ "int": 1 }, { octstr: { hex: b.prvKeyHex } }, { tag: ["a1", true, { bitstr: { hex: "00" + b.pubKeyHex } }] }] });var d = g.getEncodedHex();var E = l({ seq: [{ "int": 0 }, { seq: [{ oid: { name: "ecPublicKey" } }, { oid: { name: b.curveName } }] }, { octstr: { hex: d } }] });var w = E.getEncodedHex();if (y === undefined || y == null) {return hextopem(w, "PRIVATE KEY");} else {var t = o(w, y);return hextopem(t, "ENCRYPTED PRIVATE KEY");}}if (D == "PKCS8PRV" && u !== undefined && b instanceof u && b.isPrivate == true) {var g = new f({ bigint: b.x });var d = g.getEncodedHex();var E = l({ seq: [{ "int": 0 }, { seq: [{ oid: { name: "dsa" } }, { seq: [{ "int": { bigint: b.p } }, { "int": { bigint: b.q } }, { "int": { bigint: b.g } }] }] }, { octstr: { hex: d } }] });var w = E.getEncodedHex();if (y === undefined || y == null) {return hextopem(w, "PRIVATE KEY");} else {var t = o(w, y);return hextopem(t, "ENCRYPTED PRIVATE KEY");}}throw new Error("unsupported object nor format");};KEYUTIL.getKeyFromCSRPEM = function (b) {var a = pemtohex(b, "CERTIFICATE REQUEST");var c = KEYUTIL.getKeyFromCSRHex(a);return c;};KEYUTIL.getKeyFromCSRHex = function (a) {var c = KEYUTIL.parseCSRHex(a);var b = KEYUTIL.getKey(c.p8pubkeyhex, null, "pkcs8pub");return b;};KEYUTIL.parseCSRHex = function (d) {var i = ASN1HEX;var f = i.getChildIdx;var c = i.getTLV;var b = {};var g = d;if (g.substr(0, 2) != "30") {throw new Error("malformed CSR(code:001)");}var e = f(g, 0);if (e.length < 1) {throw new Error("malformed CSR(code:002)");}if (g.substr(e[0], 2) != "30") {throw new Error("malformed CSR(code:003)");}var a = f(g, e[0]);if (a.length < 3) {throw new Error("malformed CSR(code:004)");}b.p8pubkeyhex = c(g, a[2]);return b;};KEYUTIL.getKeyID = function (f) {var c = KEYUTIL;var e = ASN1HEX;if (typeof f === "string" && f.indexOf("BEGIN ") != -1) {f = c.getKey(f);}var d = pemtohex(c.getPEM(f));var b = e.getIdxbyList(d, 0, [1]);var a = e.getV(d, b).substring(2);return KJUR.crypto.Util.hashHex(a, "sha1");};KEYUTIL.getJWKFromKey = function (d) {var b = {};if (d instanceof RSAKey && d.isPrivate) {b.kty = "RSA";b.n = hextob64u(d.n.toString(16));b.e = hextob64u(d.e.toString(16));b.d = hextob64u(d.d.toString(16));b.p = hextob64u(d.p.toString(16));b.q = hextob64u(d.q.toString(16));b.dp = hextob64u(d.dmp1.toString(16));b.dq = hextob64u(d.dmq1.toString(16));b.qi = hextob64u(d.coeff.toString(16));return b;} else {if (d instanceof RSAKey && d.isPublic) {b.kty = "RSA";b.n = hextob64u(d.n.toString(16));b.e = hextob64u(d.e.toString(16));return b;} else {if (d instanceof KJUR.crypto.ECDSA && d.isPrivate) {var a = d.getShortNISTPCurveName();if (a !== "P-256" && a !== "P-384") {throw new Error("unsupported curve name for JWT: " + a);}var c = d.getPublicKeyXYHex();b.kty = "EC";b.crv = a;b.x = hextob64u(c.x);b.y = hextob64u(c.y);b.d = hextob64u(d.prvKeyHex);return b;} else {if (d instanceof KJUR.crypto.ECDSA && d.isPublic) {var a = d.getShortNISTPCurveName();if (a !== "P-256" && a !== "P-384") {throw new Error("unsupported curve name for JWT: " + a);}var c = d.getPublicKeyXYHex();b.kty = "EC";b.crv = a;b.x = hextob64u(c.x);b.y = hextob64u(c.y);return b;}}}}throw new Error("not supported key object");};
RSAKey.getPosArrayOfChildrenFromHex = function (a) {return ASN1HEX.getChildIdx(a, 0);};RSAKey.getHexValueArrayOfChildrenFromHex = function (f) {var n = ASN1HEX;var i = n.getV;var k = RSAKey.getPosArrayOfChildrenFromHex(f);var e = i(f, k[0]);var j = i(f, k[1]);var b = i(f, k[2]);var c = i(f, k[3]);var h = i(f, k[4]);var g = i(f, k[5]);var m = i(f, k[6]);var l = i(f, k[7]);var d = i(f, k[8]);var k = new Array();k.push(e, j, b, c, h, g, m, l, d);return k;};RSAKey.prototype.readPrivateKeyFromPEMString = function (d) {var c = pemtohex(d);var b = RSAKey.getHexValueArrayOfChildrenFromHex(c);this.setPrivateEx(b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8]);};RSAKey.prototype.readPKCS5PrvKeyHex = function (c) {var b = RSAKey.getHexValueArrayOfChildrenFromHex(c);this.setPrivateEx(b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8]);};RSAKey.prototype.readPKCS8PrvKeyHex = function (e) {var c, i, k, b, a, f, d, j;var m = ASN1HEX;var l = m.getVbyListEx;if (m.isASN1HEX(e) === false) {throw new Error("not ASN.1 hex string");}try {c = l(e, 0, [2, 0, 1], "02");i = l(e, 0, [2, 0, 2], "02");k = l(e, 0, [2, 0, 3], "02");b = l(e, 0, [2, 0, 4], "02");a = l(e, 0, [2, 0, 5], "02");f = l(e, 0, [2, 0, 6], "02");d = l(e, 0, [2, 0, 7], "02");j = l(e, 0, [2, 0, 8], "02");} catch (g) {throw new Error("malformed PKCS#8 plain RSA private key");}this.setPrivateEx(c, i, k, b, a, f, d, j);};RSAKey.prototype.readPKCS5PubKeyHex = function (c) {var e = ASN1HEX;var b = e.getV;if (e.isASN1HEX(c) === false) {throw new Error("keyHex is not ASN.1 hex string");}var a = e.getChildIdx(c, 0);if (a.length !== 2 || c.substr(a[0], 2) !== "02" || c.substr(a[1], 2) !== "02") {throw new Error("wrong hex for PKCS#5 public key");}var f = b(c, a[0]);var d = b(c, a[1]);this.setPublic(f, d);};RSAKey.prototype.readPKCS8PubKeyHex = function (b) {var c = ASN1HEX;if (c.isASN1HEX(b) === false) {throw new Error("not ASN.1 hex string");}if (c.getTLVbyListEx(b, 0, [0, 0]) !== "06092a864886f70d010101") {throw new Error("not PKCS8 RSA public key");}var a = c.getTLVbyListEx(b, 0, [1, 0]);this.readPKCS5PubKeyHex(a);};RSAKey.prototype.readCertPubKeyHex = function (b, d) {var a, c;a = new X509();a.readCertHex(b);c = a.getPublicKeyHex();this.readPKCS8PubKeyHex(c);};
var _RE_HEXDECONLY = new RegExp("[^0-9a-f]", "gi");function _rsasign_getHexPaddedDigestInfoForString(d, e, a) {var b = function b(f) {return KJUR.crypto.Util.hashString(f, a);};var c = b(d);return KJUR.crypto.Util.getPaddedDigestInfoHex(c, a, e);}function _zeroPaddingOfSignature(e, d) {var c = "";var a = d / 4 - e.length;for (var b = 0; b < a; b++) {c = c + "0";}return c + e;}RSAKey.prototype.sign = function (d, a) {var b = function b(e) {return KJUR.crypto.Util.hashString(e, a);};var c = b(d);return this.signWithMessageHash(c, a);};RSAKey.prototype.signWithMessageHash = function (e, c) {var f = KJUR.crypto.Util.getPaddedDigestInfoHex(e, c, this.n.bitLength());var b = parseBigInt(f, 16);var d = this.doPrivate(b);var a = d.toString(16);return _zeroPaddingOfSignature(a, this.n.bitLength());};function pss_mgf1_str(c, a, e) {var b = "",d = 0;while (b.length < a) {b += hextorstr(e(rstrtohex(c + String.fromCharCode.apply(String, [(d & 4278190080) >> 24, (d & 16711680) >> 16, (d & 65280) >> 8, d & 255]))));d += 1;}return b;}RSAKey.prototype.signPSS = function (e, a, d) {var c = function c(f) {return KJUR.crypto.Util.hashHex(f, a);};var b = c(rstrtohex(e));if (d === undefined) {d = -1;}return this.signWithMessageHashPSS(b, a, d);};RSAKey.prototype.signWithMessageHashPSS = function (l, a, k) {var b = hextorstr(l);var g = b.length;var m = this.n.bitLength() - 1;var c = Math.ceil(m / 8);var d;var o = function o(i) {return KJUR.crypto.Util.hashHex(i, a);};if (k === -1 || k === undefined) {k = g;} else {if (k === -2) {k = c - g - 2;} else {if (k < -2) {throw new Error("invalid salt length");}}}if (c < g + k + 2) {throw new Error("data too long");}var f = "";if (k > 0) {f = new Array(k);new SecureRandom().nextBytes(f);f = String.fromCharCode.apply(String, f);}var n = hextorstr(o(rstrtohex("\x00\x00\x00\x00\x00\x00\x00\x00" + b + f)));var j = [];for (d = 0; d < c - k - g - 2; d += 1) {j[d] = 0;}var e = String.fromCharCode.apply(String, j) + "\x01" + f;var h = pss_mgf1_str(n, e.length, o);var q = [];for (d = 0; d < e.length; d += 1) {q[d] = e.charCodeAt(d) ^ h.charCodeAt(d);}var p = 65280 >> 8 * c - m & 255;q[0] &= ~p;for (d = 0; d < g; d++) {q.push(n.charCodeAt(d));}q.push(188);return _zeroPaddingOfSignature(this.doPrivate(new BigInteger(q)).toString(16), this.n.bitLength());};function _rsasign_getDecryptSignatureBI(a, d, c) {var b = new RSAKey();b.setPublic(d, c);var e = b.doPublic(a);return e;}function _rsasign_getHexDigestInfoFromSig(a, c, b) {var e = _rsasign_getDecryptSignatureBI(a, c, b);var d = e.toString(16).replace(/^1f+00/, "");return d;}function _rsasign_getAlgNameAndHashFromHexDisgestInfo(f) {for (var e in KJUR.crypto.Util.DIGESTINFOHEAD) {var d = KJUR.crypto.Util.DIGESTINFOHEAD[e];var b = d.length;if (f.substring(0, b) == d) {var c = [e, f.substring(b)];return c;}}return [];}RSAKey.prototype.verify = function (f, l) {l = l.toLowerCase();if (l.match(/^[0-9a-f]+$/) == null) {return false;}var b = parseBigInt(l, 16);var k = this.n.bitLength();if (b.bitLength() > k) {return false;}var j = this.doPublic(b);var i = j.toString(16);if (i.length + 3 != k / 4) {return false;}var e = i.replace(/^1f+00/, "");var g = _rsasign_getAlgNameAndHashFromHexDisgestInfo(e);if (g.length == 0) {return false;}var d = g[0];var h = g[1];var a = function a(m) {return KJUR.crypto.Util.hashString(m, d);};var c = a(f);return h == c;};RSAKey.prototype.verifyWithMessageHash = function (e, a) {if (a.length != Math.ceil(this.n.bitLength() / 4)) {return false;}var b = parseBigInt(a, 16);if (b.bitLength() > this.n.bitLength()) {return 0;}var h = this.doPublic(b);var g = h.toString(16).replace(/^1f+00/, "");var c = _rsasign_getAlgNameAndHashFromHexDisgestInfo(g);if (c.length == 0) {return false;}var d = c[0];var f = c[1];return f == e;};RSAKey.prototype.verifyPSS = function (c, b, a, f) {var e = function e(g) {return KJUR.crypto.Util.hashHex(g, a);};var d = e(rstrtohex(c));if (f === undefined) {f = -1;}return this.verifyWithMessageHashPSS(d, b, a, f);};RSAKey.prototype.verifyWithMessageHashPSS = function (f, s, l, c) {if (s.length != Math.ceil(this.n.bitLength() / 4)) {return false;}var k = new BigInteger(s, 16);var r = function r(i) {return KJUR.crypto.Util.hashHex(i, l);};var j = hextorstr(f);var h = j.length;var g = this.n.bitLength() - 1;var m = Math.ceil(g / 8);var q;if (c === -1 || c === undefined) {c = h;} else {if (c === -2) {c = m - h - 2;} else {if (c < -2) {throw new Error("invalid salt length");}}}if (m < h + c + 2) {throw new Error("data too long");}var a = this.doPublic(k).toByteArray();for (q = 0; q < a.length; q += 1) {a[q] &= 255;}while (a.length < m) {a.unshift(0);}if (a[m - 1] !== 188) {throw new Error("encoded message does not end in 0xbc");}a = String.fromCharCode.apply(String, a);var d = a.substr(0, m - h - 1);var e = a.substr(d.length, h);var p = 65280 >> 8 * m - g & 255;if ((d.charCodeAt(0) & p) !== 0) {throw new Error("bits beyond keysize not zero");}var n = pss_mgf1_str(e, d.length, r);var o = [];for (q = 0; q < d.length; q += 1) {o[q] = d.charCodeAt(q) ^ n.charCodeAt(q);}o[0] &= ~p;var b = m - h - c - 2;for (q = 0; q < b; q += 1) {if (o[q] !== 0) {throw new Error("leftmost octets not zero");}}if (o[b] !== 1) {throw new Error("0x01 marker not found");}return e === hextorstr(r(rstrtohex("\x00\x00\x00\x00\x00\x00\x00\x00" + j + String.fromCharCode.apply(String, o.slice(-c)))));};RSAKey.SALT_LEN_HLEN = -1;RSAKey.SALT_LEN_MAX = -2;RSAKey.SALT_LEN_RECOVER = -2;
function X509(q) {var j = ASN1HEX,n = j.getChildIdx,g = j.getV,b = j.getTLV,c = j.getVbyList,k = j.getVbyListEx,a = j.getTLVbyList,l = j.getTLVbyListEx,h = j.getIdxbyList,e = j.getIdxbyListEx,i = j.getVidx,s = j.getInt,p = j.oidname,m = j.hextooidstr,d = X509,r = pemtohex,f;try {f = KJUR.asn1.x509.AlgorithmIdentifier.PSSNAME2ASN1TLV;} catch (o) {}this.HEX2STAG = { "0c": "utf8", "13": "prn", "16": "ia5", "1a": "vis", "1e": "bmp" };this.hex = null;this.version = 0;this.foffset = 0;this.aExtInfo = null;this.getVersion = function () {if (this.hex === null || this.version !== 0) {return this.version;}var u = a(this.hex, 0, [0, 0]);if (u.substr(0, 2) == "a0") {var v = a(u, 0, [0]);var t = s(v, 0);if (t < 0 || 2 < t) {throw new Error("malformed version field");}this.version = t + 1;return this.version;} else {this.version = 1;this.foffset = -1;return 1;}};this.getSerialNumberHex = function () {return k(this.hex, 0, [0, 0], "02");};this.getSignatureAlgorithmField = function () {var t = l(this.hex, 0, [0, 1]);return this.getAlgorithmIdentifierName(t);};this.getAlgorithmIdentifierName = function (t) {for (var u in f) {if (t === f[u]) {return u;}}return p(k(t, 0, [0], "06"));};this.getIssuer = function () {return this.getX500Name(this.getIssuerHex());};this.getIssuerHex = function () {return a(this.hex, 0, [0, 3 + this.foffset], "30");};this.getIssuerString = function () {var t = this.getIssuer();return t.str;};this.getSubject = function () {return this.getX500Name(this.getSubjectHex());};this.getSubjectHex = function () {return a(this.hex, 0, [0, 5 + this.foffset], "30");};this.getSubjectString = function () {var t = this.getSubject();return t.str;};this.getNotBefore = function () {var t = c(this.hex, 0, [0, 4 + this.foffset, 0]);t = t.replace(/(..)/g, "%$1");t = decodeURIComponent(t);return t;};this.getNotAfter = function () {var t = c(this.hex, 0, [0, 4 + this.foffset, 1]);t = t.replace(/(..)/g, "%$1");t = decodeURIComponent(t);return t;};this.getPublicKeyHex = function () {return j.getTLVbyList(this.hex, 0, [0, 6 + this.foffset], "30");};this.getPublicKeyIdx = function () {return h(this.hex, 0, [0, 6 + this.foffset], "30");};this.getPublicKeyContentIdx = function () {var t = this.getPublicKeyIdx();return h(this.hex, t, [1, 0], "30");};this.getPublicKey = function () {return KEYUTIL.getKey(this.getPublicKeyHex(), null, "pkcs8pub");};this.getSignatureAlgorithmName = function () {var t = a(this.hex, 0, [1], "30");return this.getAlgorithmIdentifierName(t);};this.getSignatureValueHex = function () {return c(this.hex, 0, [2], "03", true);};this.verifySignature = function (v) {var w = this.getSignatureAlgorithmField();var t = this.getSignatureValueHex();var u = a(this.hex, 0, [0], "30");var x = new KJUR.crypto.Signature({ alg: w });x.init(v);x.updateHex(u);return x.verify(t);};this.parseExt = function (C) {var v, t, x;if (C === undefined) {x = this.hex;if (this.version !== 3) {return -1;}v = h(x, 0, [0, 7, 0], "30");t = n(x, v);} else {x = pemtohex(C);var y = h(x, 0, [0, 3, 0, 0], "06");if (g(x, y) != "2a864886f70d01090e") {this.aExtInfo = new Array();return;}v = h(x, 0, [0, 3, 0, 1, 0], "30");t = n(x, v);this.hex = x;}this.aExtInfo = new Array();for (var w = 0; w < t.length; w++) {var A = {};A.critical = false;var z = n(x, t[w]);var u = 0;if (z.length === 3) {A.critical = true;u = 1;}A.oid = j.hextooidstr(c(x, t[w], [0], "06"));var B = h(x, t[w], [1 + u]);A.vidx = i(x, B);this.aExtInfo.push(A);}};this.getExtInfo = function (v) {var t = this.aExtInfo;var w = v;if (!v.match(/^[0-9.]+$/)) {w = KJUR.asn1.x509.OID.name2oid(v);}if (w === "") {return undefined;}for (var u = 0; u < t.length; u++) {if (t[u].oid === w) {return t[u];}}return undefined;};this.getExtBasicConstraints = function (u, y) {if (u === undefined && y === undefined) {var w = this.getExtInfo("basicConstraints");if (w === undefined) {return undefined;}u = b(this.hex, w.vidx);y = w.critical;}var t = { extname: "basicConstraints" };if (y) {t.critical = true;}if (u === "3000") {return t;}if (u === "30030101ff") {t.cA = true;return t;}if (u.substr(0, 12) === "30060101ff02") {var x = g(u, 10);var v = parseInt(x, 16);t.cA = true;t.pathLen = v;return t;}throw new Error("hExtV parse error: " + u);};this.getExtKeyUsage = function (u, w) {if (u === undefined && w === undefined) {var v = this.getExtInfo("keyUsage");if (v === undefined) {return undefined;}u = b(this.hex, v.vidx);w = v.critical;}var t = { extname: "keyUsage" };if (w) {t.critical = true;}t.names = this.getExtKeyUsageString(u).split(",");return t;};this.getExtKeyUsageBin = function (u) {if (u === undefined) {var v = this.getExtInfo("keyUsage");if (v === undefined) {return "";}u = b(this.hex, v.vidx);}if (u.length != 8 && u.length != 10) {throw new Error("malformed key usage value: " + u);}var t = "000000000000000" + parseInt(u.substr(6), 16).toString(2);if (u.length == 8) {t = t.slice(-8);}if (u.length == 10) {t = t.slice(-16);}t = t.replace(/0+$/, "");if (t == "") {t = "0";}return t;};this.getExtKeyUsageString = function (v) {var w = this.getExtKeyUsageBin(v);var t = new Array();for (var u = 0; u < w.length; u++) {if (w.substr(u, 1) == "1") {t.push(X509.KEYUSAGE_NAME[u]);}}return t.join(",");};this.getExtSubjectKeyIdentifier = function (v, x) {if (v === undefined && x === undefined) {var w = this.getExtInfo("subjectKeyIdentifier");if (w === undefined) {return undefined;}v = b(this.hex, w.vidx);x = w.critical;}var t = { extname: "subjectKeyIdentifier" };if (x) {t.critical = true;}var u = g(v, 0);t.kid = { hex: u };return t;};this.getExtAuthorityKeyIdentifier = function (z, x) {if (z === undefined && x === undefined) {var t = this.getExtInfo("authorityKeyIdentifier");if (t === undefined) {return undefined;}z = b(this.hex, t.vidx);x = t.critical;}var A = { extname: "authorityKeyIdentifier" };if (x) {A.critical = true;}var y = n(z, 0);for (var u = 0; u < y.length; u++) {var B = z.substr(y[u], 2);if (B === "80") {A.kid = { hex: g(z, y[u]) };}if (B === "a1") {var w = b(z, y[u]);var v = this.getGeneralNames(w);A.issuer = v[0]["dn"];}if (B === "82") {A.sn = { hex: g(z, y[u]) };}}return A;};this.getExtExtKeyUsage = function (w, y) {if (w === undefined && y === undefined) {var x = this.getExtInfo("extKeyUsage");if (x === undefined) {return undefined;}w = b(this.hex, x.vidx);y = x.critical;}var t = { extname: "extKeyUsage", array: [] };if (y) {t.critical = true;}var u = n(w, 0);for (var v = 0; v < u.length; v++) {t.array.push(p(g(w, u[v])));}return t;};this.getExtExtKeyUsageName = function () {var x = this.getExtInfo("extKeyUsage");if (x === undefined) {return x;}var t = new Array();var w = b(this.hex, x.vidx);if (w === "") {return t;}var u = n(w, 0);for (var v = 0; v < u.length; v++) {t.push(p(g(w, u[v])));}return t;};this.getExtSubjectAltName = function (u, w) {if (u === undefined && w === undefined) {var v = this.getExtInfo("subjectAltName");if (v === undefined) {return undefined;}u = b(this.hex, v.vidx);w = v.critical;}var t = { extname: "subjectAltName", array: [] };if (w) {t.critical = true;}t.array = this.getGeneralNames(u);return t;};this.getExtIssuerAltName = function (u, w) {if (u === undefined && w === undefined) {var v = this.getExtInfo("issuerAltName");if (v === undefined) {return undefined;}u = b(this.hex, v.vidx);w = v.critical;}var t = { extname: "issuerAltName", array: [] };if (w) {t.critical = true;}t.array = this.getGeneralNames(u);return t;};this.getGeneralNames = function (x) {var v = n(x, 0);var t = [];for (var w = 0; w < v.length; w++) {var u = this.getGeneralName(b(x, v[w]));if (u !== undefined) {t.push(u);}}return t;};this.getGeneralName = function (u) {var t = u.substr(0, 2);var w = g(u, 0);var v = hextorstr(w);if (t == "81") {return { rfc822: v };}if (t == "82") {return { dns: v };}if (t == "86") {return { uri: v };}if (t == "87") {return { ip: hextoip(w) };}if (t == "a4") {return { dn: this.getX500Name(w) };}return undefined;};this.getExtSubjectAltName2 = function () {var x, A, z;var y = this.getExtInfo("subjectAltName");if (y === undefined) {return y;}var t = new Array();var w = b(this.hex, y.vidx);var u = n(w, 0);for (var v = 0; v < u.length; v++) {z = w.substr(u[v], 2);x = g(w, u[v]);if (z === "81") {A = hextoutf8(x);t.push(["MAIL", A]);}if (z === "82") {A = hextoutf8(x);t.push(["DNS", A]);}if (z === "84") {A = X509.hex2dn(x, 0);t.push(["DN", A]);}if (z === "86") {A = hextoutf8(x);t.push(["URI", A]);}if (z === "87") {A = hextoip(x);t.push(["IP", A]);}}return t;};this.getExtCRLDistributionPoints = function (x, z) {if (x === undefined && z === undefined) {var y = this.getExtInfo("cRLDistributionPoints");if (y === undefined) {return undefined;}x = b(this.hex, y.vidx);z = y.critical;}var u = { extname: "cRLDistributionPoints", array: [] };if (z) {u.critical = true;}var v = n(x, 0);for (var w = 0; w < v.length; w++) {var t = b(x, v[w]);u.array.push(this.getDistributionPoint(t));}return u;};this.getDistributionPoint = function (y) {var v = {};var w = n(y, 0);for (var x = 0; x < w.length; x++) {var u = y.substr(w[x], 2);var t = b(y, w[x]);if (u == "a0") {v.dpname = this.getDistributionPointName(t);}}return v;};this.getDistributionPointName = function (y) {var v = {};var w = n(y, 0);for (var x = 0; x < w.length; x++) {var u = y.substr(w[x], 2);var t = b(y, w[x]);if (u == "a0") {v.full = this.getGeneralNames(t);}}return v;};this.getExtCRLDistributionPointsURI = function () {var y = this.getExtInfo("cRLDistributionPoints");if (y === undefined) {return y;}var t = new Array();var u = n(this.hex, y.vidx);for (var w = 0; w < u.length; w++) {try {var z = c(this.hex, u[w], [0, 0, 0], "86");var x = hextoutf8(z);t.push(x);} catch (v) {}}return t;};this.getExtAIAInfo = function () {var x = this.getExtInfo("authorityInfoAccess");if (x === undefined) {return x;}var t = { ocsp: [], caissuer: [] };var u = n(this.hex, x.vidx);for (var v = 0; v < u.length; v++) {var y = c(this.hex, u[v], [0], "06");var w = c(this.hex, u[v], [1], "86");if (y === "2b06010505073001") {t.ocsp.push(hextoutf8(w));}if (y === "2b06010505073002") {t.caissuer.push(hextoutf8(w));}}return t;};this.getExtAuthorityInfoAccess = function (A, y) {if (A === undefined && y === undefined) {var t = this.getExtInfo("authorityInfoAccess");if (t === undefined) {return undefined;}A = b(this.hex, t.vidx);y = t.critical;}var B = { extname: "authorityInfoAccess", array: [] };if (y) {B.critical = true;}var z = n(A, 0);for (var u = 0; u < z.length; u++) {var x = k(A, z[u], [0], "06");var v = c(A, z[u], [1], "86");var w = hextoutf8(v);if (x == "2b06010505073001") {B.array.push({ ocsp: w });} else {if (x == "2b06010505073002") {B.array.push({ caissuer: w });} else {throw new Error("unknown method: " + x);}}}return B;};this.getExtCertificatePolicies = function (x, A) {if (x === undefined && A === undefined) {var z = this.getExtInfo("certificatePolicies");if (z === undefined) {return undefined;}x = b(this.hex, z.vidx);A = z.critical;}var t = { extname: "certificatePolicies", array: [] };if (A) {t.critical = true;}var u = n(x, 0);for (var v = 0; v < u.length; v++) {var y = b(x, u[v]);var w = this.getPolicyInformation(y);t.array.push(w);}return t;};this.getPolicyInformation = function (x) {var t = {};var z = c(x, 0, [0], "06");t.policyoid = p(z);var A = e(x, 0, [1], "30");if (A != -1) {t.array = [];var u = n(x, A);for (var v = 0; v < u.length; v++) {var y = b(x, u[v]);var w = this.getPolicyQualifierInfo(y);t.array.push(w);}}return t;};this.getPolicyQualifierInfo = function (u) {var t = {};var v = c(u, 0, [0], "06");if (v === "2b06010505070201") {var x = k(u, 0, [1], "16");t.cps = hextorstr(x);} else {if (v === "2b06010505070202") {var w = a(u, 0, [1], "30");t.unotice = this.getUserNotice(w);}}return t;};this.getUserNotice = function (x) {var u = {};var v = n(x, 0);for (var w = 0; w < v.length; w++) {var t = b(x, v[w]);if (t.substr(0, 2) != "30") {u.exptext = this.getDisplayText(t);}}return u;};this.getDisplayText = function (u) {var v = { "0c": "utf8", "16": "ia5", "1a": "vis", "1e": "bmp" };var t = {};t.type = v[u.substr(0, 2)];t.str = hextorstr(g(u, 0));return t;};this.getExtCRLNumber = function (u, v) {var t = { extname: "cRLNumber" };if (v) {t.critical = true;}if (u.substr(0, 2) == "02") {t.num = { hex: g(u, 0) };return t;}throw new Error("hExtV parse error: " + u);};this.getExtCRLReason = function (u, v) {var t = { extname: "cRLReason" };if (v) {t.critical = true;}if (u.substr(0, 2) == "0a") {t.code = parseInt(g(u, 0), 16);return t;}throw new Error("hExtV parse error: " + u);};this.getExtOcspNonce = function (u, w) {var t = { extname: "ocspNonce" };if (w) {t.critical = true;}var v = g(u, 0);t.hex = v;return t;};this.getExtOcspNoCheck = function (u, v) {var t = { extname: "ocspNoCheck" };if (v) {t.critical = true;}return t;};this.getExtAdobeTimeStamp = function (w, z) {if (w === undefined && z === undefined) {var y = this.getExtInfo("adobeTimeStamp");if (y === undefined) {return undefined;}w = b(this.hex, y.vidx);z = y.critical;}var t = { extname: "adobeTimeStamp" };if (z) {t.critical = true;}var v = n(w, 0);if (v.length > 1) {var A = b(w, v[1]);var u = this.getGeneralName(A);if (u.uri != undefined) {t.uri = u.uri;}}if (v.length > 2) {var x = b(w, v[2]);if (x == "0101ff") {t.reqauth = true;}if (x == "010100") {t.reqauth = false;}}return t;};this.getX500NameRule = function (t) {var A = true;var E = true;var D = false;var u = "";var x = "";var G = null;var B = [];for (var w = 0; w < t.length; w++) {var y = t[w];for (var v = 0; v < y.length; v++) {B.push(y[v]);}}for (var w = 0; w < B.length; w++) {var F = B[w];var H = F.ds;var C = F.value;var z = F.type;u += ":" + H;if (H != "prn" && H != "utf8" && H != "ia5") {return "mixed";}if (H == "ia5") {if (z != "CN") {return "mixed";} else {if (!KJUR.lang.String.isMail(C)) {return "mixed";} else {continue;}}}if (z == "C") {if (H == "prn") {continue;} else {return "mixed";}}x += ":" + H;if (G == null) {G = H;} else {if (G !== H) {return "mixed";}}}if (G == null) {return "prn";} else {return G;}};this.getX500Name = function (v) {var t = this.getX500NameArray(v);var u = this.dnarraytostr(t);return { array: t, str: u };};this.getX500NameArray = function (w) {var t = [];var u = n(w, 0);for (var v = 0; v < u.length; v++) {t.push(this.getRDN(b(w, u[v])));}return t;};this.getRDN = function (w) {var t = [];var u = n(w, 0);for (var v = 0; v < u.length; v++) {t.push(this.getAttrTypeAndValue(b(w, u[v])));}return t;};this.getAttrTypeAndValue = function (v) {var t = { type: null, value: null, ds: null };var u = n(v, 0);var y = c(v, u[0], [], "06");var x = c(v, u[1], []);var w = KJUR.asn1.ASN1Util.oidHexToInt(y);t.type = KJUR.asn1.x509.OID.oid2atype(w);t.ds = this.HEX2STAG[v.substr(u[1], 2)];if (t.ds != "bmp") {t.value = hextoutf8(x);} else {t.value = ucs2hextoutf8(x);}return t;};this.readCertPEM = function (t) {this.readCertHex(r(t));};this.readCertHex = function (t) {this.hex = t;this.getVersion();try {h(this.hex, 0, [0, 7], "a3");this.parseExt();} catch (u) {}};this.getParam = function () {var t = {};t.version = this.getVersion();t.serial = { hex: this.getSerialNumberHex() };t.sigalg = this.getSignatureAlgorithmField();t.issuer = this.getIssuer();t.notbefore = this.getNotBefore();t.notafter = this.getNotAfter();t.subject = this.getSubject();t.sbjpubkey = hextopem(this.getPublicKeyHex(), "PUBLIC KEY");if (this.aExtInfo.length > 0) {t.ext = this.getExtParamArray();}t.sighex = this.getSignatureValueHex();return t;};this.getExtParamArray = function (u) {if (u == undefined) {var w = e(this.hex, 0, [0, "[3]"]);if (w != -1) {u = l(this.hex, 0, [0, "[3]", 0], "30");}}var t = [];var v = n(u, 0);for (var x = 0; x < v.length; x++) {var z = b(u, v[x]);var y = this.getExtParam(z);if (y != null) {t.push(y);}}return t;};this.getExtParam = function (u) {var B = {};var w = n(u, 0);var x = w.length;if (x != 2 && x != 3) {throw new Error("wrong number elements in Extension: " + x + " " + u);}var v = m(c(u, 0, [0], "06"));var z = false;if (x == 3 && a(u, 0, [1]) == "0101ff") {z = true;}var A = a(u, 0, [x - 1, 0]);var y = undefined;if (v == "2.5.29.14") {y = this.getExtSubjectKeyIdentifier(A, z);} else {if (v == "2.5.29.15") {y = this.getExtKeyUsage(A, z);} else {if (v == "2.5.29.17") {y = this.getExtSubjectAltName(A, z);} else {if (v == "2.5.29.18") {y = this.getExtIssuerAltName(A, z);} else {if (v == "2.5.29.19") {y = this.getExtBasicConstraints(A, z);} else {if (v == "2.5.29.31") {y = this.getExtCRLDistributionPoints(A, z);} else {if (v == "2.5.29.32") {y = this.getExtCertificatePolicies(A, z);} else {if (v == "2.5.29.35") {y = this.getExtAuthorityKeyIdentifier(A, z);} else {if (v == "2.5.29.37") {y = this.getExtExtKeyUsage(A, z);} else {if (v == "1.3.6.1.5.5.7.1.1") {y = this.getExtAuthorityInfoAccess(A, z);} else {if (v == "2.5.29.20") {y = this.getExtCRLNumber(A, z);} else {if (v == "2.5.29.21") {y = this.getExtCRLReason(A, z);} else {if (v == "1.3.6.1.5.5.7.48.1.2") {y = this.getExtOcspNonce(A, z);} else {if (v == "1.3.6.1.5.5.7.48.1.5") {y = this.getExtOcspNoCheck(A, z);} else {if (v == "1.2.840.113583.1.1.9.1") {y = this.getExtAdobeTimeStamp(A, z);}}}}}}}}}}}}}}}if (y != undefined) {return y;}var t = { extname: v, extn: A };if (z) {t.critical = true;}return t;};this.findExt = function (u, v) {for (var t = 0; t < u.length; t++) {if (u[t].extname == v) {return u[t];}}return null;};this.updateExtCDPFullURI = function (x, t) {var w = this.findExt(x, "cRLDistributionPoints");if (w == null) {return;}if (w.array == undefined) {return;}var z = w.array;for (var v = 0; v < z.length; v++) {if (z[v].dpname == undefined) {continue;}if (z[v].dpname.full == undefined) {continue;}var A = z[v].dpname.full;for (var u = 0; u < A.length; u++) {var y = A[v];if (y.uri == undefined) {continue;}y.uri = t;}}};this.updateExtAIAOCSP = function (x, u) {var w = this.findExt(x, "authorityInfoAccess");if (w == null) {return;}if (w.array == undefined) {return;}var t = w.array;for (var v = 0; v < t.length; v++) {if (t[v].ocsp != undefined) {t[v].ocsp = u;}}};this.updateExtAIACAIssuer = function (x, u) {var w = this.findExt(x, "authorityInfoAccess");if (w == null) {return;}if (w.array == undefined) {return;}var t = w.array;for (var v = 0; v < t.length; v++) {if (t[v].caissuer != undefined) {t[v].caissuer = u;}}};this.dnarraytostr = function (v) {function t(w) {return w.map(function (y) {return u(y).replace(/\+/, "\\+");}).join("+");}function u(w) {return w.type + "=" + w.value;}return "/" + v.map(function (w) {return t(w).replace(/\//, "\\/");}).join("/");};this.getInfo = function () {var u = function u(M) {var L = JSON.stringify(M.array).replace(/[\[\]\{\}\"]/g, "");return L;};var A = function A(R) {var P = "";var L = R.array;for (var O = 0; O < L.length; O++) {var Q = L[O];P += "    policy oid: " + Q.policyoid + "\n";if (Q.array === undefined) {continue;}for (var N = 0; N < Q.array.length; N++) {var M = Q.array[N];if (M.cps !== undefined) {P += "    cps: " + M.cps + "\n";}}}return P;};var D = function D(P) {var O = "";var L = P.array;for (var N = 0; N < L.length; N++) {var Q = L[N];try {if (Q.dpname.full[0].uri !== undefined) {O += "    " + Q.dpname.full[0].uri + "\n";}} catch (M) {}try {if (Q.dname.full[0].dn.hex !== undefined) {O += "    " + X509.hex2dn(Q.dpname.full[0].dn.hex) + "\n";}} catch (M) {}}return O;};var B = function B(P) {var O = "";var L = P.array;for (var M = 0; M < L.length; M++) {var N = L[M];if (N.caissuer !== undefined) {O += "    caissuer: " + N.caissuer + "\n";}if (N.ocsp !== undefined) {O += "    ocsp: " + N.ocsp + "\n";}}return O;};var v = X509;var F, E, K;F = "Basic Fields\n";F += "  serial number: " + this.getSerialNumberHex() + "\n";F += "  signature algorithm: " + this.getSignatureAlgorithmField() + "\n";F += "  issuer: " + this.getIssuerString() + "\n";F += "  notBefore: " + this.getNotBefore() + "\n";F += "  notAfter: " + this.getNotAfter() + "\n";F += "  subject: " + this.getSubjectString() + "\n";F += "  subject public key info: \n";E = this.getPublicKey();F += "    key algorithm: " + E.type + "\n";if (E.type === "RSA") {F += "    n=" + hextoposhex(E.n.toString(16)).substr(0, 16) + "...\n";F += "    e=" + hextoposhex(E.e.toString(16)) + "\n";}K = this.aExtInfo;if (K !== undefined && K !== null) {F += "X509v3 Extensions:\n";for (var H = 0; H < K.length; H++) {var J = K[H];var t = KJUR.asn1.x509.OID.oid2name(J.oid);if (t === "") {t = J.oid;}var G = "";if (J.critical === true) {G = "CRITICAL";}F += "  " + t + " " + G + ":\n";if (t === "basicConstraints") {var w = this.getExtBasicConstraints();if (w.cA === undefined) {F += "    {}\n";} else {F += "    cA=true";if (w.pathLen !== undefined) {F += ", pathLen=" + w.pathLen;}F += "\n";}} else {if (t === "keyUsage") {F += "    " + this.getExtKeyUsageString() + "\n";} else {if (t === "subjectKeyIdentifier") {F += "    " + this.getExtSubjectKeyIdentifier().kid.hex + "\n";} else {if (t === "authorityKeyIdentifier") {var x = this.getExtAuthorityKeyIdentifier();if (x.kid !== undefined) {F += "    kid=" + x.kid.hex + "\n";}} else {if (t === "extKeyUsage") {var I = this.getExtExtKeyUsage().array;F += "    " + I.join(", ") + "\n";} else {if (t === "subjectAltName") {var y = u(this.getExtSubjectAltName());F += "    " + y + "\n";} else {if (t === "cRLDistributionPoints") {var C = this.getExtCRLDistributionPoints();F += D(C);} else {if (t === "authorityInfoAccess") {var z = this.getExtAuthorityInfoAccess();F += B(z);} else {if (t === "certificatePolicies") {F += A(this.getExtCertificatePolicies());}}}}}}}}}}}F += "signature algorithm: " + this.getSignatureAlgorithmName() + "\n";F += "signature: " + this.getSignatureValueHex().substr(0, 16) + "...\n";return F;};if (typeof q == "string") {if (q.indexOf("-----BEGIN") != -1) {this.readCertPEM(q);} else {if (KJUR.lang.String.isHex(q)) {this.readCertHex(q);}}}}X509.hex2dn = function (e, b) {if (b === undefined) {b = 0;}var a = new X509();var c = ASN1HEX.getTLV(e, b);var d = a.getX500Name(e);return d.str;};X509.hex2rdn = function (f, b) {if (b === undefined) {b = 0;}if (f.substr(b, 2) !== "31") {throw new Error("malformed RDN");}var c = new Array();var d = ASN1HEX.getChildIdx(f, b);for (var e = 0; e < d.length; e++) {c.push(X509.hex2attrTypeValue(f, d[e]));}c = c.map(function (a) {return a.replace("+", "\\+");});return c.join("+");};X509.hex2attrTypeValue = function (d, i) {var j = ASN1HEX;var h = j.getV;if (i === undefined) {i = 0;}if (d.substr(i, 2) !== "30") {throw new Error("malformed attribute type and value");}var g = j.getChildIdx(d, i);if (g.length !== 2 || d.substr(g[0], 2) !== "06") {"malformed attribute type and value";}var b = h(d, g[0]);var f = KJUR.asn1.ASN1Util.oidHexToInt(b);var e = KJUR.asn1.x509.OID.oid2atype(f);var a = h(d, g[1]);var c = hextorstr(a);return e + "=" + c;};X509.getPublicKeyFromCertHex = function (b) {var a = new X509();a.readCertHex(b);return a.getPublicKey();};X509.getPublicKeyFromCertPEM = function (b) {var a = new X509();a.readCertPEM(b);return a.getPublicKey();};X509.getPublicKeyInfoPropOfCertPEM = function (c) {var e = ASN1HEX;var g = e.getVbyList;var b = {};var a, f, d;b.algparam = null;a = new X509();a.readCertPEM(c);f = a.getPublicKeyHex();b.keyhex = g(f, 0, [1], "03").substr(2);b.algoid = g(f, 0, [0, 0], "06");if (b.algoid === "2a8648ce3d0201") {b.algparam = g(f, 0, [0, 1], "06");}return b;};X509.KEYUSAGE_NAME = ["digitalSignature", "nonRepudiation", "keyEncipherment", "dataEncipherment", "keyAgreement", "keyCertSign", "cRLSign", "encipherOnly", "decipherOnly"];
var X509CRL = function X509CRL(e) {var a = KJUR,f = a.lang.String.isHex,m = ASN1HEX,k = m.getV,b = m.getTLV,h = m.getVbyList,c = m.getTLVbyList,d = m.getTLVbyListEx,i = m.getIdxbyList,g = m.getIdxbyListEx,l = m.getChildIdx,j = new X509();this.hex = null;this.posSigAlg = null;this.posRevCert = null;this._setPos = function () {var o = i(this.hex, 0, [0, 0]);var n = this.hex.substr(o, 2);if (n == "02") {this.posSigAlg = 1;} else {if (n == "30") {this.posSigAlg = 0;} else {throw new Error("malformed 1st item of TBSCertList: " + n);}}var s = i(this.hex, 0, [0, this.posSigAlg + 3]);var r = this.hex.substr(s, 2);if (r == "17" || r == "18") {var q, p;q = i(this.hex, 0, [0, this.posSigAlg + 4]);this.posRevCert = null;if (q != -1) {p = this.hex.substr(q, 2);if (p == "30") {this.posRevCert = this.posSigAlg + 4;}}} else {if (r == "30") {this.posRevCert = this.posSigAlg + 3;} else {if (r == "a0") {this.posRevCert = null;} else {throw new Error("malformed nextUpdate or revCert tag: " + r);}}}};this.getVersion = function () {if (this.posSigAlg == 0) {return null;}return parseInt(h(this.hex, 0, [0, 0], "02"), 16) + 1;};this.getSignatureAlgorithmField = function () {var n = c(this.hex, 0, [0, this.posSigAlg], "30");return j.getAlgorithmIdentifierName(n);};this.getIssuer = function () {var n = c(this.hex, 0, [0, this.posSigAlg + 1], "30");return j.getX500Name(n);};this.getThisUpdate = function () {var n = h(this.hex, 0, [0, this.posSigAlg + 2]);return result = hextorstr(n);};this.getNextUpdate = function () {var o = i(this.hex, 0, [0, this.posSigAlg + 3]);var n = this.hex.substr(o, 2);if (n != "17" && n != "18") {return null;}return hextorstr(k(this.hex, o));};this.getRevCertArray = function () {if (this.posRevCert == null) {return null;}var o = [];var n = i(this.hex, 0, [0, this.posRevCert]);var p = l(this.hex, n);for (var q = 0; q < p.length; q++) {var r = b(this.hex, p[q]);o.push(this.getRevCert(r));}return o;};this.getRevCert = function (p) {var o = {};var n = l(p, 0);o.sn = { hex: h(p, 0, [0], "02") };o.date = hextorstr(h(p, 0, [1]));if (n.length == 3) {o.ext = j.getExtParamArray(c(p, 0, [2]));}return o;};this.getSignatureValueHex = function () {return h(this.hex, 0, [2], "03", true);};this.verifySignature = function (o) {var p = this.getSignatureAlgorithmField();var n = this.getSignatureValueHex();var q = c(this.hex, 0, [0], "30");var r = new KJUR.crypto.Signature({ alg: p });r.init(o);r.updateHex(q);return r.verify(n);};this.getParam = function () {var n = {};var p = this.getVersion();if (p != null) {n.version = p;}n.sigalg = this.getSignatureAlgorithmField();n.issuer = this.getIssuer();n.thisupdate = this.getThisUpdate();var q = this.getNextUpdate();if (q != null) {n.nextupdate = q;}var s = this.getRevCertArray();if (s != null) {n.revcert = s;}var r = g(this.hex, 0, [0, "[0]"]);if (r != -1) {var o = d(this.hex, 0, [0, "[0]", 0]);n.ext = j.getExtParamArray(o);}n.sighex = this.getSignatureValueHex();return n;};if (typeof e == "string") {if (f(e)) {this.hex = e;} else {if (e.match(/-----BEGIN X509 CRL/)) {this.hex = pemtohex(e);}}this._setPos();}};
if (typeof KJUR == "undefined" || !KJUR) {KJUR = {};}if (typeof KJUR.jws == "undefined" || !KJUR.jws) {KJUR.jws = {};}KJUR.jws.JWS = function () {var b = KJUR,a = b.jws.JWS,c = a.isSafeJSONString;this.parseJWS = function (g, j) {if (this.parsedJWS !== undefined && (j || this.parsedJWS.sigvalH !== undefined)) {return;}var i = g.match(/^([^.]+)\.([^.]+)\.([^.]+)$/);if (i == null) {throw "JWS signature is not a form of 'Head.Payload.SigValue'.";}var k = i[1];var e = i[2];var l = i[3];var n = k + "." + e;this.parsedJWS = {};this.parsedJWS.headB64U = k;this.parsedJWS.payloadB64U = e;this.parsedJWS.sigvalB64U = l;this.parsedJWS.si = n;if (!j) {var h = b64utohex(l);var f = parseBigInt(h, 16);this.parsedJWS.sigvalH = h;this.parsedJWS.sigvalBI = f;}var d = b64utoutf8(k);var m = b64utoutf8(e);this.parsedJWS.headS = d;this.parsedJWS.payloadS = m;if (!c(d, this.parsedJWS, "headP")) {throw "malformed JSON string for JWS Head: " + d;}};};KJUR.jws.JWS.sign = function (j, w, z, A, a) {var x = KJUR,n = x.jws,r = n.JWS,h = r.readSafeJSONString,q = r.isSafeJSONString,d = x.crypto,l = d.ECDSA,p = d.Mac,c = d.Signature,u = JSON;var t, k, o;if (typeof w != "string" && typeof w != "object") {throw "spHeader must be JSON string or object: " + w;}if (typeof w == "object") {k = w;t = u.stringify(k);}if (typeof w == "string") {t = w;if (!q(t)) {throw "JWS Head is not safe JSON string: " + t;}k = h(t);}o = z;if (typeof z == "object") {o = u.stringify(z);}if ((j == "" || j == null) && k.alg !== undefined) {j = k.alg;}if (j != "" && j != null && k.alg === undefined) {k.alg = j;t = u.stringify(k);}if (j !== k.alg) {throw "alg and sHeader.alg doesn't match: " + j + "!=" + k.alg;}var s = null;if (r.jwsalg2sigalg[j] === undefined) {throw "unsupported alg name: " + j;} else {s = r.jwsalg2sigalg[j];}var e = utf8tob64u(t);var m = utf8tob64u(o);var b = e + "." + m;var y = "";if (s.substr(0, 4) == "Hmac") {if (A === undefined) {throw "mac key shall be specified for HS* alg";}var i = new p({ alg: s, prov: "cryptojs", pass: A });i.updateString(b);y = i.doFinal();} else {if (s.indexOf("withECDSA") != -1) {var f = new c({ alg: s });f.init(A, a);f.updateString(b);var g = f.sign();y = KJUR.crypto.ECDSA.asn1SigToConcatSig(g);} else {if (s != "none") {var f = new c({ alg: s });f.init(A, a);f.updateString(b);y = f.sign();}}}var v = hextob64u(y);return b + "." + v;};KJUR.jws.JWS.verify = function (w, B, n) {var x = KJUR,q = x.jws,t = q.JWS,i = t.readSafeJSONString,e = x.crypto,p = e.ECDSA,s = e.Mac,d = e.Signature,m;if (typeof RSAKey !== undefined) {m = RSAKey;}var y = w.split(".");if (y.length !== 3) {return false;}var f = y[0];var r = y[1];var c = f + "." + r;var A = b64utohex(y[2]);var l = i(b64utoutf8(y[0]));var k = null;var z = null;if (l.alg === undefined) {throw "algorithm not specified in header";} else {k = l.alg;z = k.substr(0, 2);}if (n != null && Object.prototype.toString.call(n) === "[object Array]" && n.length > 0) {var b = ":" + n.join(":") + ":";if (b.indexOf(":" + k + ":") == -1) {throw "algorithm '" + k + "' not accepted in the list";}}if (k != "none" && B === null) {throw "key shall be specified to verify.";}if (typeof B == "string" && B.indexOf("-----BEGIN ") != -1) {B = KEYUTIL.getKey(B);}if (z == "RS" || z == "PS") {if (!(B instanceof m)) {throw "key shall be a RSAKey obj for RS* and PS* algs";}}if (z == "ES") {if (!(B instanceof p)) {throw "key shall be a ECDSA obj for ES* algs";}}if (k == "none") {}var u = null;if (t.jwsalg2sigalg[l.alg] === undefined) {throw "unsupported alg name: " + k;} else {u = t.jwsalg2sigalg[k];}if (u == "none") {throw "not supported";} else {if (u.substr(0, 4) == "Hmac") {var o = null;if (B === undefined) {throw "hexadecimal key shall be specified for HMAC";}var j = new s({ alg: u, pass: B });j.updateString(c);o = j.doFinal();return A == o;} else {if (u.indexOf("withECDSA") != -1) {var h = null;try {h = p.concatSigToASN1Sig(A);} catch (v) {return false;}var g = new d({ alg: u });g.init(B);g.updateString(c);return g.verify(h);} else {var g = new d({ alg: u });g.init(B);g.updateString(c);return g.verify(A);}}}};KJUR.jws.JWS.parse = function (g) {var c = g.split(".");var b = {};var f, e, d;if (c.length != 2 && c.length != 3) {throw "malformed sJWS: wrong number of '.' splitted elements";}f = c[0];e = c[1];if (c.length == 3) {d = c[2];}b.headerObj = KJUR.jws.JWS.readSafeJSONString(b64utoutf8(f));b.payloadObj = KJUR.jws.JWS.readSafeJSONString(b64utoutf8(e));b.headerPP = JSON.stringify(b.headerObj, null, "  ");if (b.payloadObj == null) {b.payloadPP = b64utoutf8(e);} else {b.payloadPP = JSON.stringify(b.payloadObj, null, "  ");}if (d !== undefined) {b.sigHex = b64utohex(d);}return b;};KJUR.jws.JWS.verifyJWT = function (e, l, r) {var d = KJUR,j = d.jws,o = j.JWS,n = o.readSafeJSONString,p = o.inArray,f = o.includedArray;var k = e.split(".");var c = k[0];var i = k[1];var q = c + "." + i;var m = b64utohex(k[2]);var h = n(b64utoutf8(c));var g = n(b64utoutf8(i));if (h.alg === undefined) {return false;}if (r.alg === undefined) {throw "acceptField.alg shall be specified";}if (!p(h.alg, r.alg)) {return false;}if (g.iss !== undefined && typeof r.iss === "object") {if (!p(g.iss, r.iss)) {return false;}}if (g.sub !== undefined && typeof r.sub === "object") {if (!p(g.sub, r.sub)) {return false;}}if (g.aud !== undefined && typeof r.aud === "object") {if (typeof g.aud == "string") {if (!p(g.aud, r.aud)) {return false;}} else {if (typeof g.aud == "object") {if (!f(g.aud, r.aud)) {return false;}}}}var b = j.IntDate.getNow();if (r.verifyAt !== undefined && typeof r.verifyAt === "number") {b = r.verifyAt;}if (r.gracePeriod === undefined || typeof r.gracePeriod !== "number") {r.gracePeriod = 0;}if (g.exp !== undefined && typeof g.exp == "number") {if (g.exp + r.gracePeriod < b) {return false;}}if (g.nbf !== undefined && typeof g.nbf == "number") {if (b < g.nbf - r.gracePeriod) {return false;}}if (g.iat !== undefined && typeof g.iat == "number") {if (b < g.iat - r.gracePeriod) {return false;}}if (g.jti !== undefined && r.jti !== undefined) {if (g.jti !== r.jti) {return false;}}if (!o.verify(e, l, r.alg)) {return false;}return true;};KJUR.jws.JWS.includedArray = function (b, a) {var c = KJUR.jws.JWS.inArray;if (b === null) {return false;}if (typeof b !== "object") {return false;}if (typeof b.length !== "number") {return false;}for (var d = 0; d < b.length; d++) {if (!c(b[d], a)) {return false;}}return true;};KJUR.jws.JWS.inArray = function (d, b) {if (b === null) {return false;}if (typeof b !== "object") {return false;}if (typeof b.length !== "number") {return false;}for (var c = 0; c < b.length; c++) {if (b[c] == d) {return true;}}return false;};KJUR.jws.JWS.jwsalg2sigalg = { HS256: "HmacSHA256", HS384: "HmacSHA384", HS512: "HmacSHA512", RS256: "SHA256withRSA", RS384: "SHA384withRSA", RS512: "SHA512withRSA", ES256: "SHA256withECDSA", ES384: "SHA384withECDSA", PS256: "SHA256withRSAandMGF1", PS384: "SHA384withRSAandMGF1", PS512: "SHA512withRSAandMGF1", none: "none" };KJUR.jws.JWS.isSafeJSONString = function (c, b, d) {var e = null;try {e = jsonParse(c);if (typeof e != "object") {return 0;}if (e.constructor === Array) {return 0;}if (b) {b[d] = e;}return 1;} catch (a) {return 0;}};KJUR.jws.JWS.readSafeJSONString = function (b) {var c = null;try {c = jsonParse(b);if (typeof c != "object") {return null;}if (c.constructor === Array) {return null;}return c;} catch (a) {return null;}};KJUR.jws.JWS.getEncodedSignatureValueFromJWS = function (b) {var a = b.match(/^[^.]+\.[^.]+\.([^.]+)$/);if (a == null) {throw "JWS signature is not a form of 'Head.Payload.SigValue'.";}return a[1];};KJUR.jws.JWS.getJWKthumbprint = function (d) {if (d.kty !== "RSA" && d.kty !== "EC" && d.kty !== "oct") {throw "unsupported algorithm for JWK Thumprint";}var a = "{";if (d.kty === "RSA") {if (typeof d.n != "string" || typeof d.e != "string") {throw "wrong n and e value for RSA key";}a += '"e":"' + d.e + '",';a += '"kty":"' + d.kty + '",';a += '"n":"' + d.n + '"}';} else {if (d.kty === "EC") {if (typeof d.crv != "string" || typeof d.x != "string" || typeof d.y != "string") {throw "wrong crv, x and y value for EC key";}a += '"crv":"' + d.crv + '",';a += '"kty":"' + d.kty + '",';a += '"x":"' + d.x + '",';a += '"y":"' + d.y + '"}';} else {if (d.kty === "oct") {if (typeof d.k != "string") {throw "wrong k value for oct(symmetric) key";}a += '"kty":"' + d.kty + '",';a += '"k":"' + d.k + '"}';}}}var b = rstrtohex(a);var c = KJUR.crypto.Util.hashHex(b, "sha256");var e = hextob64u(c);return e;};KJUR.jws.IntDate = {};KJUR.jws.IntDate.get = function (c) {var b = KJUR.jws.IntDate,d = b.getNow,a = b.getZulu;if (c == "now") {return d();} else {if (c == "now + 1hour") {return d() + 60 * 60;} else {if (c == "now + 1day") {return d() + 60 * 60 * 24;} else {if (c == "now + 1month") {return d() + 60 * 60 * 24 * 30;} else {if (c == "now + 1year") {return d() + 60 * 60 * 24 * 365;} else {if (c.match(/Z$/)) {return a(c);} else {if (c.match(/^[0-9]+$/)) {return parseInt(c);}}}}}}}throw "unsupported format: " + c;};KJUR.jws.IntDate.getZulu = function (a) {return zulutosec(a);};KJUR.jws.IntDate.getNow = function () {var a = ~~(new Date() / 1000);return a;};KJUR.jws.IntDate.intDate2UTCString = function (a) {var b = new Date(a * 1000);return b.toUTCString();};KJUR.jws.IntDate.intDate2Zulu = function (e) {var i = new Date(e * 1000),h = ("0000" + i.getUTCFullYear()).slice(-4),g = ("00" + (i.getUTCMonth() + 1)).slice(-2),b = ("00" + i.getUTCDate()).slice(-2),a = ("00" + i.getUTCHours()).slice(-2),c = ("00" + i.getUTCMinutes()).slice(-2),f = ("00" + i.getUTCSeconds()).slice(-2);return h + g + b + a + c + f + "Z";};
if (typeof KJUR == "undefined" || !KJUR) {KJUR = {};}if (typeof KJUR.jws == "undefined" || !KJUR.jws) {KJUR.jws = {};}KJUR.jws.JWSJS = function () {var c = KJUR,b = c.jws,a = b.JWS,d = a.readSafeJSONString;this.aHeader = [];this.sPayload = "";this.aSignature = [];this.init = function () {this.aHeader = [];this.sPayload = undefined;this.aSignature = [];};this.initWithJWS = function (f) {this.init();var e = f.split(".");if (e.length != 3) {throw "malformed input JWS";}this.aHeader.push(e[0]);this.sPayload = e[1];this.aSignature.push(e[2]);};this.addSignature = function (e, h, m, k) {if (this.sPayload === undefined || this.sPayload === null) {throw "there's no JSON-JS signature to add.";}var l = this.aHeader.length;if (this.aHeader.length != this.aSignature.length) {throw "aHeader.length != aSignature.length";}try {var f = KJUR.jws.JWS.sign(e, h, this.sPayload, m, k);var j = f.split(".");var n = j[0];var g = j[2];this.aHeader.push(j[0]);this.aSignature.push(j[2]);} catch (i) {if (this.aHeader.length > l) {this.aHeader.pop();}if (this.aSignature.length > l) {this.aSignature.pop();}throw "addSignature failed: " + i;}};this.verifyAll = function (h) {if (this.aHeader.length !== h.length || this.aSignature.length !== h.length) {return false;}for (var g = 0; g < h.length; g++) {var f = h[g];if (f.length !== 2) {return false;}var e = this.verifyNth(g, f[0], f[1]);if (e === false) {return false;}}return true;};this.verifyNth = function (f, j, g) {if (this.aHeader.length <= f || this.aSignature.length <= f) {return false;}var h = this.aHeader[f];var k = this.aSignature[f];var l = h + "." + this.sPayload + "." + k;var e = false;try {e = a.verify(l, j, g);} catch (i) {return false;}return e;};this.readJWSJS = function (g) {if (typeof g === "string") {var f = d(g);if (f == null) {throw "argument is not safe JSON object string";}this.aHeader = f.headers;this.sPayload = f.payload;this.aSignature = f.signatures;} else {try {if (g.headers.length > 0) {this.aHeader = g.headers;} else {throw "malformed header";}if (typeof g.payload === "string") {this.sPayload = g.payload;} else {throw "malformed signatures";}if (g.signatures.length > 0) {this.aSignature = g.signatures;} else {throw "malformed signatures";}} catch (e) {throw "malformed JWS-JS JSON object: " + e;}}};this.getJSON = function () {return { headers: this.aHeader, payload: this.sPayload, signatures: this.aSignature };};this.isEmpty = function () {if (this.aHeader.length == 0) {return 1;}return 0;};};
exports.SecureRandom = SecureRandom;
exports.rng_seed_time = rng_seed_time;

exports.BigInteger = BigInteger;
exports.RSAKey = RSAKey;
exports.ECDSA = KJUR.crypto.ECDSA;
exports.DSA = KJUR.crypto.DSA;
exports.Signature = KJUR.crypto.Signature;
exports.MessageDigest = KJUR.crypto.MessageDigest;
exports.Mac = KJUR.crypto.Mac;
exports.Cipher = KJUR.crypto.Cipher;
exports.KEYUTIL = KEYUTIL;
exports.ASN1HEX = ASN1HEX;
exports.X509 = X509;
exports.X509CRL = X509CRL;
exports.CryptoJS = CryptoJS;

// ext/base64.js
exports.b64tohex = b64tohex;
exports.b64toBA = b64toBA;

// ext/ec*.js
exports.ECFieldElementFp = ECFieldElementFp;
exports.ECPointFp = ECPointFp;
exports.ECCurveFp = ECCurveFp;

// base64x.js
exports.stoBA = stoBA;
exports.BAtos = BAtos;
exports.BAtohex = BAtohex;
exports.stohex = stohex;
exports.stob64 = stob64;
exports.stob64u = stob64u;
exports.b64utos = b64utos;
exports.b64tob64u = b64tob64u;
exports.b64utob64 = b64utob64;
exports.hex2b64 = hex2b64;
exports.hextob64u = hextob64u;
exports.b64utohex = b64utohex;
exports.utf8tob64u = utf8tob64u;
exports.b64utoutf8 = b64utoutf8;
exports.utf8tob64 = utf8tob64;
exports.b64toutf8 = b64toutf8;
exports.utf8tohex = utf8tohex;
exports.hextoutf8 = hextoutf8;
exports.hextorstr = hextorstr;
exports.rstrtohex = rstrtohex;
exports.hextob64 = hextob64;
exports.hextob64nl = hextob64nl;
exports.b64nltohex = b64nltohex;
exports.hextopem = hextopem;
exports.pemtohex = pemtohex;
exports.hextoArrayBuffer = hextoArrayBuffer;
exports.ArrayBuffertohex = ArrayBuffertohex;
exports.zulutomsec = zulutomsec;
exports.zulutosec = zulutosec;
exports.zulutodate = zulutodate;
exports.datetozulu = datetozulu;
exports.uricmptohex = uricmptohex;
exports.hextouricmp = hextouricmp;
exports.ipv6tohex = ipv6tohex;
exports.hextoipv6 = hextoipv6;
exports.hextoip = hextoip;
exports.iptohex = iptohex;
exports.ucs2hextoutf8 = ucs2hextoutf8;
exports.encodeURIComponentAll = encodeURIComponentAll;
exports.newline_toUnix = newline_toUnix;
exports.newline_toDos = newline_toDos;
exports.hextoposhex = hextoposhex;
exports.intarystrtohex = intarystrtohex;
exports.strdiffidx = strdiffidx;
exports.oidtohex = oidtohex;
exports.hextooid = hextooid;
exports.strpad = strpad;
exports.bitstrtoint = bitstrtoint;
exports.inttobitstr = inttobitstr;

// name spaces
exports.KJUR = KJUR;
exports.crypto = KJUR.crypto;
exports.asn1 = KJUR.asn1;
exports.jws = KJUR.jws;
exports.lang = KJUR.lang;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../ProgramFiles/HBuilderX/plugins/uniapp-cli/node_modules/buffer/index.js */ 89).Buffer))

/***/ }),

/***/ 89:
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ 90)
var ieee754 = __webpack_require__(/*! ieee754 */ 91)
var isArray = __webpack_require__(/*! isarray */ 92)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ 3)))

/***/ }),

/***/ 90:
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ 91:
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ 92:
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ })

}]);
//# sourceMappingURL=../../.sourcemap/mp-weixin/common/vendor.js.map